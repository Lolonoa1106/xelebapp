(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([
  [9239],
  {
    1145: (e, t) => {
      "use strict";
      function r(e) {
        if (Array.isArray(e)) {
          let t = [],
            n = 0;
          for (let i = 0; i < e.length; i++) {
            let o = r(e[i]);
            t.push(o), (n += o.length);
          }
          return d(o(n, 192), ...t);
        }
        let t = m(e);
        return 1 === t.length && t[0] < 128 ? t : d(o(t.length, 128), t);
      }
      function n(e, t, r) {
        if (r > e.length)
          throw Error(
            "invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds"
          );
        return e.slice(t, r);
      }
      function i(e) {
        if (0 === e[0]) throw Error("invalid RLP: extra zeros");
        return u(l(e));
      }
      function o(e, t) {
        if (e < 56) return Uint8Array.from([e + t]);
        let r = h(e),
          n = h(t + 55 + r.length / 2);
        return Uint8Array.from(c(n + r));
      }
      function a(e, t = !1) {
        if (null == e || 0 === e.length) return Uint8Array.from([]);
        let r = (function e(t) {
          let r, o, a, s, l;
          let u = [],
            c = t[0];
          if (c <= 127) return { data: t.slice(0, 1), remainder: t.slice(1) };
          if (c <= 183) {
            if (
              ((r = c - 127),
              (a = 128 === c ? Uint8Array.from([]) : n(t, 1, r)),
              2 === r && a[0] < 128)
            )
              throw Error(
                "invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed"
              );
            return { data: a, remainder: t.slice(r) };
          }
          if (c <= 191) {
            if (((o = c - 182), t.length - 1 < o))
              throw Error("invalid RLP: not enough bytes for string length");
            if ((r = i(n(t, 1, o))) <= 55)
              throw Error(
                "invalid RLP: expected string length to be greater than 55"
              );
            return { data: (a = n(t, o, r + o)), remainder: t.slice(r + o) };
          }
          if (c <= 247) {
            for (s = n(t, 1, (r = c - 191)); s.length; )
              (l = e(s)), u.push(l.data), (s = l.remainder);
            return { data: u, remainder: t.slice(r) };
          }
          {
            if ((r = i(n(t, 1, (o = c - 246)))) < 56)
              throw Error("invalid RLP: encoded list too short");
            let a = o + r;
            if (a > t.length)
              throw Error("invalid RLP: total length is larger than the data");
            for (s = n(t, o, a); s.length; )
              (l = e(s)), u.push(l.data), (s = l.remainder);
            return { data: u, remainder: t.slice(a) };
          }
        })(m(e));
        if (t) return r;
        if (0 !== r.remainder.length)
          throw Error("invalid RLP: remainder must be zero");
        return r.data;
      }
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.RLP = t.utils = t.decode = t.encode = void 0),
        (t.encode = r),
        (t.decode = a);
      let s = Array.from({ length: 256 }, (e, t) =>
        t.toString(16).padStart(2, "0")
      );
      function l(e) {
        let t = "";
        for (let r = 0; r < e.length; r++) t += s[e[r]];
        return t;
      }
      function u(e) {
        let t = Number.parseInt(e, 16);
        if (Number.isNaN(t)) throw Error("Invalid byte sequence");
        return t;
      }
      function c(e) {
        if ("string" != typeof e)
          throw TypeError("hexToBytes: expected string, got " + typeof e);
        if (e.length % 2)
          throw Error("hexToBytes: received invalid unpadded hex");
        let t = new Uint8Array(e.length / 2);
        for (let r = 0; r < t.length; r++) {
          let n = 2 * r;
          t[r] = u(e.slice(n, n + 2));
        }
        return t;
      }
      function d(...e) {
        if (1 === e.length) return e[0];
        let t = new Uint8Array(e.reduce((e, t) => e + t.length, 0));
        for (let r = 0, n = 0; r < e.length; r++) {
          let i = e[r];
          t.set(i, n), (n += i.length);
        }
        return t;
      }
      function f(e) {
        return new TextEncoder().encode(e);
      }
      function h(e) {
        if (e < 0)
          throw Error("Invalid integer as argument, must be unsigned!");
        let t = e.toString(16);
        return t.length % 2 ? `0${t}` : t;
      }
      function p(e) {
        return e.length >= 2 && "0" === e[0] && "x" === e[1];
      }
      function m(e) {
        if (e instanceof Uint8Array) return e;
        if ("string" == typeof e) {
          if (p(e)) {
            var t;
            return c(
              (t = "string" != typeof e ? e : p(e) ? e.slice(2) : e).length % 2
                ? `0${t}`
                : t
            );
          }
          return f(e);
        }
        if ("number" == typeof e || "bigint" == typeof e)
          return e ? c(h(e)) : Uint8Array.from([]);
        if (null == e) return Uint8Array.from([]);
        throw Error("toBytes: received unsupported type " + typeof e);
      }
      (t.utils = {
        bytesToHex: l,
        concatBytes: d,
        hexToBytes: c,
        utf8ToBytes: f,
      }),
        (t.RLP = { encode: r, decode: a });
    },
    46652: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var n = r(6476),
        i = r(32597),
        o = (function () {
          function e(e) {
            this._semaphore = new i.default(1, e);
          }
          return (
            (e.prototype.acquire = function () {
              return n.__awaiter(this, arguments, void 0, function (e) {
                return (
                  void 0 === e && (e = 0),
                  n.__generator(this, function (t) {
                    switch (t.label) {
                      case 0:
                        return [4, this._semaphore.acquire(1, e)];
                      case 1:
                        return [2, t.sent()[1]];
                    }
                  })
                );
              });
            }),
            (e.prototype.runExclusive = function (e, t) {
              return (
                void 0 === t && (t = 0),
                this._semaphore.runExclusive(
                  function () {
                    return e();
                  },
                  1,
                  t
                )
              );
            }),
            (e.prototype.isLocked = function () {
              return this._semaphore.isLocked();
            }),
            (e.prototype.waitForUnlock = function (e) {
              return (
                void 0 === e && (e = 0), this._semaphore.waitForUnlock(1, e)
              );
            }),
            (e.prototype.release = function () {
              this._semaphore.isLocked() && this._semaphore.release();
            }),
            (e.prototype.cancel = function () {
              return this._semaphore.cancel();
            }),
            e
          );
        })();
      t.default = o;
    },
    32597: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var n = r(6476),
        i = r(94234),
        o = (function () {
          function e(e, t) {
            void 0 === t && (t = i.E_CANCELED),
              (this._value = e),
              (this._cancelError = t),
              (this._queue = []),
              (this._weightedWaiters = []);
          }
          return (
            (e.prototype.acquire = function (e, t) {
              var r = this;
              if ((void 0 === e && (e = 1), void 0 === t && (t = 0), e <= 0))
                throw Error("invalid weight ".concat(e, ": must be positive"));
              return new Promise(function (n, i) {
                var o = { resolve: n, reject: i, weight: e, priority: t },
                  s = a(r._queue, function (e) {
                    return t <= e.priority;
                  });
                -1 === s && e <= r._value
                  ? r._dispatchItem(o)
                  : r._queue.splice(s + 1, 0, o);
              });
            }),
            (e.prototype.runExclusive = function (e) {
              return n.__awaiter(this, arguments, void 0, function (e, t, r) {
                var i, o, a;
                return (
                  void 0 === t && (t = 1),
                  void 0 === r && (r = 0),
                  n.__generator(this, function (n) {
                    switch (n.label) {
                      case 0:
                        return [4, this.acquire(t, r)];
                      case 1:
                        (o = (i = n.sent())[0]), (a = i[1]), (n.label = 2);
                      case 2:
                        return n.trys.push([2, , 4, 5]), [4, e(o)];
                      case 3:
                        return [2, n.sent()];
                      case 4:
                        return a(), [7];
                      case 5:
                        return [2];
                    }
                  })
                );
              });
            }),
            (e.prototype.waitForUnlock = function (e, t) {
              var r = this;
              if ((void 0 === e && (e = 1), void 0 === t && (t = 0), e <= 0))
                throw Error("invalid weight ".concat(e, ": must be positive"));
              return this._couldLockImmediately(e, t)
                ? Promise.resolve()
                : new Promise(function (n) {
                    r._weightedWaiters[e - 1] ||
                      (r._weightedWaiters[e - 1] = []),
                      (function (e, t) {
                        var r = a(e, function (e) {
                          return t.priority <= e.priority;
                        });
                        e.splice(r + 1, 0, t);
                      })(r._weightedWaiters[e - 1], {
                        resolve: n,
                        priority: t,
                      });
                  });
            }),
            (e.prototype.isLocked = function () {
              return this._value <= 0;
            }),
            (e.prototype.getValue = function () {
              return this._value;
            }),
            (e.prototype.setValue = function (e) {
              (this._value = e), this._dispatchQueue();
            }),
            (e.prototype.release = function (e) {
              if ((void 0 === e && (e = 1), e <= 0))
                throw Error("invalid weight ".concat(e, ": must be positive"));
              (this._value += e), this._dispatchQueue();
            }),
            (e.prototype.cancel = function () {
              var e = this;
              this._queue.forEach(function (t) {
                return t.reject(e._cancelError);
              }),
                (this._queue = []);
            }),
            (e.prototype._dispatchQueue = function () {
              for (
                this._drainUnlockWaiters();
                this._queue.length > 0 && this._queue[0].weight <= this._value;

              )
                this._dispatchItem(this._queue.shift()),
                  this._drainUnlockWaiters();
            }),
            (e.prototype._dispatchItem = function (e) {
              var t = this._value;
              (this._value -= e.weight),
                e.resolve([t, this._newReleaser(e.weight)]);
            }),
            (e.prototype._newReleaser = function (e) {
              var t = this,
                r = !1;
              return function () {
                r || ((r = !0), t.release(e));
              };
            }),
            (e.prototype._drainUnlockWaiters = function () {
              if (0 === this._queue.length)
                for (var e = this._value; e > 0; e--) {
                  var t = this._weightedWaiters[e - 1];
                  t &&
                    (t.forEach(function (e) {
                      return e.resolve();
                    }),
                    (this._weightedWaiters[e - 1] = []));
                }
              else
                for (
                  var r = this._queue[0].priority, e = this._value;
                  e > 0;
                  e--
                ) {
                  var t = this._weightedWaiters[e - 1];
                  if (t) {
                    var n = t.findIndex(function (e) {
                      return e.priority <= r;
                    });
                    (-1 === n ? t : t.splice(0, n)).forEach(function (e) {
                      return e.resolve();
                    });
                  }
                }
            }),
            (e.prototype._couldLockImmediately = function (e, t) {
              return (
                (0 === this._queue.length || this._queue[0].priority < t) &&
                e <= this._value
              );
            }),
            e
          );
        })();
      function a(e, t) {
        for (var r = e.length - 1; r >= 0; r--) if (t(e[r])) return r;
        return -1;
      }
      t.default = o;
    },
    94234: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.E_CANCELED = t.E_ALREADY_LOCKED = t.E_TIMEOUT = void 0),
        (t.E_TIMEOUT = Error(
          "timeout while waiting for mutex to become available"
        )),
        (t.E_ALREADY_LOCKED = Error("mutex already locked")),
        (t.E_CANCELED = Error("request for lock canceled"));
    },
    78327: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.tryAcquire = t.withTimeout = t.Semaphore = t.Mutex = void 0);
      var n = r(6476),
        i = r(46652);
      Object.defineProperty(t, "Mutex", {
        enumerable: !0,
        get: function () {
          return i.default;
        },
      });
      var o = r(32597);
      Object.defineProperty(t, "Semaphore", {
        enumerable: !0,
        get: function () {
          return o.default;
        },
      });
      var a = r(51244);
      Object.defineProperty(t, "withTimeout", {
        enumerable: !0,
        get: function () {
          return a.withTimeout;
        },
      });
      var s = r(14602);
      Object.defineProperty(t, "tryAcquire", {
        enumerable: !0,
        get: function () {
          return s.tryAcquire;
        },
      }),
        n.__exportStar(r(94234), t);
    },
    14602: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.tryAcquire = void 0);
      var n = r(94234),
        i = r(51244);
      t.tryAcquire = function (e, t) {
        return (
          void 0 === t && (t = n.E_ALREADY_LOCKED), (0, i.withTimeout)(e, 0, t)
        );
      };
    },
    51244: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.withTimeout = void 0);
      var n = r(6476),
        i = r(94234);
      function o(e) {
        return void 0 !== e.getValue;
      }
      t.withTimeout = function (e, t, r) {
        var a = this;
        return (
          void 0 === r && (r = i.E_TIMEOUT),
          {
            acquire: function (i, s) {
              var l;
              if (
                (o(e) ? (l = i) : ((l = void 0), (s = i)),
                void 0 !== l && l <= 0)
              )
                throw Error("invalid weight ".concat(l, ": must be positive"));
              return new Promise(function (i, u) {
                return n.__awaiter(a, void 0, void 0, function () {
                  var a, c, d, f;
                  return n.__generator(this, function (n) {
                    switch (n.label) {
                      case 0:
                        (a = !1),
                          (c = setTimeout(function () {
                            (a = !0), u(r);
                          }, t)),
                          (n.label = 1);
                      case 1:
                        return (
                          n.trys.push([1, 3, , 4]),
                          [4, o(e) ? e.acquire(l, s) : e.acquire(s)]
                        );
                      case 2:
                        return (
                          (d = n.sent()),
                          a
                            ? (Array.isArray(d) ? d[1] : d)()
                            : (clearTimeout(c), i(d)),
                          [3, 4]
                        );
                      case 3:
                        return (
                          (f = n.sent()), a || (clearTimeout(c), u(f)), [3, 4]
                        );
                      case 4:
                        return [2];
                    }
                  });
                });
              });
            },
            runExclusive: function (e, t, r) {
              return n.__awaiter(this, void 0, void 0, function () {
                var i, o;
                return n.__generator(this, function (n) {
                  switch (n.label) {
                    case 0:
                      (i = function () {}), (n.label = 1);
                    case 1:
                      return n.trys.push([1, , 7, 8]), [4, this.acquire(t, r)];
                    case 2:
                      if (!Array.isArray((o = n.sent()))) return [3, 4];
                      return (i = o[1]), [4, e(o[0])];
                    case 3:
                    case 5:
                      return [2, n.sent()];
                    case 4:
                      return (i = o), [4, e()];
                    case 6:
                      return [3, 8];
                    case 7:
                      return i(), [7];
                    case 8:
                      return [2];
                  }
                });
              });
            },
            release: function (t) {
              e.release(t);
            },
            cancel: function () {
              return e.cancel();
            },
            waitForUnlock: function (n, i) {
              var a;
              if (
                (o(e) ? (a = n) : ((a = void 0), (i = n)),
                void 0 !== a && a <= 0)
              )
                throw Error("invalid weight ".concat(a, ": must be positive"));
              return new Promise(function (n, s) {
                var l = setTimeout(function () {
                  return s(r);
                }, t);
                (o(e) ? e.waitForUnlock(a, i) : e.waitForUnlock(i)).then(
                  function () {
                    clearTimeout(l), n();
                  }
                );
              });
            },
            isLocked: function () {
              return e.isLocked();
            },
            getValue: function () {
              return e.getValue();
            },
            setValue: function (t) {
              return e.setValue(t);
            },
          }
        );
      };
    },
    3836: (e, t) => {
      "use strict";
      (t.byteLength = function (e) {
        var t = l(e),
          r = t[0],
          n = t[1];
        return ((r + n) * 3) / 4 - n;
      }),
        (t.toByteArray = function (e) {
          var t,
            r,
            o = l(e),
            a = o[0],
            s = o[1],
            u = new i(((a + s) * 3) / 4 - s),
            c = 0,
            d = s > 0 ? a - 4 : a;
          for (r = 0; r < d; r += 4)
            (t =
              (n[e.charCodeAt(r)] << 18) |
              (n[e.charCodeAt(r + 1)] << 12) |
              (n[e.charCodeAt(r + 2)] << 6) |
              n[e.charCodeAt(r + 3)]),
              (u[c++] = (t >> 16) & 255),
              (u[c++] = (t >> 8) & 255),
              (u[c++] = 255 & t);
          return (
            2 === s &&
              ((t = (n[e.charCodeAt(r)] << 2) | (n[e.charCodeAt(r + 1)] >> 4)),
              (u[c++] = 255 & t)),
            1 === s &&
              ((t =
                (n[e.charCodeAt(r)] << 10) |
                (n[e.charCodeAt(r + 1)] << 4) |
                (n[e.charCodeAt(r + 2)] >> 2)),
              (u[c++] = (t >> 8) & 255),
              (u[c++] = 255 & t)),
            u
          );
        }),
        (t.fromByteArray = function (e) {
          for (
            var t, n = e.length, i = n % 3, o = [], a = 0, s = n - i;
            a < s;
            a += 16383
          )
            o.push(
              (function (e, t, n) {
                for (var i, o = [], a = t; a < n; a += 3)
                  o.push(
                    r[
                      ((i =
                        ((e[a] << 16) & 0xff0000) +
                        ((e[a + 1] << 8) & 65280) +
                        (255 & e[a + 2])) >>
                        18) &
                        63
                    ] +
                      r[(i >> 12) & 63] +
                      r[(i >> 6) & 63] +
                      r[63 & i]
                  );
                return o.join("");
              })(e, a, a + 16383 > s ? s : a + 16383)
            );
          return (
            1 === i
              ? o.push(r[(t = e[n - 1]) >> 2] + r[(t << 4) & 63] + "==")
              : 2 === i &&
                o.push(
                  r[(t = (e[n - 2] << 8) + e[n - 1]) >> 10] +
                    r[(t >> 4) & 63] +
                    r[(t << 2) & 63] +
                    "="
                ),
            o.join("")
          );
        });
      for (
        var r = [],
          n = [],
          i = "undefined" != typeof Uint8Array ? Uint8Array : Array,
          o =
            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
          a = 0,
          s = o.length;
        a < s;
        ++a
      )
        (r[a] = o[a]), (n[o.charCodeAt(a)] = a);
      function l(e) {
        var t = e.length;
        if (t % 4 > 0)
          throw Error("Invalid string. Length must be a multiple of 4");
        var r = e.indexOf("=");
        -1 === r && (r = t);
        var n = r === t ? 0 : 4 - (r % 4);
        return [r, n];
      }
      (n["-".charCodeAt(0)] = 62), (n["_".charCodeAt(0)] = 63);
    },
    75927: (e, t, r) => {
      "use strict";
      let n = r(3836),
        i = r(84981),
        o =
          "function" == typeof Symbol && "function" == typeof Symbol.for
            ? Symbol.for("nodejs.util.inspect.custom")
            : null;
      function a(e) {
        if (e > 0x7fffffff)
          throw RangeError(
            'The value "' + e + '" is invalid for option "size"'
          );
        let t = new Uint8Array(e);
        return Object.setPrototypeOf(t, s.prototype), t;
      }
      function s(e, t, r) {
        if ("number" == typeof e) {
          if ("string" == typeof t)
            throw TypeError(
              'The "string" argument must be of type string. Received type number'
            );
          return c(e);
        }
        return l(e, t, r);
      }
      function l(e, t, r) {
        if ("string" == typeof e)
          return (function (e, t) {
            if (
              (("string" != typeof t || "" === t) && (t = "utf8"),
              !s.isEncoding(t))
            )
              throw TypeError("Unknown encoding: " + t);
            let r = 0 | p(e, t),
              n = a(r),
              i = n.write(e, t);
            return i !== r && (n = n.slice(0, i)), n;
          })(e, t);
        if (ArrayBuffer.isView(e))
          return (function (e) {
            if (F(e, Uint8Array)) {
              let t = new Uint8Array(e);
              return f(t.buffer, t.byteOffset, t.byteLength);
            }
            return d(e);
          })(e);
        if (null == e)
          throw TypeError(
            "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " +
              typeof e
          );
        if (
          F(e, ArrayBuffer) ||
          (e && F(e.buffer, ArrayBuffer)) ||
          ("undefined" != typeof SharedArrayBuffer &&
            (F(e, SharedArrayBuffer) || (e && F(e.buffer, SharedArrayBuffer))))
        )
          return f(e, t, r);
        if ("number" == typeof e)
          throw TypeError(
            'The "value" argument must not be of type number. Received type number'
          );
        let n = e.valueOf && e.valueOf();
        if (null != n && n !== e) return s.from(n, t, r);
        let i = (function (e) {
          var t;
          if (s.isBuffer(e)) {
            let t = 0 | h(e.length),
              r = a(t);
            return 0 === r.length || e.copy(r, 0, 0, t), r;
          }
          return void 0 !== e.length
            ? "number" != typeof e.length || (t = e.length) != t
              ? a(0)
              : d(e)
            : "Buffer" === e.type && Array.isArray(e.data)
            ? d(e.data)
            : void 0;
        })(e);
        if (i) return i;
        if (
          "undefined" != typeof Symbol &&
          null != Symbol.toPrimitive &&
          "function" == typeof e[Symbol.toPrimitive]
        )
          return s.from(e[Symbol.toPrimitive]("string"), t, r);
        throw TypeError(
          "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " +
            typeof e
        );
      }
      function u(e) {
        if ("number" != typeof e)
          throw TypeError('"size" argument must be of type number');
        if (e < 0)
          throw RangeError(
            'The value "' + e + '" is invalid for option "size"'
          );
      }
      function c(e) {
        return u(e), a(e < 0 ? 0 : 0 | h(e));
      }
      function d(e) {
        let t = e.length < 0 ? 0 : 0 | h(e.length),
          r = a(t);
        for (let n = 0; n < t; n += 1) r[n] = 255 & e[n];
        return r;
      }
      function f(e, t, r) {
        let n;
        if (t < 0 || e.byteLength < t)
          throw RangeError('"offset" is outside of buffer bounds');
        if (e.byteLength < t + (r || 0))
          throw RangeError('"length" is outside of buffer bounds');
        return (
          Object.setPrototypeOf(
            (n =
              void 0 === t && void 0 === r
                ? new Uint8Array(e)
                : void 0 === r
                ? new Uint8Array(e, t)
                : new Uint8Array(e, t, r)),
            s.prototype
          ),
          n
        );
      }
      function h(e) {
        if (e >= 0x7fffffff)
          throw RangeError(
            "Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes"
          );
        return 0 | e;
      }
      function p(e, t) {
        if (s.isBuffer(e)) return e.length;
        if (ArrayBuffer.isView(e) || F(e, ArrayBuffer)) return e.byteLength;
        if ("string" != typeof e)
          throw TypeError(
            'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' +
              typeof e
          );
        let r = e.length,
          n = arguments.length > 2 && !0 === arguments[2];
        if (!n && 0 === r) return 0;
        let i = !1;
        for (;;)
          switch (t) {
            case "ascii":
            case "latin1":
            case "binary":
              return r;
            case "utf8":
            case "utf-8":
              return N(e).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return 2 * r;
            case "hex":
              return r >>> 1;
            case "base64":
              return M(e).length;
            default:
              if (i) return n ? -1 : N(e).length;
              (t = ("" + t).toLowerCase()), (i = !0);
          }
      }
      function m(e, t, r) {
        let i = !1;
        if (
          ((void 0 === t || t < 0) && (t = 0),
          t > this.length ||
            ((void 0 === r || r > this.length) && (r = this.length),
            r <= 0 || (r >>>= 0) <= (t >>>= 0)))
        )
          return "";
        for (e || (e = "utf8"); ; )
          switch (e) {
            case "hex":
              return (function (e, t, r) {
                let n = e.length;
                (!t || t < 0) && (t = 0), (!r || r < 0 || r > n) && (r = n);
                let i = "";
                for (let n = t; n < r; ++n) i += L[e[n]];
                return i;
              })(this, t, r);
            case "utf8":
            case "utf-8":
              return v(this, t, r);
            case "ascii":
              return (function (e, t, r) {
                let n = "";
                r = Math.min(e.length, r);
                for (let i = t; i < r; ++i)
                  n += String.fromCharCode(127 & e[i]);
                return n;
              })(this, t, r);
            case "latin1":
            case "binary":
              return (function (e, t, r) {
                let n = "";
                r = Math.min(e.length, r);
                for (let i = t; i < r; ++i) n += String.fromCharCode(e[i]);
                return n;
              })(this, t, r);
            case "base64":
              var o, a;
              return (
                (o = t),
                (a = r),
                0 === o && a === this.length
                  ? n.fromByteArray(this)
                  : n.fromByteArray(this.slice(o, a))
              );
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return (function (e, t, r) {
                let n = e.slice(t, r),
                  i = "";
                for (let e = 0; e < n.length - 1; e += 2)
                  i += String.fromCharCode(n[e] + 256 * n[e + 1]);
                return i;
              })(this, t, r);
            default:
              if (i) throw TypeError("Unknown encoding: " + e);
              (e = (e + "").toLowerCase()), (i = !0);
          }
      }
      function g(e, t, r) {
        let n = e[t];
        (e[t] = e[r]), (e[r] = n);
      }
      function y(e, t, r, n, i) {
        var o;
        if (0 === e.length) return -1;
        if (
          ("string" == typeof r
            ? ((n = r), (r = 0))
            : r > 0x7fffffff
            ? (r = 0x7fffffff)
            : r < -0x80000000 && (r = -0x80000000),
          (o = r = +r) != o && (r = i ? 0 : e.length - 1),
          r < 0 && (r = e.length + r),
          r >= e.length)
        ) {
          if (i) return -1;
          r = e.length - 1;
        } else if (r < 0) {
          if (!i) return -1;
          r = 0;
        }
        if (("string" == typeof t && (t = s.from(t, n)), s.isBuffer(t)))
          return 0 === t.length ? -1 : b(e, t, r, n, i);
        if ("number" == typeof t)
          return ((t &= 255), "function" == typeof Uint8Array.prototype.indexOf)
            ? i
              ? Uint8Array.prototype.indexOf.call(e, t, r)
              : Uint8Array.prototype.lastIndexOf.call(e, t, r)
            : b(e, [t], r, n, i);
        throw TypeError("val must be string, number or Buffer");
      }
      function b(e, t, r, n, i) {
        let o,
          a = 1,
          s = e.length,
          l = t.length;
        if (
          void 0 !== n &&
          ("ucs2" === (n = String(n).toLowerCase()) ||
            "ucs-2" === n ||
            "utf16le" === n ||
            "utf-16le" === n)
        ) {
          if (e.length < 2 || t.length < 2) return -1;
          (a = 2), (s /= 2), (l /= 2), (r /= 2);
        }
        function u(e, t) {
          return 1 === a ? e[t] : e.readUInt16BE(t * a);
        }
        if (i) {
          let n = -1;
          for (o = r; o < s; o++)
            if (u(e, o) === u(t, -1 === n ? 0 : o - n)) {
              if ((-1 === n && (n = o), o - n + 1 === l)) return n * a;
            } else -1 !== n && (o -= o - n), (n = -1);
        } else
          for (r + l > s && (r = s - l), o = r; o >= 0; o--) {
            let r = !0;
            for (let n = 0; n < l; n++)
              if (u(e, o + n) !== u(t, n)) {
                r = !1;
                break;
              }
            if (r) return o;
          }
        return -1;
      }
      function v(e, t, r) {
        r = Math.min(e.length, r);
        let n = [],
          i = t;
        for (; i < r; ) {
          let t = e[i],
            o = null,
            a = t > 239 ? 4 : t > 223 ? 3 : t > 191 ? 2 : 1;
          if (i + a <= r) {
            let r, n, s, l;
            switch (a) {
              case 1:
                t < 128 && (o = t);
                break;
              case 2:
                (192 & (r = e[i + 1])) == 128 &&
                  (l = ((31 & t) << 6) | (63 & r)) > 127 &&
                  (o = l);
                break;
              case 3:
                (r = e[i + 1]),
                  (n = e[i + 2]),
                  (192 & r) == 128 &&
                    (192 & n) == 128 &&
                    (l = ((15 & t) << 12) | ((63 & r) << 6) | (63 & n)) >
                      2047 &&
                    (l < 55296 || l > 57343) &&
                    (o = l);
                break;
              case 4:
                (r = e[i + 1]),
                  (n = e[i + 2]),
                  (s = e[i + 3]),
                  (192 & r) == 128 &&
                    (192 & n) == 128 &&
                    (192 & s) == 128 &&
                    (l =
                      ((15 & t) << 18) |
                      ((63 & r) << 12) |
                      ((63 & n) << 6) |
                      (63 & s)) > 65535 &&
                    l < 1114112 &&
                    (o = l);
            }
          }
          null === o
            ? ((o = 65533), (a = 1))
            : o > 65535 &&
              ((o -= 65536),
              n.push(((o >>> 10) & 1023) | 55296),
              (o = 56320 | (1023 & o))),
            n.push(o),
            (i += a);
        }
        return (function (e) {
          let t = e.length;
          if (t <= 4096) return String.fromCharCode.apply(String, e);
          let r = "",
            n = 0;
          for (; n < t; )
            r += String.fromCharCode.apply(String, e.slice(n, (n += 4096)));
          return r;
        })(n);
      }
      function w(e, t, r) {
        if (e % 1 != 0 || e < 0) throw RangeError("offset is not uint");
        if (e + t > r)
          throw RangeError("Trying to access beyond buffer length");
      }
      function x(e, t, r, n, i, o) {
        if (!s.isBuffer(e))
          throw TypeError('"buffer" argument must be a Buffer instance');
        if (t > i || t < o)
          throw RangeError('"value" argument is out of bounds');
        if (r + n > e.length) throw RangeError("Index out of range");
      }
      function A(e, t, r, n, i) {
        O(t, n, i, e, r, 7);
        let o = Number(t & BigInt(0xffffffff));
        (e[r++] = o),
          (o >>= 8),
          (e[r++] = o),
          (o >>= 8),
          (e[r++] = o),
          (o >>= 8),
          (e[r++] = o);
        let a = Number((t >> BigInt(32)) & BigInt(0xffffffff));
        return (
          (e[r++] = a),
          (a >>= 8),
          (e[r++] = a),
          (a >>= 8),
          (e[r++] = a),
          (a >>= 8),
          (e[r++] = a),
          r
        );
      }
      function E(e, t, r, n, i) {
        O(t, n, i, e, r, 7);
        let o = Number(t & BigInt(0xffffffff));
        (e[r + 7] = o),
          (o >>= 8),
          (e[r + 6] = o),
          (o >>= 8),
          (e[r + 5] = o),
          (o >>= 8),
          (e[r + 4] = o);
        let a = Number((t >> BigInt(32)) & BigInt(0xffffffff));
        return (
          (e[r + 3] = a),
          (a >>= 8),
          (e[r + 2] = a),
          (a >>= 8),
          (e[r + 1] = a),
          (a >>= 8),
          (e[r] = a),
          r + 8
        );
      }
      function k(e, t, r, n, i, o) {
        if (r + n > e.length || r < 0) throw RangeError("Index out of range");
      }
      function I(e, t, r, n, o) {
        return (
          (t = +t),
          (r >>>= 0),
          o || k(e, t, r, 4, 34028234663852886e22, -34028234663852886e22),
          i.write(e, t, r, n, 23, 4),
          r + 4
        );
      }
      function S(e, t, r, n, o) {
        return (
          (t = +t),
          (r >>>= 0),
          o || k(e, t, r, 8, 17976931348623157e292, -17976931348623157e292),
          i.write(e, t, r, n, 52, 8),
          r + 8
        );
      }
      (t.Buffer = s),
        (t.SlowBuffer = function (e) {
          return +e != e && (e = 0), s.alloc(+e);
        }),
        (t.INSPECT_MAX_BYTES = 50),
        (t.kMaxLength = 0x7fffffff),
        (s.TYPED_ARRAY_SUPPORT = (function () {
          try {
            let e = new Uint8Array(1),
              t = {
                foo: function () {
                  return 42;
                },
              };
            return (
              Object.setPrototypeOf(t, Uint8Array.prototype),
              Object.setPrototypeOf(e, t),
              42 === e.foo()
            );
          } catch (e) {
            return !1;
          }
        })()),
        s.TYPED_ARRAY_SUPPORT ||
          "undefined" == typeof console ||
          "function" != typeof console.error ||
          console.error(
            "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
          ),
        Object.defineProperty(s.prototype, "parent", {
          enumerable: !0,
          get: function () {
            if (s.isBuffer(this)) return this.buffer;
          },
        }),
        Object.defineProperty(s.prototype, "offset", {
          enumerable: !0,
          get: function () {
            if (s.isBuffer(this)) return this.byteOffset;
          },
        }),
        (s.poolSize = 8192),
        (s.from = function (e, t, r) {
          return l(e, t, r);
        }),
        Object.setPrototypeOf(s.prototype, Uint8Array.prototype),
        Object.setPrototypeOf(s, Uint8Array),
        (s.alloc = function (e, t, r) {
          return (u(e), e <= 0)
            ? a(e)
            : void 0 !== t
            ? "string" == typeof r
              ? a(e).fill(t, r)
              : a(e).fill(t)
            : a(e);
        }),
        (s.allocUnsafe = function (e) {
          return c(e);
        }),
        (s.allocUnsafeSlow = function (e) {
          return c(e);
        }),
        (s.isBuffer = function (e) {
          return null != e && !0 === e._isBuffer && e !== s.prototype;
        }),
        (s.compare = function (e, t) {
          if (
            (F(e, Uint8Array) && (e = s.from(e, e.offset, e.byteLength)),
            F(t, Uint8Array) && (t = s.from(t, t.offset, t.byteLength)),
            !s.isBuffer(e) || !s.isBuffer(t))
          )
            throw TypeError(
              'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
            );
          if (e === t) return 0;
          let r = e.length,
            n = t.length;
          for (let i = 0, o = Math.min(r, n); i < o; ++i)
            if (e[i] !== t[i]) {
              (r = e[i]), (n = t[i]);
              break;
            }
          return r < n ? -1 : n < r ? 1 : 0;
        }),
        (s.isEncoding = function (e) {
          switch (String(e).toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return !0;
            default:
              return !1;
          }
        }),
        (s.concat = function (e, t) {
          let r;
          if (!Array.isArray(e))
            throw TypeError('"list" argument must be an Array of Buffers');
          if (0 === e.length) return s.alloc(0);
          if (void 0 === t)
            for (r = 0, t = 0; r < e.length; ++r) t += e[r].length;
          let n = s.allocUnsafe(t),
            i = 0;
          for (r = 0; r < e.length; ++r) {
            let t = e[r];
            if (F(t, Uint8Array))
              i + t.length > n.length
                ? (s.isBuffer(t) || (t = s.from(t)), t.copy(n, i))
                : Uint8Array.prototype.set.call(n, t, i);
            else if (s.isBuffer(t)) t.copy(n, i);
            else throw TypeError('"list" argument must be an Array of Buffers');
            i += t.length;
          }
          return n;
        }),
        (s.byteLength = p),
        (s.prototype._isBuffer = !0),
        (s.prototype.swap16 = function () {
          let e = this.length;
          if (e % 2 != 0)
            throw RangeError("Buffer size must be a multiple of 16-bits");
          for (let t = 0; t < e; t += 2) g(this, t, t + 1);
          return this;
        }),
        (s.prototype.swap32 = function () {
          let e = this.length;
          if (e % 4 != 0)
            throw RangeError("Buffer size must be a multiple of 32-bits");
          for (let t = 0; t < e; t += 4)
            g(this, t, t + 3), g(this, t + 1, t + 2);
          return this;
        }),
        (s.prototype.swap64 = function () {
          let e = this.length;
          if (e % 8 != 0)
            throw RangeError("Buffer size must be a multiple of 64-bits");
          for (let t = 0; t < e; t += 8)
            g(this, t, t + 7),
              g(this, t + 1, t + 6),
              g(this, t + 2, t + 5),
              g(this, t + 3, t + 4);
          return this;
        }),
        (s.prototype.toString = function () {
          let e = this.length;
          return 0 === e
            ? ""
            : 0 == arguments.length
            ? v(this, 0, e)
            : m.apply(this, arguments);
        }),
        (s.prototype.toLocaleString = s.prototype.toString),
        (s.prototype.equals = function (e) {
          if (!s.isBuffer(e)) throw TypeError("Argument must be a Buffer");
          return this === e || 0 === s.compare(this, e);
        }),
        (s.prototype.inspect = function () {
          let e = "",
            r = t.INSPECT_MAX_BYTES;
          return (
            (e = this.toString("hex", 0, r)
              .replace(/(.{2})/g, "$1 ")
              .trim()),
            this.length > r && (e += " ... "),
            "<Buffer " + e + ">"
          );
        }),
        o && (s.prototype[o] = s.prototype.inspect),
        (s.prototype.compare = function (e, t, r, n, i) {
          if (
            (F(e, Uint8Array) && (e = s.from(e, e.offset, e.byteLength)),
            !s.isBuffer(e))
          )
            throw TypeError(
              'The "target" argument must be one of type Buffer or Uint8Array. Received type ' +
                typeof e
            );
          if (
            (void 0 === t && (t = 0),
            void 0 === r && (r = e ? e.length : 0),
            void 0 === n && (n = 0),
            void 0 === i && (i = this.length),
            t < 0 || r > e.length || n < 0 || i > this.length)
          )
            throw RangeError("out of range index");
          if (n >= i && t >= r) return 0;
          if (n >= i) return -1;
          if (t >= r) return 1;
          if (((t >>>= 0), (r >>>= 0), (n >>>= 0), (i >>>= 0), this === e))
            return 0;
          let o = i - n,
            a = r - t,
            l = Math.min(o, a),
            u = this.slice(n, i),
            c = e.slice(t, r);
          for (let e = 0; e < l; ++e)
            if (u[e] !== c[e]) {
              (o = u[e]), (a = c[e]);
              break;
            }
          return o < a ? -1 : a < o ? 1 : 0;
        }),
        (s.prototype.includes = function (e, t, r) {
          return -1 !== this.indexOf(e, t, r);
        }),
        (s.prototype.indexOf = function (e, t, r) {
          return y(this, e, t, r, !0);
        }),
        (s.prototype.lastIndexOf = function (e, t, r) {
          return y(this, e, t, r, !1);
        }),
        (s.prototype.write = function (e, t, r, n) {
          var i, o, a, s, l, u, c, d;
          if (void 0 === t) (n = "utf8"), (r = this.length), (t = 0);
          else if (void 0 === r && "string" == typeof t)
            (n = t), (r = this.length), (t = 0);
          else if (isFinite(t))
            (t >>>= 0),
              isFinite(r)
                ? ((r >>>= 0), void 0 === n && (n = "utf8"))
                : ((n = r), (r = void 0));
          else
            throw Error(
              "Buffer.write(string, encoding, offset[, length]) is no longer supported"
            );
          let f = this.length - t;
          if (
            ((void 0 === r || r > f) && (r = f),
            (e.length > 0 && (r < 0 || t < 0)) || t > this.length)
          )
            throw RangeError("Attempt to write outside buffer bounds");
          n || (n = "utf8");
          let h = !1;
          for (;;)
            switch (n) {
              case "hex":
                return (function (e, t, r, n) {
                  let i;
                  r = Number(r) || 0;
                  let o = e.length - r;
                  n ? (n = Number(n)) > o && (n = o) : (n = o);
                  let a = t.length;
                  for (n > a / 2 && (n = a / 2), i = 0; i < n; ++i) {
                    let n = parseInt(t.substr(2 * i, 2), 16);
                    if (n != n) break;
                    e[r + i] = n;
                  }
                  return i;
                })(this, e, t, r);
              case "utf8":
              case "utf-8":
                return (i = t), (o = r), j(N(e, this.length - i), this, i, o);
              case "ascii":
              case "latin1":
              case "binary":
                return (
                  (a = t),
                  (s = r),
                  j(
                    (function (e) {
                      let t = [];
                      for (let r = 0; r < e.length; ++r)
                        t.push(255 & e.charCodeAt(r));
                      return t;
                    })(e),
                    this,
                    a,
                    s
                  )
                );
              case "base64":
                return (l = t), (u = r), j(M(e), this, l, u);
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return (
                  (c = t),
                  (d = r),
                  j(
                    (function (e, t) {
                      let r, n;
                      let i = [];
                      for (let o = 0; o < e.length && !((t -= 2) < 0); ++o)
                        (n = (r = e.charCodeAt(o)) >> 8),
                          i.push(r % 256),
                          i.push(n);
                      return i;
                    })(e, this.length - c),
                    this,
                    c,
                    d
                  )
                );
              default:
                if (h) throw TypeError("Unknown encoding: " + n);
                (n = ("" + n).toLowerCase()), (h = !0);
            }
        }),
        (s.prototype.toJSON = function () {
          return {
            type: "Buffer",
            data: Array.prototype.slice.call(this._arr || this, 0),
          };
        }),
        (s.prototype.slice = function (e, t) {
          let r = this.length;
          (e = ~~e),
            (t = void 0 === t ? r : ~~t),
            e < 0 ? (e += r) < 0 && (e = 0) : e > r && (e = r),
            t < 0 ? (t += r) < 0 && (t = 0) : t > r && (t = r),
            t < e && (t = e);
          let n = this.subarray(e, t);
          return Object.setPrototypeOf(n, s.prototype), n;
        }),
        (s.prototype.readUintLE = s.prototype.readUIntLE =
          function (e, t, r) {
            (e >>>= 0), (t >>>= 0), r || w(e, t, this.length);
            let n = this[e],
              i = 1,
              o = 0;
            for (; ++o < t && (i *= 256); ) n += this[e + o] * i;
            return n;
          }),
        (s.prototype.readUintBE = s.prototype.readUIntBE =
          function (e, t, r) {
            (e >>>= 0), (t >>>= 0), r || w(e, t, this.length);
            let n = this[e + --t],
              i = 1;
            for (; t > 0 && (i *= 256); ) n += this[e + --t] * i;
            return n;
          }),
        (s.prototype.readUint8 = s.prototype.readUInt8 =
          function (e, t) {
            return (e >>>= 0), t || w(e, 1, this.length), this[e];
          }),
        (s.prototype.readUint16LE = s.prototype.readUInt16LE =
          function (e, t) {
            return (
              (e >>>= 0),
              t || w(e, 2, this.length),
              this[e] | (this[e + 1] << 8)
            );
          }),
        (s.prototype.readUint16BE = s.prototype.readUInt16BE =
          function (e, t) {
            return (
              (e >>>= 0),
              t || w(e, 2, this.length),
              (this[e] << 8) | this[e + 1]
            );
          }),
        (s.prototype.readUint32LE = s.prototype.readUInt32LE =
          function (e, t) {
            return (
              (e >>>= 0),
              t || w(e, 4, this.length),
              (this[e] | (this[e + 1] << 8) | (this[e + 2] << 16)) +
                0x1000000 * this[e + 3]
            );
          }),
        (s.prototype.readUint32BE = s.prototype.readUInt32BE =
          function (e, t) {
            return (
              (e >>>= 0),
              t || w(e, 4, this.length),
              0x1000000 * this[e] +
                ((this[e + 1] << 16) | (this[e + 2] << 8) | this[e + 3])
            );
          }),
        (s.prototype.readBigUInt64LE = D(function (e) {
          _((e >>>= 0), "offset");
          let t = this[e],
            r = this[e + 7];
          (void 0 === t || void 0 === r) && B(e, this.length - 8);
          let n =
              t + 256 * this[++e] + 65536 * this[++e] + 0x1000000 * this[++e],
            i = this[++e] + 256 * this[++e] + 65536 * this[++e] + 0x1000000 * r;
          return BigInt(n) + (BigInt(i) << BigInt(32));
        })),
        (s.prototype.readBigUInt64BE = D(function (e) {
          _((e >>>= 0), "offset");
          let t = this[e],
            r = this[e + 7];
          (void 0 === t || void 0 === r) && B(e, this.length - 8);
          let n =
              0x1000000 * t + 65536 * this[++e] + 256 * this[++e] + this[++e],
            i = 0x1000000 * this[++e] + 65536 * this[++e] + 256 * this[++e] + r;
          return (BigInt(n) << BigInt(32)) + BigInt(i);
        })),
        (s.prototype.readIntLE = function (e, t, r) {
          (e >>>= 0), (t >>>= 0), r || w(e, t, this.length);
          let n = this[e],
            i = 1,
            o = 0;
          for (; ++o < t && (i *= 256); ) n += this[e + o] * i;
          return n >= (i *= 128) && (n -= Math.pow(2, 8 * t)), n;
        }),
        (s.prototype.readIntBE = function (e, t, r) {
          (e >>>= 0), (t >>>= 0), r || w(e, t, this.length);
          let n = t,
            i = 1,
            o = this[e + --n];
          for (; n > 0 && (i *= 256); ) o += this[e + --n] * i;
          return o >= (i *= 128) && (o -= Math.pow(2, 8 * t)), o;
        }),
        (s.prototype.readInt8 = function (e, t) {
          return ((e >>>= 0), t || w(e, 1, this.length), 128 & this[e])
            ? -((255 - this[e] + 1) * 1)
            : this[e];
        }),
        (s.prototype.readInt16LE = function (e, t) {
          (e >>>= 0), t || w(e, 2, this.length);
          let r = this[e] | (this[e + 1] << 8);
          return 32768 & r ? 0xffff0000 | r : r;
        }),
        (s.prototype.readInt16BE = function (e, t) {
          (e >>>= 0), t || w(e, 2, this.length);
          let r = this[e + 1] | (this[e] << 8);
          return 32768 & r ? 0xffff0000 | r : r;
        }),
        (s.prototype.readInt32LE = function (e, t) {
          return (
            (e >>>= 0),
            t || w(e, 4, this.length),
            this[e] |
              (this[e + 1] << 8) |
              (this[e + 2] << 16) |
              (this[e + 3] << 24)
          );
        }),
        (s.prototype.readInt32BE = function (e, t) {
          return (
            (e >>>= 0),
            t || w(e, 4, this.length),
            (this[e] << 24) |
              (this[e + 1] << 16) |
              (this[e + 2] << 8) |
              this[e + 3]
          );
        }),
        (s.prototype.readBigInt64LE = D(function (e) {
          _((e >>>= 0), "offset");
          let t = this[e],
            r = this[e + 7];
          return (
            (void 0 === t || void 0 === r) && B(e, this.length - 8),
            (BigInt(
              this[e + 4] + 256 * this[e + 5] + 65536 * this[e + 6] + (r << 24)
            ) <<
              BigInt(32)) +
              BigInt(
                t + 256 * this[++e] + 65536 * this[++e] + 0x1000000 * this[++e]
              )
          );
        })),
        (s.prototype.readBigInt64BE = D(function (e) {
          _((e >>>= 0), "offset");
          let t = this[e],
            r = this[e + 7];
          return (
            (void 0 === t || void 0 === r) && B(e, this.length - 8),
            (BigInt(
              (t << 24) + 65536 * this[++e] + 256 * this[++e] + this[++e]
            ) <<
              BigInt(32)) +
              BigInt(
                0x1000000 * this[++e] + 65536 * this[++e] + 256 * this[++e] + r
              )
          );
        })),
        (s.prototype.readFloatLE = function (e, t) {
          return (
            (e >>>= 0), t || w(e, 4, this.length), i.read(this, e, !0, 23, 4)
          );
        }),
        (s.prototype.readFloatBE = function (e, t) {
          return (
            (e >>>= 0), t || w(e, 4, this.length), i.read(this, e, !1, 23, 4)
          );
        }),
        (s.prototype.readDoubleLE = function (e, t) {
          return (
            (e >>>= 0), t || w(e, 8, this.length), i.read(this, e, !0, 52, 8)
          );
        }),
        (s.prototype.readDoubleBE = function (e, t) {
          return (
            (e >>>= 0), t || w(e, 8, this.length), i.read(this, e, !1, 52, 8)
          );
        }),
        (s.prototype.writeUintLE = s.prototype.writeUIntLE =
          function (e, t, r, n) {
            if (((e = +e), (t >>>= 0), (r >>>= 0), !n)) {
              let n = Math.pow(2, 8 * r) - 1;
              x(this, e, t, r, n, 0);
            }
            let i = 1,
              o = 0;
            for (this[t] = 255 & e; ++o < r && (i *= 256); )
              this[t + o] = (e / i) & 255;
            return t + r;
          }),
        (s.prototype.writeUintBE = s.prototype.writeUIntBE =
          function (e, t, r, n) {
            if (((e = +e), (t >>>= 0), (r >>>= 0), !n)) {
              let n = Math.pow(2, 8 * r) - 1;
              x(this, e, t, r, n, 0);
            }
            let i = r - 1,
              o = 1;
            for (this[t + i] = 255 & e; --i >= 0 && (o *= 256); )
              this[t + i] = (e / o) & 255;
            return t + r;
          }),
        (s.prototype.writeUint8 = s.prototype.writeUInt8 =
          function (e, t, r) {
            return (
              (e = +e),
              (t >>>= 0),
              r || x(this, e, t, 1, 255, 0),
              (this[t] = 255 & e),
              t + 1
            );
          }),
        (s.prototype.writeUint16LE = s.prototype.writeUInt16LE =
          function (e, t, r) {
            return (
              (e = +e),
              (t >>>= 0),
              r || x(this, e, t, 2, 65535, 0),
              (this[t] = 255 & e),
              (this[t + 1] = e >>> 8),
              t + 2
            );
          }),
        (s.prototype.writeUint16BE = s.prototype.writeUInt16BE =
          function (e, t, r) {
            return (
              (e = +e),
              (t >>>= 0),
              r || x(this, e, t, 2, 65535, 0),
              (this[t] = e >>> 8),
              (this[t + 1] = 255 & e),
              t + 2
            );
          }),
        (s.prototype.writeUint32LE = s.prototype.writeUInt32LE =
          function (e, t, r) {
            return (
              (e = +e),
              (t >>>= 0),
              r || x(this, e, t, 4, 0xffffffff, 0),
              (this[t + 3] = e >>> 24),
              (this[t + 2] = e >>> 16),
              (this[t + 1] = e >>> 8),
              (this[t] = 255 & e),
              t + 4
            );
          }),
        (s.prototype.writeUint32BE = s.prototype.writeUInt32BE =
          function (e, t, r) {
            return (
              (e = +e),
              (t >>>= 0),
              r || x(this, e, t, 4, 0xffffffff, 0),
              (this[t] = e >>> 24),
              (this[t + 1] = e >>> 16),
              (this[t + 2] = e >>> 8),
              (this[t + 3] = 255 & e),
              t + 4
            );
          }),
        (s.prototype.writeBigUInt64LE = D(function (e, t = 0) {
          return A(this, e, t, BigInt(0), BigInt("0xffffffffffffffff"));
        })),
        (s.prototype.writeBigUInt64BE = D(function (e, t = 0) {
          return E(this, e, t, BigInt(0), BigInt("0xffffffffffffffff"));
        })),
        (s.prototype.writeIntLE = function (e, t, r, n) {
          if (((e = +e), (t >>>= 0), !n)) {
            let n = Math.pow(2, 8 * r - 1);
            x(this, e, t, r, n - 1, -n);
          }
          let i = 0,
            o = 1,
            a = 0;
          for (this[t] = 255 & e; ++i < r && (o *= 256); )
            e < 0 && 0 === a && 0 !== this[t + i - 1] && (a = 1),
              (this[t + i] = (((e / o) >> 0) - a) & 255);
          return t + r;
        }),
        (s.prototype.writeIntBE = function (e, t, r, n) {
          if (((e = +e), (t >>>= 0), !n)) {
            let n = Math.pow(2, 8 * r - 1);
            x(this, e, t, r, n - 1, -n);
          }
          let i = r - 1,
            o = 1,
            a = 0;
          for (this[t + i] = 255 & e; --i >= 0 && (o *= 256); )
            e < 0 && 0 === a && 0 !== this[t + i + 1] && (a = 1),
              (this[t + i] = (((e / o) >> 0) - a) & 255);
          return t + r;
        }),
        (s.prototype.writeInt8 = function (e, t, r) {
          return (
            (e = +e),
            (t >>>= 0),
            r || x(this, e, t, 1, 127, -128),
            e < 0 && (e = 255 + e + 1),
            (this[t] = 255 & e),
            t + 1
          );
        }),
        (s.prototype.writeInt16LE = function (e, t, r) {
          return (
            (e = +e),
            (t >>>= 0),
            r || x(this, e, t, 2, 32767, -32768),
            (this[t] = 255 & e),
            (this[t + 1] = e >>> 8),
            t + 2
          );
        }),
        (s.prototype.writeInt16BE = function (e, t, r) {
          return (
            (e = +e),
            (t >>>= 0),
            r || x(this, e, t, 2, 32767, -32768),
            (this[t] = e >>> 8),
            (this[t + 1] = 255 & e),
            t + 2
          );
        }),
        (s.prototype.writeInt32LE = function (e, t, r) {
          return (
            (e = +e),
            (t >>>= 0),
            r || x(this, e, t, 4, 0x7fffffff, -0x80000000),
            (this[t] = 255 & e),
            (this[t + 1] = e >>> 8),
            (this[t + 2] = e >>> 16),
            (this[t + 3] = e >>> 24),
            t + 4
          );
        }),
        (s.prototype.writeInt32BE = function (e, t, r) {
          return (
            (e = +e),
            (t >>>= 0),
            r || x(this, e, t, 4, 0x7fffffff, -0x80000000),
            e < 0 && (e = 0xffffffff + e + 1),
            (this[t] = e >>> 24),
            (this[t + 1] = e >>> 16),
            (this[t + 2] = e >>> 8),
            (this[t + 3] = 255 & e),
            t + 4
          );
        }),
        (s.prototype.writeBigInt64LE = D(function (e, t = 0) {
          return A(
            this,
            e,
            t,
            -BigInt("0x8000000000000000"),
            BigInt("0x7fffffffffffffff")
          );
        })),
        (s.prototype.writeBigInt64BE = D(function (e, t = 0) {
          return E(
            this,
            e,
            t,
            -BigInt("0x8000000000000000"),
            BigInt("0x7fffffffffffffff")
          );
        })),
        (s.prototype.writeFloatLE = function (e, t, r) {
          return I(this, e, t, !0, r);
        }),
        (s.prototype.writeFloatBE = function (e, t, r) {
          return I(this, e, t, !1, r);
        }),
        (s.prototype.writeDoubleLE = function (e, t, r) {
          return S(this, e, t, !0, r);
        }),
        (s.prototype.writeDoubleBE = function (e, t, r) {
          return S(this, e, t, !1, r);
        }),
        (s.prototype.copy = function (e, t, r, n) {
          if (!s.isBuffer(e)) throw TypeError("argument should be a Buffer");
          if (
            (r || (r = 0),
            n || 0 === n || (n = this.length),
            t >= e.length && (t = e.length),
            t || (t = 0),
            n > 0 && n < r && (n = r),
            n === r || 0 === e.length || 0 === this.length)
          )
            return 0;
          if (t < 0) throw RangeError("targetStart out of bounds");
          if (r < 0 || r >= this.length) throw RangeError("Index out of range");
          if (n < 0) throw RangeError("sourceEnd out of bounds");
          n > this.length && (n = this.length),
            e.length - t < n - r && (n = e.length - t + r);
          let i = n - r;
          return (
            this === e && "function" == typeof Uint8Array.prototype.copyWithin
              ? this.copyWithin(t, r, n)
              : Uint8Array.prototype.set.call(e, this.subarray(r, n), t),
            i
          );
        }),
        (s.prototype.fill = function (e, t, r, n) {
          let i;
          if ("string" == typeof e) {
            if (
              ("string" == typeof t
                ? ((n = t), (t = 0), (r = this.length))
                : "string" == typeof r && ((n = r), (r = this.length)),
              void 0 !== n && "string" != typeof n)
            )
              throw TypeError("encoding must be a string");
            if ("string" == typeof n && !s.isEncoding(n))
              throw TypeError("Unknown encoding: " + n);
            if (1 === e.length) {
              let t = e.charCodeAt(0);
              (("utf8" === n && t < 128) || "latin1" === n) && (e = t);
            }
          } else
            "number" == typeof e
              ? (e &= 255)
              : "boolean" == typeof e && (e = Number(e));
          if (t < 0 || this.length < t || this.length < r)
            throw RangeError("Out of range index");
          if (r <= t) return this;
          if (
            ((t >>>= 0),
            (r = void 0 === r ? this.length : r >>> 0),
            e || (e = 0),
            "number" == typeof e)
          )
            for (i = t; i < r; ++i) this[i] = e;
          else {
            let o = s.isBuffer(e) ? e : s.from(e, n),
              a = o.length;
            if (0 === a)
              throw TypeError(
                'The value "' + e + '" is invalid for argument "value"'
              );
            for (i = 0; i < r - t; ++i) this[i + t] = o[i % a];
          }
          return this;
        });
      let P = {};
      function T(e, t, r) {
        P[e] = class extends r {
          constructor() {
            super(),
              Object.defineProperty(this, "message", {
                value: t.apply(this, arguments),
                writable: !0,
                configurable: !0,
              }),
              (this.name = `${this.name} [${e}]`),
              this.stack,
              delete this.name;
          }
          get code() {
            return e;
          }
          set code(e) {
            Object.defineProperty(this, "code", {
              configurable: !0,
              enumerable: !0,
              value: e,
              writable: !0,
            });
          }
          toString() {
            return `${this.name} [${e}]: ${this.message}`;
          }
        };
      }
      function C(e) {
        let t = "",
          r = e.length,
          n = "-" === e[0] ? 1 : 0;
        for (; r >= n + 4; r -= 3) t = `_${e.slice(r - 3, r)}${t}`;
        return `${e.slice(0, r)}${t}`;
      }
      function O(e, t, r, n, i, o) {
        if (e > r || e < t) {
          let n;
          let i = "bigint" == typeof t ? "n" : "";
          throw (
            ((n =
              o > 3
                ? 0 === t || t === BigInt(0)
                  ? `>= 0${i} and < 2${i} ** ${(o + 1) * 8}${i}`
                  : `>= -(2${i} ** ${(o + 1) * 8 - 1}${i}) and < 2 ** ${
                      (o + 1) * 8 - 1
                    }${i}`
                : `>= ${t}${i} and <= ${r}${i}`),
            new P.ERR_OUT_OF_RANGE("value", n, e))
          );
        }
        _(i, "offset"),
          (void 0 === n[i] || void 0 === n[i + o]) && B(i, n.length - (o + 1));
      }
      function _(e, t) {
        if ("number" != typeof e)
          throw new P.ERR_INVALID_ARG_TYPE(t, "number", e);
      }
      function B(e, t, r) {
        if (Math.floor(e) !== e)
          throw (
            (_(e, r), new P.ERR_OUT_OF_RANGE(r || "offset", "an integer", e))
          );
        if (t < 0) throw new P.ERR_BUFFER_OUT_OF_BOUNDS();
        throw new P.ERR_OUT_OF_RANGE(
          r || "offset",
          `>= ${r ? 1 : 0} and <= ${t}`,
          e
        );
      }
      T(
        "ERR_BUFFER_OUT_OF_BOUNDS",
        function (e) {
          return e
            ? `${e} is outside of buffer bounds`
            : "Attempt to access memory outside buffer bounds";
        },
        RangeError
      ),
        T(
          "ERR_INVALID_ARG_TYPE",
          function (e, t) {
            return `The "${e}" argument must be of type number. Received type ${typeof t}`;
          },
          TypeError
        ),
        T(
          "ERR_OUT_OF_RANGE",
          function (e, t, r) {
            let n = `The value of "${e}" is out of range.`,
              i = r;
            return (
              Number.isInteger(r) && Math.abs(r) > 0x100000000
                ? (i = C(String(r)))
                : "bigint" == typeof r &&
                  ((i = String(r)),
                  (r > BigInt(2) ** BigInt(32) ||
                    r < -(BigInt(2) ** BigInt(32))) &&
                    (i = C(i)),
                  (i += "n")),
              (n += ` It must be ${t}. Received ${i}`)
            );
          },
          RangeError
        );
      let R = /[^+/0-9A-Za-z-_]/g;
      function N(e, t) {
        let r;
        t = t || 1 / 0;
        let n = e.length,
          i = null,
          o = [];
        for (let a = 0; a < n; ++a) {
          if ((r = e.charCodeAt(a)) > 55295 && r < 57344) {
            if (!i) {
              if (r > 56319 || a + 1 === n) {
                (t -= 3) > -1 && o.push(239, 191, 189);
                continue;
              }
              i = r;
              continue;
            }
            if (r < 56320) {
              (t -= 3) > -1 && o.push(239, 191, 189), (i = r);
              continue;
            }
            r = (((i - 55296) << 10) | (r - 56320)) + 65536;
          } else i && (t -= 3) > -1 && o.push(239, 191, 189);
          if (((i = null), r < 128)) {
            if ((t -= 1) < 0) break;
            o.push(r);
          } else if (r < 2048) {
            if ((t -= 2) < 0) break;
            o.push((r >> 6) | 192, (63 & r) | 128);
          } else if (r < 65536) {
            if ((t -= 3) < 0) break;
            o.push((r >> 12) | 224, ((r >> 6) & 63) | 128, (63 & r) | 128);
          } else if (r < 1114112) {
            if ((t -= 4) < 0) break;
            o.push(
              (r >> 18) | 240,
              ((r >> 12) & 63) | 128,
              ((r >> 6) & 63) | 128,
              (63 & r) | 128
            );
          } else throw Error("Invalid code point");
        }
        return o;
      }
      function M(e) {
        return n.toByteArray(
          (function (e) {
            if ((e = (e = e.split("=")[0]).trim().replace(R, "")).length < 2)
              return "";
            for (; e.length % 4 != 0; ) e += "=";
            return e;
          })(e)
        );
      }
      function j(e, t, r, n) {
        let i;
        for (i = 0; i < n && !(i + r >= t.length) && !(i >= e.length); ++i)
          t[i + r] = e[i];
        return i;
      }
      function F(e, t) {
        return (
          e instanceof t ||
          (null != e &&
            null != e.constructor &&
            null != e.constructor.name &&
            e.constructor.name === t.name)
        );
      }
      let L = (function () {
        let e = "0123456789abcdef",
          t = Array(256);
        for (let r = 0; r < 16; ++r) {
          let n = 16 * r;
          for (let i = 0; i < 16; ++i) t[n + i] = e[r] + e[i];
        }
        return t;
      })();
      function D(e) {
        return "undefined" == typeof BigInt ? U : e;
      }
      function U() {
        throw Error("BigInt not supported");
      }
    },
    34098: (e, t, r) => {
      "use strict";
      var n = r(25841),
        i = r(69356),
        o = r(74160),
        a = r(23767);
      e.exports = a || n.call(o, i);
    },
    69356: (e) => {
      "use strict";
      e.exports = Function.prototype.apply;
    },
    74160: (e) => {
      "use strict";
      e.exports = Function.prototype.call;
    },
    6292: (e, t, r) => {
      "use strict";
      var n = r(25841),
        i = r(87095),
        o = r(74160),
        a = r(34098);
      e.exports = function (e) {
        if (e.length < 1 || "function" != typeof e[0])
          throw new i("a function is required");
        return a(n, o, e);
      };
    },
    23767: (e) => {
      "use strict";
      e.exports = "undefined" != typeof Reflect && Reflect && Reflect.apply;
    },
    63156: (e, t, r) => {
      "use strict";
      var n = r(82027),
        i = r(6292),
        o = i([n("%String.prototype.indexOf%")]);
      e.exports = function (e, t) {
        var r = n(e, !!t);
        return "function" == typeof r && o(e, ".prototype.") > -1 ? i([r]) : r;
      };
    },
    46798: (e, t) => {
      !(function (e) {
        "undefined" == typeof DO_NOT_EXPORT_CRC ? e(t) : e({});
      })(function (e) {
        e.version = "1.2.2";
        var t = (function () {
            for (var e = 0, t = Array(256), r = 0; 256 != r; ++r)
              (e =
                1 &
                (e =
                  1 &
                  (e =
                    1 &
                    (e =
                      1 &
                      (e =
                        1 &
                        (e =
                          1 &
                          (e =
                            1 &
                            (e =
                              1 & (e = r) ? -0x12477ce0 ^ (e >>> 1) : e >>> 1)
                              ? -0x12477ce0 ^ (e >>> 1)
                              : e >>> 1)
                            ? -0x12477ce0 ^ (e >>> 1)
                            : e >>> 1)
                          ? -0x12477ce0 ^ (e >>> 1)
                          : e >>> 1)
                        ? -0x12477ce0 ^ (e >>> 1)
                        : e >>> 1)
                      ? -0x12477ce0 ^ (e >>> 1)
                      : e >>> 1)
                    ? -0x12477ce0 ^ (e >>> 1)
                    : e >>> 1)
                  ? -0x12477ce0 ^ (e >>> 1)
                  : e >>> 1),
                (t[r] = e);
            return "undefined" != typeof Int32Array ? new Int32Array(t) : t;
          })(),
          r = (function (e) {
            var t = 0,
              r = 0,
              n = 0,
              i =
                "undefined" != typeof Int32Array
                  ? new Int32Array(4096)
                  : Array(4096);
            for (n = 0; 256 != n; ++n) i[n] = e[n];
            for (n = 0; 256 != n; ++n)
              for (r = e[n], t = 256 + n; t < 4096; t += 256)
                r = i[t] = (r >>> 8) ^ e[255 & r];
            var o = [];
            for (n = 1; 16 != n; ++n)
              o[n - 1] =
                "undefined" != typeof Int32Array
                  ? i.subarray(256 * n, 256 * n + 256)
                  : i.slice(256 * n, 256 * n + 256);
            return o;
          })(t),
          n = r[0],
          i = r[1],
          o = r[2],
          a = r[3],
          s = r[4],
          l = r[5],
          u = r[6],
          c = r[7],
          d = r[8],
          f = r[9],
          h = r[10],
          p = r[11],
          m = r[12],
          g = r[13],
          y = r[14];
        (e.table = t),
          (e.bstr = function (e, r) {
            for (var n = -1 ^ r, i = 0, o = e.length; i < o; )
              n = (n >>> 8) ^ t[(n ^ e.charCodeAt(i++)) & 255];
            return ~n;
          }),
          (e.buf = function (e, r) {
            for (var b = -1 ^ r, v = e.length - 15, w = 0; w < v; )
              b =
                y[e[w++] ^ (255 & b)] ^
                g[e[w++] ^ ((b >> 8) & 255)] ^
                m[e[w++] ^ ((b >> 16) & 255)] ^
                p[e[w++] ^ (b >>> 24)] ^
                h[e[w++]] ^
                f[e[w++]] ^
                d[e[w++]] ^
                c[e[w++]] ^
                u[e[w++]] ^
                l[e[w++]] ^
                s[e[w++]] ^
                a[e[w++]] ^
                o[e[w++]] ^
                i[e[w++]] ^
                n[e[w++]] ^
                t[e[w++]];
            for (v += 15; w < v; ) b = (b >>> 8) ^ t[(b ^ e[w++]) & 255];
            return ~b;
          }),
          (e.str = function (e, r) {
            for (var n = -1 ^ r, i = 0, o = e.length, a = 0, s = 0; i < o; )
              (a = e.charCodeAt(i++)) < 128
                ? (n = (n >>> 8) ^ t[(n ^ a) & 255])
                : a < 2048
                ? (n =
                    ((n =
                      (n >>> 8) ^ t[(n ^ (192 | ((a >> 6) & 31))) & 255]) >>>
                      8) ^
                    t[(n ^ (128 | (63 & a))) & 255])
                : a >= 55296 && a < 57344
                ? ((a = (1023 & a) + 64),
                  (s = 1023 & e.charCodeAt(i++)),
                  (n =
                    ((n =
                      ((n =
                        ((n =
                          (n >>> 8) ^ t[(n ^ (240 | ((a >> 8) & 7))) & 255]) >>>
                          8) ^
                        t[(n ^ (128 | ((a >> 2) & 63))) & 255]) >>>
                        8) ^
                      t[
                        (n ^ (128 | ((s >> 6) & 15) | ((3 & a) << 4))) & 255
                      ]) >>>
                      8) ^
                    t[(n ^ (128 | (63 & s))) & 255]))
                : (n =
                    ((n =
                      ((n =
                        (n >>> 8) ^ t[(n ^ (224 | ((a >> 12) & 15))) & 255]) >>>
                        8) ^
                      t[(n ^ (128 | ((a >> 6) & 63))) & 255]) >>>
                      8) ^
                    t[(n ^ (128 | (63 & a))) & 255]);
            return ~n;
          });
      });
    },
    95647: (e, t, r) => {
      var n =
          ("undefined" != typeof globalThis && globalThis) ||
          ("undefined" != typeof self && self) ||
          (void 0 !== r.g && r.g),
        i = (function () {
          function e() {
            (this.fetch = !1), (this.DOMException = n.DOMException);
          }
          return (e.prototype = n), new e();
        })();
      !(function (e) {
        !(function (t) {
          var n =
              (void 0 !== e && e) ||
              ("undefined" != typeof self && self) ||
              (void 0 !== r.g && r.g) ||
              {},
            i = {
              searchParams: "URLSearchParams" in n,
              iterable: "Symbol" in n && "iterator" in Symbol,
              blob:
                "FileReader" in n &&
                "Blob" in n &&
                (function () {
                  try {
                    return new Blob(), !0;
                  } catch (e) {
                    return !1;
                  }
                })(),
              formData: "FormData" in n,
              arrayBuffer: "ArrayBuffer" in n,
            };
          if (i.arrayBuffer)
            var o = [
                "[object Int8Array]",
                "[object Uint8Array]",
                "[object Uint8ClampedArray]",
                "[object Int16Array]",
                "[object Uint16Array]",
                "[object Int32Array]",
                "[object Uint32Array]",
                "[object Float32Array]",
                "[object Float64Array]",
              ],
              a =
                ArrayBuffer.isView ||
                function (e) {
                  return e && o.indexOf(Object.prototype.toString.call(e)) > -1;
                };
          function s(e) {
            if (
              ("string" != typeof e && (e = String(e)),
              /[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(e) || "" === e)
            )
              throw TypeError(
                'Invalid character in header field name: "' + e + '"'
              );
            return e.toLowerCase();
          }
          function l(e) {
            return "string" != typeof e && (e = String(e)), e;
          }
          function u(e) {
            var t = {
              next: function () {
                var t = e.shift();
                return { done: void 0 === t, value: t };
              },
            };
            return (
              i.iterable &&
                (t[Symbol.iterator] = function () {
                  return t;
                }),
              t
            );
          }
          function c(e) {
            (this.map = {}),
              e instanceof c
                ? e.forEach(function (e, t) {
                    this.append(t, e);
                  }, this)
                : Array.isArray(e)
                ? e.forEach(function (e) {
                    if (2 != e.length)
                      throw TypeError(
                        "Headers constructor: expected name/value pair to be length 2, found" +
                          e.length
                      );
                    this.append(e[0], e[1]);
                  }, this)
                : e &&
                  Object.getOwnPropertyNames(e).forEach(function (t) {
                    this.append(t, e[t]);
                  }, this);
          }
          function d(e) {
            if (!e._noBody) {
              if (e.bodyUsed) return Promise.reject(TypeError("Already read"));
              e.bodyUsed = !0;
            }
          }
          function f(e) {
            return new Promise(function (t, r) {
              (e.onload = function () {
                t(e.result);
              }),
                (e.onerror = function () {
                  r(e.error);
                });
            });
          }
          function h(e) {
            var t = new FileReader(),
              r = f(t);
            return t.readAsArrayBuffer(e), r;
          }
          function p(e) {
            if (e.slice) return e.slice(0);
            var t = new Uint8Array(e.byteLength);
            return t.set(new Uint8Array(e)), t.buffer;
          }
          function m() {
            return (
              (this.bodyUsed = !1),
              (this._initBody = function (e) {
                if (
                  ((this.bodyUsed = this.bodyUsed), (this._bodyInit = e), e)
                ) {
                  if ("string" == typeof e) this._bodyText = e;
                  else if (i.blob && Blob.prototype.isPrototypeOf(e))
                    this._bodyBlob = e;
                  else if (i.formData && FormData.prototype.isPrototypeOf(e))
                    this._bodyFormData = e;
                  else if (
                    i.searchParams &&
                    URLSearchParams.prototype.isPrototypeOf(e)
                  )
                    this._bodyText = e.toString();
                  else {
                    var t;
                    i.arrayBuffer &&
                    i.blob &&
                    (t = e) &&
                    DataView.prototype.isPrototypeOf(t)
                      ? ((this._bodyArrayBuffer = p(e.buffer)),
                        (this._bodyInit = new Blob([this._bodyArrayBuffer])))
                      : i.arrayBuffer &&
                        (ArrayBuffer.prototype.isPrototypeOf(e) || a(e))
                      ? (this._bodyArrayBuffer = p(e))
                      : (this._bodyText = e =
                          Object.prototype.toString.call(e));
                  }
                } else (this._noBody = !0), (this._bodyText = "");
                !this.headers.get("content-type") &&
                  ("string" == typeof e
                    ? this.headers.set(
                        "content-type",
                        "text/plain;charset=UTF-8"
                      )
                    : this._bodyBlob && this._bodyBlob.type
                    ? this.headers.set("content-type", this._bodyBlob.type)
                    : i.searchParams &&
                      URLSearchParams.prototype.isPrototypeOf(e) &&
                      this.headers.set(
                        "content-type",
                        "application/x-www-form-urlencoded;charset=UTF-8"
                      ));
              }),
              i.blob &&
                (this.blob = function () {
                  var e = d(this);
                  if (e) return e;
                  if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
                  if (this._bodyArrayBuffer)
                    return Promise.resolve(new Blob([this._bodyArrayBuffer]));
                  if (!this._bodyFormData)
                    return Promise.resolve(new Blob([this._bodyText]));
                  throw Error("could not read FormData body as blob");
                }),
              (this.arrayBuffer = function () {
                if (this._bodyArrayBuffer)
                  return (
                    d(this) ||
                    (ArrayBuffer.isView(this._bodyArrayBuffer)
                      ? Promise.resolve(
                          this._bodyArrayBuffer.buffer.slice(
                            this._bodyArrayBuffer.byteOffset,
                            this._bodyArrayBuffer.byteOffset +
                              this._bodyArrayBuffer.byteLength
                          )
                        )
                      : Promise.resolve(this._bodyArrayBuffer))
                  );
                if (i.blob) return this.blob().then(h);
                throw Error("could not read as ArrayBuffer");
              }),
              (this.text = function () {
                var e,
                  t,
                  r,
                  n,
                  i,
                  o = d(this);
                if (o) return o;
                if (this._bodyBlob)
                  return (
                    (e = this._bodyBlob),
                    (r = f((t = new FileReader()))),
                    (i = (n = /charset=([A-Za-z0-9_-]+)/.exec(e.type))
                      ? n[1]
                      : "utf-8"),
                    t.readAsText(e, i),
                    r
                  );
                if (this._bodyArrayBuffer)
                  return Promise.resolve(
                    (function (e) {
                      for (
                        var t = new Uint8Array(e), r = Array(t.length), n = 0;
                        n < t.length;
                        n++
                      )
                        r[n] = String.fromCharCode(t[n]);
                      return r.join("");
                    })(this._bodyArrayBuffer)
                  );
                if (!this._bodyFormData) return Promise.resolve(this._bodyText);
                throw Error("could not read FormData body as text");
              }),
              i.formData &&
                (this.formData = function () {
                  return this.text().then(b);
                }),
              (this.json = function () {
                return this.text().then(JSON.parse);
              }),
              this
            );
          }
          (c.prototype.append = function (e, t) {
            (e = s(e)), (t = l(t));
            var r = this.map[e];
            this.map[e] = r ? r + ", " + t : t;
          }),
            (c.prototype.delete = function (e) {
              delete this.map[s(e)];
            }),
            (c.prototype.get = function (e) {
              return (e = s(e)), this.has(e) ? this.map[e] : null;
            }),
            (c.prototype.has = function (e) {
              return this.map.hasOwnProperty(s(e));
            }),
            (c.prototype.set = function (e, t) {
              this.map[s(e)] = l(t);
            }),
            (c.prototype.forEach = function (e, t) {
              for (var r in this.map)
                this.map.hasOwnProperty(r) && e.call(t, this.map[r], r, this);
            }),
            (c.prototype.keys = function () {
              var e = [];
              return (
                this.forEach(function (t, r) {
                  e.push(r);
                }),
                u(e)
              );
            }),
            (c.prototype.values = function () {
              var e = [];
              return (
                this.forEach(function (t) {
                  e.push(t);
                }),
                u(e)
              );
            }),
            (c.prototype.entries = function () {
              var e = [];
              return (
                this.forEach(function (t, r) {
                  e.push([r, t]);
                }),
                u(e)
              );
            }),
            i.iterable && (c.prototype[Symbol.iterator] = c.prototype.entries);
          var g = [
            "CONNECT",
            "DELETE",
            "GET",
            "HEAD",
            "OPTIONS",
            "PATCH",
            "POST",
            "PUT",
            "TRACE",
          ];
          function y(e, t) {
            if (!(this instanceof y))
              throw TypeError(
                'Please use the "new" operator, this DOM object constructor cannot be called as a function.'
              );
            var r,
              i,
              o = (t = t || {}).body;
            if (e instanceof y) {
              if (e.bodyUsed) throw TypeError("Already read");
              (this.url = e.url),
                (this.credentials = e.credentials),
                t.headers || (this.headers = new c(e.headers)),
                (this.method = e.method),
                (this.mode = e.mode),
                (this.signal = e.signal),
                o ||
                  null == e._bodyInit ||
                  ((o = e._bodyInit), (e.bodyUsed = !0));
            } else this.url = String(e);
            if (
              ((this.credentials =
                t.credentials || this.credentials || "same-origin"),
              (t.headers || !this.headers) && (this.headers = new c(t.headers)),
              (this.method =
                ((i = (r = t.method || this.method || "GET").toUpperCase()),
                g.indexOf(i) > -1 ? i : r)),
              (this.mode = t.mode || this.mode || null),
              (this.signal =
                t.signal ||
                this.signal ||
                (function () {
                  if ("AbortController" in n)
                    return new AbortController().signal;
                })()),
              (this.referrer = null),
              ("GET" === this.method || "HEAD" === this.method) && o)
            )
              throw TypeError("Body not allowed for GET or HEAD requests");
            if (
              (this._initBody(o),
              ("GET" === this.method || "HEAD" === this.method) &&
                ("no-store" === t.cache || "no-cache" === t.cache))
            ) {
              var a = /([?&])_=[^&]*/;
              a.test(this.url)
                ? (this.url = this.url.replace(
                    a,
                    "$1_=" + new Date().getTime()
                  ))
                : (this.url +=
                    (/\?/.test(this.url) ? "&" : "?") +
                    "_=" +
                    new Date().getTime());
            }
          }
          function b(e) {
            var t = new FormData();
            return (
              e
                .trim()
                .split("&")
                .forEach(function (e) {
                  if (e) {
                    var r = e.split("="),
                      n = r.shift().replace(/\+/g, " "),
                      i = r.join("=").replace(/\+/g, " ");
                    t.append(decodeURIComponent(n), decodeURIComponent(i));
                  }
                }),
              t
            );
          }
          function v(e, t) {
            if (!(this instanceof v))
              throw TypeError(
                'Please use the "new" operator, this DOM object constructor cannot be called as a function.'
              );
            if (
              (t || (t = {}),
              (this.type = "default"),
              (this.status = void 0 === t.status ? 200 : t.status),
              this.status < 200 || this.status > 599)
            )
              throw RangeError(
                "Failed to construct 'Response': The status provided (0) is outside the range [200, 599]."
              );
            (this.ok = this.status >= 200 && this.status < 300),
              (this.statusText =
                void 0 === t.statusText ? "" : "" + t.statusText),
              (this.headers = new c(t.headers)),
              (this.url = t.url || ""),
              this._initBody(e);
          }
          (y.prototype.clone = function () {
            return new y(this, { body: this._bodyInit });
          }),
            m.call(y.prototype),
            m.call(v.prototype),
            (v.prototype.clone = function () {
              return new v(this._bodyInit, {
                status: this.status,
                statusText: this.statusText,
                headers: new c(this.headers),
                url: this.url,
              });
            }),
            (v.error = function () {
              var e = new v(null, { status: 200, statusText: "" });
              return (e.ok = !1), (e.status = 0), (e.type = "error"), e;
            });
          var w = [301, 302, 303, 307, 308];
          (v.redirect = function (e, t) {
            if (-1 === w.indexOf(t)) throw RangeError("Invalid status code");
            return new v(null, { status: t, headers: { location: e } });
          }),
            (t.DOMException = n.DOMException);
          try {
            new t.DOMException();
          } catch (e) {
            (t.DOMException = function (e, t) {
              (this.message = e), (this.name = t);
              var r = Error(e);
              this.stack = r.stack;
            }),
              (t.DOMException.prototype = Object.create(Error.prototype)),
              (t.DOMException.prototype.constructor = t.DOMException);
          }
          function x(e, r) {
            return new Promise(function (o, a) {
              var u = new y(e, r);
              if (u.signal && u.signal.aborted)
                return a(new t.DOMException("Aborted", "AbortError"));
              var d = new XMLHttpRequest();
              function f() {
                d.abort();
              }
              if (
                ((d.onload = function () {
                  var e,
                    t,
                    r = {
                      statusText: d.statusText,
                      headers:
                        ((e = d.getAllResponseHeaders() || ""),
                        (t = new c()),
                        e
                          .replace(/\r?\n[\t ]+/g, " ")
                          .split("\r")
                          .map(function (e) {
                            return 0 === e.indexOf("\n")
                              ? e.substr(1, e.length)
                              : e;
                          })
                          .forEach(function (e) {
                            var r = e.split(":"),
                              n = r.shift().trim();
                            if (n) {
                              var i = r.join(":").trim();
                              try {
                                t.append(n, i);
                              } catch (e) {
                                console.warn("Response " + e.message);
                              }
                            }
                          }),
                        t),
                    };
                  0 === u.url.indexOf("file://") &&
                  (d.status < 200 || d.status > 599)
                    ? (r.status = 200)
                    : (r.status = d.status),
                    (r.url =
                      "responseURL" in d
                        ? d.responseURL
                        : r.headers.get("X-Request-URL"));
                  var n = "response" in d ? d.response : d.responseText;
                  setTimeout(function () {
                    o(new v(n, r));
                  }, 0);
                }),
                (d.onerror = function () {
                  setTimeout(function () {
                    a(TypeError("Network request failed"));
                  }, 0);
                }),
                (d.ontimeout = function () {
                  setTimeout(function () {
                    a(TypeError("Network request timed out"));
                  }, 0);
                }),
                (d.onabort = function () {
                  setTimeout(function () {
                    a(new t.DOMException("Aborted", "AbortError"));
                  }, 0);
                }),
                d.open(
                  u.method,
                  (function (e) {
                    try {
                      return "" === e && n.location.href ? n.location.href : e;
                    } catch (t) {
                      return e;
                    }
                  })(u.url),
                  !0
                ),
                "include" === u.credentials
                  ? (d.withCredentials = !0)
                  : "omit" === u.credentials && (d.withCredentials = !1),
                "responseType" in d &&
                  (i.blob
                    ? (d.responseType = "blob")
                    : i.arrayBuffer && (d.responseType = "arraybuffer")),
                r &&
                  "object" == typeof r.headers &&
                  !(
                    r.headers instanceof c ||
                    (n.Headers && r.headers instanceof n.Headers)
                  ))
              ) {
                var h = [];
                Object.getOwnPropertyNames(r.headers).forEach(function (e) {
                  h.push(s(e)), d.setRequestHeader(e, l(r.headers[e]));
                }),
                  u.headers.forEach(function (e, t) {
                    -1 === h.indexOf(t) && d.setRequestHeader(t, e);
                  });
              } else
                u.headers.forEach(function (e, t) {
                  d.setRequestHeader(t, e);
                });
              u.signal &&
                (u.signal.addEventListener("abort", f),
                (d.onreadystatechange = function () {
                  4 === d.readyState &&
                    u.signal.removeEventListener("abort", f);
                })),
                d.send(void 0 === u._bodyInit ? null : u._bodyInit);
            });
          }
          (x.polyfill = !0),
            n.fetch ||
              ((n.fetch = x),
              (n.Headers = c),
              (n.Request = y),
              (n.Response = v)),
            (t.Headers = c),
            (t.Request = y),
            (t.Response = v),
            (t.fetch = x);
        })({});
      })(i),
        (i.fetch.ponyfill = !0),
        delete i.fetch.polyfill;
      var o = n.fetch ? n : i;
      ((t = o.fetch).default = o.fetch),
        (t.fetch = o.fetch),
        (t.Headers = o.Headers),
        (t.Request = o.Request),
        (t.Response = o.Response),
        (e.exports = t);
    },
    66016: (e, t, r) => {
      "use strict";
      var n,
        i = r(6292),
        o = r(25415);
      try {
        n = [].__proto__ === Array.prototype;
      } catch (e) {
        if (
          !e ||
          "object" != typeof e ||
          !("code" in e) ||
          "ERR_PROTO_ACCESS" !== e.code
        )
          throw e;
      }
      var a = !!n && o && o(Object.prototype, "__proto__"),
        s = Object,
        l = s.getPrototypeOf;
      e.exports =
        a && "function" == typeof a.get
          ? i([a.get])
          : "function" == typeof l &&
            function (e) {
              return l(null == e ? e : s(e));
            };
    },
    27051: (e) => {
      "use strict";
      var t = Object.defineProperty || !1;
      if (t)
        try {
          t({}, "a", { value: 1 });
        } catch (e) {
          t = !1;
        }
      e.exports = t;
    },
    34069: (e) => {
      "use strict";
      e.exports = EvalError;
    },
    23385: (e) => {
      "use strict";
      e.exports = Error;
    },
    44940: (e) => {
      "use strict";
      e.exports = RangeError;
    },
    32044: (e) => {
      "use strict";
      e.exports = ReferenceError;
    },
    52828: (e) => {
      "use strict";
      e.exports = SyntaxError;
    },
    87095: (e) => {
      "use strict";
      e.exports = TypeError;
    },
    68535: (e) => {
      "use strict";
      e.exports = URIError;
    },
    72490: (e) => {
      "use strict";
      e.exports = Object;
    },
    25778: (e) => {
      "use strict";
      var t = Object.prototype.hasOwnProperty,
        r = "~";
      function n() {}
      function i(e, t, r) {
        (this.fn = e), (this.context = t), (this.once = r || !1);
      }
      function o(e, t, n, o, a) {
        if ("function" != typeof n)
          throw TypeError("The listener must be a function");
        var s = new i(n, o || e, a),
          l = r ? r + t : t;
        return (
          e._events[l]
            ? e._events[l].fn
              ? (e._events[l] = [e._events[l], s])
              : e._events[l].push(s)
            : ((e._events[l] = s), e._eventsCount++),
          e
        );
      }
      function a(e, t) {
        0 == --e._eventsCount ? (e._events = new n()) : delete e._events[t];
      }
      function s() {
        (this._events = new n()), (this._eventsCount = 0);
      }
      Object.create &&
        ((n.prototype = Object.create(null)), new n().__proto__ || (r = !1)),
        (s.prototype.eventNames = function () {
          var e,
            n,
            i = [];
          if (0 === this._eventsCount) return i;
          for (n in (e = this._events))
            t.call(e, n) && i.push(r ? n.slice(1) : n);
          return Object.getOwnPropertySymbols
            ? i.concat(Object.getOwnPropertySymbols(e))
            : i;
        }),
        (s.prototype.listeners = function (e) {
          var t = r ? r + e : e,
            n = this._events[t];
          if (!n) return [];
          if (n.fn) return [n.fn];
          for (var i = 0, o = n.length, a = Array(o); i < o; i++)
            a[i] = n[i].fn;
          return a;
        }),
        (s.prototype.listenerCount = function (e) {
          var t = r ? r + e : e,
            n = this._events[t];
          return n ? (n.fn ? 1 : n.length) : 0;
        }),
        (s.prototype.emit = function (e, t, n, i, o, a) {
          var s = r ? r + e : e;
          if (!this._events[s]) return !1;
          var l,
            u,
            c = this._events[s],
            d = arguments.length;
          if (c.fn) {
            switch ((c.once && this.removeListener(e, c.fn, void 0, !0), d)) {
              case 1:
                return c.fn.call(c.context), !0;
              case 2:
                return c.fn.call(c.context, t), !0;
              case 3:
                return c.fn.call(c.context, t, n), !0;
              case 4:
                return c.fn.call(c.context, t, n, i), !0;
              case 5:
                return c.fn.call(c.context, t, n, i, o), !0;
              case 6:
                return c.fn.call(c.context, t, n, i, o, a), !0;
            }
            for (u = 1, l = Array(d - 1); u < d; u++) l[u - 1] = arguments[u];
            c.fn.apply(c.context, l);
          } else {
            var f,
              h = c.length;
            for (u = 0; u < h; u++)
              switch (
                (c[u].once && this.removeListener(e, c[u].fn, void 0, !0), d)
              ) {
                case 1:
                  c[u].fn.call(c[u].context);
                  break;
                case 2:
                  c[u].fn.call(c[u].context, t);
                  break;
                case 3:
                  c[u].fn.call(c[u].context, t, n);
                  break;
                case 4:
                  c[u].fn.call(c[u].context, t, n, i);
                  break;
                default:
                  if (!l)
                    for (f = 1, l = Array(d - 1); f < d; f++)
                      l[f - 1] = arguments[f];
                  c[u].fn.apply(c[u].context, l);
              }
          }
          return !0;
        }),
        (s.prototype.on = function (e, t, r) {
          return o(this, e, t, r, !1);
        }),
        (s.prototype.once = function (e, t, r) {
          return o(this, e, t, r, !0);
        }),
        (s.prototype.removeListener = function (e, t, n, i) {
          var o = r ? r + e : e;
          if (!this._events[o]) return this;
          if (!t) return a(this, o), this;
          var s = this._events[o];
          if (s.fn)
            s.fn !== t ||
              (i && !s.once) ||
              (n && s.context !== n) ||
              a(this, o);
          else {
            for (var l = 0, u = [], c = s.length; l < c; l++)
              (s[l].fn !== t ||
                (i && !s[l].once) ||
                (n && s[l].context !== n)) &&
                u.push(s[l]);
            u.length
              ? (this._events[o] = 1 === u.length ? u[0] : u)
              : a(this, o);
          }
          return this;
        }),
        (s.prototype.removeAllListeners = function (e) {
          var t;
          return (
            e
              ? ((t = r ? r + e : e), this._events[t] && a(this, t))
              : ((this._events = new n()), (this._eventsCount = 0)),
            this
          );
        }),
        (s.prototype.off = s.prototype.removeListener),
        (s.prototype.addListener = s.prototype.on),
        (s.prefixed = r),
        (s.EventEmitter = s),
        (e.exports = s);
    },
    95349: (e) => {
      "use strict";
      var t = Object.prototype.toString,
        r = Math.max,
        n = function (e, t) {
          for (var r = [], n = 0; n < e.length; n += 1) r[n] = e[n];
          for (var i = 0; i < t.length; i += 1) r[i + e.length] = t[i];
          return r;
        },
        i = function (e, t) {
          for (var r = [], n = t || 0, i = 0; n < e.length; n += 1, i += 1)
            r[i] = e[n];
          return r;
        },
        o = function (e, t) {
          for (var r = "", n = 0; n < e.length; n += 1)
            (r += e[n]), n + 1 < e.length && (r += t);
          return r;
        };
      e.exports = function (e) {
        var a,
          s = this;
        if ("function" != typeof s || "[object Function]" !== t.apply(s))
          throw TypeError(
            "Function.prototype.bind called on incompatible " + s
          );
        for (
          var l = i(arguments, 1), u = r(0, s.length - l.length), c = [], d = 0;
          d < u;
          d++
        )
          c[d] = "$" + d;
        if (
          ((a = Function(
            "binder",
            "return function (" +
              o(c, ",") +
              "){ return binder.apply(this,arguments); }"
          )(function () {
            if (this instanceof a) {
              var t = s.apply(this, n(l, arguments));
              return Object(t) === t ? t : this;
            }
            return s.apply(e, n(l, arguments));
          })),
          s.prototype)
        ) {
          var f = function () {};
          (f.prototype = s.prototype),
            (a.prototype = new f()),
            (f.prototype = null);
        }
        return a;
      };
    },
    25841: (e, t, r) => {
      "use strict";
      var n = r(95349);
      e.exports = Function.prototype.bind || n;
    },
    82027: (e, t, r) => {
      "use strict";
      var n,
        i = r(72490),
        o = r(23385),
        a = r(34069),
        s = r(44940),
        l = r(32044),
        u = r(52828),
        c = r(87095),
        d = r(68535),
        f = r(52364),
        h = r(39390),
        p = r(48526),
        m = r(12),
        g = r(52006),
        y = r(79312),
        b = r(39073),
        v = Function,
        w = function (e) {
          try {
            return v('"use strict"; return (' + e + ").constructor;")();
          } catch (e) {}
        },
        x = r(25415),
        A = r(27051),
        E = function () {
          throw new c();
        },
        k = x
          ? (function () {
              try {
                return arguments.callee, E;
              } catch (e) {
                try {
                  return x(arguments, "callee").get;
                } catch (e) {
                  return E;
                }
              }
            })()
          : E,
        I = r(8797)(),
        S = r(57618),
        P = r(54674),
        T = r(34492),
        C = r(69356),
        O = r(74160),
        _ = {},
        B = "undefined" != typeof Uint8Array && S ? S(Uint8Array) : n,
        R = {
          __proto__: null,
          "%AggregateError%":
            "undefined" == typeof AggregateError ? n : AggregateError,
          "%Array%": Array,
          "%ArrayBuffer%": "undefined" == typeof ArrayBuffer ? n : ArrayBuffer,
          "%ArrayIteratorPrototype%": I && S ? S([][Symbol.iterator]()) : n,
          "%AsyncFromSyncIteratorPrototype%": n,
          "%AsyncFunction%": _,
          "%AsyncGenerator%": _,
          "%AsyncGeneratorFunction%": _,
          "%AsyncIteratorPrototype%": _,
          "%Atomics%": "undefined" == typeof Atomics ? n : Atomics,
          "%BigInt%": "undefined" == typeof BigInt ? n : BigInt,
          "%BigInt64Array%":
            "undefined" == typeof BigInt64Array ? n : BigInt64Array,
          "%BigUint64Array%":
            "undefined" == typeof BigUint64Array ? n : BigUint64Array,
          "%Boolean%": Boolean,
          "%DataView%": "undefined" == typeof DataView ? n : DataView,
          "%Date%": Date,
          "%decodeURI%": decodeURI,
          "%decodeURIComponent%": decodeURIComponent,
          "%encodeURI%": encodeURI,
          "%encodeURIComponent%": encodeURIComponent,
          "%Error%": o,
          "%eval%": eval,
          "%EvalError%": a,
          "%Float16Array%":
            "undefined" == typeof Float16Array ? n : Float16Array,
          "%Float32Array%":
            "undefined" == typeof Float32Array ? n : Float32Array,
          "%Float64Array%":
            "undefined" == typeof Float64Array ? n : Float64Array,
          "%FinalizationRegistry%":
            "undefined" == typeof FinalizationRegistry
              ? n
              : FinalizationRegistry,
          "%Function%": v,
          "%GeneratorFunction%": _,
          "%Int8Array%": "undefined" == typeof Int8Array ? n : Int8Array,
          "%Int16Array%": "undefined" == typeof Int16Array ? n : Int16Array,
          "%Int32Array%": "undefined" == typeof Int32Array ? n : Int32Array,
          "%isFinite%": isFinite,
          "%isNaN%": isNaN,
          "%IteratorPrototype%": I && S ? S(S([][Symbol.iterator]())) : n,
          "%JSON%": "object" == typeof JSON ? JSON : n,
          "%Map%": "undefined" == typeof Map ? n : Map,
          "%MapIteratorPrototype%":
            "undefined" != typeof Map && I && S
              ? S(new Map()[Symbol.iterator]())
              : n,
          "%Math%": Math,
          "%Number%": Number,
          "%Object%": i,
          "%Object.getOwnPropertyDescriptor%": x,
          "%parseFloat%": parseFloat,
          "%parseInt%": parseInt,
          "%Promise%": "undefined" == typeof Promise ? n : Promise,
          "%Proxy%": "undefined" == typeof Proxy ? n : Proxy,
          "%RangeError%": s,
          "%ReferenceError%": l,
          "%Reflect%": "undefined" == typeof Reflect ? n : Reflect,
          "%RegExp%": RegExp,
          "%Set%": "undefined" == typeof Set ? n : Set,
          "%SetIteratorPrototype%":
            "undefined" != typeof Set && I && S
              ? S(new Set()[Symbol.iterator]())
              : n,
          "%SharedArrayBuffer%":
            "undefined" == typeof SharedArrayBuffer ? n : SharedArrayBuffer,
          "%String%": String,
          "%StringIteratorPrototype%": I && S ? S(""[Symbol.iterator]()) : n,
          "%Symbol%": I ? Symbol : n,
          "%SyntaxError%": u,
          "%ThrowTypeError%": k,
          "%TypedArray%": B,
          "%TypeError%": c,
          "%Uint8Array%": "undefined" == typeof Uint8Array ? n : Uint8Array,
          "%Uint8ClampedArray%":
            "undefined" == typeof Uint8ClampedArray ? n : Uint8ClampedArray,
          "%Uint16Array%": "undefined" == typeof Uint16Array ? n : Uint16Array,
          "%Uint32Array%": "undefined" == typeof Uint32Array ? n : Uint32Array,
          "%URIError%": d,
          "%WeakMap%": "undefined" == typeof WeakMap ? n : WeakMap,
          "%WeakRef%": "undefined" == typeof WeakRef ? n : WeakRef,
          "%WeakSet%": "undefined" == typeof WeakSet ? n : WeakSet,
          "%Function.prototype.call%": O,
          "%Function.prototype.apply%": C,
          "%Object.defineProperty%": A,
          "%Object.getPrototypeOf%": P,
          "%Math.abs%": f,
          "%Math.floor%": h,
          "%Math.max%": p,
          "%Math.min%": m,
          "%Math.pow%": g,
          "%Math.round%": y,
          "%Math.sign%": b,
          "%Reflect.getPrototypeOf%": T,
        };
      if (S)
        try {
          null.error;
        } catch (e) {
          var N = S(S(e));
          R["%Error.prototype%"] = N;
        }
      var M = function e(t) {
          var r;
          if ("%AsyncFunction%" === t) r = w("async function () {}");
          else if ("%GeneratorFunction%" === t) r = w("function* () {}");
          else if ("%AsyncGeneratorFunction%" === t)
            r = w("async function* () {}");
          else if ("%AsyncGenerator%" === t) {
            var n = e("%AsyncGeneratorFunction%");
            n && (r = n.prototype);
          } else if ("%AsyncIteratorPrototype%" === t) {
            var i = e("%AsyncGenerator%");
            i && S && (r = S(i.prototype));
          }
          return (R[t] = r), r;
        },
        j = {
          __proto__: null,
          "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
          "%ArrayPrototype%": ["Array", "prototype"],
          "%ArrayProto_entries%": ["Array", "prototype", "entries"],
          "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
          "%ArrayProto_keys%": ["Array", "prototype", "keys"],
          "%ArrayProto_values%": ["Array", "prototype", "values"],
          "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
          "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
          "%AsyncGeneratorPrototype%": [
            "AsyncGeneratorFunction",
            "prototype",
            "prototype",
          ],
          "%BooleanPrototype%": ["Boolean", "prototype"],
          "%DataViewPrototype%": ["DataView", "prototype"],
          "%DatePrototype%": ["Date", "prototype"],
          "%ErrorPrototype%": ["Error", "prototype"],
          "%EvalErrorPrototype%": ["EvalError", "prototype"],
          "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
          "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
          "%FunctionPrototype%": ["Function", "prototype"],
          "%Generator%": ["GeneratorFunction", "prototype"],
          "%GeneratorPrototype%": [
            "GeneratorFunction",
            "prototype",
            "prototype",
          ],
          "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
          "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
          "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
          "%JSONParse%": ["JSON", "parse"],
          "%JSONStringify%": ["JSON", "stringify"],
          "%MapPrototype%": ["Map", "prototype"],
          "%NumberPrototype%": ["Number", "prototype"],
          "%ObjectPrototype%": ["Object", "prototype"],
          "%ObjProto_toString%": ["Object", "prototype", "toString"],
          "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
          "%PromisePrototype%": ["Promise", "prototype"],
          "%PromiseProto_then%": ["Promise", "prototype", "then"],
          "%Promise_all%": ["Promise", "all"],
          "%Promise_reject%": ["Promise", "reject"],
          "%Promise_resolve%": ["Promise", "resolve"],
          "%RangeErrorPrototype%": ["RangeError", "prototype"],
          "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
          "%RegExpPrototype%": ["RegExp", "prototype"],
          "%SetPrototype%": ["Set", "prototype"],
          "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
          "%StringPrototype%": ["String", "prototype"],
          "%SymbolPrototype%": ["Symbol", "prototype"],
          "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
          "%TypedArrayPrototype%": ["TypedArray", "prototype"],
          "%TypeErrorPrototype%": ["TypeError", "prototype"],
          "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
          "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
          "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
          "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
          "%URIErrorPrototype%": ["URIError", "prototype"],
          "%WeakMapPrototype%": ["WeakMap", "prototype"],
          "%WeakSetPrototype%": ["WeakSet", "prototype"],
        },
        F = r(25841),
        L = r(39089),
        D = F.call(O, Array.prototype.concat),
        U = F.call(C, Array.prototype.splice),
        H = F.call(O, String.prototype.replace),
        $ = F.call(O, String.prototype.slice),
        z = F.call(O, RegExp.prototype.exec),
        G =
          /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,
        q = /\\(\\)?/g,
        W = function (e) {
          var t = $(e, 0, 1),
            r = $(e, -1);
          if ("%" === t && "%" !== r)
            throw new u("invalid intrinsic syntax, expected closing `%`");
          if ("%" === r && "%" !== t)
            throw new u("invalid intrinsic syntax, expected opening `%`");
          var n = [];
          return (
            H(e, G, function (e, t, r, i) {
              n[n.length] = r ? H(i, q, "$1") : t || e;
            }),
            n
          );
        },
        V = function (e, t) {
          var r,
            n = e;
          if ((L(j, n) && (n = "%" + (r = j[n])[0] + "%"), L(R, n))) {
            var i = R[n];
            if ((i === _ && (i = M(n)), void 0 === i && !t))
              throw new c(
                "intrinsic " +
                  e +
                  " exists, but is not available. Please file an issue!"
              );
            return { alias: r, name: n, value: i };
          }
          throw new u("intrinsic " + e + " does not exist!");
        };
      e.exports = function (e, t) {
        if ("string" != typeof e || 0 === e.length)
          throw new c("intrinsic name must be a non-empty string");
        if (arguments.length > 1 && "boolean" != typeof t)
          throw new c('"allowMissing" argument must be a boolean');
        if (null === z(/^%?[^%]*%?$/, e))
          throw new u(
            "`%` may not be present anywhere but at the beginning and end of the intrinsic name"
          );
        var r = W(e),
          n = r.length > 0 ? r[0] : "",
          i = V("%" + n + "%", t),
          o = i.name,
          a = i.value,
          s = !1,
          l = i.alias;
        l && ((n = l[0]), U(r, D([0, 1], l)));
        for (var d = 1, f = !0; d < r.length; d += 1) {
          var h = r[d],
            p = $(h, 0, 1),
            m = $(h, -1);
          if (
            ('"' === p ||
              "'" === p ||
              "`" === p ||
              '"' === m ||
              "'" === m ||
              "`" === m) &&
            p !== m
          )
            throw new u("property names with quotes must have matching quotes");
          if (
            (("constructor" !== h && f) || (s = !0),
            (n += "." + h),
            L(R, (o = "%" + n + "%")))
          )
            a = R[o];
          else if (null != a) {
            if (!(h in a)) {
              if (!t)
                throw new c(
                  "base intrinsic for " +
                    e +
                    " exists, but the property is not available."
                );
              return;
            }
            if (x && d + 1 >= r.length) {
              var g = x(a, h);
              a =
                (f = !!g) && "get" in g && !("originalValue" in g.get)
                  ? g.get
                  : a[h];
            } else (f = L(a, h)), (a = a[h]);
            f && !s && (R[o] = a);
          }
        }
        return a;
      };
    },
    54674: (e, t, r) => {
      "use strict";
      var n = r(72490);
      e.exports = n.getPrototypeOf || null;
    },
    34492: (e) => {
      "use strict";
      e.exports =
        ("undefined" != typeof Reflect && Reflect.getPrototypeOf) || null;
    },
    57618: (e, t, r) => {
      "use strict";
      var n = r(34492),
        i = r(54674),
        o = r(66016);
      e.exports = n
        ? function (e) {
            return n(e);
          }
        : i
        ? function (e) {
            if (!e || ("object" != typeof e && "function" != typeof e))
              throw TypeError("getProto: not an object");
            return i(e);
          }
        : o
        ? function (e) {
            return o(e);
          }
        : null;
    },
    5771: (e) => {
      "use strict";
      e.exports = Object.getOwnPropertyDescriptor;
    },
    25415: (e, t, r) => {
      "use strict";
      var n = r(5771);
      if (n)
        try {
          n([], "length");
        } catch (e) {
          n = null;
        }
      e.exports = n;
    },
    8797: (e, t, r) => {
      "use strict";
      var n = "undefined" != typeof Symbol && Symbol,
        i = r(21487);
      e.exports = function () {
        return (
          "function" == typeof n &&
          "function" == typeof Symbol &&
          "symbol" == typeof n("foo") &&
          "symbol" == typeof Symbol("bar") &&
          i()
        );
      };
    },
    21487: (e) => {
      "use strict";
      e.exports = function () {
        if (
          "function" != typeof Symbol ||
          "function" != typeof Object.getOwnPropertySymbols
        )
          return !1;
        if ("symbol" == typeof Symbol.iterator) return !0;
        var e = {},
          t = Symbol("test"),
          r = Object(t);
        if (
          "string" == typeof t ||
          "[object Symbol]" !== Object.prototype.toString.call(t) ||
          "[object Symbol]" !== Object.prototype.toString.call(r)
        )
          return !1;
        for (var n in ((e[t] = 42), e)) return !1;
        if (
          ("function" == typeof Object.keys && 0 !== Object.keys(e).length) ||
          ("function" == typeof Object.getOwnPropertyNames &&
            0 !== Object.getOwnPropertyNames(e).length)
        )
          return !1;
        var i = Object.getOwnPropertySymbols(e);
        if (
          1 !== i.length ||
          i[0] !== t ||
          !Object.prototype.propertyIsEnumerable.call(e, t)
        )
          return !1;
        if ("function" == typeof Object.getOwnPropertyDescriptor) {
          var o = Object.getOwnPropertyDescriptor(e, t);
          if (42 !== o.value || !0 !== o.enumerable) return !1;
        }
        return !0;
      };
    },
    39089: (e, t, r) => {
      "use strict";
      var n = Function.prototype.call,
        i = Object.prototype.hasOwnProperty,
        o = r(25841);
      e.exports = o.call(n, i);
    },
    84981: (e, t) => {
      (t.read = function (e, t, r, n, i) {
        var o,
          a,
          s = 8 * i - n - 1,
          l = (1 << s) - 1,
          u = l >> 1,
          c = -7,
          d = r ? i - 1 : 0,
          f = r ? -1 : 1,
          h = e[t + d];
        for (
          d += f, o = h & ((1 << -c) - 1), h >>= -c, c += s;
          c > 0;
          o = 256 * o + e[t + d], d += f, c -= 8
        );
        for (
          a = o & ((1 << -c) - 1), o >>= -c, c += n;
          c > 0;
          a = 256 * a + e[t + d], d += f, c -= 8
        );
        if (0 === o) o = 1 - u;
        else {
          if (o === l) return a ? NaN : (1 / 0) * (h ? -1 : 1);
          (a += Math.pow(2, n)), (o -= u);
        }
        return (h ? -1 : 1) * a * Math.pow(2, o - n);
      }),
        (t.write = function (e, t, r, n, i, o) {
          var a,
            s,
            l,
            u = 8 * o - i - 1,
            c = (1 << u) - 1,
            d = c >> 1,
            f = 23 === i ? 5960464477539062e-23 : 0,
            h = n ? 0 : o - 1,
            p = n ? 1 : -1,
            m = t < 0 || (0 === t && 1 / t < 0) ? 1 : 0;
          for (
            isNaN((t = Math.abs(t))) || t === 1 / 0
              ? ((s = isNaN(t) ? 1 : 0), (a = c))
              : ((a = Math.floor(Math.log(t) / Math.LN2)),
                t * (l = Math.pow(2, -a)) < 1 && (a--, (l *= 2)),
                a + d >= 1 ? (t += f / l) : (t += f * Math.pow(2, 1 - d)),
                t * l >= 2 && (a++, (l /= 2)),
                a + d >= c
                  ? ((s = 0), (a = c))
                  : a + d >= 1
                  ? ((s = (t * l - 1) * Math.pow(2, i)), (a += d))
                  : ((s = t * Math.pow(2, d - 1) * Math.pow(2, i)), (a = 0)));
            i >= 8;
            e[r + h] = 255 & s, h += p, s /= 256, i -= 8
          );
          for (
            a = (a << i) | s, u += i;
            u > 0;
            e[r + h] = 255 & a, h += p, a /= 256, u -= 8
          );
          e[r + h - p] |= 128 * m;
        });
    },
    52364: (e) => {
      "use strict";
      e.exports = Math.abs;
    },
    39390: (e) => {
      "use strict";
      e.exports = Math.floor;
    },
    51561: (e) => {
      "use strict";
      e.exports =
        Number.isNaN ||
        function (e) {
          return e != e;
        };
    },
    48526: (e) => {
      "use strict";
      e.exports = Math.max;
    },
    12: (e) => {
      "use strict";
      e.exports = Math.min;
    },
    52006: (e) => {
      "use strict";
      e.exports = Math.pow;
    },
    79312: (e) => {
      "use strict";
      e.exports = Math.round;
    },
    39073: (e, t, r) => {
      "use strict";
      var n = r(51561);
      e.exports = function (e) {
        return n(e) || 0 === e ? e : e < 0 ? -1 : 1;
      };
    },
    90908: (e, t, r) => {
      "use strict";
      r.d(t, { PA: () => b, iz: () => w });
      var n,
        i,
        o = r(37725),
        a = r(12115);
      if (!a.useState)
        throw Error("mobx-react-lite requires React with Hooks support");
      if (!o.Gn)
        throw Error(
          "mobx-react-lite@3 requires mobx at least version 6 to be available"
        );
      var s = r(47650);
      function l(e) {
        e();
      }
      function u(e) {
        return (0, o.yl)(e);
      }
      var c = (function () {
          function e(e) {
            var t = this;
            Object.defineProperty(this, "finalize", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: e,
            }),
              Object.defineProperty(this, "registrations", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: new Map(),
              }),
              Object.defineProperty(this, "sweepTimeout", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "sweep", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: function (e) {
                  void 0 === e && (e = 1e4),
                    clearTimeout(t.sweepTimeout),
                    (t.sweepTimeout = void 0);
                  var r = Date.now();
                  t.registrations.forEach(function (n, i) {
                    r - n.registeredAt >= e &&
                      (t.finalize(n.value), t.registrations.delete(i));
                  }),
                    t.registrations.size > 0 && t.scheduleSweep();
                },
              }),
              Object.defineProperty(this, "finalizeAllImmediately", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: function () {
                  t.sweep(0);
                },
              });
          }
          return (
            Object.defineProperty(e.prototype, "register", {
              enumerable: !1,
              configurable: !0,
              writable: !0,
              value: function (e, t, r) {
                this.registrations.set(r, {
                  value: t,
                  registeredAt: Date.now(),
                }),
                  this.scheduleSweep();
              },
            }),
            Object.defineProperty(e.prototype, "unregister", {
              enumerable: !1,
              configurable: !0,
              writable: !0,
              value: function (e) {
                this.registrations.delete(e);
              },
            }),
            Object.defineProperty(e.prototype, "scheduleSweep", {
              enumerable: !1,
              configurable: !0,
              writable: !0,
              value: function () {
                void 0 === this.sweepTimeout &&
                  (this.sweepTimeout = setTimeout(this.sweep, 1e4));
              },
            }),
            e
          );
        })(),
        d = new (
          "undefined" != typeof FinalizationRegistry ? FinalizationRegistry : c
        )(function (e) {
          var t;
          null === (t = e.reaction) || void 0 === t || t.dispose(),
            (e.reaction = null);
        }),
        f = r(94236);
      function h(e) {
        e.reaction = new o.qT("observer".concat(e.name), function () {
          var t;
          (e.stateVersion = Symbol()),
            null === (t = e.onStoreChange) || void 0 === t || t.call(e);
        });
      }
      var p = "function" == typeof Symbol && Symbol.for,
        m =
          null !==
            (i =
              null ===
                (n = Object.getOwnPropertyDescriptor(function () {}, "name")) ||
              void 0 === n
                ? void 0
                : n.configurable) &&
          void 0 !== i &&
          i,
        g = p
          ? Symbol.for("react.forward_ref")
          : "function" == typeof a.forwardRef &&
            (0, a.forwardRef)(function (e) {
              return null;
            }).$$typeof,
        y = p
          ? Symbol.for("react.memo")
          : "function" == typeof a.memo &&
            (0, a.memo)(function (e) {
              return null;
            }).$$typeof;
      function b(e, t) {
        if (y && e.$$typeof === y)
          throw Error(
            "[mobx-react-lite] You are trying to use `observer` on a function component wrapped in either another `observer` or `React.memo`. The observer already applies 'React.memo' for you."
          );
        var r,
          n =
            null !== (r = null == t ? void 0 : t.forwardRef) &&
            void 0 !== r &&
            r,
          i = e,
          o = e.displayName || e.name;
        if (
          g &&
          e.$$typeof === g &&
          ((n = !0), "function" != typeof (i = e.render))
        )
          throw Error(
            "[mobx-react-lite] `render` property of ForwardRef was not a function"
          );
        var s = function (e, t) {
          return (function (e, t) {
            void 0 === t && (t = "observed");
            var r,
              n,
              i = a.useRef(null);
            if (!i.current) {
              var o = {
                reaction: null,
                onStoreChange: null,
                stateVersion: Symbol(),
                name: t,
                subscribe: function (e) {
                  return (
                    d.unregister(o),
                    (o.onStoreChange = e),
                    o.reaction || (h(o), (o.stateVersion = Symbol())),
                    function () {
                      var e;
                      (o.onStoreChange = null),
                        null === (e = o.reaction) ||
                          void 0 === e ||
                          e.dispose(),
                        (o.reaction = null);
                    }
                  );
                },
                getSnapshot: function () {
                  return o.stateVersion;
                },
              };
              i.current = o;
            }
            var s = i.current;
            if (
              (s.reaction || (h(s), d.register(i, s, s)),
              a.useDebugValue(s.reaction, u),
              (0, f.useSyncExternalStore)(
                s.subscribe,
                s.getSnapshot,
                s.getSnapshot
              ),
              s.reaction.track(function () {
                try {
                  r = e();
                } catch (e) {
                  n = e;
                }
              }),
              n)
            )
              throw n;
            return r;
          })(function () {
            return i(e, t);
          }, o);
        };
        return (
          (s.displayName = e.displayName),
          m &&
            Object.defineProperty(s, "name", {
              value: e.name,
              writable: !0,
              configurable: !0,
            }),
          e.contextTypes && (s.contextTypes = e.contextTypes),
          n && (s = (0, a.forwardRef)(s)),
          (function (e, t) {
            Object.keys(e).forEach(function (r) {
              v[r] ||
                Object.defineProperty(
                  t,
                  r,
                  Object.getOwnPropertyDescriptor(e, r)
                );
            });
          })(e, (s = (0, a.memo)(s))),
          s
        );
      }
      var v = {
        $$typeof: !0,
        render: !0,
        compare: !0,
        type: !0,
        displayName: !0,
      };
      function w(e, t) {
        return (0, a.useState)(function () {
          return (0, o.sH)(e(), t, { autoBind: !0 });
        })[0];
      }
      !(function (e) {
        e || (e = l), (0, o.jK)({ reactionScheduler: e });
      })(s.unstable_batchedUpdates),
        d.finalizeAllImmediately;
    },
    5565: (e, t, r) => {
      "use strict";
      r.d(t, { default: () => i.a });
      var n = r(4146),
        i = r.n(n);
    },
    76046: (e, t, r) => {
      "use strict";
      var n = r(66658);
      r.o(n, "useParams") &&
        r.d(t, {
          useParams: function () {
            return n.useParams;
          },
        }),
        r.o(n, "usePathname") &&
          r.d(t, {
            usePathname: function () {
              return n.usePathname;
            },
          }),
        r.o(n, "useRouter") &&
          r.d(t, {
            useRouter: function () {
              return n.useRouter;
            },
          }),
        r.o(n, "useSearchParams") &&
          r.d(t, {
            useSearchParams: function () {
              return n.useSearchParams;
            },
          });
    },
    87970: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "Image", {
          enumerable: !0,
          get: function () {
            return w;
          },
        });
      let n = r(73749),
        i = r(65382),
        o = r(95155),
        a = i._(r(12115)),
        s = n._(r(47650)),
        l = n._(r(36107)),
        u = r(40666),
        c = r(41159),
        d = r(83621);
      r(42363);
      let f = r(63576),
        h = n._(r(65514)),
        p = r(45353),
        m = {
          deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
          imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],
          path: "/_next/image",
          loader: "default",
          dangerouslyAllowSVG: !1,
          unoptimized: !1,
        };
      function g(e, t, r, n, i, o, a) {
        let s = null == e ? void 0 : e.src;
        e &&
          e["data-loaded-src"] !== s &&
          ((e["data-loaded-src"] = s),
          ("decode" in e ? e.decode() : Promise.resolve())
            .catch(() => {})
            .then(() => {
              if (e.parentElement && e.isConnected) {
                if (("empty" !== t && i(!0), null == r ? void 0 : r.current)) {
                  let t = new Event("load");
                  Object.defineProperty(t, "target", {
                    writable: !1,
                    value: e,
                  });
                  let n = !1,
                    i = !1;
                  r.current({
                    ...t,
                    nativeEvent: t,
                    currentTarget: e,
                    target: e,
                    isDefaultPrevented: () => n,
                    isPropagationStopped: () => i,
                    persist: () => {},
                    preventDefault: () => {
                      (n = !0), t.preventDefault();
                    },
                    stopPropagation: () => {
                      (i = !0), t.stopPropagation();
                    },
                  });
                }
                (null == n ? void 0 : n.current) && n.current(e);
              }
            }));
      }
      function y(e) {
        return a.use ? { fetchPriority: e } : { fetchpriority: e };
      }
      "undefined" == typeof window && (globalThis.__NEXT_IMAGE_IMPORTED = !0);
      let b = (0, a.forwardRef)((e, t) => {
        let {
            src: r,
            srcSet: n,
            sizes: i,
            height: s,
            width: l,
            decoding: u,
            className: c,
            style: d,
            fetchPriority: f,
            placeholder: h,
            loading: m,
            unoptimized: b,
            fill: v,
            onLoadRef: w,
            onLoadingCompleteRef: x,
            setBlurComplete: A,
            setShowAltText: E,
            sizesInput: k,
            onLoad: I,
            onError: S,
            ...P
          } = e,
          T = (0, a.useCallback)(
            (e) => {
              e && (S && (e.src = e.src), e.complete && g(e, h, w, x, A, b, k));
            },
            [r, h, w, x, A, S, b, k]
          ),
          C = (0, p.useMergedRef)(t, T);
        return (0, o.jsx)("img", {
          ...P,
          ...y(f),
          loading: m,
          width: l,
          height: s,
          decoding: u,
          "data-nimg": v ? "fill" : "1",
          className: c,
          style: d,
          sizes: i,
          srcSet: n,
          src: r,
          ref: C,
          onLoad: (e) => {
            g(e.currentTarget, h, w, x, A, b, k);
          },
          onError: (e) => {
            E(!0), "empty" !== h && A(!0), S && S(e);
          },
        });
      });
      function v(e) {
        let { isAppRouter: t, imgAttributes: r } = e,
          n = {
            as: "image",
            imageSrcSet: r.srcSet,
            imageSizes: r.sizes,
            crossOrigin: r.crossOrigin,
            referrerPolicy: r.referrerPolicy,
            ...y(r.fetchPriority),
          };
        return t && s.default.preload
          ? (s.default.preload(r.src, n), null)
          : (0, o.jsx)(l.default, {
              children: (0, o.jsx)(
                "link",
                { rel: "preload", href: r.srcSet ? void 0 : r.src, ...n },
                "__nimg-" + r.src + r.srcSet + r.sizes
              ),
            });
      }
      let w = (0, a.forwardRef)((e, t) => {
        let r = (0, a.useContext)(f.RouterContext),
          n = (0, a.useContext)(d.ImageConfigContext),
          i = (0, a.useMemo)(() => {
            let e = m || n || c.imageConfigDefault,
              t = [...e.deviceSizes, ...e.imageSizes].sort((e, t) => e - t),
              r = e.deviceSizes.sort((e, t) => e - t);
            return { ...e, allSizes: t, deviceSizes: r };
          }, [n]),
          { onLoad: s, onLoadingComplete: l } = e,
          p = (0, a.useRef)(s);
        (0, a.useEffect)(() => {
          p.current = s;
        }, [s]);
        let g = (0, a.useRef)(l);
        (0, a.useEffect)(() => {
          g.current = l;
        }, [l]);
        let [y, w] = (0, a.useState)(!1),
          [x, A] = (0, a.useState)(!1),
          { props: E, meta: k } = (0, u.getImgProps)(e, {
            defaultLoader: h.default,
            imgConf: i,
            blurComplete: y,
            showAltText: x,
          });
        return (0, o.jsxs)(o.Fragment, {
          children: [
            (0, o.jsx)(b, {
              ...E,
              unoptimized: k.unoptimized,
              placeholder: k.placeholder,
              fill: k.fill,
              onLoadRef: p,
              onLoadingCompleteRef: g,
              setBlurComplete: w,
              setShowAltText: A,
              sizesInput: e.sizes,
              ref: t,
            }),
            k.priority
              ? (0, o.jsx)(v, { isAppRouter: !r, imgAttributes: E })
              : null,
          ],
        });
      });
      ("function" == typeof t.default ||
        ("object" == typeof t.default && null !== t.default)) &&
        void 0 === t.default.__esModule &&
        (Object.defineProperty(t.default, "__esModule", { value: !0 }),
        Object.assign(t.default, t),
        (e.exports = t.default));
    },
    45353: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "useMergedRef", {
          enumerable: !0,
          get: function () {
            return i;
          },
        });
      let n = r(12115);
      function i(e, t) {
        let r = (0, n.useRef)(() => {}),
          i = (0, n.useRef)(() => {});
        return (0, n.useMemo)(
          () =>
            e && t
              ? (n) => {
                  null === n
                    ? (r.current(), i.current())
                    : ((r.current = o(e, n)), (i.current = o(t, n)));
                }
              : e || t,
          [e, t]
        );
      }
      function o(e, t) {
        if ("function" != typeof e)
          return (
            (e.current = t),
            () => {
              e.current = null;
            }
          );
        {
          let r = e(t);
          return "function" == typeof r ? r : () => e(null);
        }
      }
      ("function" == typeof t.default ||
        ("object" == typeof t.default && null !== t.default)) &&
        void 0 === t.default.__esModule &&
        (Object.defineProperty(t.default, "__esModule", { value: !0 }),
        Object.assign(t.default, t),
        (e.exports = t.default));
    },
    80522: (e, t, r) => {
      var n = r(87358);
      "undefined" != typeof __nccwpck_require__ &&
        (__nccwpck_require__.ab = "//"),
        {
          189: function () {
            !(function (e, t) {
              "use strict";
              if (!e.setImmediate) {
                var r,
                  i,
                  o,
                  a,
                  s,
                  l = 1,
                  u = {},
                  c = !1,
                  d = e.document,
                  f = Object.getPrototypeOf && Object.getPrototypeOf(e);
                ((f = f && f.setTimeout ? f : e),
                "[object process]" === {}.toString.call(e.process))
                  ? (s = function (e) {
                      n.nextTick(function () {
                        p(e);
                      });
                    })
                  : (function () {
                      if (e.postMessage && !e.importScripts) {
                        var t = !0,
                          r = e.onmessage;
                        return (
                          (e.onmessage = function () {
                            t = !1;
                          }),
                          e.postMessage("", "*"),
                          (e.onmessage = r),
                          t
                        );
                      }
                    })()
                  ? ((r = "setImmediate$" + Math.random() + "$"),
                    (i = function (t) {
                      t.source === e &&
                        "string" == typeof t.data &&
                        0 === t.data.indexOf(r) &&
                        p(+t.data.slice(r.length));
                    }),
                    e.addEventListener
                      ? e.addEventListener("message", i, !1)
                      : e.attachEvent("onmessage", i),
                    (s = function (t) {
                      e.postMessage(r + t, "*");
                    }))
                  : e.MessageChannel
                  ? (((o = new MessageChannel()).port1.onmessage = function (
                      e
                    ) {
                      p(e.data);
                    }),
                    (s = function (e) {
                      o.port2.postMessage(e);
                    }))
                  : d && "onreadystatechange" in d.createElement("script")
                  ? ((a = d.documentElement),
                    (s = function (e) {
                      var t = d.createElement("script");
                      (t.onreadystatechange = function () {
                        p(e),
                          (t.onreadystatechange = null),
                          a.removeChild(t),
                          (t = null);
                      }),
                        a.appendChild(t);
                    }))
                  : (s = function (e) {
                      setTimeout(p, 0, e);
                    }),
                  (f.setImmediate = function (e) {
                    "function" != typeof e && (e = Function("" + e));
                    for (
                      var t = Array(arguments.length - 1), r = 0;
                      r < t.length;
                      r++
                    )
                      t[r] = arguments[r + 1];
                    var n = { callback: e, args: t };
                    return (u[l] = n), s(l), l++;
                  }),
                  (f.clearImmediate = h);
              }
              function h(e) {
                delete u[e];
              }
              function p(e) {
                if (c) setTimeout(p, 0, e);
                else {
                  var r = u[e];
                  if (r) {
                    c = !0;
                    try {
                      !(function (e) {
                        var r = e.callback,
                          n = e.args;
                        switch (n.length) {
                          case 0:
                            r();
                            break;
                          case 1:
                            r(n[0]);
                            break;
                          case 2:
                            r(n[0], n[1]);
                            break;
                          case 3:
                            r(n[0], n[1], n[2]);
                            break;
                          default:
                            r.apply(t, n);
                        }
                      })(r);
                    } finally {
                      h(e), (c = !1);
                    }
                  }
                }
              }
            })(
              "undefined" == typeof self ? (void 0 === r.g ? this : r.g) : self
            );
          },
        }[189](),
        (e.exports = {});
    },
    53003: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "AmpStateContext", {
          enumerable: !0,
          get: function () {
            return n;
          },
        });
      let n = r(73749)._(r(12115)).default.createContext({});
    },
    675: (e, t) => {
      "use strict";
      function r(e) {
        let {
          ampFirst: t = !1,
          hybrid: r = !1,
          hasQuery: n = !1,
        } = void 0 === e ? {} : e;
        return t || (r && n);
      }
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "isInAmpMode", {
          enumerable: !0,
          get: function () {
            return r;
          },
        });
    },
    40666: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "getImgProps", {
          enumerable: !0,
          get: function () {
            return s;
          },
        }),
        r(42363);
      let n = r(35859),
        i = r(41159);
      function o(e) {
        return void 0 !== e.default;
      }
      function a(e) {
        return void 0 === e
          ? e
          : "number" == typeof e
          ? Number.isFinite(e)
            ? e
            : NaN
          : "string" == typeof e && /^[0-9]+$/.test(e)
          ? parseInt(e, 10)
          : NaN;
      }
      function s(e, t) {
        var r;
        let s,
          l,
          u,
          {
            src: c,
            sizes: d,
            unoptimized: f = !1,
            priority: h = !1,
            loading: p,
            className: m,
            quality: g,
            width: y,
            height: b,
            fill: v = !1,
            style: w,
            overrideSrc: x,
            onLoad: A,
            onLoadingComplete: E,
            placeholder: k = "empty",
            blurDataURL: I,
            fetchPriority: S,
            decoding: P = "async",
            layout: T,
            objectFit: C,
            objectPosition: O,
            lazyBoundary: _,
            lazyRoot: B,
            ...R
          } = e,
          { imgConf: N, showAltText: M, blurComplete: j, defaultLoader: F } = t,
          L = N || i.imageConfigDefault;
        if ("allSizes" in L) s = L;
        else {
          let e = [...L.deviceSizes, ...L.imageSizes].sort((e, t) => e - t),
            t = L.deviceSizes.sort((e, t) => e - t);
          s = { ...L, allSizes: e, deviceSizes: t };
        }
        if (void 0 === F)
          throw Error(
            "images.loaderFile detected but the file is missing default export.\nRead more: https://nextjs.org/docs/messages/invalid-images-config"
          );
        let D = R.loader || F;
        delete R.loader, delete R.srcSet;
        let U = "__next_img_default" in D;
        if (U) {
          if ("custom" === s.loader)
            throw Error(
              'Image with src "' +
                c +
                '" is missing "loader" prop.\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader'
            );
        } else {
          let e = D;
          D = (t) => {
            let { config: r, ...n } = t;
            return e(n);
          };
        }
        if (T) {
          "fill" === T && (v = !0);
          let e = {
            intrinsic: { maxWidth: "100%", height: "auto" },
            responsive: { width: "100%", height: "auto" },
          }[T];
          e && (w = { ...w, ...e });
          let t = { responsive: "100vw", fill: "100vw" }[T];
          t && !d && (d = t);
        }
        let H = "",
          $ = a(y),
          z = a(b);
        if ((r = c) && "object" == typeof r && (o(r) || void 0 !== r.src)) {
          let e = o(c) ? c.default : c;
          if (!e.src)
            throw Error(
              "An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received " +
                JSON.stringify(e)
            );
          if (!e.height || !e.width)
            throw Error(
              "An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received " +
                JSON.stringify(e)
            );
          if (
            ((l = e.blurWidth),
            (u = e.blurHeight),
            (I = I || e.blurDataURL),
            (H = e.src),
            !v)
          ) {
            if ($ || z) {
              if ($ && !z) {
                let t = $ / e.width;
                z = Math.round(e.height * t);
              } else if (!$ && z) {
                let t = z / e.height;
                $ = Math.round(e.width * t);
              }
            } else ($ = e.width), (z = e.height);
          }
        }
        let G = !h && ("lazy" === p || void 0 === p);
        (!(c = "string" == typeof c ? c : H) ||
          c.startsWith("data:") ||
          c.startsWith("blob:")) &&
          ((f = !0), (G = !1)),
          s.unoptimized && (f = !0),
          U && c.endsWith(".svg") && !s.dangerouslyAllowSVG && (f = !0);
        let q = a(g),
          W = Object.assign(
            v
              ? {
                  position: "absolute",
                  height: "100%",
                  width: "100%",
                  left: 0,
                  top: 0,
                  right: 0,
                  bottom: 0,
                  objectFit: C,
                  objectPosition: O,
                }
              : {},
            M ? {} : { color: "transparent" },
            w
          ),
          V =
            j || "empty" === k
              ? null
              : "blur" === k
              ? 'url("data:image/svg+xml;charset=utf-8,' +
                (0, n.getImageBlurSvg)({
                  widthInt: $,
                  heightInt: z,
                  blurWidth: l,
                  blurHeight: u,
                  blurDataURL: I || "",
                  objectFit: W.objectFit,
                }) +
                '")'
              : 'url("' + k + '")',
          Z = V
            ? {
                backgroundSize: W.objectFit || "cover",
                backgroundPosition: W.objectPosition || "50% 50%",
                backgroundRepeat: "no-repeat",
                backgroundImage: V,
              }
            : {},
          K = (function (e) {
            let {
              config: t,
              src: r,
              unoptimized: n,
              width: i,
              quality: o,
              sizes: a,
              loader: s,
            } = e;
            if (n) return { src: r, srcSet: void 0, sizes: void 0 };
            let { widths: l, kind: u } = (function (e, t, r) {
                let { deviceSizes: n, allSizes: i } = e;
                if (r) {
                  let e = /(^|\s)(1?\d?\d)vw/g,
                    t = [];
                  for (let n; (n = e.exec(r)); n) t.push(parseInt(n[2]));
                  if (t.length) {
                    let e = 0.01 * Math.min(...t);
                    return {
                      widths: i.filter((t) => t >= n[0] * e),
                      kind: "w",
                    };
                  }
                  return { widths: i, kind: "w" };
                }
                return "number" != typeof t
                  ? { widths: n, kind: "w" }
                  : {
                      widths: [
                        ...new Set(
                          [t, 2 * t].map(
                            (e) => i.find((t) => t >= e) || i[i.length - 1]
                          )
                        ),
                      ],
                      kind: "x",
                    };
              })(t, i, a),
              c = l.length - 1;
            return {
              sizes: a || "w" !== u ? a : "100vw",
              srcSet: l
                .map(
                  (e, n) =>
                    s({ config: t, src: r, quality: o, width: e }) +
                    " " +
                    ("w" === u ? e : n + 1) +
                    u
                )
                .join(", "),
              src: s({ config: t, src: r, quality: o, width: l[c] }),
            };
          })({
            config: s,
            src: c,
            unoptimized: f,
            width: $,
            quality: q,
            sizes: d,
            loader: D,
          });
        return {
          props: {
            ...R,
            loading: G ? "lazy" : p,
            fetchPriority: S,
            width: $,
            height: z,
            decoding: P,
            className: m,
            style: { ...W, ...Z },
            sizes: K.sizes,
            srcSet: K.srcSet,
            src: x || K.src,
          },
          meta: { unoptimized: f, priority: h, placeholder: k, fill: v },
        };
      }
    },
    36107: (e, t, r) => {
      "use strict";
      var n = r(87358);
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (function (e, t) {
          for (var r in t)
            Object.defineProperty(e, r, { enumerable: !0, get: t[r] });
        })(t, {
          default: function () {
            return g;
          },
          defaultHead: function () {
            return f;
          },
        });
      let i = r(73749),
        o = r(65382),
        a = r(95155),
        s = o._(r(12115)),
        l = i._(r(31172)),
        u = r(53003),
        c = r(81147),
        d = r(675);
      function f(e) {
        void 0 === e && (e = !1);
        let t = [(0, a.jsx)("meta", { charSet: "utf-8" }, "charset")];
        return (
          e ||
            t.push(
              (0, a.jsx)(
                "meta",
                { name: "viewport", content: "width=device-width" },
                "viewport"
              )
            ),
          t
        );
      }
      function h(e, t) {
        return "string" == typeof t || "number" == typeof t
          ? e
          : t.type === s.default.Fragment
          ? e.concat(
              s.default.Children.toArray(t.props.children).reduce(
                (e, t) =>
                  "string" == typeof t || "number" == typeof t
                    ? e
                    : e.concat(t),
                []
              )
            )
          : e.concat(t);
      }
      r(42363);
      let p = ["name", "httpEquiv", "charSet", "itemProp"];
      function m(e, t) {
        let { inAmpMode: r } = t;
        return e
          .reduce(h, [])
          .reverse()
          .concat(f(r).reverse())
          .filter(
            (function () {
              let e = new Set(),
                t = new Set(),
                r = new Set(),
                n = {};
              return (i) => {
                let o = !0,
                  a = !1;
                if (
                  i.key &&
                  "number" != typeof i.key &&
                  i.key.indexOf("$") > 0
                ) {
                  a = !0;
                  let t = i.key.slice(i.key.indexOf("$") + 1);
                  e.has(t) ? (o = !1) : e.add(t);
                }
                switch (i.type) {
                  case "title":
                  case "base":
                    t.has(i.type) ? (o = !1) : t.add(i.type);
                    break;
                  case "meta":
                    for (let e = 0, t = p.length; e < t; e++) {
                      let t = p[e];
                      if (i.props.hasOwnProperty(t)) {
                        if ("charSet" === t) r.has(t) ? (o = !1) : r.add(t);
                        else {
                          let e = i.props[t],
                            r = n[t] || new Set();
                          ("name" !== t || !a) && r.has(e)
                            ? (o = !1)
                            : (r.add(e), (n[t] = r));
                        }
                      }
                    }
                }
                return o;
              };
            })()
          )
          .reverse()
          .map((e, t) => {
            let i = e.key || t;
            if (
              n.env.__NEXT_OPTIMIZE_FONTS &&
              !r &&
              "link" === e.type &&
              e.props.href &&
              [
                "https://fonts.googleapis.com/css",
                "https://use.typekit.net/",
              ].some((t) => e.props.href.startsWith(t))
            ) {
              let t = { ...(e.props || {}) };
              return (
                (t["data-href"] = t.href),
                (t.href = void 0),
                (t["data-optimized-fonts"] = !0),
                s.default.cloneElement(e, t)
              );
            }
            return s.default.cloneElement(e, { key: i });
          });
      }
      let g = function (e) {
        let { children: t } = e,
          r = (0, s.useContext)(u.AmpStateContext),
          n = (0, s.useContext)(c.HeadManagerContext);
        return (0, a.jsx)(l.default, {
          reduceComponentsToState: m,
          headManager: n,
          inAmpMode: (0, d.isInAmpMode)(r),
          children: t,
        });
      };
      ("function" == typeof t.default ||
        ("object" == typeof t.default && null !== t.default)) &&
        void 0 === t.default.__esModule &&
        (Object.defineProperty(t.default, "__esModule", { value: !0 }),
        Object.assign(t.default, t),
        (e.exports = t.default));
    },
    35859: (e, t) => {
      "use strict";
      function r(e) {
        let {
            widthInt: t,
            heightInt: r,
            blurWidth: n,
            blurHeight: i,
            blurDataURL: o,
            objectFit: a,
          } = e,
          s = n ? 40 * n : t,
          l = i ? 40 * i : r,
          u = s && l ? "viewBox='0 0 " + s + " " + l + "'" : "";
        return (
          "%3Csvg xmlns='http://www.w3.org/2000/svg' " +
          u +
          "%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='20'/%3E%3CfeColorMatrix values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 100 -1' result='s'/%3E%3CfeFlood x='0' y='0' width='100%25' height='100%25'/%3E%3CfeComposite operator='out' in='s'/%3E%3CfeComposite in2='SourceGraphic'/%3E%3CfeGaussianBlur stdDeviation='20'/%3E%3C/filter%3E%3Cimage width='100%25' height='100%25' x='0' y='0' preserveAspectRatio='" +
          (u
            ? "none"
            : "contain" === a
            ? "xMidYMid"
            : "cover" === a
            ? "xMidYMid slice"
            : "none") +
          "' style='filter: url(%23b);' href='" +
          o +
          "'/%3E%3C/svg%3E"
        );
      }
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "getImageBlurSvg", {
          enumerable: !0,
          get: function () {
            return r;
          },
        });
    },
    83621: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "ImageConfigContext", {
          enumerable: !0,
          get: function () {
            return o;
          },
        });
      let n = r(73749)._(r(12115)),
        i = r(41159),
        o = n.default.createContext(i.imageConfigDefault);
    },
    41159: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (function (e, t) {
          for (var r in t)
            Object.defineProperty(e, r, { enumerable: !0, get: t[r] });
        })(t, {
          VALID_LOADERS: function () {
            return r;
          },
          imageConfigDefault: function () {
            return n;
          },
        });
      let r = ["default", "imgix", "cloudinary", "akamai", "custom"],
        n = {
          deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
          imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],
          path: "/_next/image",
          loader: "default",
          loaderFile: "",
          domains: [],
          disableStaticImages: !1,
          minimumCacheTTL: 60,
          formats: ["image/webp"],
          dangerouslyAllowSVG: !1,
          contentSecurityPolicy:
            "script-src 'none'; frame-src 'none'; sandbox;",
          contentDispositionType: "attachment",
          localPatterns: void 0,
          remotePatterns: [],
          unoptimized: !1,
        };
    },
    4146: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (function (e, t) {
          for (var r in t)
            Object.defineProperty(e, r, { enumerable: !0, get: t[r] });
        })(t, {
          default: function () {
            return l;
          },
          getImageProps: function () {
            return s;
          },
        });
      let n = r(73749),
        i = r(40666),
        o = r(87970),
        a = n._(r(65514));
      function s(e) {
        let { props: t } = (0, i.getImgProps)(e, {
          defaultLoader: a.default,
          imgConf: {
            deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
            imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],
            path: "/_next/image",
            loader: "default",
            dangerouslyAllowSVG: !1,
            unoptimized: !1,
          },
        });
        for (let [e, r] of Object.entries(t)) void 0 === r && delete t[e];
        return { props: t };
      }
      let l = o.Image;
    },
    65514: (e, t) => {
      "use strict";
      function r(e) {
        let { config: t, src: r, width: n, quality: i } = e;
        return (
          t.path + r
        );
      }
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "default", {
          enumerable: !0,
          get: function () {
            return n;
          },
        }),
        (r.__next_img_default = !0);
      let n = r;
    },
    63576: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "RouterContext", {
          enumerable: !0,
          get: function () {
            return n;
          },
        });
      let n = r(73749)._(r(12115)).default.createContext(null);
    },
    31172: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "default", {
          enumerable: !0,
          get: function () {
            return s;
          },
        });
      let n = r(12115),
        i = "undefined" == typeof window,
        o = i ? () => {} : n.useLayoutEffect,
        a = i ? () => {} : n.useEffect;
      function s(e) {
        let { headManager: t, reduceComponentsToState: r } = e;
        function s() {
          if (t && t.mountedInstances) {
            let i = n.Children.toArray(
              Array.from(t.mountedInstances).filter(Boolean)
            );
            t.updateHead(r(i, e));
          }
        }
        if (i) {
          var l;
          null == t || null == (l = t.mountedInstances) || l.add(e.children),
            s();
        }
        return (
          o(() => {
            var r;
            return (
              null == t ||
                null == (r = t.mountedInstances) ||
                r.add(e.children),
              () => {
                var r;
                null == t ||
                  null == (r = t.mountedInstances) ||
                  r.delete(e.children);
              }
            );
          }),
          o(
            () => (
              t && (t._pendingUpdate = s),
              () => {
                t && (t._pendingUpdate = s);
              }
            )
          ),
          a(
            () => (
              t &&
                t._pendingUpdate &&
                (t._pendingUpdate(), (t._pendingUpdate = null)),
              () => {
                t &&
                  t._pendingUpdate &&
                  (t._pendingUpdate(), (t._pendingUpdate = null));
              }
            )
          ),
          null
        );
      }
    },
    7831: (e, t, r) => {
      "use strict";
      r.d(t, { n: () => eT, mk: () => c, M8: () => u });
      var n,
        i,
        o,
        a,
        s,
        l,
        u,
        c,
        d = r(12115),
        f = r(47650);
      let h = function () {
          for (var e, t, r = 0, n = ""; r < arguments.length; )
            (e = arguments[r++]) &&
              (t = (function e(t) {
                var r,
                  n,
                  i = "";
                if ("string" == typeof t || "number" == typeof t) i += t;
                else if ("object" == typeof t) {
                  if (Array.isArray(t))
                    for (r = 0; r < t.length; r++)
                      t[r] && (n = e(t[r])) && (i && (i += " "), (i += n));
                  else for (r in t) t[r] && (i && (i += " "), (i += r));
                }
                return i;
              })(e)) &&
              (n && (n += " "), (n += t));
          return n;
        },
        p = { data: "" },
        m = (e) =>
          "object" == typeof window
            ? (
                (e ? e.querySelector("#_goober") : window._goober) ||
                Object.assign(
                  (e || document.head).appendChild(
                    document.createElement("style")
                  ),
                  { innerHTML: " ", id: "_goober" }
                )
              ).firstChild
            : e || p,
        g = /(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g,
        y = /\/\*[^]*?\*\/|  +/g,
        b = /\n+/g,
        v = (e, t) => {
          let r = "",
            n = "",
            i = "";
          for (let o in e) {
            let a = e[o];
            "@" == o[0]
              ? "i" == o[1]
                ? (r = o + " " + a + ";")
                : (n +=
                    "f" == o[1]
                      ? v(a, o)
                      : o + "{" + v(a, "k" == o[1] ? "" : t) + "}")
              : "object" == typeof a
              ? (n += v(
                  a,
                  t
                    ? t.replace(/([^,])+/g, (e) =>
                        o.replace(/([^,]*:\S+\([^)]*\))|([^,])+/g, (t) =>
                          /&/.test(t) ? t.replace(/&/g, e) : e ? e + " " + t : t
                        )
                      )
                    : o
                ))
              : null != a &&
                ((o = /^--/.test(o)
                  ? o
                  : o.replace(/[A-Z]/g, "-$&").toLowerCase()),
                (i += v.p ? v.p(o, a) : o + ":" + a + ";"));
          }
          return r + (t && i ? t + "{" + i + "}" : i) + n;
        },
        w = {},
        x = (e) => {
          if ("object" == typeof e) {
            let t = "";
            for (let r in e) t += r + x(e[r]);
            return t;
          }
          return e;
        },
        A = (e, t, r, n, i) => {
          let o = x(e),
            a =
              w[o] ||
              (w[o] = ((e) => {
                let t = 0,
                  r = 11;
                for (; t < e.length; ) r = (101 * r + e.charCodeAt(t++)) >>> 0;
                return "go" + r;
              })(o));
          if (!w[a]) {
            let t =
              o !== e
                ? e
                : ((e) => {
                    let t,
                      r,
                      n = [{}];
                    for (; (t = g.exec(e.replace(y, ""))); )
                      t[4]
                        ? n.shift()
                        : t[3]
                        ? ((r = t[3].replace(b, " ").trim()),
                          n.unshift((n[0][r] = n[0][r] || {})))
                        : (n[0][t[1]] = t[2].replace(b, " ").trim());
                    return n[0];
                  })(e);
            w[a] = v(i ? { ["@keyframes " + a]: t } : t, r ? "" : "." + a);
          }
          let s = r && w.g ? w.g : null;
          return (
            r && (w.g = w[a]),
            ((e, t, r, n) => {
              n
                ? (t.data = t.data.replace(n, e))
                : -1 === t.data.indexOf(e) &&
                  (t.data = r ? e + t.data : t.data + e);
            })(w[a], t, n, s),
            a
          );
        },
        E = (e, t, r) =>
          e.reduce((e, n, i) => {
            let o = t[i];
            if (o && o.call) {
              let e = o(r),
                t = (e && e.props && e.props.className) || (/^go/.test(e) && e);
              o = t
                ? "." + t
                : e && "object" == typeof e
                ? e.props
                  ? ""
                  : v(e, "")
                : !1 === e
                ? ""
                : e;
            }
            return e + n + (null == o ? "" : o);
          }, "");
      function k(e) {
        let t = this || {},
          r = e.call ? e(t.p) : e;
        return A(
          r.unshift
            ? r.raw
              ? E(r, [].slice.call(arguments, 1), t.p)
              : r.reduce(
                  (e, r) => Object.assign(e, r && r.call ? r(t.p) : r),
                  {}
                )
            : r,
          m(t.target),
          t.g,
          t.o,
          t.k
        );
      }
      function I(e, t) {
        for (var r = 0; r < t.length; r++) {
          var n = t[r];
          (n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            "value" in n && (n.writable = !0),
            Object.defineProperty(e, n.key, n);
        }
      }
      function S(e, t, r) {
        return t && I(e.prototype, t), r && I(e, r), e;
      }
      function P() {
        return (P =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var r = arguments[t];
              for (var n in r)
                Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function T(e, t) {
        (e.prototype = Object.create(t.prototype)),
          (e.prototype.constructor = e),
          (e.__proto__ = t);
      }
      function C(e, t) {
        if (null == e) return {};
        var r,
          n,
          i = {},
          o = Object.keys(e);
        for (n = 0; n < o.length; n++)
          (r = o[n]), t.indexOf(r) >= 0 || (i[r] = e[r]);
        return i;
      }
      function O(e) {
        if (void 0 === e)
          throw ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        return e;
      }
      k.bind({ g: 1 }), k.bind({ k: 1 });
      var _ = function () {
          return "";
        },
        B = d.createContext({ enqueueSnackbar: _, closeSnackbar: _ }),
        R = {
          downXs: "@media (max-width:599.95px)",
          upSm: "@media (min-width:600px)",
        },
        N = function (e) {
          return e.charAt(0).toUpperCase() + e.slice(1);
        },
        M = function (e) {
          return "" + N(e.vertical) + N(e.horizontal);
        },
        j = function (e) {
          return !!e || 0 === e;
        },
        F = "unmounted",
        L = "exited",
        D = "entering",
        U = "entered",
        H = "exiting",
        $ = (function (e) {
          function t(t) {
            r = e.call(this, t) || this;
            var r,
              n,
              i = t.appear;
            return (
              (r.appearStatus = null),
              t.in
                ? i
                  ? ((n = L), (r.appearStatus = D))
                  : (n = U)
                : (n = t.unmountOnExit || t.mountOnEnter ? F : L),
              (r.state = { status: n }),
              (r.nextCallback = null),
              r
            );
          }
          T(t, e),
            (t.getDerivedStateFromProps = function (e, t) {
              return e.in && t.status === F ? { status: L } : null;
            });
          var r = t.prototype;
          return (
            (r.componentDidMount = function () {
              this.updateStatus(!0, this.appearStatus);
            }),
            (r.componentDidUpdate = function (e) {
              var t = null;
              if (e !== this.props) {
                var r = this.state.status;
                this.props.in
                  ? r !== D && r !== U && (t = D)
                  : (r === D || r === U) && (t = H);
              }
              this.updateStatus(!1, t);
            }),
            (r.componentWillUnmount = function () {
              this.cancelNextCallback();
            }),
            (r.getTimeouts = function () {
              var e = this.props.timeout,
                t = e,
                r = e;
              return (
                null != e &&
                  "number" != typeof e &&
                  "string" != typeof e &&
                  ((r = e.exit), (t = e.enter)),
                { exit: r, enter: t }
              );
            }),
            (r.updateStatus = function (e, t) {
              void 0 === e && (e = !1),
                null !== t
                  ? (this.cancelNextCallback(),
                    t === D ? this.performEnter(e) : this.performExit())
                  : this.props.unmountOnExit &&
                    this.state.status === L &&
                    this.setState({ status: F });
            }),
            (r.performEnter = function (e) {
              var t = this,
                r = this.props.enter,
                n = this.getTimeouts();
              if (!e && !r) {
                this.safeSetState({ status: U }, function () {
                  t.props.onEntered && t.props.onEntered(t.node, e);
                });
                return;
              }
              this.props.onEnter && this.props.onEnter(this.node, e),
                this.safeSetState({ status: D }, function () {
                  t.props.onEntering && t.props.onEntering(t.node, e),
                    t.onTransitionEnd(n.enter, function () {
                      t.safeSetState({ status: U }, function () {
                        t.props.onEntered && t.props.onEntered(t.node, e);
                      });
                    });
                });
            }),
            (r.performExit = function () {
              var e = this,
                t = this.props.exit,
                r = this.getTimeouts();
              if (!t) {
                this.safeSetState({ status: L }, function () {
                  e.props.onExited && e.props.onExited(e.node);
                });
                return;
              }
              this.props.onExit && this.props.onExit(this.node),
                this.safeSetState({ status: H }, function () {
                  e.props.onExiting && e.props.onExiting(e.node),
                    e.onTransitionEnd(r.exit, function () {
                      e.safeSetState({ status: L }, function () {
                        e.props.onExited && e.props.onExited(e.node);
                      });
                    });
                });
            }),
            (r.cancelNextCallback = function () {
              null !== this.nextCallback &&
                this.nextCallback.cancel &&
                (this.nextCallback.cancel(), (this.nextCallback = null));
            }),
            (r.safeSetState = function (e, t) {
              (t = this.setNextCallback(t)), this.setState(e, t);
            }),
            (r.setNextCallback = function (e) {
              var t = this,
                r = !0;
              return (
                (this.nextCallback = function () {
                  r && ((r = !1), (t.nextCallback = null), e());
                }),
                (this.nextCallback.cancel = function () {
                  r = !1;
                }),
                this.nextCallback
              );
            }),
            (r.onTransitionEnd = function (e, t) {
              this.setNextCallback(t);
              var r = null == e && !this.props.addEndListener;
              if (!this.node || r) {
                setTimeout(this.nextCallback, 0);
                return;
              }
              this.props.addEndListener &&
                this.props.addEndListener(this.node, this.nextCallback),
                null != e && setTimeout(this.nextCallback, e);
            }),
            (r.render = function () {
              var e = this.state.status;
              if (e === F) return null;
              var t = this.props;
              return (0, t.children)(
                e,
                C(t, [
                  "children",
                  "in",
                  "mountOnEnter",
                  "unmountOnExit",
                  "appear",
                  "enter",
                  "exit",
                  "timeout",
                  "addEndListener",
                  "onEnter",
                  "onEntering",
                  "onEntered",
                  "onExit",
                  "onExiting",
                  "onExited",
                  "nodeRef",
                ])
              );
            }),
            S(t, [
              {
                key: "node",
                get: function () {
                  var e,
                    t =
                      null === (e = this.props.nodeRef) || void 0 === e
                        ? void 0
                        : e.current;
                  if (!t)
                    throw Error(
                      "notistack - Custom snackbar is not refForwarding"
                    );
                  return t;
                },
              },
            ]),
            t
          );
        })(d.Component);
      function z() {}
      function G(e, t) {
        "function" == typeof e ? e(t) : e && (e.current = t);
      }
      function q(e, t) {
        return (0, d.useMemo)(
          function () {
            return null == e && null == t
              ? null
              : function (r) {
                  G(e, r), G(t, r);
                };
          },
          [e, t]
        );
      }
      function W(e) {
        var t = e.timeout,
          r = e.style,
          n = void 0 === r ? {} : r,
          i = e.mode;
        return {
          duration: "object" == typeof t ? t[i] || 0 : t,
          easing: n.transitionTimingFunction,
          delay: n.transitionDelay,
        };
      }
      $.defaultProps = {
        in: !1,
        mountOnEnter: !1,
        unmountOnExit: !1,
        appear: !1,
        enter: !0,
        exit: !0,
        onEnter: z,
        onEntering: z,
        onEntered: z,
        onExit: z,
        onExiting: z,
        onExited: z,
      };
      var V = {
          easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
          easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
          sharp: "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        Z = function (e) {
          e.scrollTop = e.scrollTop;
        },
        K = function (e) {
          return Math.round(e) + "ms";
        };
      function Q(e, t) {
        void 0 === e && (e = ["all"]);
        var r = t || {},
          n = r.duration,
          i = void 0 === n ? 300 : n,
          o = r.easing,
          a = void 0 === o ? V.easeInOut : o,
          s = r.delay,
          l = void 0 === s ? 0 : s;
        return (Array.isArray(e) ? e : [e])
          .map(function (e) {
            return (
              e +
              " " +
              ("string" == typeof i ? i : K(i)) +
              " " +
              a +
              " " +
              ("string" == typeof l ? l : K(l))
            );
          })
          .join(",");
      }
      function J(e) {
        return ((e && e.ownerDocument) || document).defaultView || window;
      }
      function Y(e, t) {
        if (t) {
          var r = (function (e, t) {
            var r,
              n = t.getBoundingClientRect(),
              i = J(t);
            if (t.fakeTransform) r = t.fakeTransform;
            else {
              var o = i.getComputedStyle(t);
              r =
                o.getPropertyValue("-webkit-transform") ||
                o.getPropertyValue("transform");
            }
            var a = 0,
              s = 0;
            if (r && "none" !== r && "string" == typeof r) {
              var l = r.split("(")[1].split(")")[0].split(",");
              (a = parseInt(l[4], 10)), (s = parseInt(l[5], 10));
            }
            switch (e) {
              case "left":
                return "translateX(" + (i.innerWidth + a - n.left) + "px)";
              case "right":
                return "translateX(-" + (n.left + n.width - a) + "px)";
              case "up":
                return "translateY(" + (i.innerHeight + s - n.top) + "px)";
              default:
                return "translateY(-" + (n.top + n.height - s) + "px)";
            }
          })(e, t);
          r && ((t.style.webkitTransform = r), (t.style.transform = r));
        }
      }
      var X = (0, d.forwardRef)(function (e, t) {
        var r = e.children,
          n = e.direction,
          i = void 0 === n ? "down" : n,
          o = e.in,
          a = e.style,
          s = e.timeout,
          l = void 0 === s ? 0 : s,
          u = e.onEnter,
          c = e.onEntered,
          f = e.onExit,
          h = e.onExited,
          p = C(e, [
            "children",
            "direction",
            "in",
            "style",
            "timeout",
            "onEnter",
            "onEntered",
            "onExit",
            "onExited",
          ]),
          m = (0, d.useRef)(null),
          g = q(r.ref, m),
          y = q(g, t),
          b = (0, d.useCallback)(
            function () {
              m.current && Y(i, m.current);
            },
            [i]
          );
        return (
          (0, d.useEffect)(
            function () {
              if (!o && "down" !== i && "right" !== i) {
                var e = (function (e, t) {
                    var r;
                    function n() {
                      for (
                        var n = this, i = arguments.length, o = Array(i), a = 0;
                        a < i;
                        a++
                      )
                        o[a] = arguments[a];
                      clearTimeout(r),
                        (r = setTimeout(function () {
                          e.apply(n, o);
                        }, t));
                    }
                    return (
                      void 0 === t && (t = 166),
                      (n.clear = function () {
                        clearTimeout(r);
                      }),
                      n
                    );
                  })(function () {
                    m.current && Y(i, m.current);
                  }),
                  t = J(m.current);
                return (
                  t.addEventListener("resize", e),
                  function () {
                    e.clear(), t.removeEventListener("resize", e);
                  }
                );
              }
            },
            [i, o]
          ),
          (0, d.useEffect)(
            function () {
              o || b();
            },
            [o, b]
          ),
          (0, d.createElement)(
            $,
            Object.assign(
              {
                appear: !0,
                nodeRef: m,
                onEnter: function (e, t) {
                  Y(i, e), Z(e), u && u(e, t);
                },
                onEntered: c,
                onEntering: function (e) {
                  var t =
                      (null == a ? void 0 : a.transitionTimingFunction) ||
                      V.easeOut,
                    r = W({
                      timeout: l,
                      mode: "enter",
                      style: P({}, a, { transitionTimingFunction: t }),
                    });
                  (e.style.webkitTransition = Q("-webkit-transform", r)),
                    (e.style.transition = Q("transform", r)),
                    (e.style.webkitTransform = "none"),
                    (e.style.transform = "none");
                },
                onExit: function (e) {
                  var t =
                      (null == a ? void 0 : a.transitionTimingFunction) ||
                      V.sharp,
                    r = W({
                      timeout: l,
                      mode: "exit",
                      style: P({}, a, { transitionTimingFunction: t }),
                    });
                  (e.style.webkitTransition = Q("-webkit-transform", r)),
                    (e.style.transition = Q("transform", r)),
                    Y(i, e),
                    f && f(e);
                },
                onExited: function (e) {
                  (e.style.webkitTransition = ""),
                    (e.style.transition = ""),
                    h && h(e);
                },
                in: o,
                timeout: l,
              },
              p
            ),
            function (e, t) {
              return (0, d.cloneElement)(
                r,
                P(
                  {
                    ref: y,
                    style: P(
                      { visibility: "exited" !== e || o ? void 0 : "hidden" },
                      a,
                      {},
                      r.props.style
                    ),
                  },
                  t
                )
              );
            }
          )
        );
      });
      X.displayName = "Slide";
      var ee = function (e) {
          return d.createElement(
            "svg",
            Object.assign(
              {
                viewBox: "0 0 24 24",
                focusable: "false",
                style: {
                  fontSize: 20,
                  marginInlineEnd: 8,
                  userSelect: "none",
                  width: "1em",
                  height: "1em",
                  display: "inline-block",
                  fill: "currentColor",
                  flexShrink: 0,
                },
              },
              e
            )
          );
        },
        et = {
          maxSnack: 3,
          persist: !1,
          hideIconVariant: !1,
          disableWindowBlurListener: !1,
          variant: "default",
          autoHideDuration: 5e3,
          iconVariant: {
            default: void 0,
            success: d.createElement(function () {
              return d.createElement(
                ee,
                null,
                d.createElement("path", {
                  d: "M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41\n        10.59L10 14.17L17.59 6.58L19 8L10 17Z",
                })
              );
            }, null),
            warning: d.createElement(function () {
              return d.createElement(
                ee,
                null,
                d.createElement("path", {
                  d: "M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z",
                })
              );
            }, null),
            error: d.createElement(function () {
              return d.createElement(
                ee,
                null,
                d.createElement("path", {
                  d: "M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,\n        6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,\n        13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z",
                })
              );
            }, null),
            info: d.createElement(function () {
              return d.createElement(
                ee,
                null,
                d.createElement("path", {
                  d: "M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,\n        0 22,12A10,10 0 0,0 12,2Z",
                })
              );
            }, null),
          },
          anchorOrigin: { vertical: "bottom", horizontal: "left" },
          TransitionComponent: X,
          transitionDuration: { enter: 225, exit: 195 },
        },
        er = function (e, t) {
          var r = function (e) {
            return "number" == typeof e || null === e;
          };
          return r(e) ? e : r(t) ? t : et.autoHideDuration;
        },
        en = function (e, t) {
          var r = function (e, t) {
            return t.some(function (t) {
              return typeof e === t;
            });
          };
          return r(e, ["string", "number"])
            ? e
            : r(e, ["object"])
            ? P({}, et.transitionDuration, {}, r(t, ["object"]) && t, {}, e)
            : r(t, ["string", "number"])
            ? t
            : r(t, ["object"])
            ? P({}, et.transitionDuration, {}, t)
            : et.transitionDuration;
        };
      function ei(e) {
        return Object.entries(e).reduce(function (e, t) {
          var r,
            n = t[0],
            i = t[1];
          return P({}, e, (((r = {})[n] = k(i)), r));
        }, {});
      }
      var eo = {
          SnackbarContainer: "notistack-SnackbarContainer",
          Snackbar: "notistack-Snackbar",
          CollapseWrapper: "notistack-CollapseWrapper",
          MuiContent: "notistack-MuiContent",
          MuiContentVariant: function (e) {
            return "notistack-MuiContent-" + e;
          },
        },
        ea = ei({ root: { height: 0 }, entered: { height: "auto" } }),
        es = (0, d.forwardRef)(function (e, t) {
          var r = e.children,
            n = e.in,
            i = e.onExited,
            o = (0, d.useRef)(null),
            a = (0, d.useRef)(null),
            s = q(t, a),
            l = function () {
              return o.current ? o.current.clientHeight : 0;
            };
          return (0, d.createElement)(
            $,
            {
              in: n,
              unmountOnExit: !0,
              onEnter: function (e) {
                e.style.height = "0px";
              },
              onEntered: function (e) {
                e.style.height = "auto";
              },
              onEntering: function (e) {
                var t = l(),
                  r = W({ timeout: 175, mode: "enter" }),
                  n = r.duration,
                  i = r.easing;
                (e.style.transitionDuration =
                  "string" == typeof n ? n : n + "ms"),
                  (e.style.height = t + "px"),
                  (e.style.transitionTimingFunction = i || "");
              },
              onExit: function (e) {
                e.style.height = l() + "px";
              },
              onExited: i,
              onExiting: function (e) {
                Z(e);
                var t = W({ timeout: 175, mode: "exit" }),
                  r = t.duration,
                  n = t.easing;
                (e.style.transitionDuration =
                  "string" == typeof r ? r : r + "ms"),
                  (e.style.height = "0px"),
                  (e.style.transitionTimingFunction = n || "");
              },
              nodeRef: a,
              timeout: 175,
            },
            function (e, t) {
              return (0, d.createElement)(
                "div",
                Object.assign(
                  {
                    ref: s,
                    className: h(ea.root, "entered" === e && ea.entered),
                    style: P(
                      {
                        pointerEvents: "all",
                        overflow: "hidden",
                        minHeight: "0px",
                        transition: Q("height"),
                      },
                      "entered" === e && { overflow: "visible" },
                      {},
                      "exited" === e && !n && { visibility: "hidden" }
                    ),
                  },
                  t
                ),
                (0, d.createElement)(
                  "div",
                  {
                    ref: o,
                    className: eo.CollapseWrapper,
                    style: { display: "flex", width: "100%" },
                  },
                  r
                )
              );
            }
          );
        });
      es.displayName = "Collapse";
      var el = { right: "left", left: "right", bottom: "up", top: "down" },
        eu = function (e) {
          void 0 === e && (e = {});
          var t = {
            containerRoot: !0,
            containerAnchorOriginTopCenter: !0,
            containerAnchorOriginBottomCenter: !0,
            containerAnchorOriginTopRight: !0,
            containerAnchorOriginBottomRight: !0,
            containerAnchorOriginTopLeft: !0,
            containerAnchorOriginBottomLeft: !0,
          };
          return Object.keys(e)
            .filter(function (e) {
              return !t[e];
            })
            .reduce(function (t, r) {
              var n;
              return P({}, t, (((n = {})[r] = e[r]), n));
            }, {});
        },
        ec = function () {};
      function ed(e, t) {
        return e.reduce(function (e, r) {
          return null == r
            ? e
            : function () {
                for (var n = arguments.length, i = Array(n), o = 0; o < n; o++)
                  i[o] = arguments[o];
                var a = [].concat(i);
                t && -1 === a.indexOf(t) && a.push(t),
                  e.apply(this, a),
                  r.apply(this, a);
              };
        }, ec);
      }
      var ef = "undefined" != typeof window ? d.useLayoutEffect : d.useEffect;
      function eh(e) {
        var t = (0, d.useRef)(e);
        return (
          ef(function () {
            t.current = e;
          }),
          (0, d.useCallback)(function () {
            return t.current.apply(void 0, arguments);
          }, [])
        );
      }
      var ep = (0, d.forwardRef)(function (e, t) {
        var r = e.children,
          n = e.className,
          i = e.autoHideDuration,
          o = e.disableWindowBlurListener,
          a = void 0 !== o && o,
          s = e.onClose,
          l = e.id,
          u = e.open,
          c = e.SnackbarProps,
          f = void 0 === c ? {} : c,
          p = (0, d.useRef)(),
          m = eh(function () {
            s && s.apply(void 0, arguments);
          }),
          g = eh(function (e) {
            s &&
              null != e &&
              (p.current && clearTimeout(p.current),
              (p.current = setTimeout(function () {
                m(null, "timeout", l);
              }, e)));
          });
        (0, d.useEffect)(
          function () {
            return (
              u && g(i),
              function () {
                p.current && clearTimeout(p.current);
              }
            );
          },
          [u, i, g]
        );
        var y = function () {
            p.current && clearTimeout(p.current);
          },
          b = (0, d.useCallback)(
            function () {
              null != i && g(0.5 * i);
            },
            [i, g]
          );
        return (
          (0, d.useEffect)(
            function () {
              if (!a && u)
                return (
                  window.addEventListener("focus", b),
                  window.addEventListener("blur", y),
                  function () {
                    window.removeEventListener("focus", b),
                      window.removeEventListener("blur", y);
                  }
                );
            },
            [a, b, u]
          ),
          (0, d.createElement)(
            "div",
            Object.assign({ ref: t }, f, {
              className: h(eo.Snackbar, n),
              onMouseEnter: function (e) {
                f.onMouseEnter && f.onMouseEnter(e), y();
              },
              onMouseLeave: function (e) {
                f.onMouseLeave && f.onMouseLeave(e), b();
              },
            }),
            r
          )
        );
      });
      ep.displayName = "Snackbar";
      var em = ei({
          root:
            (((n = { display: "flex", flexWrap: "wrap", flexGrow: 1 })[R.upSm] =
              { flexGrow: "initial", minWidth: "288px" }),
            n),
        }),
        eg = (0, d.forwardRef)(function (e, t) {
          var r = e.className,
            n = C(e, ["className"]);
          return d.createElement(
            "div",
            Object.assign({ ref: t, className: h(em.root, r) }, n)
          );
        });
      eg.displayName = "SnackbarContent";
      var ey = ei({
          root: {
            backgroundColor: "#313131",
            fontSize: "0.875rem",
            lineHeight: 1.43,
            letterSpacing: "0.01071em",
            color: "#fff",
            alignItems: "center",
            padding: "6px 16px",
            borderRadius: "4px",
            boxShadow:
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
          },
          lessPadding: { paddingLeft: "20px" },
          default: { backgroundColor: "#313131" },
          success: { backgroundColor: "#43a047" },
          error: { backgroundColor: "#d32f2f" },
          warning: { backgroundColor: "#ff9800" },
          info: { backgroundColor: "#2196f3" },
          message: { display: "flex", alignItems: "center", padding: "8px 0" },
          action: {
            display: "flex",
            alignItems: "center",
            marginLeft: "auto",
            paddingLeft: "16px",
            marginRight: "-8px",
          },
        }),
        eb = "notistack-snackbar",
        ev = (0, d.forwardRef)(function (e, t) {
          var r = e.id,
            n = e.message,
            i = e.action,
            o = e.iconVariant,
            a = e.variant,
            s = e.hideIconVariant,
            l = e.style,
            u = e.className,
            c = o[a],
            f = i;
          return (
            "function" == typeof f && (f = f(r)),
            d.createElement(
              eg,
              {
                ref: t,
                role: "alert",
                "aria-describedby": eb,
                style: l,
                className: h(
                  eo.MuiContent,
                  eo.MuiContentVariant(a),
                  ey.root,
                  ey[a],
                  u,
                  !s && c && ey.lessPadding
                ),
              },
              d.createElement(
                "div",
                { id: eb, className: ey.message },
                s ? null : c,
                n
              ),
              f && d.createElement("div", { className: ey.action }, f)
            )
          );
        });
      ev.displayName = "MaterialDesignContent";
      var ew = (0, d.memo)(ev),
        ex = ei({
          wrappedRoot: {
            width: "100%",
            position: "relative",
            transform: "translateX(0)",
            top: 0,
            right: 0,
            bottom: 0,
            left: 0,
            minWidth: "288px",
          },
        }),
        eA = function (e) {
          var t,
            r = (0, d.useRef)(),
            n = (0, d.useState)(!0),
            i = n[0],
            o = n[1],
            a = ed([e.snack.onClose, e.onClose]),
            s = (0, d.useCallback)(function () {
              r.current = setTimeout(function () {
                o(function (e) {
                  return !e;
                });
              }, 125);
            }, []);
          (0, d.useEffect)(function () {
            return function () {
              r.current && clearTimeout(r.current);
            };
          }, []);
          var l = e.snack,
            u = e.classes,
            c = e.Component,
            f = (0, d.useMemo)(
              function () {
                return eu(u);
              },
              [u]
            ),
            p = l.open,
            m = l.SnackbarProps,
            g = l.TransitionComponent,
            y = l.TransitionProps,
            b = l.transitionDuration,
            v = l.disableWindowBlurListener,
            w = l.content,
            x = C(l, [
              "open",
              "SnackbarProps",
              "TransitionComponent",
              "TransitionProps",
              "transitionDuration",
              "disableWindowBlurListener",
              "content",
              "entered",
              "requestClose",
              "onEnter",
              "onEntered",
              "onExit",
              "onExited",
            ]),
            A = P(
              {
                direction:
                  "center" !== (t = x.anchorOrigin).horizontal
                    ? el[t.horizontal]
                    : el[t.vertical],
                timeout: b,
              },
              y
            ),
            E = w;
          "function" == typeof E && (E = E(x.id, x.message));
          var k = ["onEnter", "onEntered", "onExit", "onExited"].reduce(
            function (t, r) {
              var n;
              return P(
                {},
                t,
                (((n = {})[r] = ed([e.snack[r], e[r]], x.id)), n)
              );
            },
            {}
          );
          return d.createElement(
            es,
            { in: i, onExited: k.onExited },
            d.createElement(
              ep,
              {
                open: p,
                id: x.id,
                disableWindowBlurListener: v,
                autoHideDuration: x.autoHideDuration,
                className: h(
                  ex.wrappedRoot,
                  f.root,
                  f["anchorOrigin" + M(x.anchorOrigin)]
                ),
                SnackbarProps: m,
                onClose: a,
              },
              d.createElement(
                g,
                Object.assign({}, A, {
                  appear: !0,
                  in: p,
                  onExit: k.onExit,
                  onExited: s,
                  onEnter: k.onEnter,
                  onEntered: ed(
                    [
                      k.onEntered,
                      function () {
                        e.snack.requestClose &&
                          a(null, "instructed", e.snack.id);
                      },
                    ],
                    x.id
                  ),
                }),
                E ||
                  d.createElement(void 0 === c ? ew : c, Object.assign({}, x))
              )
            )
          );
        },
        eE = {
          view: { default: 20, dense: 4 },
          snackbar: { default: 6, dense: 2 },
        },
        ek = "." + eo.CollapseWrapper,
        eI = ei({
          root:
            (((i = {
              boxSizing: "border-box",
              display: "flex",
              maxHeight: "100%",
              position: "fixed",
              zIndex: 1400,
              height: "auto",
              width: "auto",
              transition: Q(["top", "right", "bottom", "left", "max-width"], {
                duration: 300,
                easing: "ease",
              }),
              pointerEvents: "none",
            })[ek] = {
              padding: eE.snackbar.default + "px 0px",
              transition: "padding 300ms ease 0ms",
            }),
            (i.maxWidth = "calc(100% - " + 2 * eE.view.default + "px)"),
            (i[R.downXs] = { width: "100%", maxWidth: "calc(100% - 32px)" }),
            i),
          rootDense:
            (((o = {})[ek] = { padding: eE.snackbar.dense + "px 0px" }), o),
          top: {
            top: eE.view.default - eE.snackbar.default + "px",
            flexDirection: "column",
          },
          bottom: {
            bottom: eE.view.default - eE.snackbar.default + "px",
            flexDirection: "column-reverse",
          },
          left:
            (((a = { left: eE.view.default + "px" })[R.upSm] = {
              alignItems: "flex-start",
            }),
            (a[R.downXs] = { left: "16px" }),
            a),
          right:
            (((s = { right: eE.view.default + "px" })[R.upSm] = {
              alignItems: "flex-end",
            }),
            (s[R.downXs] = { right: "16px" }),
            s),
          center:
            (((l = { left: "50%", transform: "translateX(-50%)" })[R.upSm] = {
              alignItems: "center",
            }),
            l),
        }),
        eS = (0, d.memo)(function (e) {
          var t = e.classes,
            r = void 0 === t ? {} : t,
            n = e.anchorOrigin,
            i = e.dense,
            o = e.children,
            a = h(
              eo.SnackbarContainer,
              eI[n.vertical],
              eI[n.horizontal],
              eI.root,
              r.containerRoot,
              r["containerAnchorOrigin" + M(n)],
              i && eI.rootDense
            );
          return d.createElement("div", { className: a }, o);
        }),
        eP = function (e) {
          return !("string" == typeof e || (0, d.isValidElement)(e));
        },
        eT = (function (e) {
          function t(t) {
            var r;
            return (
              ((r = e.call(this, t) || this).enqueueSnackbar = function (e, t) {
                if ((void 0 === t && (t = {}), null == e))
                  throw Error("enqueueSnackbar called with invalid argument");
                var n,
                  i = eP(e) ? e : t,
                  o = eP(e) ? e.message : e,
                  a = i.key,
                  s = i.preventDuplicate,
                  l = C(i, ["key", "preventDuplicate"]),
                  u = j(a),
                  c = u ? a : new Date().getTime() + Math.random(),
                  d =
                    ((n = r.props),
                    function (e, t) {
                      return (void 0 === t && (t = !1), t)
                        ? P({}, et[e], {}, n[e], {}, l[e])
                        : "autoHideDuration" === e
                        ? er(l.autoHideDuration, n.autoHideDuration)
                        : "transitionDuration" === e
                        ? en(l.transitionDuration, n.transitionDuration)
                        : l[e] || n[e] || et[e];
                    }),
                  f = P({ id: c }, l, {
                    message: o,
                    open: !0,
                    entered: !1,
                    requestClose: !1,
                    persist: d("persist"),
                    action: d("action"),
                    content: d("content"),
                    variant: d("variant"),
                    anchorOrigin: d("anchorOrigin"),
                    disableWindowBlurListener: d("disableWindowBlurListener"),
                    autoHideDuration: d("autoHideDuration"),
                    hideIconVariant: d("hideIconVariant"),
                    TransitionComponent: d("TransitionComponent"),
                    transitionDuration: d("transitionDuration"),
                    TransitionProps: d("TransitionProps", !0),
                    iconVariant: d("iconVariant", !0),
                    style: d("style", !0),
                    SnackbarProps: d("SnackbarProps", !0),
                    className: h(r.props.className, l.className),
                  });
                return (
                  f.persist && (f.autoHideDuration = void 0),
                  r.setState(function (e) {
                    if ((void 0 === s && r.props.preventDuplicate) || s) {
                      var t = function (e) {
                          return u ? e.id === c : e.message === o;
                        },
                        n = e.queue.findIndex(t) > -1,
                        i = e.snacks.findIndex(t) > -1;
                      if (n || i) return e;
                    }
                    return r.handleDisplaySnack(
                      P({}, e, { queue: [].concat(e.queue, [f]) })
                    );
                  }),
                  c
                );
              }),
              (r.handleDisplaySnack = function (e) {
                return e.snacks.length >= r.maxSnack
                  ? r.handleDismissOldest(e)
                  : r.processQueue(e);
              }),
              (r.processQueue = function (e) {
                var t = e.queue,
                  r = e.snacks;
                return t.length > 0
                  ? P({}, e, {
                      snacks: [].concat(r, [t[0]]),
                      queue: t.slice(1, t.length),
                    })
                  : e;
              }),
              (r.handleDismissOldest = function (e) {
                if (
                  e.snacks.some(function (e) {
                    return !e.open || e.requestClose;
                  })
                )
                  return e;
                var t = !1,
                  n = !1;
                e.snacks.reduce(function (e, t) {
                  return e + (t.open && t.persist ? 1 : 0);
                }, 0) === r.maxSnack && (n = !0);
                var i = e.snacks.map(function (e) {
                  return t || (e.persist && !n)
                    ? P({}, e)
                    : ((t = !0), e.entered)
                    ? (e.onClose && e.onClose(null, "maxsnack", e.id),
                      r.props.onClose &&
                        r.props.onClose(null, "maxsnack", e.id),
                      P({}, e, { open: !1 }))
                    : P({}, e, { requestClose: !0 });
                });
                return P({}, e, { snacks: i });
              }),
              (r.handleEnteredSnack = function (e, t, n) {
                if (!j(n))
                  throw Error(
                    "handleEnteredSnack Cannot be called with undefined key"
                  );
                r.setState(function (e) {
                  return {
                    snacks: e.snacks.map(function (e) {
                      return e.id === n ? P({}, e, { entered: !0 }) : P({}, e);
                    }),
                  };
                });
              }),
              (r.handleCloseSnack = function (e, t, n) {
                r.props.onClose && r.props.onClose(e, t, n);
                var i = void 0 === n;
                r.setState(function (e) {
                  var t = e.snacks,
                    r = e.queue;
                  return {
                    snacks: t.map(function (e) {
                      return i || e.id === n
                        ? e.entered
                          ? P({}, e, { open: !1 })
                          : P({}, e, { requestClose: !0 })
                        : P({}, e);
                    }),
                    queue: r.filter(function (e) {
                      return e.id !== n;
                    }),
                  };
                });
              }),
              (r.closeSnackbar = function (e) {
                var t = r.state.snacks.find(function (t) {
                  return t.id === e;
                });
                j(e) && t && t.onClose && t.onClose(null, "instructed", e),
                  r.handleCloseSnack(null, "instructed", e);
              }),
              (r.handleExitedSnack = function (e, t) {
                if (!j(t))
                  throw Error(
                    "handleExitedSnack Cannot be called with undefined key"
                  );
                r.setState(function (e) {
                  var n = r.processQueue(
                    P({}, e, {
                      snacks: e.snacks.filter(function (e) {
                        return e.id !== t;
                      }),
                    })
                  );
                  return 0 === n.queue.length ? n : r.handleDismissOldest(n);
                });
              }),
              (u = r.enqueueSnackbar),
              (c = r.closeSnackbar),
              (r.state = {
                snacks: [],
                queue: [],
                contextValue: {
                  enqueueSnackbar: r.enqueueSnackbar.bind(O(r)),
                  closeSnackbar: r.closeSnackbar.bind(O(r)),
                },
              }),
              r
            );
          }
          return (
            T(t, e),
            (t.prototype.render = function () {
              var e = this,
                t = this.state.contextValue,
                r = this.props,
                n = r.domRoot,
                i = r.children,
                o = r.dense,
                a = void 0 !== o && o,
                s = r.Components,
                l = void 0 === s ? {} : s,
                u = r.classes,
                c = this.state.snacks.reduce(function (e, t) {
                  var r,
                    n = M(t.anchorOrigin),
                    i = e[n] || [];
                  return P({}, e, (((r = {})[n] = [].concat(i, [t])), r));
                }, {}),
                h = Object.keys(c).map(function (t) {
                  var r = c[t],
                    n = r[0];
                  return d.createElement(
                    eS,
                    {
                      key: t,
                      dense: a,
                      anchorOrigin: n.anchorOrigin,
                      classes: u,
                    },
                    r.map(function (t) {
                      return d.createElement(eA, {
                        key: t.id,
                        snack: t,
                        classes: u,
                        Component: l[t.variant],
                        onClose: e.handleCloseSnack,
                        onEnter: e.props.onEnter,
                        onExit: e.props.onExit,
                        onExited: ed(
                          [e.handleExitedSnack, e.props.onExited],
                          t.id
                        ),
                        onEntered: ed(
                          [e.handleEnteredSnack, e.props.onEntered],
                          t.id
                        ),
                      });
                    })
                  );
                });
              return d.createElement(
                B.Provider,
                { value: t },
                i,
                n ? (0, f.createPortal)(h, n) : h
              );
            }),
            S(t, [
              {
                key: "maxSnack",
                get: function () {
                  return this.props.maxSnack || et.maxSnack;
                },
              },
            ]),
            t
          );
        })(d.Component);
    },
    60687: (e, t, r) => {
      var n = "function" == typeof Map && Map.prototype,
        i =
          Object.getOwnPropertyDescriptor && n
            ? Object.getOwnPropertyDescriptor(Map.prototype, "size")
            : null,
        o = n && i && "function" == typeof i.get ? i.get : null,
        a = n && Map.prototype.forEach,
        s = "function" == typeof Set && Set.prototype,
        l =
          Object.getOwnPropertyDescriptor && s
            ? Object.getOwnPropertyDescriptor(Set.prototype, "size")
            : null,
        u = s && l && "function" == typeof l.get ? l.get : null,
        c = s && Set.prototype.forEach,
        d =
          "function" == typeof WeakMap && WeakMap.prototype
            ? WeakMap.prototype.has
            : null,
        f =
          "function" == typeof WeakSet && WeakSet.prototype
            ? WeakSet.prototype.has
            : null,
        h =
          "function" == typeof WeakRef && WeakRef.prototype
            ? WeakRef.prototype.deref
            : null,
        p = Boolean.prototype.valueOf,
        m = Object.prototype.toString,
        g = Function.prototype.toString,
        y = String.prototype.match,
        b = String.prototype.slice,
        v = String.prototype.replace,
        w = String.prototype.toUpperCase,
        x = String.prototype.toLowerCase,
        A = RegExp.prototype.test,
        E = Array.prototype.concat,
        k = Array.prototype.join,
        I = Array.prototype.slice,
        S = Math.floor,
        P = "function" == typeof BigInt ? BigInt.prototype.valueOf : null,
        T = Object.getOwnPropertySymbols,
        C =
          "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
            ? Symbol.prototype.toString
            : null,
        O = "function" == typeof Symbol && "object" == typeof Symbol.iterator,
        _ =
          "function" == typeof Symbol &&
          Symbol.toStringTag &&
          (typeof Symbol.toStringTag === O ? "object" : "symbol")
            ? Symbol.toStringTag
            : null,
        B = Object.prototype.propertyIsEnumerable,
        R =
          ("function" == typeof Reflect
            ? Reflect.getPrototypeOf
            : Object.getPrototypeOf) ||
          ([].__proto__ === Array.prototype
            ? function (e) {
                return e.__proto__;
              }
            : null);
      function N(e, t) {
        if (
          e === 1 / 0 ||
          e === -1 / 0 ||
          e != e ||
          (e && e > -1e3 && e < 1e3) ||
          A.call(/e/, t)
        )
          return t;
        var r = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
        if ("number" == typeof e) {
          var n = e < 0 ? -S(-e) : S(e);
          if (n !== e) {
            var i = String(n),
              o = b.call(t, i.length + 1);
            return (
              v.call(i, r, "$&_") +
              "." +
              v.call(v.call(o, /([0-9]{3})/g, "$&_"), /_$/, "")
            );
          }
        }
        return v.call(t, r, "$&_");
      }
      var M = r(42634),
        j = M.custom,
        F = G(j) ? j : null,
        L = { __proto__: null, double: '"', single: "'" },
        D = { __proto__: null, double: /(["\\])/g, single: /(['\\])/g };
      function U(e, t, r) {
        var n = L[r.quoteStyle || t];
        return n + e + n;
      }
      function H(e) {
        return !_ || !("object" == typeof e && (_ in e || void 0 !== e[_]));
      }
      function $(e) {
        return "[object Array]" === V(e) && H(e);
      }
      function z(e) {
        return "[object RegExp]" === V(e) && H(e);
      }
      function G(e) {
        if (O) return e && "object" == typeof e && e instanceof Symbol;
        if ("symbol" == typeof e) return !0;
        if (!e || "object" != typeof e || !C) return !1;
        try {
          return C.call(e), !0;
        } catch (e) {}
        return !1;
      }
      e.exports = function e(t, n, i, s) {
        var l = n || {};
        if (W(l, "quoteStyle") && !W(L, l.quoteStyle))
          throw TypeError('option "quoteStyle" must be "single" or "double"');
        if (
          W(l, "maxStringLength") &&
          ("number" == typeof l.maxStringLength
            ? l.maxStringLength < 0 && l.maxStringLength !== 1 / 0
            : null !== l.maxStringLength)
        )
          throw TypeError(
            'option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`'
          );
        var m = !W(l, "customInspect") || l.customInspect;
        if ("boolean" != typeof m && "symbol" !== m)
          throw TypeError(
            "option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`"
          );
        if (
          W(l, "indent") &&
          null !== l.indent &&
          "	" !== l.indent &&
          !(parseInt(l.indent, 10) === l.indent && l.indent > 0)
        )
          throw TypeError(
            'option "indent" must be "\\t", an integer > 0, or `null`'
          );
        if (W(l, "numericSeparator") && "boolean" != typeof l.numericSeparator)
          throw TypeError(
            'option "numericSeparator", if provided, must be `true` or `false`'
          );
        var w = l.numericSeparator;
        if (void 0 === t) return "undefined";
        if (null === t) return "null";
        if ("boolean" == typeof t) return t ? "true" : "false";
        if ("string" == typeof t)
          return (function e(t, r) {
            if (t.length > r.maxStringLength) {
              var n = t.length - r.maxStringLength;
              return (
                e(b.call(t, 0, r.maxStringLength), r) +
                "... " +
                n +
                " more character" +
                (n > 1 ? "s" : "")
              );
            }
            var i = D[r.quoteStyle || "single"];
            return (
              (i.lastIndex = 0),
              U(v.call(v.call(t, i, "\\$1"), /[\x00-\x1f]/g, K), "single", r)
            );
          })(t, l);
        if ("number" == typeof t) {
          if (0 === t) return 1 / 0 / t > 0 ? "0" : "-0";
          var A = String(t);
          return w ? N(t, A) : A;
        }
        if ("bigint" == typeof t) {
          var S = String(t) + "n";
          return w ? N(t, S) : S;
        }
        var T = void 0 === l.depth ? 5 : l.depth;
        if ((void 0 === i && (i = 0), i >= T && T > 0 && "object" == typeof t))
          return $(t) ? "[Array]" : "[Object]";
        var j = (function (e, t) {
          var r;
          if ("	" === e.indent) r = "	";
          else {
            if ("number" != typeof e.indent || !(e.indent > 0)) return null;
            r = k.call(Array(e.indent + 1), " ");
          }
          return { base: r, prev: k.call(Array(t + 1), r) };
        })(l, i);
        if (void 0 === s) s = [];
        else if (Z(s, t) >= 0) return "[Circular]";
        function q(t, r, n) {
          if ((r && (s = I.call(s)).push(r), n)) {
            var o = { depth: l.depth };
            return (
              W(l, "quoteStyle") && (o.quoteStyle = l.quoteStyle),
              e(t, o, i + 1, s)
            );
          }
          return e(t, l, i + 1, s);
        }
        if ("function" == typeof t && !z(t)) {
          var et = (function (e) {
              if (e.name) return e.name;
              var t = y.call(g.call(e), /^function\s*([\w$]+)/);
              return t ? t[1] : null;
            })(t),
            er = ee(t, q);
          return (
            "[Function" +
            (et ? ": " + et : " (anonymous)") +
            "]" +
            (er.length > 0 ? " { " + k.call(er, ", ") + " }" : "")
          );
        }
        if (G(t)) {
          var en = O
            ? v.call(String(t), /^(Symbol\(.*\))_[^)]*$/, "$1")
            : C.call(t);
          return "object" != typeof t || O ? en : Q(en);
        }
        if (
          t &&
          "object" == typeof t &&
          (("undefined" != typeof HTMLElement && t instanceof HTMLElement) ||
            ("string" == typeof t.nodeName &&
              "function" == typeof t.getAttribute))
        ) {
          for (
            var ei,
              eo = "<" + x.call(String(t.nodeName)),
              ea = t.attributes || [],
              es = 0;
            es < ea.length;
            es++
          )
            eo +=
              " " +
              ea[es].name +
              "=" +
              U(
                ((ei = ea[es].value), v.call(String(ei), /"/g, "&quot;")),
                "double",
                l
              );
          return (
            (eo += ">"),
            t.childNodes && t.childNodes.length && (eo += "..."),
            (eo += "</" + x.call(String(t.nodeName)) + ">")
          );
        }
        if ($(t)) {
          if (0 === t.length) return "[]";
          var el = ee(t, q);
          return j &&
            !(function (e) {
              for (var t = 0; t < e.length; t++)
                if (Z(e[t], "\n") >= 0) return !1;
              return !0;
            })(el)
            ? "[" + X(el, j) + "]"
            : "[ " + k.call(el, ", ") + " ]";
        }
        if ("[object Error]" === V(t) && H(t)) {
          var eu = ee(t, q);
          return "cause" in Error.prototype ||
            !("cause" in t) ||
            B.call(t, "cause")
            ? 0 === eu.length
              ? "[" + String(t) + "]"
              : "{ [" + String(t) + "] " + k.call(eu, ", ") + " }"
            : "{ [" +
                String(t) +
                "] " +
                k.call(E.call("[cause]: " + q(t.cause), eu), ", ") +
                " }";
        }
        if ("object" == typeof t && m) {
          if (F && "function" == typeof t[F] && M)
            return M(t, { depth: T - i });
          if ("symbol" !== m && "function" == typeof t.inspect)
            return t.inspect();
        }
        if (
          (function (e) {
            if (!o || !e || "object" != typeof e) return !1;
            try {
              o.call(e);
              try {
                u.call(e);
              } catch (e) {
                return !0;
              }
              return e instanceof Map;
            } catch (e) {}
            return !1;
          })(t)
        ) {
          var ec = [];
          return (
            a &&
              a.call(t, function (e, r) {
                ec.push(q(r, t, !0) + " => " + q(e, t));
              }),
            Y("Map", o.call(t), ec, j)
          );
        }
        if (
          (function (e) {
            if (!u || !e || "object" != typeof e) return !1;
            try {
              u.call(e);
              try {
                o.call(e);
              } catch (e) {
                return !0;
              }
              return e instanceof Set;
            } catch (e) {}
            return !1;
          })(t)
        ) {
          var ed = [];
          return (
            c &&
              c.call(t, function (e) {
                ed.push(q(e, t));
              }),
            Y("Set", u.call(t), ed, j)
          );
        }
        if (
          (function (e) {
            if (!d || !e || "object" != typeof e) return !1;
            try {
              d.call(e, d);
              try {
                f.call(e, f);
              } catch (e) {
                return !0;
              }
              return e instanceof WeakMap;
            } catch (e) {}
            return !1;
          })(t)
        )
          return J("WeakMap");
        if (
          (function (e) {
            if (!f || !e || "object" != typeof e) return !1;
            try {
              f.call(e, f);
              try {
                d.call(e, d);
              } catch (e) {
                return !0;
              }
              return e instanceof WeakSet;
            } catch (e) {}
            return !1;
          })(t)
        )
          return J("WeakSet");
        if (
          (function (e) {
            if (!h || !e || "object" != typeof e) return !1;
            try {
              return h.call(e), !0;
            } catch (e) {}
            return !1;
          })(t)
        )
          return J("WeakRef");
        if ("[object Number]" === V(t) && H(t)) return Q(q(Number(t)));
        if (
          (function (e) {
            if (!e || "object" != typeof e || !P) return !1;
            try {
              return P.call(e), !0;
            } catch (e) {}
            return !1;
          })(t)
        )
          return Q(q(P.call(t)));
        if ("[object Boolean]" === V(t) && H(t)) return Q(p.call(t));
        if ("[object String]" === V(t) && H(t)) return Q(q(String(t)));
        if ("undefined" != typeof window && t === window)
          return "{ [object Window] }";
        if (
          ("undefined" != typeof globalThis && t === globalThis) ||
          (void 0 !== r.g && t === r.g)
        )
          return "{ [object globalThis] }";
        if (!("[object Date]" === V(t) && H(t)) && !z(t)) {
          var ef = ee(t, q),
            eh = R
              ? R(t) === Object.prototype
              : t instanceof Object || t.constructor === Object,
            ep = t instanceof Object ? "" : "null prototype",
            em =
              !eh && _ && Object(t) === t && _ in t
                ? b.call(V(t), 8, -1)
                : ep
                ? "Object"
                : "",
            eg =
              (eh || "function" != typeof t.constructor
                ? ""
                : t.constructor.name
                ? t.constructor.name + " "
                : "") +
              (em || ep
                ? "[" + k.call(E.call([], em || [], ep || []), ": ") + "] "
                : "");
          return 0 === ef.length
            ? eg + "{}"
            : j
            ? eg + "{" + X(ef, j) + "}"
            : eg + "{ " + k.call(ef, ", ") + " }";
        }
        return String(t);
      };
      var q =
        Object.prototype.hasOwnProperty ||
        function (e) {
          return e in this;
        };
      function W(e, t) {
        return q.call(e, t);
      }
      function V(e) {
        return m.call(e);
      }
      function Z(e, t) {
        if (e.indexOf) return e.indexOf(t);
        for (var r = 0, n = e.length; r < n; r++) if (e[r] === t) return r;
        return -1;
      }
      function K(e) {
        var t = e.charCodeAt(0),
          r = { 8: "b", 9: "t", 10: "n", 12: "f", 13: "r" }[t];
        return r
          ? "\\" + r
          : "\\x" + (t < 16 ? "0" : "") + w.call(t.toString(16));
      }
      function Q(e) {
        return "Object(" + e + ")";
      }
      function J(e) {
        return e + " { ? }";
      }
      function Y(e, t, r, n) {
        return e + " (" + t + ") {" + (n ? X(r, n) : k.call(r, ", ")) + "}";
      }
      function X(e, t) {
        if (0 === e.length) return "";
        var r = "\n" + t.prev + t.base;
        return r + k.call(e, "," + r) + "\n" + t.prev;
      }
      function ee(e, t) {
        var r,
          n = $(e),
          i = [];
        if (n) {
          i.length = e.length;
          for (var o = 0; o < e.length; o++) i[o] = W(e, o) ? t(e[o], e) : "";
        }
        var a = "function" == typeof T ? T(e) : [];
        if (O) {
          r = {};
          for (var s = 0; s < a.length; s++) r["$" + a[s]] = a[s];
        }
        for (var l in e)
          W(e, l) &&
            (!n || String(Number(l)) !== l || !(l < e.length)) &&
            ((O && r["$" + l] instanceof Symbol) ||
              (A.call(/[^\w$]/, l)
                ? i.push(t(l, e) + ": " + t(e[l], e))
                : i.push(l + ": " + t(e[l], e))));
        if ("function" == typeof T)
          for (var u = 0; u < a.length; u++)
            B.call(e, a[u]) && i.push("[" + t(a[u]) + "]: " + t(e[a[u]], e));
        return i;
      }
    },
    18725: (e) => {
      "use strict";
      var t = String.prototype.replace,
        r = /%20/g,
        n = { RFC1738: "RFC1738", RFC3986: "RFC3986" };
      e.exports = {
        default: n.RFC3986,
        formatters: {
          RFC1738: function (e) {
            return t.call(e, r, "+");
          },
          RFC3986: function (e) {
            return String(e);
          },
        },
        RFC1738: n.RFC1738,
        RFC3986: n.RFC3986,
      };
    },
    51973: (e, t, r) => {
      "use strict";
      var n = r(98160),
        i = r(97254),
        o = r(18725);
      e.exports = { formats: o, parse: i, stringify: n };
    },
    97254: (e, t, r) => {
      "use strict";
      var n = r(21820),
        i = Object.prototype.hasOwnProperty,
        o = Array.isArray,
        a = {
          allowDots: !1,
          allowEmptyArrays: !1,
          allowPrototypes: !1,
          allowSparse: !1,
          arrayLimit: 20,
          charset: "utf-8",
          charsetSentinel: !1,
          comma: !1,
          decodeDotInKeys: !1,
          decoder: n.decode,
          delimiter: "&",
          depth: 5,
          duplicates: "combine",
          ignoreQueryPrefix: !1,
          interpretNumericEntities: !1,
          parameterLimit: 1e3,
          parseArrays: !0,
          plainObjects: !1,
          strictDepth: !1,
          strictNullHandling: !1,
          throwOnLimitExceeded: !1,
        },
        s = function (e, t, r) {
          if (e && "string" == typeof e && t.comma && e.indexOf(",") > -1)
            return e.split(",");
          if (t.throwOnLimitExceeded && r >= t.arrayLimit)
            throw RangeError(
              "Array limit exceeded. Only " +
                t.arrayLimit +
                " element" +
                (1 === t.arrayLimit ? "" : "s") +
                " allowed in an array."
            );
          return e;
        },
        l = function (e, t) {
          var r = { __proto__: null },
            l = t.ignoreQueryPrefix ? e.replace(/^\?/, "") : e;
          l = l.replace(/%5B/gi, "[").replace(/%5D/gi, "]");
          var u = t.parameterLimit === 1 / 0 ? void 0 : t.parameterLimit,
            c = l.split(t.delimiter, t.throwOnLimitExceeded ? u + 1 : u);
          if (t.throwOnLimitExceeded && c.length > u)
            throw RangeError(
              "Parameter limit exceeded. Only " +
                u +
                " parameter" +
                (1 === u ? "" : "s") +
                " allowed."
            );
          var d = -1,
            f = t.charset;
          if (t.charsetSentinel)
            for (h = 0; h < c.length; ++h)
              0 === c[h].indexOf("utf8=") &&
                ("utf8=%E2%9C%93" === c[h]
                  ? (f = "utf-8")
                  : "utf8=%26%2310003%3B" === c[h] && (f = "iso-8859-1"),
                (d = h),
                (h = c.length));
          for (h = 0; h < c.length; ++h)
            if (h !== d) {
              var h,
                p,
                m,
                g = c[h],
                y = g.indexOf("]="),
                b = -1 === y ? g.indexOf("=") : y + 1;
              -1 === b
                ? ((p = t.decoder(g, a.decoder, f, "key")),
                  (m = t.strictNullHandling ? null : ""))
                : ((p = t.decoder(g.slice(0, b), a.decoder, f, "key")),
                  (m = n.maybeMap(
                    s(g.slice(b + 1), t, o(r[p]) ? r[p].length : 0),
                    function (e) {
                      return t.decoder(e, a.decoder, f, "value");
                    }
                  ))),
                m &&
                  t.interpretNumericEntities &&
                  "iso-8859-1" === f &&
                  (m = String(m).replace(/&#(\d+);/g, function (e, t) {
                    return String.fromCharCode(parseInt(t, 10));
                  })),
                g.indexOf("[]=") > -1 && (m = o(m) ? [m] : m);
              var v = i.call(r, p);
              v && "combine" === t.duplicates
                ? (r[p] = n.combine(r[p], m))
                : (v && "last" !== t.duplicates) || (r[p] = m);
            }
          return r;
        },
        u = function (e, t, r, i) {
          var o = 0;
          if (e.length > 0 && "[]" === e[e.length - 1]) {
            var a = e.slice(0, -1).join("");
            o = Array.isArray(t) && t[a] ? t[a].length : 0;
          }
          for (var l = i ? t : s(t, r, o), u = e.length - 1; u >= 0; --u) {
            var c,
              d = e[u];
            if ("[]" === d && r.parseArrays)
              c =
                r.allowEmptyArrays &&
                ("" === l || (r.strictNullHandling && null === l))
                  ? []
                  : n.combine([], l);
            else {
              c = r.plainObjects ? { __proto__: null } : {};
              var f =
                  "[" === d.charAt(0) && "]" === d.charAt(d.length - 1)
                    ? d.slice(1, -1)
                    : d,
                h = r.decodeDotInKeys ? f.replace(/%2E/g, ".") : f,
                p = parseInt(h, 10);
              r.parseArrays || "" !== h
                ? !isNaN(p) &&
                  d !== h &&
                  String(p) === h &&
                  p >= 0 &&
                  r.parseArrays &&
                  p <= r.arrayLimit
                  ? ((c = [])[p] = l)
                  : "__proto__" !== h && (c[h] = l)
                : (c = { 0: l });
            }
            l = c;
          }
          return l;
        },
        c = function (e, t, r, n) {
          if (e) {
            var o = r.allowDots ? e.replace(/\.([^.[]+)/g, "[$1]") : e,
              a = /(\[[^[\]]*])/g,
              s = r.depth > 0 && /(\[[^[\]]*])/.exec(o),
              l = s ? o.slice(0, s.index) : o,
              c = [];
            if (l) {
              if (
                !r.plainObjects &&
                i.call(Object.prototype, l) &&
                !r.allowPrototypes
              )
                return;
              c.push(l);
            }
            for (
              var d = 0;
              r.depth > 0 && null !== (s = a.exec(o)) && d < r.depth;

            ) {
              if (
                ((d += 1),
                !r.plainObjects &&
                  i.call(Object.prototype, s[1].slice(1, -1)) &&
                  !r.allowPrototypes)
              )
                return;
              c.push(s[1]);
            }
            if (s) {
              if (!0 === r.strictDepth)
                throw RangeError(
                  "Input depth exceeded depth option of " +
                    r.depth +
                    " and strictDepth is true"
                );
              c.push("[" + o.slice(s.index) + "]");
            }
            return u(c, t, r, n);
          }
        },
        d = function (e) {
          if (!e) return a;
          if (
            void 0 !== e.allowEmptyArrays &&
            "boolean" != typeof e.allowEmptyArrays
          )
            throw TypeError(
              "`allowEmptyArrays` option can only be `true` or `false`, when provided"
            );
          if (
            void 0 !== e.decodeDotInKeys &&
            "boolean" != typeof e.decodeDotInKeys
          )
            throw TypeError(
              "`decodeDotInKeys` option can only be `true` or `false`, when provided"
            );
          if (
            null !== e.decoder &&
            void 0 !== e.decoder &&
            "function" != typeof e.decoder
          )
            throw TypeError("Decoder has to be a function.");
          if (
            void 0 !== e.charset &&
            "utf-8" !== e.charset &&
            "iso-8859-1" !== e.charset
          )
            throw TypeError(
              "The charset option must be either utf-8, iso-8859-1, or undefined"
            );
          if (
            void 0 !== e.throwOnLimitExceeded &&
            "boolean" != typeof e.throwOnLimitExceeded
          )
            throw TypeError("`throwOnLimitExceeded` option must be a boolean");
          var t = void 0 === e.charset ? a.charset : e.charset,
            r = void 0 === e.duplicates ? a.duplicates : e.duplicates;
          if ("combine" !== r && "first" !== r && "last" !== r)
            throw TypeError(
              "The duplicates option must be either combine, first, or last"
            );
          return {
            allowDots:
              void 0 === e.allowDots
                ? !0 === e.decodeDotInKeys || a.allowDots
                : !!e.allowDots,
            allowEmptyArrays:
              "boolean" == typeof e.allowEmptyArrays
                ? !!e.allowEmptyArrays
                : a.allowEmptyArrays,
            allowPrototypes:
              "boolean" == typeof e.allowPrototypes
                ? e.allowPrototypes
                : a.allowPrototypes,
            allowSparse:
              "boolean" == typeof e.allowSparse ? e.allowSparse : a.allowSparse,
            arrayLimit:
              "number" == typeof e.arrayLimit ? e.arrayLimit : a.arrayLimit,
            charset: t,
            charsetSentinel:
              "boolean" == typeof e.charsetSentinel
                ? e.charsetSentinel
                : a.charsetSentinel,
            comma: "boolean" == typeof e.comma ? e.comma : a.comma,
            decodeDotInKeys:
              "boolean" == typeof e.decodeDotInKeys
                ? e.decodeDotInKeys
                : a.decodeDotInKeys,
            decoder: "function" == typeof e.decoder ? e.decoder : a.decoder,
            delimiter:
              "string" == typeof e.delimiter || n.isRegExp(e.delimiter)
                ? e.delimiter
                : a.delimiter,
            depth:
              "number" == typeof e.depth || !1 === e.depth ? +e.depth : a.depth,
            duplicates: r,
            ignoreQueryPrefix: !0 === e.ignoreQueryPrefix,
            interpretNumericEntities:
              "boolean" == typeof e.interpretNumericEntities
                ? e.interpretNumericEntities
                : a.interpretNumericEntities,
            parameterLimit:
              "number" == typeof e.parameterLimit
                ? e.parameterLimit
                : a.parameterLimit,
            parseArrays: !1 !== e.parseArrays,
            plainObjects:
              "boolean" == typeof e.plainObjects
                ? e.plainObjects
                : a.plainObjects,
            strictDepth:
              "boolean" == typeof e.strictDepth
                ? !!e.strictDepth
                : a.strictDepth,
            strictNullHandling:
              "boolean" == typeof e.strictNullHandling
                ? e.strictNullHandling
                : a.strictNullHandling,
            throwOnLimitExceeded:
              "boolean" == typeof e.throwOnLimitExceeded &&
              e.throwOnLimitExceeded,
          };
        };
      e.exports = function (e, t) {
        var r = d(t);
        if ("" === e || null == e)
          return r.plainObjects ? { __proto__: null } : {};
        for (
          var i = "string" == typeof e ? l(e, r) : e,
            o = r.plainObjects ? { __proto__: null } : {},
            a = Object.keys(i),
            s = 0;
          s < a.length;
          ++s
        ) {
          var u = a[s],
            f = c(u, i[u], r, "string" == typeof e);
          o = n.merge(o, f, r);
        }
        return !0 === r.allowSparse ? o : n.compact(o);
      };
    },
    98160: (e, t, r) => {
      "use strict";
      var n = r(59540),
        i = r(21820),
        o = r(18725),
        a = Object.prototype.hasOwnProperty,
        s = {
          brackets: function (e) {
            return e + "[]";
          },
          comma: "comma",
          indices: function (e, t) {
            return e + "[" + t + "]";
          },
          repeat: function (e) {
            return e;
          },
        },
        l = Array.isArray,
        u = Array.prototype.push,
        c = function (e, t) {
          u.apply(e, l(t) ? t : [t]);
        },
        d = Date.prototype.toISOString,
        f = o.default,
        h = {
          addQueryPrefix: !1,
          allowDots: !1,
          allowEmptyArrays: !1,
          arrayFormat: "indices",
          charset: "utf-8",
          charsetSentinel: !1,
          commaRoundTrip: !1,
          delimiter: "&",
          encode: !0,
          encodeDotInKeys: !1,
          encoder: i.encode,
          encodeValuesOnly: !1,
          filter: void 0,
          format: f,
          formatter: o.formatters[f],
          indices: !1,
          serializeDate: function (e) {
            return d.call(e);
          },
          skipNulls: !1,
          strictNullHandling: !1,
        },
        p = {},
        m = function e(t, r, o, a, s, u, d, f, m, g, y, b, v, w, x, A, E, k) {
          for (
            var I, S, P = t, T = k, C = 0, O = !1;
            void 0 !== (T = T.get(p)) && !O;

          ) {
            var _ = T.get(t);
            if (((C += 1), void 0 !== _)) {
              if (_ === C) throw RangeError("Cyclic object value");
              O = !0;
            }
            void 0 === T.get(p) && (C = 0);
          }
          if (
            ("function" == typeof g
              ? (P = g(r, P))
              : P instanceof Date
              ? (P = v(P))
              : "comma" === o &&
                l(P) &&
                (P = i.maybeMap(P, function (e) {
                  return e instanceof Date ? v(e) : e;
                })),
            null === P)
          ) {
            if (u) return m && !A ? m(r, h.encoder, E, "key", w) : r;
            P = "";
          }
          if (
            "string" == typeof (I = P) ||
            "number" == typeof I ||
            "boolean" == typeof I ||
            "symbol" == typeof I ||
            "bigint" == typeof I ||
            i.isBuffer(P)
          )
            return m
              ? [
                  x(A ? r : m(r, h.encoder, E, "key", w)) +
                    "=" +
                    x(m(P, h.encoder, E, "value", w)),
                ]
              : [x(r) + "=" + x(String(P))];
          var B = [];
          if (void 0 === P) return B;
          if ("comma" === o && l(P))
            A && m && (P = i.maybeMap(P, m)),
              (S = [{ value: P.length > 0 ? P.join(",") || null : void 0 }]);
          else if (l(g)) S = g;
          else {
            var R = Object.keys(P);
            S = y ? R.sort(y) : R;
          }
          var N = f ? String(r).replace(/\./g, "%2E") : String(r),
            M = a && l(P) && 1 === P.length ? N + "[]" : N;
          if (s && l(P) && 0 === P.length) return M + "[]";
          for (var j = 0; j < S.length; ++j) {
            var F = S[j],
              L =
                "object" == typeof F && F && void 0 !== F.value
                  ? F.value
                  : P[F];
            if (!d || null !== L) {
              var D = b && f ? String(F).replace(/\./g, "%2E") : String(F),
                U = l(P)
                  ? "function" == typeof o
                    ? o(M, D)
                    : M
                  : M + (b ? "." + D : "[" + D + "]");
              k.set(t, C);
              var H = n();
              H.set(p, k),
                c(
                  B,
                  e(
                    L,
                    U,
                    o,
                    a,
                    s,
                    u,
                    d,
                    f,
                    "comma" === o && A && l(P) ? null : m,
                    g,
                    y,
                    b,
                    v,
                    w,
                    x,
                    A,
                    E,
                    H
                  )
                );
            }
          }
          return B;
        },
        g = function (e) {
          if (!e) return h;
          if (
            void 0 !== e.allowEmptyArrays &&
            "boolean" != typeof e.allowEmptyArrays
          )
            throw TypeError(
              "`allowEmptyArrays` option can only be `true` or `false`, when provided"
            );
          if (
            void 0 !== e.encodeDotInKeys &&
            "boolean" != typeof e.encodeDotInKeys
          )
            throw TypeError(
              "`encodeDotInKeys` option can only be `true` or `false`, when provided"
            );
          if (
            null !== e.encoder &&
            void 0 !== e.encoder &&
            "function" != typeof e.encoder
          )
            throw TypeError("Encoder has to be a function.");
          var t,
            r = e.charset || h.charset;
          if (
            void 0 !== e.charset &&
            "utf-8" !== e.charset &&
            "iso-8859-1" !== e.charset
          )
            throw TypeError(
              "The charset option must be either utf-8, iso-8859-1, or undefined"
            );
          var n = o.default;
          if (void 0 !== e.format) {
            if (!a.call(o.formatters, e.format))
              throw TypeError("Unknown format option provided.");
            n = e.format;
          }
          var i = o.formatters[n],
            u = h.filter;
          if (
            (("function" == typeof e.filter || l(e.filter)) && (u = e.filter),
            (t =
              e.arrayFormat in s
                ? e.arrayFormat
                : "indices" in e
                ? e.indices
                  ? "indices"
                  : "repeat"
                : h.arrayFormat),
            "commaRoundTrip" in e && "boolean" != typeof e.commaRoundTrip)
          )
            throw TypeError("`commaRoundTrip` must be a boolean, or absent");
          var c =
            void 0 === e.allowDots
              ? !0 === e.encodeDotInKeys || h.allowDots
              : !!e.allowDots;
          return {
            addQueryPrefix:
              "boolean" == typeof e.addQueryPrefix
                ? e.addQueryPrefix
                : h.addQueryPrefix,
            allowDots: c,
            allowEmptyArrays:
              "boolean" == typeof e.allowEmptyArrays
                ? !!e.allowEmptyArrays
                : h.allowEmptyArrays,
            arrayFormat: t,
            charset: r,
            charsetSentinel:
              "boolean" == typeof e.charsetSentinel
                ? e.charsetSentinel
                : h.charsetSentinel,
            commaRoundTrip: !!e.commaRoundTrip,
            delimiter: void 0 === e.delimiter ? h.delimiter : e.delimiter,
            encode: "boolean" == typeof e.encode ? e.encode : h.encode,
            encodeDotInKeys:
              "boolean" == typeof e.encodeDotInKeys
                ? e.encodeDotInKeys
                : h.encodeDotInKeys,
            encoder: "function" == typeof e.encoder ? e.encoder : h.encoder,
            encodeValuesOnly:
              "boolean" == typeof e.encodeValuesOnly
                ? e.encodeValuesOnly
                : h.encodeValuesOnly,
            filter: u,
            format: n,
            formatter: i,
            serializeDate:
              "function" == typeof e.serializeDate
                ? e.serializeDate
                : h.serializeDate,
            skipNulls:
              "boolean" == typeof e.skipNulls ? e.skipNulls : h.skipNulls,
            sort: "function" == typeof e.sort ? e.sort : null,
            strictNullHandling:
              "boolean" == typeof e.strictNullHandling
                ? e.strictNullHandling
                : h.strictNullHandling,
          };
        };
      e.exports = function (e, t) {
        var r,
          i = e,
          o = g(t);
        "function" == typeof o.filter
          ? (i = (0, o.filter)("", i))
          : l(o.filter) && (r = o.filter);
        var a = [];
        if ("object" != typeof i || null === i) return "";
        var u = s[o.arrayFormat],
          d = "comma" === u && o.commaRoundTrip;
        r || (r = Object.keys(i)), o.sort && r.sort(o.sort);
        for (var f = n(), h = 0; h < r.length; ++h) {
          var p = r[h],
            y = i[p];
          (o.skipNulls && null === y) ||
            c(
              a,
              m(
                y,
                p,
                u,
                d,
                o.allowEmptyArrays,
                o.strictNullHandling,
                o.skipNulls,
                o.encodeDotInKeys,
                o.encode ? o.encoder : null,
                o.filter,
                o.sort,
                o.allowDots,
                o.serializeDate,
                o.format,
                o.formatter,
                o.encodeValuesOnly,
                o.charset,
                f
              )
            );
        }
        var b = a.join(o.delimiter),
          v = !0 === o.addQueryPrefix ? "?" : "";
        return (
          o.charsetSentinel &&
            ("iso-8859-1" === o.charset
              ? (v += "utf8=%26%2310003%3B&")
              : (v += "utf8=%E2%9C%93&")),
          b.length > 0 ? v + b : ""
        );
      };
    },
    21820: (e, t, r) => {
      "use strict";
      var n = r(18725),
        i = Object.prototype.hasOwnProperty,
        o = Array.isArray,
        a = (function () {
          for (var e = [], t = 0; t < 256; ++t)
            e.push("%" + ((t < 16 ? "0" : "") + t.toString(16)).toUpperCase());
          return e;
        })(),
        s = function (e) {
          for (; e.length > 1; ) {
            var t = e.pop(),
              r = t.obj[t.prop];
            if (o(r)) {
              for (var n = [], i = 0; i < r.length; ++i)
                void 0 !== r[i] && n.push(r[i]);
              t.obj[t.prop] = n;
            }
          }
        },
        l = function (e, t) {
          for (
            var r = t && t.plainObjects ? { __proto__: null } : {}, n = 0;
            n < e.length;
            ++n
          )
            void 0 !== e[n] && (r[n] = e[n]);
          return r;
        };
      e.exports = {
        arrayToObject: l,
        assign: function (e, t) {
          return Object.keys(t).reduce(function (e, r) {
            return (e[r] = t[r]), e;
          }, e);
        },
        combine: function (e, t) {
          return [].concat(e, t);
        },
        compact: function (e) {
          for (
            var t = [{ obj: { o: e }, prop: "o" }], r = [], n = 0;
            n < t.length;
            ++n
          )
            for (
              var i = t[n], o = i.obj[i.prop], a = Object.keys(o), l = 0;
              l < a.length;
              ++l
            ) {
              var u = a[l],
                c = o[u];
              "object" == typeof c &&
                null !== c &&
                -1 === r.indexOf(c) &&
                (t.push({ obj: o, prop: u }), r.push(c));
            }
          return s(t), e;
        },
        decode: function (e, t, r) {
          var n = e.replace(/\+/g, " ");
          if ("iso-8859-1" === r) return n.replace(/%[0-9a-f]{2}/gi, unescape);
          try {
            return decodeURIComponent(n);
          } catch (e) {
            return n;
          }
        },
        encode: function (e, t, r, i, o) {
          if (0 === e.length) return e;
          var s = e;
          if (
            ("symbol" == typeof e
              ? (s = Symbol.prototype.toString.call(e))
              : "string" != typeof e && (s = String(e)),
            "iso-8859-1" === r)
          )
            return escape(s).replace(/%u[0-9a-f]{4}/gi, function (e) {
              return "%26%23" + parseInt(e.slice(2), 16) + "%3B";
            });
          for (var l = "", u = 0; u < s.length; u += 1024) {
            for (
              var c = s.length >= 1024 ? s.slice(u, u + 1024) : s,
                d = [],
                f = 0;
              f < c.length;
              ++f
            ) {
              var h = c.charCodeAt(f);
              if (
                45 === h ||
                46 === h ||
                95 === h ||
                126 === h ||
                (h >= 48 && h <= 57) ||
                (h >= 65 && h <= 90) ||
                (h >= 97 && h <= 122) ||
                (o === n.RFC1738 && (40 === h || 41 === h))
              ) {
                d[d.length] = c.charAt(f);
                continue;
              }
              if (h < 128) {
                d[d.length] = a[h];
                continue;
              }
              if (h < 2048) {
                d[d.length] = a[192 | (h >> 6)] + a[128 | (63 & h)];
                continue;
              }
              if (h < 55296 || h >= 57344) {
                d[d.length] =
                  a[224 | (h >> 12)] +
                  a[128 | ((h >> 6) & 63)] +
                  a[128 | (63 & h)];
                continue;
              }
              (f += 1),
                (h = 65536 + (((1023 & h) << 10) | (1023 & c.charCodeAt(f)))),
                (d[d.length] =
                  a[240 | (h >> 18)] +
                  a[128 | ((h >> 12) & 63)] +
                  a[128 | ((h >> 6) & 63)] +
                  a[128 | (63 & h)]);
            }
            l += d.join("");
          }
          return l;
        },
        isBuffer: function (e) {
          return (
            !!e &&
            "object" == typeof e &&
            !!(
              e.constructor &&
              e.constructor.isBuffer &&
              e.constructor.isBuffer(e)
            )
          );
        },
        isRegExp: function (e) {
          return "[object RegExp]" === Object.prototype.toString.call(e);
        },
        maybeMap: function (e, t) {
          if (o(e)) {
            for (var r = [], n = 0; n < e.length; n += 1) r.push(t(e[n]));
            return r;
          }
          return t(e);
        },
        merge: function e(t, r, n) {
          if (!r) return t;
          if ("object" != typeof r && "function" != typeof r) {
            if (o(t)) t.push(r);
            else {
              if (!t || "object" != typeof t) return [t, r];
              ((n && (n.plainObjects || n.allowPrototypes)) ||
                !i.call(Object.prototype, r)) &&
                (t[r] = !0);
            }
            return t;
          }
          if (!t || "object" != typeof t) return [t].concat(r);
          var a = t;
          return (o(t) && !o(r) && (a = l(t, n)), o(t) && o(r))
            ? (r.forEach(function (r, o) {
                if (i.call(t, o)) {
                  var a = t[o];
                  a && "object" == typeof a && r && "object" == typeof r
                    ? (t[o] = e(a, r, n))
                    : t.push(r);
                } else t[o] = r;
              }),
              t)
            : Object.keys(r).reduce(function (t, o) {
                var a = r[o];
                return i.call(t, o) ? (t[o] = e(t[o], a, n)) : (t[o] = a), t;
              }, a);
        },
      };
    },
    84169: (e, t, r) => {
      "use strict";
      var n = r(60687),
        i = r(87095),
        o = function (e, t, r) {
          for (var n, i = e; null != (n = i.next); i = n)
            if (n.key === t)
              return (
                (i.next = n.next), r || ((n.next = e.next), (e.next = n)), n
              );
        },
        a = function (e, t) {
          if (e) {
            var r = o(e, t);
            return r && r.value;
          }
        },
        s = function (e, t, r) {
          var n = o(e, t);
          n ? (n.value = r) : (e.next = { key: t, next: e.next, value: r });
        },
        l = function (e, t) {
          if (e) return o(e, t, !0);
        };
      e.exports = function () {
        var e,
          t = {
            assert: function (e) {
              if (!t.has(e))
                throw new i("Side channel does not contain " + n(e));
            },
            delete: function (t) {
              var r = e && e.next,
                n = l(e, t);
              return n && r && r === n && (e = void 0), !!n;
            },
            get: function (t) {
              return a(e, t);
            },
            has: function (t) {
              var r;
              return !!(r = e) && !!o(r, t);
            },
            set: function (t, r) {
              e || (e = { next: void 0 }), s(e, t, r);
            },
          };
        return t;
      };
    },
    26163: (e, t, r) => {
      "use strict";
      var n = r(82027),
        i = r(63156),
        o = r(60687),
        a = r(87095),
        s = n("%Map%", !0),
        l = i("Map.prototype.get", !0),
        u = i("Map.prototype.set", !0),
        c = i("Map.prototype.has", !0),
        d = i("Map.prototype.delete", !0),
        f = i("Map.prototype.size", !0);
      e.exports =
        !!s &&
        function () {
          var e,
            t = {
              assert: function (e) {
                if (!t.has(e))
                  throw new a("Side channel does not contain " + o(e));
              },
              delete: function (t) {
                if (e) {
                  var r = d(e, t);
                  return 0 === f(e) && (e = void 0), r;
                }
                return !1;
              },
              get: function (t) {
                if (e) return l(e, t);
              },
              has: function (t) {
                return !!e && c(e, t);
              },
              set: function (t, r) {
                e || (e = new s()), u(e, t, r);
              },
            };
          return t;
        };
    },
    56699: (e, t, r) => {
      "use strict";
      var n = r(82027),
        i = r(63156),
        o = r(60687),
        a = r(26163),
        s = r(87095),
        l = n("%WeakMap%", !0),
        u = i("WeakMap.prototype.get", !0),
        c = i("WeakMap.prototype.set", !0),
        d = i("WeakMap.prototype.has", !0),
        f = i("WeakMap.prototype.delete", !0);
      e.exports = l
        ? function () {
            var e,
              t,
              r = {
                assert: function (e) {
                  if (!r.has(e))
                    throw new s("Side channel does not contain " + o(e));
                },
                delete: function (r) {
                  if (
                    l &&
                    r &&
                    ("object" == typeof r || "function" == typeof r)
                  ) {
                    if (e) return f(e, r);
                  } else if (a && t) return t.delete(r);
                  return !1;
                },
                get: function (r) {
                  return l &&
                    r &&
                    ("object" == typeof r || "function" == typeof r) &&
                    e
                    ? u(e, r)
                    : t && t.get(r);
                },
                has: function (r) {
                  return l &&
                    r &&
                    ("object" == typeof r || "function" == typeof r) &&
                    e
                    ? d(e, r)
                    : !!t && t.has(r);
                },
                set: function (r, n) {
                  l && r && ("object" == typeof r || "function" == typeof r)
                    ? (e || (e = new l()), c(e, r, n))
                    : a && (t || (t = a()), t.set(r, n));
                },
              };
            return r;
          }
        : a;
    },
    59540: (e, t, r) => {
      "use strict";
      var n = r(87095),
        i = r(60687),
        o = r(84169),
        a = r(26163),
        s = r(56699) || a || o;
      e.exports = function () {
        var e,
          t = {
            assert: function (e) {
              if (!t.has(e))
                throw new n("Side channel does not contain " + i(e));
            },
            delete: function (t) {
              return !!e && e.delete(t);
            },
            get: function (t) {
              return e && e.get(t);
            },
            has: function (t) {
              return !!e && e.has(t);
            },
            set: function (t, r) {
              e || (e = s()), e.set(t, r);
            },
          };
        return t;
      };
    },
    73027: (e, t, r) => {
      "use strict";
      var n = r(12115),
        i =
          "function" == typeof Object.is
            ? Object.is
            : function (e, t) {
                return (
                  (e === t && (0 !== e || 1 / e == 1 / t)) || (e != e && t != t)
                );
              },
        o = n.useState,
        a = n.useEffect,
        s = n.useLayoutEffect,
        l = n.useDebugValue;
      function u(e) {
        var t = e.getSnapshot;
        e = e.value;
        try {
          var r = t();
          return !i(e, r);
        } catch (e) {
          return !0;
        }
      }
      var c =
        "undefined" == typeof window ||
        void 0 === window.document ||
        void 0 === window.document.createElement
          ? function (e, t) {
              return t();
            }
          : function (e, t) {
              var r = t(),
                n = o({ inst: { value: r, getSnapshot: t } }),
                i = n[0].inst,
                c = n[1];
              return (
                s(
                  function () {
                    (i.value = r), (i.getSnapshot = t), u(i) && c({ inst: i });
                  },
                  [e, r, t]
                ),
                a(
                  function () {
                    return (
                      u(i) && c({ inst: i }),
                      e(function () {
                        u(i) && c({ inst: i });
                      })
                    );
                  },
                  [e]
                ),
                l(r),
                r
              );
            };
      t.useSyncExternalStore =
        void 0 !== n.useSyncExternalStore ? n.useSyncExternalStore : c;
    },
    94236: (e, t, r) => {
      "use strict";
      e.exports = r(73027);
    },
    80839: (e, t, r) => {
      "use strict";
      r.d(t, { T: () => R });
      var [n, i] = (0, r(30121).q)({ name: "ButtonGroupContext", strict: !1 }),
        o = r(47298),
        a = r(69353),
        s = r(12115),
        l = r(57010);
      function u(...e) {
        return (...t) => {
          for (let r of e) "function" == typeof r && r(...t);
        };
      }
      "undefined" != typeof window &&
        window.document &&
        window.document.createElement;
      let c = new Map();
      "undefined" != typeof FinalizationRegistry &&
        new FinalizationRegistry((e) => {
          c.delete(e);
        });
      var d = r(43463),
        f = r(53559),
        h = r(70624),
        p = r(12785),
        m = r(67222),
        g = r(40335),
        y = (0, m.tv)({
          base: [
            "z-0",
            "group",
            "relative",
            "inline-flex",
            "items-center",
            "justify-center",
            "box-border",
            "appearance-none",
            "outline-none",
            "select-none",
            "whitespace-nowrap",
            "min-w-max",
            "font-normal",
            "subpixel-antialiased",
            "overflow-hidden",
            "tap-highlight-transparent",
            "transform-gpu data-[pressed=true]:scale-[0.97]",
            ...g.zb,
          ],
          variants: {
            variant: {
              solid: "",
              bordered: "border-medium bg-transparent",
              light: "bg-transparent",
              flat: "",
              faded: "border-medium",
              shadow: "",
              ghost: "border-medium bg-transparent",
            },
            size: {
              sm: "px-3 min-w-16 h-8 text-tiny gap-2 rounded-small",
              md: "px-4 min-w-20 h-10 text-small gap-2 rounded-medium",
              lg: "px-6 min-w-24 h-12 text-medium gap-3 rounded-large",
            },
            color: {
              default: "",
              primary: "",
              secondary: "",
              success: "",
              warning: "",
              danger: "",
            },
            radius: {
              none: "rounded-none",
              sm: "rounded-small",
              md: "rounded-medium",
              lg: "rounded-large",
              full: "rounded-full",
            },
            fullWidth: { true: "w-full" },
            isDisabled: { true: "opacity-disabled pointer-events-none" },
            isInGroup: {
              true: "[&:not(:first-child):not(:last-child)]:rounded-none",
            },
            isIconOnly: {
              true: "px-0 !gap-0",
              false: "[&>svg]:max-w-[theme(spacing.8)]",
            },
            disableAnimation: {
              true: "!transition-none data-[pressed=true]:scale-100",
              false:
                "transition-transform-colors-opacity motion-reduce:transition-none",
            },
          },
          defaultVariants: {
            size: "md",
            variant: "solid",
            color: "default",
            fullWidth: !1,
            isDisabled: !1,
            isInGroup: !1,
          },
          compoundVariants: [
            { variant: "solid", color: "default", class: p.k.solid.default },
            { variant: "solid", color: "primary", class: p.k.solid.primary },
            {
              variant: "solid",
              color: "secondary",
              class: p.k.solid.secondary,
            },
            { variant: "solid", color: "success", class: p.k.solid.success },
            { variant: "solid", color: "warning", class: p.k.solid.warning },
            { variant: "solid", color: "danger", class: p.k.solid.danger },
            { variant: "shadow", color: "default", class: p.k.shadow.default },
            { variant: "shadow", color: "primary", class: p.k.shadow.primary },
            {
              variant: "shadow",
              color: "secondary",
              class: p.k.shadow.secondary,
            },
            { variant: "shadow", color: "success", class: p.k.shadow.success },
            { variant: "shadow", color: "warning", class: p.k.shadow.warning },
            { variant: "shadow", color: "danger", class: p.k.shadow.danger },
            {
              variant: "bordered",
              color: "default",
              class: p.k.bordered.default,
            },
            {
              variant: "bordered",
              color: "primary",
              class: p.k.bordered.primary,
            },
            {
              variant: "bordered",
              color: "secondary",
              class: p.k.bordered.secondary,
            },
            {
              variant: "bordered",
              color: "success",
              class: p.k.bordered.success,
            },
            {
              variant: "bordered",
              color: "warning",
              class: p.k.bordered.warning,
            },
            {
              variant: "bordered",
              color: "danger",
              class: p.k.bordered.danger,
            },
            { variant: "flat", color: "default", class: p.k.flat.default },
            { variant: "flat", color: "primary", class: p.k.flat.primary },
            { variant: "flat", color: "secondary", class: p.k.flat.secondary },
            { variant: "flat", color: "success", class: p.k.flat.success },
            { variant: "flat", color: "warning", class: p.k.flat.warning },
            { variant: "flat", color: "danger", class: p.k.flat.danger },
            { variant: "faded", color: "default", class: p.k.faded.default },
            { variant: "faded", color: "primary", class: p.k.faded.primary },
            {
              variant: "faded",
              color: "secondary",
              class: p.k.faded.secondary,
            },
            { variant: "faded", color: "success", class: p.k.faded.success },
            { variant: "faded", color: "warning", class: p.k.faded.warning },
            { variant: "faded", color: "danger", class: p.k.faded.danger },
            {
              variant: "light",
              color: "default",
              class: [p.k.light.default, "data-[hover=true]:bg-default/40"],
            },
            {
              variant: "light",
              color: "primary",
              class: [p.k.light.primary, "data-[hover=true]:bg-primary/20"],
            },
            {
              variant: "light",
              color: "secondary",
              class: [p.k.light.secondary, "data-[hover=true]:bg-secondary/20"],
            },
            {
              variant: "light",
              color: "success",
              class: [p.k.light.success, "data-[hover=true]:bg-success/20"],
            },
            {
              variant: "light",
              color: "warning",
              class: [p.k.light.warning, "data-[hover=true]:bg-warning/20"],
            },
            {
              variant: "light",
              color: "danger",
              class: [p.k.light.danger, "data-[hover=true]:bg-danger/20"],
            },
            {
              variant: "ghost",
              color: "default",
              class: [p.k.ghost.default, "data-[hover=true]:!bg-default"],
            },
            {
              variant: "ghost",
              color: "primary",
              class: [
                p.k.ghost.primary,
                "data-[hover=true]:!bg-primary data-[hover=true]:!text-primary-foreground",
              ],
            },
            {
              variant: "ghost",
              color: "secondary",
              class: [
                p.k.ghost.secondary,
                "data-[hover=true]:!bg-secondary data-[hover=true]:!text-secondary-foreground",
              ],
            },
            {
              variant: "ghost",
              color: "success",
              class: [
                p.k.ghost.success,
                "data-[hover=true]:!bg-success data-[hover=true]:!text-success-foreground",
              ],
            },
            {
              variant: "ghost",
              color: "warning",
              class: [
                p.k.ghost.warning,
                "data-[hover=true]:!bg-warning data-[hover=true]:!text-warning-foreground",
              ],
            },
            {
              variant: "ghost",
              color: "danger",
              class: [
                p.k.ghost.danger,
                "data-[hover=true]:!bg-danger data-[hover=true]:!text-danger-foreground",
              ],
            },
            {
              isInGroup: !0,
              class:
                "rounded-none first:rounded-s-medium last:rounded-e-medium",
            },
            {
              isInGroup: !0,
              size: "sm",
              class: "rounded-none first:rounded-s-small last:rounded-e-small",
            },
            {
              isInGroup: !0,
              size: "md",
              class:
                "rounded-none first:rounded-s-medium last:rounded-e-medium",
            },
            {
              isInGroup: !0,
              size: "lg",
              class: "rounded-none first:rounded-s-large last:rounded-e-large",
            },
            {
              isInGroup: !0,
              isRounded: !0,
              class: "rounded-none first:rounded-s-full last:rounded-e-full",
            },
            {
              isInGroup: !0,
              radius: "none",
              class: "rounded-none first:rounded-s-none last:rounded-e-none",
            },
            {
              isInGroup: !0,
              radius: "sm",
              class: "rounded-none first:rounded-s-small last:rounded-e-small",
            },
            {
              isInGroup: !0,
              radius: "md",
              class:
                "rounded-none first:rounded-s-medium last:rounded-e-medium",
            },
            {
              isInGroup: !0,
              radius: "lg",
              class: "rounded-none first:rounded-s-large last:rounded-e-large",
            },
            {
              isInGroup: !0,
              radius: "full",
              class: "rounded-none first:rounded-s-full last:rounded-e-full",
            },
            {
              isInGroup: !0,
              variant: ["ghost", "bordered"],
              color: "default",
              className: g.oT.default,
            },
            {
              isInGroup: !0,
              variant: ["ghost", "bordered"],
              color: "primary",
              className: g.oT.primary,
            },
            {
              isInGroup: !0,
              variant: ["ghost", "bordered"],
              color: "secondary",
              className: g.oT.secondary,
            },
            {
              isInGroup: !0,
              variant: ["ghost", "bordered"],
              color: "success",
              className: g.oT.success,
            },
            {
              isInGroup: !0,
              variant: ["ghost", "bordered"],
              color: "warning",
              className: g.oT.warning,
            },
            {
              isInGroup: !0,
              variant: ["ghost", "bordered"],
              color: "danger",
              className: g.oT.danger,
            },
            { isIconOnly: !0, size: "sm", class: "min-w-8 w-8 h-8" },
            { isIconOnly: !0, size: "md", class: "min-w-10 w-10 h-10" },
            { isIconOnly: !0, size: "lg", class: "min-w-12 w-12 h-12" },
            {
              variant: ["solid", "faded", "flat", "bordered", "shadow"],
              class: "data-[hover=true]:opacity-hover",
            },
          ],
        });
      (0, m.tv)({
        base: "inline-flex items-center justify-center h-auto",
        variants: { fullWidth: { true: "w-full" } },
        defaultVariants: { fullWidth: !1 },
      });
      var b = r(98043);
      let v = (e) => {
        var t;
        return null !== (t = null == e ? void 0 : e.ownerDocument) &&
          void 0 !== t
          ? t
          : document;
      };
      var w = r(99124);
      let x = !1,
        A = 0;
      function E(e) {
        "touch" === e.pointerType &&
          ((x = !0),
          setTimeout(() => {
            x = !1;
          }, 50));
      }
      function k() {
        if ("undefined" != typeof document)
          return (
            "undefined" != typeof PointerEvent &&
              document.addEventListener("pointerup", E),
            A++,
            () => {
              --A > 0 ||
                "undefined" == typeof PointerEvent ||
                document.removeEventListener("pointerup", E);
            }
          );
      }
      var I = r(56214),
        S = r(76498),
        P = r(25683),
        T = r(63648),
        C = r(95155),
        O = () =>
          Promise.all([r.e(5713), r.e(8131)])
            .then(r.bind(r, 40512))
            .then((e) => e.default),
        _ = (e) => {
          let {
            ripples: t = [],
            motionProps: r,
            color: n = "currentColor",
            style: i,
            onClear: o,
          } = e;
          return (0, C.jsx)(C.Fragment, {
            children: t.map((e) => {
              let t = (0, a.qE)(0.01 * e.size, 0.2, e.size > 100 ? 0.75 : 0.5);
              return (0, C.jsx)(
                S.F,
                {
                  features: O,
                  children: (0, C.jsx)(P.N, {
                    mode: "popLayout",
                    children: (0, C.jsx)(T.m.span, {
                      animate: { transform: "scale(2)", opacity: 0 },
                      className: "heroui-ripple",
                      exit: { opacity: 0 },
                      initial: { transform: "scale(0)", opacity: 0.35 },
                      style: {
                        position: "absolute",
                        backgroundColor: n,
                        borderRadius: "100%",
                        transformOrigin: "center",
                        pointerEvents: "none",
                        overflow: "hidden",
                        inset: 0,
                        zIndex: 0,
                        top: e.y,
                        left: e.x,
                        width: "".concat(e.size, "px"),
                        height: "".concat(e.size, "px"),
                        ...i,
                      },
                      transition: { duration: t },
                      onAnimationComplete: () => {
                        o(e.key);
                      },
                      ...r,
                    }),
                  }),
                },
                e.key
              );
            }),
          });
        };
      _.displayName = "HeroUI.Ripple";
      var B = (0, r(30287).Rf)((e, t) => {
        let {
          Component: r,
          domRef: n,
          children: p,
          spinnerSize: m,
          spinner: g = (0, C.jsx)(I.o, { color: "current", size: m }),
          spinnerPlacement: A,
          startContent: E,
          endContent: S,
          isLoading: P,
          disableRipple: T,
          getButtonProps: O,
          getRippleProps: B,
          isIconOnly: R,
        } = (function (e) {
          var t, r, n, p, m, g, A, E, I;
          let S = i(),
            P = (0, o.o)(),
            T = !!S,
            {
              ref: C,
              as: O,
              children: _,
              startContent: B,
              endContent: R,
              autoFocus: N,
              className: M,
              spinner: j,
              isLoading: F = !1,
              disableRipple: L = !1,
              fullWidth: D = null != (t = null == S ? void 0 : S.fullWidth) &&
                t,
              radius: U = null == S ? void 0 : S.radius,
              size: H = null != (r = null == S ? void 0 : S.size) ? r : "md",
              color: $ = null != (n = null == S ? void 0 : S.color)
                ? n
                : "default",
              variant: z = null != (p = null == S ? void 0 : S.variant)
                ? p
                : "solid",
              disableAnimation: G = null !=
                (g =
                  null != (m = null == S ? void 0 : S.disableAnimation)
                    ? m
                    : null == P
                    ? void 0
                    : P.disableAnimation) && g,
              isDisabled: q = null != (A = null == S ? void 0 : S.isDisabled) &&
                A,
              isIconOnly: W = null != (E = null == S ? void 0 : S.isIconOnly) &&
                E,
              spinnerPlacement: V = "start",
              onPress: Z,
              onClick: K,
              ...Q
            } = e,
            J = O || "button",
            Y = "string" == typeof J,
            X = (0, f.zD)(C),
            ee =
              null != (I = L || (null == P ? void 0 : P.disableRipple)) ? I : G,
            {
              isFocusVisible: et,
              isFocused: er,
              focusProps: en,
            } = (0, l.o)({ autoFocus: N }),
            ei = q || F,
            eo = (0, s.useMemo)(
              () =>
                y({
                  size: H,
                  color: $,
                  variant: z,
                  radius: U,
                  fullWidth: D,
                  isDisabled: ei,
                  isInGroup: T,
                  disableAnimation: G,
                  isIconOnly: W,
                  className: M,
                }),
              [H, $, z, U, D, ei, T, W, G, M]
            ),
            {
              onPress: ea,
              onClear: es,
              ripples: el,
            } = (function () {
              let e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                [t, r] = (0, s.useState)([]),
                n = (0, s.useCallback)((e) => {
                  let t = e.target,
                    n = Math.max(t.clientWidth, t.clientHeight);
                  r((t) => [
                    ...t,
                    {
                      key: (0, a.Lz)(t.length.toString()),
                      size: n,
                      x: e.x - n / 2,
                      y: e.y - n / 2,
                    },
                  ]);
                }, []);
              return {
                ripples: t,
                onClear: (0, s.useCallback)((e) => {
                  r((t) => t.filter((t) => t.key !== e));
                }, []),
                onPress: n,
                ...e,
              };
            })(),
            eu = (0, s.useCallback)(
              (e) => {
                ee || ei || G || !X.current || ea(e);
              },
              [ee, ei, G, X, ea]
            ),
            { buttonProps: ec, isPressed: ed } = (0, b.l)(
              {
                elementType: O,
                isDisabled: ei,
                onPress: u(Z, eu),
                onClick: K,
                ...Q,
              },
              X
            ),
            { isHovered: ef, hoverProps: eh } = (function (e) {
              let t,
                r,
                n,
                i,
                {
                  onHoverStart: o,
                  onHoverChange: a,
                  onHoverEnd: l,
                  isDisabled: u,
                } = e,
                [c, d] = (0, s.useState)(!1),
                f = (0, s.useRef)({
                  isHovered: !1,
                  ignoreEmulatedMouseEvents: !1,
                  pointerType: "",
                  target: null,
                }).current;
              (0, s.useEffect)(k, []);
              let { addGlobalListener: h, removeAllGlobalListeners: p } =
                  ((t = (0, s.useRef)(new Map())),
                  (r = (0, s.useCallback)((e, r, n, i) => {
                    let o = (null == i ? void 0 : i.once)
                      ? (...e) => {
                          t.current.delete(n), n(...e);
                        }
                      : n;
                    t.current.set(n, {
                      type: r,
                      eventTarget: e,
                      fn: o,
                      options: i,
                    }),
                      e.addEventListener(r, o, i);
                  }, [])),
                  (n = (0, s.useCallback)((e, r, n, i) => {
                    var o;
                    let a =
                      (null === (o = t.current.get(n)) || void 0 === o
                        ? void 0
                        : o.fn) || n;
                    e.removeEventListener(r, a, i), t.current.delete(n);
                  }, [])),
                  (i = (0, s.useCallback)(() => {
                    t.current.forEach((e, t) => {
                      n(e.eventTarget, e.type, t, e.options);
                    });
                  }, [n])),
                  (0, s.useEffect)(() => i, [i]),
                  {
                    addGlobalListener: r,
                    removeGlobalListener: n,
                    removeAllGlobalListeners: i,
                  }),
                { hoverProps: m, triggerHoverEnd: g } = (0, s.useMemo)(() => {
                  let e = (e, r) => {
                      if (
                        ((f.pointerType = r),
                        u ||
                          "touch" === r ||
                          f.isHovered ||
                          !e.currentTarget.contains(e.target))
                      )
                        return;
                      f.isHovered = !0;
                      let n = e.currentTarget;
                      (f.target = n),
                        h(
                          v(e.target),
                          "pointerover",
                          (e) => {
                            f.isHovered &&
                              f.target &&
                              !(function (e, t) {
                                if (!(0, w.Nf)())
                                  return !!t && !!e && e.contains(t);
                                if (!e || !t) return !1;
                                let r = t;
                                for (; null !== r; ) {
                                  var n;
                                  if (r === e) return !0;
                                  r =
                                    "SLOT" === r.tagName && r.assignedSlot
                                      ? r.assignedSlot.parentNode
                                      : null !== (n = r) &&
                                        "object" == typeof n &&
                                        "nodeType" in n &&
                                        "number" == typeof n.nodeType &&
                                        n.nodeType ===
                                          Node.DOCUMENT_FRAGMENT_NODE &&
                                        "host" in n
                                      ? r.host
                                      : r.parentNode;
                                }
                                return !1;
                              })(f.target, e.target) &&
                              t(e, e.pointerType);
                          },
                          { capture: !0 }
                        ),
                        o &&
                          o({ type: "hoverstart", target: n, pointerType: r }),
                        a && a(!0),
                        d(!0);
                    },
                    t = (e, t) => {
                      let r = f.target;
                      (f.pointerType = ""),
                        (f.target = null),
                        "touch" !== t &&
                          f.isHovered &&
                          r &&
                          ((f.isHovered = !1),
                          p(),
                          l &&
                            l({ type: "hoverend", target: r, pointerType: t }),
                          a && a(!1),
                          d(!1));
                    },
                    r = {};
                  return (
                    "undefined" != typeof PointerEvent &&
                      ((r.onPointerEnter = (t) => {
                        (x && "mouse" === t.pointerType) || e(t, t.pointerType);
                      }),
                      (r.onPointerLeave = (e) => {
                        !u &&
                          e.currentTarget.contains(e.target) &&
                          t(e, e.pointerType);
                      })),
                    { hoverProps: r, triggerHoverEnd: t }
                  );
                }, [o, a, l, u, f, h, p]);
              return (
                (0, s.useEffect)(() => {
                  u && g({ currentTarget: f.target }, f.pointerType);
                }, [u]),
                { hoverProps: m, isHovered: c }
              );
            })({ isDisabled: ei }),
            ep = (0, s.useCallback)(
              function () {
                let e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {};
                return {
                  "data-disabled": (0, a.sE)(ei),
                  "data-focus": (0, a.sE)(er),
                  "data-pressed": (0, a.sE)(ed),
                  "data-focus-visible": (0, a.sE)(et),
                  "data-hover": (0, a.sE)(ef),
                  "data-loading": (0, a.sE)(F),
                  ...(function (...e) {
                    let t = { ...e[0] };
                    for (let r = 1; r < e.length; r++) {
                      let n = e[r];
                      for (let e in n) {
                        let r = t[e],
                          i = n[e];
                        "function" == typeof r &&
                        "function" == typeof i &&
                        "o" === e[0] &&
                        "n" === e[1] &&
                        e.charCodeAt(2) >= 65 &&
                        90 >= e.charCodeAt(2)
                          ? (t[e] = u(r, i))
                          : ("className" === e || "UNSAFE_className" === e) &&
                            "string" == typeof r &&
                            "string" == typeof i
                          ? (t[e] = (0, d.A)(r, i))
                          : "id" === e && r && i
                          ? (t.id = (function (e, t) {
                              if (e === t) return e;
                              let r = c.get(e);
                              if (r)
                                return r.forEach((e) => (e.current = t)), t;
                              let n = c.get(t);
                              return n
                                ? (n.forEach((t) => (t.current = e)), e)
                                : t;
                            })(r, i))
                          : (t[e] = void 0 !== i ? i : r);
                      }
                    }
                    return t;
                  })(ec, en, eh, (0, h.$)(Q, { enabled: Y }), (0, h.$)(e)),
                  className: eo,
                };
              },
              [F, ei, er, ed, Y, et, ef, ec, en, eh, Q, eo]
            ),
            em = (e) =>
              (0, s.isValidElement)(e)
                ? (0, s.cloneElement)(e, { "aria-hidden": !0, focusable: !1 })
                : null,
            eg = em(B);
          return {
            Component: J,
            children: _,
            domRef: X,
            spinner: j,
            styles: eo,
            startContent: eg,
            endContent: em(R),
            isLoading: F,
            spinnerPlacement: V,
            spinnerSize: (0, s.useMemo)(
              () => ({ sm: "sm", md: "sm", lg: "md" }[H]),
              [H]
            ),
            disableRipple: ee,
            getButtonProps: ep,
            getRippleProps: (0, s.useCallback)(
              () => ({ ripples: el, onClear: es }),
              [el, es]
            ),
            isIconOnly: W,
          };
        })({ ...e, ref: t });
        return (0, C.jsxs)(r, {
          ref: n,
          ...O(),
          children: [
            E,
            P && "start" === A && g,
            P && R ? null : p,
            P && "end" === A && g,
            S,
            !T && (0, C.jsx)(_, { ...B() }),
          ],
        });
      });
      B.displayName = "HeroUI.Button";
      var R = B;
    },
    70624: (e, t, r) => {
      "use strict";
      r.d(t, { $: () => l });
      var n = new Set([
          "id",
          "type",
          "style",
          "title",
          "role",
          "tabIndex",
          "htmlFor",
          "width",
          "height",
          "abbr",
          "accept",
          "acceptCharset",
          "accessKey",
          "action",
          "allowFullScreen",
          "allowTransparency",
          "alt",
          "async",
          "autoComplete",
          "autoFocus",
          "autoPlay",
          "cellPadding",
          "cellSpacing",
          "challenge",
          "charset",
          "checked",
          "cite",
          "class",
          "className",
          "cols",
          "colSpan",
          "command",
          "content",
          "contentEditable",
          "contextMenu",
          "controls",
          "coords",
          "crossOrigin",
          "data",
          "dateTime",
          "default",
          "defer",
          "dir",
          "disabled",
          "download",
          "draggable",
          "dropzone",
          "encType",
          "enterKeyHint",
          "for",
          "form",
          "formAction",
          "formEncType",
          "formMethod",
          "formNoValidate",
          "formTarget",
          "frameBorder",
          "headers",
          "hidden",
          "high",
          "href",
          "hrefLang",
          "httpEquiv",
          "icon",
          "inputMode",
          "isMap",
          "itemId",
          "itemProp",
          "itemRef",
          "itemScope",
          "itemType",
          "kind",
          "label",
          "lang",
          "list",
          "loop",
          "manifest",
          "max",
          "maxLength",
          "media",
          "mediaGroup",
          "method",
          "min",
          "minLength",
          "multiple",
          "muted",
          "name",
          "noValidate",
          "open",
          "optimum",
          "pattern",
          "ping",
          "placeholder",
          "poster",
          "preload",
          "radioGroup",
          "referrerPolicy",
          "readOnly",
          "rel",
          "required",
          "rows",
          "rowSpan",
          "sandbox",
          "scope",
          "scoped",
          "scrolling",
          "seamless",
          "selected",
          "shape",
          "size",
          "sizes",
          "slot",
          "sortable",
          "span",
          "spellCheck",
          "src",
          "srcDoc",
          "srcSet",
          "start",
          "step",
          "target",
          "translate",
          "typeMustMatch",
          "useMap",
          "value",
          "wmode",
          "wrap",
        ]),
        i = new Set([
          "onCopy",
          "onCut",
          "onPaste",
          "onLoad",
          "onError",
          "onWheel",
          "onScroll",
          "onCompositionEnd",
          "onCompositionStart",
          "onCompositionUpdate",
          "onKeyDown",
          "onKeyPress",
          "onKeyUp",
          "onFocus",
          "onBlur",
          "onChange",
          "onInput",
          "onSubmit",
          "onClick",
          "onContextMenu",
          "onDoubleClick",
          "onDrag",
          "onDragEnd",
          "onDragEnter",
          "onDragExit",
          "onDragLeave",
          "onDragOver",
          "onDragStart",
          "onDrop",
          "onMouseDown",
          "onMouseEnter",
          "onMouseLeave",
          "onMouseMove",
          "onMouseOut",
          "onMouseOver",
          "onMouseUp",
          "onPointerDown",
          "onPointerEnter",
          "onPointerLeave",
          "onPointerUp",
          "onSelect",
          "onTouchCancel",
          "onTouchEnd",
          "onTouchMove",
          "onTouchStart",
          "onAnimationStart",
          "onAnimationEnd",
          "onAnimationIteration",
          "onTransitionEnd",
        ]),
        o = /^(data-.*)$/,
        a = /^(aria-.*)$/,
        s = /^(on[A-Z].*)$/;
      function l(e, t = {}) {
        let {
            labelable: r = !0,
            enabled: u = !0,
            propNames: c,
            omitPropNames: d,
            omitEventNames: f,
            omitDataProps: h,
            omitEventProps: p,
          } = t,
          m = {};
        if (!u) return e;
        for (let t in e)
          !(
            (null == d ? void 0 : d.has(t)) ||
            ((null == f ? void 0 : f.has(t)) && s.test(t)) ||
            (s.test(t) && !i.has(t)) ||
            (h && o.test(t)) ||
            (p && s.test(t))
          ) &&
            ((Object.prototype.hasOwnProperty.call(e, t) &&
              (n.has(t) ||
                (r && a.test(t)) ||
                (null == c ? void 0 : c.has(t)) ||
                o.test(t))) ||
              s.test(t)) &&
            (m[t] = e[t]);
        return m;
      }
    },
    30121: (e, t, r) => {
      "use strict";
      r.d(t, { q: () => i });
      var n = r(12115);
      function i() {
        let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
          {
            strict: t = !0,
            errorMessage:
              r = "useContext: `context` is undefined. Seems you forgot to wrap component within the Provider",
            name: i,
          } = e,
          o = n.createContext(void 0);
        return (
          (o.displayName = i),
          [
            o.Provider,
            function e() {
              var i;
              let a = n.useContext(o);
              if (!a && t) {
                let t = Error(r);
                throw (
                  ((t.name = "ContextError"),
                  null == (i = Error.captureStackTrace) || i.call(Error, t, e),
                  t)
                );
              }
              return a;
            },
            o,
          ]
        );
      }
    },
    53559: (e, t, r) => {
      "use strict";
      r.d(t, { mK: () => i, zD: () => o });
      var n = r(12115);
      function i(e) {
        return { UNSAFE_getDOMNode: () => e.current };
      }
      function o(e) {
        let t = (0, n.useRef)(null);
        return (0, n.useImperativeHandle)(e, () => t.current), t;
      }
      "undefined" != typeof window &&
        window.document &&
        window.document.createElement;
    },
    69353: (e, t, r) => {
      "use strict";
      r.d(t, {
        $z: () => u,
        GU: () => p,
        Hk: () => c,
        Im: () => a,
        Lz: () => h,
        R8: () => v,
        Tn: () => s,
        ZH: () => f,
        gt: () => n,
        j1: () => d,
        qE: () => y,
        sE: () => l,
        t6: () => m,
        y1: () => g,
      });
      var n = !1;
      function i(e) {
        return Array.isArray(e);
      }
      function o(e) {
        let t = typeof e;
        return null != e && ("object" === t || "function" === t) && !i(e);
      }
      function a(e) {
        return i(e)
          ? i(e) && 0 === e.length
          : o(e)
          ? o(e) && 0 === Object.keys(e).length
          : null == e || "" === e;
      }
      function s(e) {
        return "function" == typeof e;
      }
      var l = (e) => (e ? "true" : void 0);
      function u(...e) {
        for (var t, r, n = 0, i = ""; n < e.length; )
          (t = e[n++]) &&
            (r = (function e(t) {
              var r,
                n,
                i = "";
              if ("string" == typeof t || "number" == typeof t) i += t;
              else if ("object" == typeof t) {
                if (Array.isArray(t))
                  for (r = 0; r < t.length; r++)
                    t[r] && (n = e(t[r])) && (i && (i += " "), (i += n));
                else for (r in t) t[r] && (i && (i += " "), (i += r));
              }
              return i;
            })(t)) &&
            (i && (i += " "), (i += r));
        return i;
      }
      var c = (e) =>
          (null == e ? void 0 : e.length) <= 4
            ? e
            : null == e
            ? void 0
            : e.slice(0, 3),
        d = (...e) => {
          let t = " ";
          for (let r of e)
            if ("string" == typeof r && r.length > 0) {
              t = r;
              break;
            }
          return t;
        },
        f = (e) =>
          e ? e.charAt(0).toUpperCase() + e.slice(1).toLowerCase() : "";
      function h(e) {
        return `${e}-${Math.floor(1e6 * Math.random())}`;
      }
      function p(e) {
        for (let t in e) t.startsWith("on") && delete e[t];
        return e;
      }
      function m(e) {
        if (!e || "object" != typeof e) return "";
        try {
          return JSON.stringify(e);
        } catch (e) {
          return "";
        }
      }
      function g(e, t) {
        return Array.from({ length: t - e + 1 }, (t, r) => r + e);
      }
      function y(e, t, r) {
        return Math.min(Math.max(e, t), r);
      }
      var b = {};
      function v(e, t, ...r) {
        let n = t ? ` [${t}]` : " ",
          i = `[Hero UI]${n}: ${e}`;
        "undefined" != typeof console && (b[i] || (b[i] = !0));
      }
    },
    56214: (e, t, r) => {
      "use strict";
      r.d(t, { o: () => c });
      var n = r(30287),
        i = (0, r(67222).tv)({
          slots: {
            base: "relative inline-flex flex-col gap-2 items-center justify-center",
            wrapper: "relative flex",
            label: "text-foreground dark:text-foreground-dark font-regular",
            circle1: "absolute w-full h-full rounded-full",
            circle2: "absolute w-full h-full rounded-full",
            dots: "relative rounded-full mx-auto",
            spinnerBars: [
              "absolute",
              "animate-fade-out",
              "rounded-full",
              "w-[25%]",
              "h-[8%]",
              "left-[calc(37.5%)]",
              "top-[calc(46%)]",
              "spinner-bar-animation",
            ],
          },
          variants: {
            size: {
              sm: {
                wrapper: "w-5 h-5",
                circle1: "border-2",
                circle2: "border-2",
                dots: "size-1",
                label: "text-small",
              },
              md: {
                wrapper: "w-8 h-8",
                circle1: "border-3",
                circle2: "border-3",
                dots: "size-1.5",
                label: "text-medium",
              },
              lg: {
                wrapper: "w-10 h-10",
                circle1: "border-3",
                circle2: "border-3",
                dots: "size-2",
                label: "text-large",
              },
            },
            color: {
              current: {
                circle1: "border-b-current",
                circle2: "border-b-current",
                dots: "bg-current",
                spinnerBars: "bg-current",
              },
              white: {
                circle1: "border-b-white",
                circle2: "border-b-white",
                dots: "bg-white",
                spinnerBars: "bg-white",
              },
              default: {
                circle1: "border-b-default",
                circle2: "border-b-default",
                dots: "bg-default",
                spinnerBars: "bg-default",
              },
              primary: {
                circle1: "border-b-primary",
                circle2: "border-b-primary",
                dots: "bg-primary",
                spinnerBars: "bg-primary",
              },
              secondary: {
                circle1: "border-b-secondary",
                circle2: "border-b-secondary",
                dots: "bg-secondary",
                spinnerBars: "bg-secondary",
              },
              success: {
                circle1: "border-b-success",
                circle2: "border-b-success",
                dots: "bg-success",
                spinnerBars: "bg-success",
              },
              warning: {
                circle1: "border-b-warning",
                circle2: "border-b-warning",
                dots: "bg-warning",
                spinnerBars: "bg-warning",
              },
              danger: {
                circle1: "border-b-danger",
                circle2: "border-b-danger",
                dots: "bg-danger",
                spinnerBars: "bg-danger",
              },
            },
            labelColor: {
              foreground: { label: "text-foreground" },
              primary: { label: "text-primary" },
              secondary: { label: "text-secondary" },
              success: { label: "text-success" },
              warning: { label: "text-warning" },
              danger: { label: "text-danger" },
            },
            variant: {
              default: {
                circle1: [
                  "animate-spinner-ease-spin",
                  "border-solid",
                  "border-t-transparent",
                  "border-l-transparent",
                  "border-r-transparent",
                ],
                circle2: [
                  "opacity-75",
                  "animate-spinner-linear-spin",
                  "border-dotted",
                  "border-t-transparent",
                  "border-l-transparent",
                  "border-r-transparent",
                ],
              },
              gradient: {
                circle1: [
                  "border-0",
                  "bg-gradient-to-b",
                  "from-transparent",
                  "via-transparent",
                  "to-primary",
                  "animate-spinner-linear-spin",
                  "[animation-duration:1s]",
                  "[-webkit-mask:radial-gradient(closest-side,rgba(0,0,0,0.0)calc(100%-3px),rgba(0,0,0,1)calc(100%-3px))]",
                ],
                circle2: ["hidden"],
              },
              wave: {
                wrapper: "translate-y-3/4",
                dots: ["animate-sway", "spinner-dot-animation"],
              },
              dots: {
                wrapper: "translate-y-2/4",
                dots: ["animate-blink", "spinner-dot-blink-animation"],
              },
              spinner: {},
              simple: {
                wrapper: "text-foreground h-5 w-5 animate-spin",
                circle1: "opacity-25",
                circle2: "opacity-75",
              },
            },
          },
          defaultVariants: {
            size: "md",
            color: "primary",
            labelColor: "foreground",
            variant: "default",
          },
          compoundVariants: [
            {
              variant: "gradient",
              color: "current",
              class: { circle1: "to-current" },
            },
            {
              variant: "gradient",
              color: "white",
              class: { circle1: "to-white" },
            },
            {
              variant: "gradient",
              color: "default",
              class: { circle1: "to-default" },
            },
            {
              variant: "gradient",
              color: "primary",
              class: { circle1: "to-primary" },
            },
            {
              variant: "gradient",
              color: "secondary",
              class: { circle1: "to-secondary" },
            },
            {
              variant: "gradient",
              color: "success",
              class: { circle1: "to-success" },
            },
            {
              variant: "gradient",
              color: "warning",
              class: { circle1: "to-warning" },
            },
            {
              variant: "gradient",
              color: "danger",
              class: { circle1: "to-danger" },
            },
            { variant: "wave", size: "sm", class: { wrapper: "w-5 h-5" } },
            { variant: "wave", size: "md", class: { wrapper: "w-8 h-8" } },
            { variant: "wave", size: "lg", class: { wrapper: "w-12 h-12" } },
            { variant: "dots", size: "sm", class: { wrapper: "w-5 h-5" } },
            { variant: "dots", size: "md", class: { wrapper: "w-8 h-8" } },
            { variant: "dots", size: "lg", class: { wrapper: "w-12 h-12" } },
            { variant: "simple", size: "sm", class: { wrapper: "w-5 h-5" } },
            { variant: "simple", size: "md", class: { wrapper: "w-8 h-8" } },
            { variant: "simple", size: "lg", class: { wrapper: "w-12 h-12" } },
            {
              variant: "simple",
              color: "current",
              class: { wrapper: "text-current" },
            },
            {
              variant: "simple",
              color: "white",
              class: { wrapper: "text-white" },
            },
            {
              variant: "simple",
              color: "default",
              class: { wrapper: "text-default" },
            },
            {
              variant: "simple",
              color: "primary",
              class: { wrapper: "text-primary" },
            },
            {
              variant: "simple",
              color: "secondary",
              class: { wrapper: "text-secondary" },
            },
            {
              variant: "simple",
              color: "success",
              class: { wrapper: "text-success" },
            },
            {
              variant: "simple",
              color: "warning",
              class: { wrapper: "text-warning" },
            },
            {
              variant: "simple",
              color: "danger",
              class: { wrapper: "text-danger" },
            },
          ],
        }),
        o = r(69353),
        a = r(12115),
        s = r(47298),
        l = r(95155),
        u = (0, n.Rf)((e, t) => {
          let {
            slots: r,
            classNames: u,
            label: c,
            variant: d,
            getSpinnerProps: f,
          } = (function (e) {
            var t, r;
            let [l, u] = (0, n.rE)(e, i.variantKeys),
              c = (0, s.o)(),
              d =
                null !=
                (r =
                  null != (t = null == e ? void 0 : e.variant)
                    ? t
                    : null == c
                    ? void 0
                    : c.spinnerVariant)
                  ? r
                  : "default",
              { children: f, className: h, classNames: p, label: m, ...g } = l,
              y = (0, a.useMemo)(() => i({ ...u }), [(0, o.t6)(u)]),
              b = (0, o.$z)(null == p ? void 0 : p.base, h),
              v = m || f,
              w = (0, a.useMemo)(
                () =>
                  v && "string" == typeof v
                    ? v
                    : g["aria-label"]
                    ? ""
                    : "Loading",
                [f, v, g["aria-label"]]
              ),
              x = (0, a.useCallback)(
                () => ({
                  "aria-label": w,
                  className: y.base({ class: b }),
                  ...g,
                }),
                [w, y, b, g]
              );
            return {
              label: v,
              slots: y,
              classNames: p,
              variant: d,
              getSpinnerProps: x,
            };
          })({ ...e });
          return "wave" === d || "dots" === d
            ? (0, l.jsxs)("div", {
                ref: t,
                ...f(),
                children: [
                  (0, l.jsx)("div", {
                    className: r.wrapper({
                      class: null == u ? void 0 : u.wrapper,
                    }),
                    children: [void 0, void 0, void 0].map((e, t) =>
                      (0, l.jsx)(
                        "i",
                        {
                          className: r.dots({
                            class: null == u ? void 0 : u.dots,
                          }),
                          style: { "--dot-index": t },
                        },
                        "dot-".concat(t)
                      )
                    ),
                  }),
                  c &&
                    (0, l.jsx)("span", {
                      className: r.label({
                        class: null == u ? void 0 : u.label,
                      }),
                      children: c,
                    }),
                ],
              })
            : "simple" === d
            ? (0, l.jsxs)("div", {
                ref: t,
                ...f(),
                children: [
                  (0, l.jsxs)("svg", {
                    className: r.wrapper({
                      class: null == u ? void 0 : u.wrapper,
                    }),
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: [
                      (0, l.jsx)("circle", {
                        className: r.circle1({
                          class: null == u ? void 0 : u.circle1,
                        }),
                        cx: "12",
                        cy: "12",
                        r: "10",
                        stroke: "currentColor",
                        strokeWidth: "4",
                      }),
                      (0, l.jsx)("path", {
                        className: r.circle2({
                          class: null == u ? void 0 : u.circle2,
                        }),
                        d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z",
                        fill: "currentColor",
                      }),
                    ],
                  }),
                  c &&
                    (0, l.jsx)("span", {
                      className: r.label({
                        class: null == u ? void 0 : u.label,
                      }),
                      children: c,
                    }),
                ],
              })
            : "spinner" === d
            ? (0, l.jsxs)("div", {
                ref: t,
                ...f(),
                children: [
                  (0, l.jsx)("div", {
                    className: r.wrapper({
                      class: null == u ? void 0 : u.wrapper,
                    }),
                    children: [...Array(12)].map((e, t) =>
                      (0, l.jsx)(
                        "i",
                        {
                          className: r.spinnerBars({
                            class: null == u ? void 0 : u.spinnerBars,
                          }),
                          style: { "--bar-index": t },
                        },
                        "star-".concat(t)
                      )
                    ),
                  }),
                  c &&
                    (0, l.jsx)("span", {
                      className: r.label({
                        class: null == u ? void 0 : u.label,
                      }),
                      children: c,
                    }),
                ],
              })
            : (0, l.jsxs)("div", {
                ref: t,
                ...f(),
                children: [
                  (0, l.jsxs)("div", {
                    className: r.wrapper({
                      class: null == u ? void 0 : u.wrapper,
                    }),
                    children: [
                      (0, l.jsx)("i", {
                        className: r.circle1({
                          class: null == u ? void 0 : u.circle1,
                        }),
                      }),
                      (0, l.jsx)("i", {
                        className: r.circle2({
                          class: null == u ? void 0 : u.circle2,
                        }),
                      }),
                    ],
                  }),
                  c &&
                    (0, l.jsx)("span", {
                      className: r.label({
                        class: null == u ? void 0 : u.label,
                      }),
                      children: c,
                    }),
                ],
              });
        });
      u.displayName = "HeroUI.Spinner";
      var c = u;
    },
    30287: (e, t, r) => {
      "use strict";
      r.d(t, { Rf: () => i, rE: () => o });
      var n = r(12115);
      function i(e) {
        return (0, n.forwardRef)(e);
      }
      var o = (e, t, r = !0) => {
        if (!t) return [e, {}];
        let n = t.reduce((t, r) => (r in e ? { ...t, [r]: e[r] } : t), {});
        return r
          ? [
              Object.keys(e)
                .filter((e) => !t.includes(e))
                .reduce((t, r) => ({ ...t, [r]: e[r] }), {}),
              n,
            ]
          : [e, n];
      };
    },
    45631: (e, t, r) => {
      "use strict";
      r.d(t, { M: () => $ });
      var n = r(47298);
      let i = new Set([
          "Arab",
          "Syrc",
          "Samr",
          "Mand",
          "Thaa",
          "Mend",
          "Nkoo",
          "Adlm",
          "Rohg",
          "Hebr",
        ]),
        o = new Set([
          "ae",
          "ar",
          "arc",
          "bcc",
          "bqi",
          "ckb",
          "dv",
          "fa",
          "glk",
          "he",
          "ku",
          "mzn",
          "nqo",
          "pnb",
          "ps",
          "sd",
          "ug",
          "ur",
          "yi",
        ]);
      function a(e) {
        if (Intl.Locale) {
          let t = new Intl.Locale(e).maximize(),
            r =
              "function" == typeof t.getTextInfo ? t.getTextInfo() : t.textInfo;
          if (r) return "rtl" === r.direction;
          if (t.script) return i.has(t.script);
        }
        let t = e.split("-")[0];
        return o.has(t);
      }
      var s = r(12115);
      let l = { prefix: String(Math.round(1e10 * Math.random())), current: 0 },
        u = (s.createContext(l), s.createContext(!1));
      function c() {
        return !1;
      }
      function d() {
        return !0;
      }
      function f(e) {
        return () => {};
      }
      "undefined" != typeof window &&
        window.document &&
        window.document.createElement,
        new WeakMap(),
        s.useId;
      let h = Symbol.for("react-aria.i18n.locale");
      function p() {
        let e =
          ("undefined" != typeof window && window[h]) ||
          ("undefined" != typeof navigator &&
            (navigator.language || navigator.userLanguage)) ||
          "en-US";
        try {
          Intl.DateTimeFormat.supportedLocalesOf([e]);
        } catch {
          e = "en-US";
        }
        return { locale: e, direction: a(e) ? "rtl" : "ltr" };
      }
      let m = p(),
        g = new Set();
      function y() {
        for (let e of ((m = p()), g)) e(m);
      }
      let b = s.createContext(null);
      function v(e) {
        let { locale: t, children: r } = e,
          n = (function () {
            let e =
                "function" == typeof s.useSyncExternalStore
                  ? s.useSyncExternalStore(f, c, d)
                  : (0, s.useContext)(u),
              [t, r] = (0, s.useState)(m);
            return ((0, s.useEffect)(
              () => (
                0 === g.size && window.addEventListener("languagechange", y),
                g.add(r),
                () => {
                  g.delete(r),
                    0 === g.size &&
                      window.removeEventListener("languagechange", y);
                }
              ),
              []
            ),
            e)
              ? { locale: "en-US", direction: "ltr" }
              : t;
          })(),
          i = s.useMemo(
            () => (t ? { locale: t, direction: a(t) ? "rtl" : "ltr" } : n),
            [n, t]
          );
        return s.createElement(b.Provider, { value: i }, r);
      }
      let w = null;
      function x(e) {
        var t;
        return (
          "undefined" != typeof window &&
          null != window.navigator &&
          ((null === (t = window.navigator.userAgentData) || void 0 === t
            ? void 0
            : t.brands.some((t) => e.test(t.brand))) ||
            e.test(window.navigator.userAgent))
        );
      }
      function A(e) {
        var t;
        return (
          "undefined" != typeof window &&
          null != window.navigator &&
          e.test(
            (null === (t = window.navigator.userAgentData) || void 0 === t
              ? void 0
              : t.platform) || window.navigator.platform
          )
        );
      }
      function E(e) {
        let t = null;
        return () => (null == t && (t = e()), t);
      }
      let k = E(function () {
          return A(/^Mac/i);
        }),
        I = E(function () {
          return A(/^iPhone/i);
        }),
        S = E(function () {
          return A(/^iPad/i) || (k() && navigator.maxTouchPoints > 1);
        }),
        P = E(function () {
          return I() || S();
        });
      E(function () {
        return k() || P();
      });
      let T = E(function () {
          return x(/AppleWebKit/i) && !C();
        }),
        C = E(function () {
          return x(/Chrome/i);
        });
      E(function () {
        return x(/Android/i);
      });
      let O = E(function () {
          return x(/Firefox/i);
        }),
        _ = (0, s.createContext)({
          isNative: !0,
          open: function (e, t) {
            N(e, (e) => R(e, t));
          },
          useHref: (e) => e,
        });
      function B(e) {
        let { children: t, navigate: r, useHref: n } = e,
          i = (0, s.useMemo)(
            () => ({
              isNative: !1,
              open: (e, t, n, i) => {
                N(e, (e) => {
                  let o;
                  ((o = e.getAttribute("target")) && "_self" !== o) ||
                  e.origin !== location.origin ||
                  e.hasAttribute("download") ||
                  t.metaKey ||
                  t.ctrlKey ||
                  t.altKey ||
                  t.shiftKey
                    ? R(e, t)
                    : r(n, i);
                });
              },
              useHref: n || ((e) => e),
            }),
            [r, n]
          );
        return s.createElement(_.Provider, { value: i }, t);
      }
      function R(e, t, r = !0) {
        var n, i;
        let { metaKey: o, ctrlKey: a, altKey: s, shiftKey: l } = t;
        O() &&
          (null === (i = window.event) || void 0 === i
            ? void 0
            : null === (n = i.type) || void 0 === n
            ? void 0
            : n.startsWith("key")) &&
          "_blank" === e.target &&
          (k() ? (o = !0) : (a = !0));
        let u =
          T() && k() && !S()
            ? new KeyboardEvent("keydown", {
                keyIdentifier: "Enter",
                metaKey: o,
                ctrlKey: a,
                altKey: s,
                shiftKey: l,
              })
            : new MouseEvent("click", {
                metaKey: o,
                ctrlKey: a,
                altKey: s,
                shiftKey: l,
                bubbles: !0,
                cancelable: !0,
              });
        (R.isOpening = r),
          (function (e) {
            if (
              (function () {
                if (null == w) {
                  w = !1;
                  try {
                    document.createElement("div").focus({
                      get preventScroll() {
                        return (w = !0), !0;
                      },
                    });
                  } catch {}
                }
                return w;
              })()
            )
              e.focus({ preventScroll: !0 });
            else {
              let t = (function (e) {
                let t = e.parentNode,
                  r = [],
                  n = document.scrollingElement || document.documentElement;
                for (; t instanceof HTMLElement && t !== n; )
                  (t.offsetHeight < t.scrollHeight ||
                    t.offsetWidth < t.scrollWidth) &&
                    r.push({
                      element: t,
                      scrollTop: t.scrollTop,
                      scrollLeft: t.scrollLeft,
                    }),
                    (t = t.parentNode);
                return (
                  n instanceof HTMLElement &&
                    r.push({
                      element: n,
                      scrollTop: n.scrollTop,
                      scrollLeft: n.scrollLeft,
                    }),
                  r
                );
              })(e);
              e.focus(),
                (function (e) {
                  for (let { element: t, scrollTop: r, scrollLeft: n } of e)
                    (t.scrollTop = r), (t.scrollLeft = n);
                })(t);
            }
          })(e),
          e.dispatchEvent(u),
          (R.isOpening = !1);
      }
      function N(e, t) {
        if (e instanceof HTMLAnchorElement) t(e);
        else if (e.hasAttribute("data-href")) {
          let r = document.createElement("a");
          (r.href = e.getAttribute("data-href")),
            e.hasAttribute("data-target") &&
              (r.target = e.getAttribute("data-target")),
            e.hasAttribute("data-rel") && (r.rel = e.getAttribute("data-rel")),
            e.hasAttribute("data-download") &&
              (r.download = e.getAttribute("data-download")),
            e.hasAttribute("data-ping") &&
              (r.ping = e.getAttribute("data-ping")),
            e.hasAttribute("data-referrer-policy") &&
              (r.referrerPolicy = e.getAttribute("data-referrer-policy")),
            e.appendChild(r),
            t(r),
            e.removeChild(r);
        }
      }
      R.isOpening = !1;
      var M = r(52980),
        j = r(93903),
        F = r(95155),
        L = r(49630),
        D = r(39970),
        U = r(99234);
      function H(e) {
        let { children: t, isValidProp: r, ...n } = e;
        r && (0, D.D)(r),
          ((n = { ...(0, s.useContext)(L.Q), ...n }).isStatic = (0, U.M)(
            () => n.isStatic
          ));
        let i = (0, s.useMemo)(
          () => n,
          [JSON.stringify(n.transition), n.transformPagePoint, n.reducedMotion]
        );
        return (0, F.jsx)(L.Q.Provider, { value: i, children: t });
      }
      var $ = (e) => {
        let {
            children: t,
            navigate: r,
            disableAnimation: i,
            useHref: o,
            disableRipple: a = !1,
            skipFramerMotionAnimations: l = i,
            reducedMotion: u = "never",
            validationBehavior: c,
            locale: d = "en-US",
            labelPlacement: f,
            defaultDates: h,
            createCalendar: p,
            spinnerVariant: m,
            ...g
          } = e,
          y = t;
        r && (y = (0, F.jsx)(B, { navigate: r, useHref: o, children: y }));
        let b = (0, s.useMemo)(
          () => (
            i && l && (j.W.skipAnimations = !0),
            {
              createCalendar: p,
              defaultDates: h,
              disableAnimation: i,
              disableRipple: a,
              validationBehavior: c,
              labelPlacement: f,
              spinnerVariant: m,
            }
          ),
          [
            p,
            null == h ? void 0 : h.maxDate,
            null == h ? void 0 : h.minDate,
            i,
            a,
            c,
            f,
            m,
          ]
        );
        return (0, F.jsx)(n.n, {
          value: b,
          children: (0, F.jsx)(v, {
            locale: d,
            children: (0, F.jsx)(H, {
              reducedMotion: u,
              children: (0, F.jsx)(M.so, { ...g, children: y }),
            }),
          }),
        });
      };
    },
    47298: (e, t, r) => {
      "use strict";
      r.d(t, { n: () => n, o: () => i });
      var [n, i] = (0, r(30121).q)({ name: "ProviderContext", strict: !1 });
    },
    40335: (e, t, r) => {
      "use strict";
      r.d(t, {
        $1: () => o,
        KU: () => a,
        n3: () => l,
        oT: () => s,
        wA: () => i,
        zb: () => n,
      });
      var n = [
          "outline-none",
          "data-[focus-visible=true]:z-10",
          "data-[focus-visible=true]:outline-2",
          "data-[focus-visible=true]:outline-focus",
          "data-[focus-visible=true]:outline-offset-2",
        ],
        i = [
          "outline-none",
          "group-data-[focus-visible=true]:z-10",
          "group-data-[focus-visible=true]:ring-2",
          "group-data-[focus-visible=true]:ring-focus",
          "group-data-[focus-visible=true]:ring-offset-2",
          "group-data-[focus-visible=true]:ring-offset-background",
        ],
        o = [
          "outline-none",
          "ring-2",
          "ring-focus",
          "ring-offset-2",
          "ring-offset-background",
        ],
        a = [
          "absolute",
          "top-1/2",
          "left-1/2",
          "-translate-x-1/2",
          "-translate-y-1/2",
        ],
        s = {
          default: [
            "[&+.border-medium.border-default]:ms-[calc(theme(borderWidth.medium)*-1)]",
          ],
          primary: [
            "[&+.border-medium.border-primary]:ms-[calc(theme(borderWidth.medium)*-1)]",
          ],
          secondary: [
            "[&+.border-medium.border-secondary]:ms-[calc(theme(borderWidth.medium)*-1)]",
          ],
          success: [
            "[&+.border-medium.border-success]:ms-[calc(theme(borderWidth.medium)*-1)]",
          ],
          warning: [
            "[&+.border-medium.border-warning]:ms-[calc(theme(borderWidth.medium)*-1)]",
          ],
          danger: [
            "[&+.border-medium.border-danger]:ms-[calc(theme(borderWidth.medium)*-1)]",
          ],
        },
        l = [
          "font-inherit",
          "text-[100%]",
          "leading-[1.15]",
          "m-0",
          "p-0",
          "overflow-visible",
          "box-border",
          "absolute",
          "top-0",
          "w-full",
          "h-full",
          "opacity-[0.0001]",
          "z-[1]",
          "cursor-pointer",
          "disabled:cursor-default",
        ];
    },
    12785: (e, t, r) => {
      "use strict";
      r.d(t, { k: () => n });
      var n = {
        solid: {
          default: "bg-default text-default-foreground",
          primary: "bg-primary text-primary-foreground",
          secondary: "bg-secondary text-secondary-foreground",
          success: "bg-success text-success-foreground",
          warning: "bg-warning text-warning-foreground",
          danger: "bg-danger text-danger-foreground",
          foreground: "bg-foreground text-background",
        },
        shadow: {
          default:
            "shadow-lg shadow-default/50 bg-default text-default-foreground",
          primary:
            "shadow-lg shadow-primary/40 bg-primary text-primary-foreground",
          secondary:
            "shadow-lg shadow-secondary/40 bg-secondary text-secondary-foreground",
          success:
            "shadow-lg shadow-success/40 bg-success text-success-foreground",
          warning:
            "shadow-lg shadow-warning/40 bg-warning text-warning-foreground",
          danger: "shadow-lg shadow-danger/40 bg-danger text-danger-foreground",
          foreground:
            "shadow-lg shadow-foreground/40 bg-foreground text-background",
        },
        bordered: {
          default: "bg-transparent border-default text-foreground",
          primary: "bg-transparent border-primary text-primary",
          secondary: "bg-transparent border-secondary text-secondary",
          success: "bg-transparent border-success text-success",
          warning: "bg-transparent border-warning text-warning",
          danger: "bg-transparent border-danger text-danger",
          foreground: "bg-transparent border-foreground text-foreground",
        },
        flat: {
          default: "bg-default/40 text-default-700",
          primary: "bg-primary/20 text-primary-600",
          secondary: "bg-secondary/20 text-secondary-600",
          success: "bg-success/20 text-success-700 dark:text-success",
          warning: "bg-warning/20 text-warning-700 dark:text-warning",
          danger: "bg-danger/20 text-danger-600 dark:text-danger-500",
          foreground: "bg-foreground/10 text-foreground",
        },
        faded: {
          default: "border-default bg-default-100 text-default-foreground",
          primary: "border-default bg-default-100 text-primary",
          secondary: "border-default bg-default-100 text-secondary",
          success: "border-default bg-default-100 text-success",
          warning: "border-default bg-default-100 text-warning",
          danger: "border-default bg-default-100 text-danger",
          foreground: "border-default bg-default-100 text-foreground",
        },
        light: {
          default: "bg-transparent text-default-foreground",
          primary: "bg-transparent text-primary",
          secondary: "bg-transparent text-secondary",
          success: "bg-transparent text-success",
          warning: "bg-transparent text-warning",
          danger: "bg-transparent text-danger",
          foreground: "bg-transparent text-foreground",
        },
        ghost: {
          default: "border-default text-default-foreground",
          primary: "border-primary text-primary",
          secondary: "border-secondary text-secondary",
          success: "border-success text-success",
          warning: "border-warning text-warning",
          danger: "border-danger text-danger",
          foreground: "border-foreground text-foreground hover:!bg-foreground",
        },
      };
    },
    67222: (e, t, r) => {
      "use strict";
      r.d(t, { tv: () => ex });
      var n = ["small", "medium", "large"],
        i = {
          theme: {
            opacity: ["disabled"],
            spacing: ["divider"],
            borderWidth: n,
            borderRadius: n,
          },
          classGroups: {
            shadow: [{ shadow: n }],
            "font-size": [{ text: ["tiny", ...n] }],
            "bg-image": [
              "bg-stripe-gradient-default",
              "bg-stripe-gradient-primary",
              "bg-stripe-gradient-secondary",
              "bg-stripe-gradient-success",
              "bg-stripe-gradient-warning",
              "bg-stripe-gradient-danger",
            ],
          },
        },
        o = (e) => ("boolean" == typeof e ? `${e}` : 0 === e ? "0" : e),
        a = (e) => !e || "object" != typeof e || 0 === Object.keys(e).length,
        s = (e, t) => JSON.stringify(e) === JSON.stringify(t);
      function l(e) {
        let t = [];
        return (
          (function e(t, r) {
            t.forEach(function (t) {
              Array.isArray(t) ? e(t, r) : r.push(t);
            });
          })(e, t),
          t
        );
      }
      var u = (...e) => l(e).filter(Boolean),
        c = (e, t) => {
          let r = {},
            n = Object.keys(e),
            i = Object.keys(t);
          for (let o of n)
            if (i.includes(o)) {
              let n = e[o],
                i = t[o];
              Array.isArray(n) || Array.isArray(i)
                ? (r[o] = u(i, n))
                : "object" == typeof n && "object" == typeof i
                ? (r[o] = c(n, i))
                : (r[o] = i + " " + n);
            } else r[o] = e[o];
          for (let e of i) n.includes(e) || (r[e] = t[e]);
          return r;
        },
        d = (e) =>
          e && "string" == typeof e ? e.replace(/\s+/g, " ").trim() : e;
      let f = (e) => {
          let t = g(e),
            { conflictingClassGroups: r, conflictingClassGroupModifiers: n } =
              e;
          return {
            getClassGroupId: (e) => {
              let r = e.split("-");
              return (
                "" === r[0] && 1 !== r.length && r.shift(), h(r, t) || m(e)
              );
            },
            getConflictingClassGroupIds: (e, t) => {
              let i = r[e] || [];
              return t && n[e] ? [...i, ...n[e]] : i;
            },
          };
        },
        h = (e, t) => {
          if (0 === e.length) return t.classGroupId;
          let r = e[0],
            n = t.nextPart.get(r),
            i = n ? h(e.slice(1), n) : void 0;
          if (i) return i;
          if (0 === t.validators.length) return;
          let o = e.join("-");
          return t.validators.find(({ validator: e }) => e(o))?.classGroupId;
        },
        p = /^\[(.+)\]$/,
        m = (e) => {
          if (p.test(e)) {
            let t = p.exec(e)[1],
              r = t?.substring(0, t.indexOf(":"));
            if (r) return "arbitrary.." + r;
          }
        },
        g = (e) => {
          let { theme: t, prefix: r } = e,
            n = { nextPart: new Map(), validators: [] };
          return (
            w(Object.entries(e.classGroups), r).forEach(([e, r]) => {
              y(r, n, e, t);
            }),
            n
          );
        },
        y = (e, t, r, n) => {
          e.forEach((e) => {
            if ("string" == typeof e) {
              ("" === e ? t : b(t, e)).classGroupId = r;
              return;
            }
            if ("function" == typeof e) {
              if (v(e)) {
                y(e(n), t, r, n);
                return;
              }
              t.validators.push({ validator: e, classGroupId: r });
              return;
            }
            Object.entries(e).forEach(([e, i]) => {
              y(i, b(t, e), r, n);
            });
          });
        },
        b = (e, t) => {
          let r = e;
          return (
            t.split("-").forEach((e) => {
              r.nextPart.has(e) ||
                r.nextPart.set(e, { nextPart: new Map(), validators: [] }),
                (r = r.nextPart.get(e));
            }),
            r
          );
        },
        v = (e) => e.isThemeGetter,
        w = (e, t) =>
          t
            ? e.map(([e, r]) => [
                e,
                r.map((e) =>
                  "string" == typeof e
                    ? t + e
                    : "object" == typeof e
                    ? Object.fromEntries(
                        Object.entries(e).map(([e, r]) => [t + e, r])
                      )
                    : e
                ),
              ])
            : e,
        x = (e) => {
          if (e < 1) return { get: () => void 0, set: () => {} };
          let t = 0,
            r = new Map(),
            n = new Map(),
            i = (i, o) => {
              r.set(i, o), ++t > e && ((t = 0), (n = r), (r = new Map()));
            };
          return {
            get(e) {
              let t = r.get(e);
              return void 0 !== t
                ? t
                : void 0 !== (t = n.get(e))
                ? (i(e, t), t)
                : void 0;
            },
            set(e, t) {
              r.has(e) ? r.set(e, t) : i(e, t);
            },
          };
        },
        A = (e) => {
          let { separator: t, experimentalParseClassName: r } = e,
            n = 1 === t.length,
            i = t[0],
            o = t.length,
            a = (e) => {
              let r;
              let a = [],
                s = 0,
                l = 0;
              for (let u = 0; u < e.length; u++) {
                let c = e[u];
                if (0 === s) {
                  if (c === i && (n || e.slice(u, u + o) === t)) {
                    a.push(e.slice(l, u)), (l = u + o);
                    continue;
                  }
                  if ("/" === c) {
                    r = u;
                    continue;
                  }
                }
                "[" === c ? s++ : "]" === c && s--;
              }
              let u = 0 === a.length ? e : e.substring(l),
                c = u.startsWith("!"),
                d = c ? u.substring(1) : u;
              return {
                modifiers: a,
                hasImportantModifier: c,
                baseClassName: d,
                maybePostfixModifierPosition: r && r > l ? r - l : void 0,
              };
            };
          return r ? (e) => r({ className: e, parseClassName: a }) : a;
        },
        E = (e) => {
          if (e.length <= 1) return e;
          let t = [],
            r = [];
          return (
            e.forEach((e) => {
              "[" === e[0] ? (t.push(...r.sort(), e), (r = [])) : r.push(e);
            }),
            t.push(...r.sort()),
            t
          );
        },
        k = (e) => ({ cache: x(e.cacheSize), parseClassName: A(e), ...f(e) }),
        I = /\s+/,
        S = (e, t) => {
          let {
              parseClassName: r,
              getClassGroupId: n,
              getConflictingClassGroupIds: i,
            } = t,
            o = [],
            a = e.trim().split(I),
            s = "";
          for (let e = a.length - 1; e >= 0; e -= 1) {
            let t = a[e],
              {
                modifiers: l,
                hasImportantModifier: u,
                baseClassName: c,
                maybePostfixModifierPosition: d,
              } = r(t),
              f = !!d,
              h = n(f ? c.substring(0, d) : c);
            if (!h) {
              if (!f || !(h = n(c))) {
                s = t + (s.length > 0 ? " " + s : s);
                continue;
              }
              f = !1;
            }
            let p = E(l).join(":"),
              m = u ? p + "!" : p,
              g = m + h;
            if (o.includes(g)) continue;
            o.push(g);
            let y = i(h, f);
            for (let e = 0; e < y.length; ++e) {
              let t = y[e];
              o.push(m + t);
            }
            s = t + (s.length > 0 ? " " + s : s);
          }
          return s;
        };
      function P() {
        let e,
          t,
          r = 0,
          n = "";
        for (; r < arguments.length; )
          (e = arguments[r++]) && (t = T(e)) && (n && (n += " "), (n += t));
        return n;
      }
      let T = (e) => {
        let t;
        if ("string" == typeof e) return e;
        let r = "";
        for (let n = 0; n < e.length; n++)
          e[n] && (t = T(e[n])) && (r && (r += " "), (r += t));
        return r;
      };
      function C(e, ...t) {
        let r, n, i;
        let o = function (s) {
          return (
            (n = (r = k(t.reduce((e, t) => t(e), e()))).cache.get),
            (i = r.cache.set),
            (o = a),
            a(s)
          );
        };
        function a(e) {
          let t = n(e);
          if (t) return t;
          let o = S(e, r);
          return i(e, o), o;
        }
        return function () {
          return o(P.apply(null, arguments));
        };
      }
      let O = (e) => {
          let t = (t) => t[e] || [];
          return (t.isThemeGetter = !0), t;
        },
        _ = /^\[(?:([a-z-]+):)?(.+)\]$/i,
        B = /^\d+\/\d+$/,
        R = new Set(["px", "full", "screen"]),
        N = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/,
        M =
          /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/,
        j = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/,
        F = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/,
        L =
          /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/,
        D = (e) => H(e) || R.has(e) || B.test(e),
        U = (e) => ee(e, "length", et),
        H = (e) => !!e && !Number.isNaN(Number(e)),
        $ = (e) => ee(e, "number", H),
        z = (e) => !!e && Number.isInteger(Number(e)),
        G = (e) => e.endsWith("%") && H(e.slice(0, -1)),
        q = (e) => _.test(e),
        W = (e) => N.test(e),
        V = new Set(["length", "size", "percentage"]),
        Z = (e) => ee(e, V, er),
        K = (e) => ee(e, "position", er),
        Q = new Set(["image", "url"]),
        J = (e) => ee(e, Q, ei),
        Y = (e) => ee(e, "", en),
        X = () => !0,
        ee = (e, t, r) => {
          let n = _.exec(e);
          return (
            !!n &&
            (n[1] ? ("string" == typeof t ? n[1] === t : t.has(n[1])) : r(n[2]))
          );
        },
        et = (e) => M.test(e) && !j.test(e),
        er = () => !1,
        en = (e) => F.test(e),
        ei = (e) => L.test(e);
      Symbol.toStringTag;
      let eo = () => {
          let e = O("colors"),
            t = O("spacing"),
            r = O("blur"),
            n = O("brightness"),
            i = O("borderColor"),
            o = O("borderRadius"),
            a = O("borderSpacing"),
            s = O("borderWidth"),
            l = O("contrast"),
            u = O("grayscale"),
            c = O("hueRotate"),
            d = O("invert"),
            f = O("gap"),
            h = O("gradientColorStops"),
            p = O("gradientColorStopPositions"),
            m = O("inset"),
            g = O("margin"),
            y = O("opacity"),
            b = O("padding"),
            v = O("saturate"),
            w = O("scale"),
            x = O("sepia"),
            A = O("skew"),
            E = O("space"),
            k = O("translate"),
            I = () => ["auto", "contain", "none"],
            S = () => ["auto", "hidden", "clip", "visible", "scroll"],
            P = () => ["auto", q, t],
            T = () => [q, t],
            C = () => ["", D, U],
            _ = () => ["auto", H, q],
            B = () => [
              "bottom",
              "center",
              "left",
              "left-bottom",
              "left-top",
              "right",
              "right-bottom",
              "right-top",
              "top",
            ],
            R = () => ["solid", "dashed", "dotted", "double", "none"],
            N = () => [
              "normal",
              "multiply",
              "screen",
              "overlay",
              "darken",
              "lighten",
              "color-dodge",
              "color-burn",
              "hard-light",
              "soft-light",
              "difference",
              "exclusion",
              "hue",
              "saturation",
              "color",
              "luminosity",
            ],
            M = () => [
              "start",
              "end",
              "center",
              "between",
              "around",
              "evenly",
              "stretch",
            ],
            j = () => ["", "0", q],
            F = () => [
              "auto",
              "avoid",
              "all",
              "avoid-page",
              "page",
              "left",
              "right",
              "column",
            ],
            L = () => [H, q];
          return {
            cacheSize: 500,
            separator: ":",
            theme: {
              colors: [X],
              spacing: [D, U],
              blur: ["none", "", W, q],
              brightness: L(),
              borderColor: [e],
              borderRadius: ["none", "", "full", W, q],
              borderSpacing: T(),
              borderWidth: C(),
              contrast: L(),
              grayscale: j(),
              hueRotate: L(),
              invert: j(),
              gap: T(),
              gradientColorStops: [e],
              gradientColorStopPositions: [G, U],
              inset: P(),
              margin: P(),
              opacity: L(),
              padding: T(),
              saturate: L(),
              scale: L(),
              sepia: j(),
              skew: L(),
              space: T(),
              translate: T(),
            },
            classGroups: {
              aspect: [{ aspect: ["auto", "square", "video", q] }],
              container: ["container"],
              columns: [{ columns: [W] }],
              "break-after": [{ "break-after": F() }],
              "break-before": [{ "break-before": F() }],
              "break-inside": [
                {
                  "break-inside": [
                    "auto",
                    "avoid",
                    "avoid-page",
                    "avoid-column",
                  ],
                },
              ],
              "box-decoration": [{ "box-decoration": ["slice", "clone"] }],
              box: [{ box: ["border", "content"] }],
              display: [
                "block",
                "inline-block",
                "inline",
                "flex",
                "inline-flex",
                "table",
                "inline-table",
                "table-caption",
                "table-cell",
                "table-column",
                "table-column-group",
                "table-footer-group",
                "table-header-group",
                "table-row-group",
                "table-row",
                "flow-root",
                "grid",
                "inline-grid",
                "contents",
                "list-item",
                "hidden",
              ],
              float: [{ float: ["right", "left", "none", "start", "end"] }],
              clear: [
                { clear: ["left", "right", "both", "none", "start", "end"] },
              ],
              isolation: ["isolate", "isolation-auto"],
              "object-fit": [
                { object: ["contain", "cover", "fill", "none", "scale-down"] },
              ],
              "object-position": [{ object: [...B(), q] }],
              overflow: [{ overflow: S() }],
              "overflow-x": [{ "overflow-x": S() }],
              "overflow-y": [{ "overflow-y": S() }],
              overscroll: [{ overscroll: I() }],
              "overscroll-x": [{ "overscroll-x": I() }],
              "overscroll-y": [{ "overscroll-y": I() }],
              position: ["static", "fixed", "absolute", "relative", "sticky"],
              inset: [{ inset: [m] }],
              "inset-x": [{ "inset-x": [m] }],
              "inset-y": [{ "inset-y": [m] }],
              start: [{ start: [m] }],
              end: [{ end: [m] }],
              top: [{ top: [m] }],
              right: [{ right: [m] }],
              bottom: [{ bottom: [m] }],
              left: [{ left: [m] }],
              visibility: ["visible", "invisible", "collapse"],
              z: [{ z: ["auto", z, q] }],
              basis: [{ basis: P() }],
              "flex-direction": [
                { flex: ["row", "row-reverse", "col", "col-reverse"] },
              ],
              "flex-wrap": [{ flex: ["wrap", "wrap-reverse", "nowrap"] }],
              flex: [{ flex: ["1", "auto", "initial", "none", q] }],
              grow: [{ grow: j() }],
              shrink: [{ shrink: j() }],
              order: [{ order: ["first", "last", "none", z, q] }],
              "grid-cols": [{ "grid-cols": [X] }],
              "col-start-end": [{ col: ["auto", { span: ["full", z, q] }, q] }],
              "col-start": [{ "col-start": _() }],
              "col-end": [{ "col-end": _() }],
              "grid-rows": [{ "grid-rows": [X] }],
              "row-start-end": [{ row: ["auto", { span: [z, q] }, q] }],
              "row-start": [{ "row-start": _() }],
              "row-end": [{ "row-end": _() }],
              "grid-flow": [
                {
                  "grid-flow": [
                    "row",
                    "col",
                    "dense",
                    "row-dense",
                    "col-dense",
                  ],
                },
              ],
              "auto-cols": [{ "auto-cols": ["auto", "min", "max", "fr", q] }],
              "auto-rows": [{ "auto-rows": ["auto", "min", "max", "fr", q] }],
              gap: [{ gap: [f] }],
              "gap-x": [{ "gap-x": [f] }],
              "gap-y": [{ "gap-y": [f] }],
              "justify-content": [{ justify: ["normal", ...M()] }],
              "justify-items": [
                { "justify-items": ["start", "end", "center", "stretch"] },
              ],
              "justify-self": [
                {
                  "justify-self": ["auto", "start", "end", "center", "stretch"],
                },
              ],
              "align-content": [{ content: ["normal", ...M(), "baseline"] }],
              "align-items": [
                { items: ["start", "end", "center", "baseline", "stretch"] },
              ],
              "align-self": [
                {
                  self: [
                    "auto",
                    "start",
                    "end",
                    "center",
                    "stretch",
                    "baseline",
                  ],
                },
              ],
              "place-content": [{ "place-content": [...M(), "baseline"] }],
              "place-items": [
                {
                  "place-items": [
                    "start",
                    "end",
                    "center",
                    "baseline",
                    "stretch",
                  ],
                },
              ],
              "place-self": [
                { "place-self": ["auto", "start", "end", "center", "stretch"] },
              ],
              p: [{ p: [b] }],
              px: [{ px: [b] }],
              py: [{ py: [b] }],
              ps: [{ ps: [b] }],
              pe: [{ pe: [b] }],
              pt: [{ pt: [b] }],
              pr: [{ pr: [b] }],
              pb: [{ pb: [b] }],
              pl: [{ pl: [b] }],
              m: [{ m: [g] }],
              mx: [{ mx: [g] }],
              my: [{ my: [g] }],
              ms: [{ ms: [g] }],
              me: [{ me: [g] }],
              mt: [{ mt: [g] }],
              mr: [{ mr: [g] }],
              mb: [{ mb: [g] }],
              ml: [{ ml: [g] }],
              "space-x": [{ "space-x": [E] }],
              "space-x-reverse": ["space-x-reverse"],
              "space-y": [{ "space-y": [E] }],
              "space-y-reverse": ["space-y-reverse"],
              w: [
                { w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", q, t] },
              ],
              "min-w": [{ "min-w": [q, t, "min", "max", "fit"] }],
              "max-w": [
                {
                  "max-w": [
                    q,
                    t,
                    "none",
                    "full",
                    "min",
                    "max",
                    "fit",
                    "prose",
                    { screen: [W] },
                    W,
                  ],
                },
              ],
              h: [
                { h: [q, t, "auto", "min", "max", "fit", "svh", "lvh", "dvh"] },
              ],
              "min-h": [
                { "min-h": [q, t, "min", "max", "fit", "svh", "lvh", "dvh"] },
              ],
              "max-h": [
                { "max-h": [q, t, "min", "max", "fit", "svh", "lvh", "dvh"] },
              ],
              size: [{ size: [q, t, "auto", "min", "max", "fit"] }],
              "font-size": [{ text: ["base", W, U] }],
              "font-smoothing": ["antialiased", "subpixel-antialiased"],
              "font-style": ["italic", "not-italic"],
              "font-weight": [
                {
                  font: [
                    "thin",
                    "extralight",
                    "light",
                    "normal",
                    "medium",
                    "semibold",
                    "bold",
                    "extrabold",
                    "black",
                    $,
                  ],
                },
              ],
              "font-family": [{ font: [X] }],
              "fvn-normal": ["normal-nums"],
              "fvn-ordinal": ["ordinal"],
              "fvn-slashed-zero": ["slashed-zero"],
              "fvn-figure": ["lining-nums", "oldstyle-nums"],
              "fvn-spacing": ["proportional-nums", "tabular-nums"],
              "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
              tracking: [
                {
                  tracking: [
                    "tighter",
                    "tight",
                    "normal",
                    "wide",
                    "wider",
                    "widest",
                    q,
                  ],
                },
              ],
              "line-clamp": [{ "line-clamp": ["none", H, $] }],
              leading: [
                {
                  leading: [
                    "none",
                    "tight",
                    "snug",
                    "normal",
                    "relaxed",
                    "loose",
                    D,
                    q,
                  ],
                },
              ],
              "list-image": [{ "list-image": ["none", q] }],
              "list-style-type": [{ list: ["none", "disc", "decimal", q] }],
              "list-style-position": [{ list: ["inside", "outside"] }],
              "placeholder-color": [{ placeholder: [e] }],
              "placeholder-opacity": [{ "placeholder-opacity": [y] }],
              "text-alignment": [
                {
                  text: ["left", "center", "right", "justify", "start", "end"],
                },
              ],
              "text-color": [{ text: [e] }],
              "text-opacity": [{ "text-opacity": [y] }],
              "text-decoration": [
                "underline",
                "overline",
                "line-through",
                "no-underline",
              ],
              "text-decoration-style": [{ decoration: [...R(), "wavy"] }],
              "text-decoration-thickness": [
                { decoration: ["auto", "from-font", D, U] },
              ],
              "underline-offset": [{ "underline-offset": ["auto", D, q] }],
              "text-decoration-color": [{ decoration: [e] }],
              "text-transform": [
                "uppercase",
                "lowercase",
                "capitalize",
                "normal-case",
              ],
              "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
              "text-wrap": [{ text: ["wrap", "nowrap", "balance", "pretty"] }],
              indent: [{ indent: T() }],
              "vertical-align": [
                {
                  align: [
                    "baseline",
                    "top",
                    "middle",
                    "bottom",
                    "text-top",
                    "text-bottom",
                    "sub",
                    "super",
                    q,
                  ],
                },
              ],
              whitespace: [
                {
                  whitespace: [
                    "normal",
                    "nowrap",
                    "pre",
                    "pre-line",
                    "pre-wrap",
                    "break-spaces",
                  ],
                },
              ],
              break: [{ break: ["normal", "words", "all", "keep"] }],
              hyphens: [{ hyphens: ["none", "manual", "auto"] }],
              content: [{ content: ["none", q] }],
              "bg-attachment": [{ bg: ["fixed", "local", "scroll"] }],
              "bg-clip": [
                { "bg-clip": ["border", "padding", "content", "text"] },
              ],
              "bg-opacity": [{ "bg-opacity": [y] }],
              "bg-origin": [{ "bg-origin": ["border", "padding", "content"] }],
              "bg-position": [{ bg: [...B(), K] }],
              "bg-repeat": [
                {
                  bg: [
                    "no-repeat",
                    { repeat: ["", "x", "y", "round", "space"] },
                  ],
                },
              ],
              "bg-size": [{ bg: ["auto", "cover", "contain", Z] }],
              "bg-image": [
                {
                  bg: [
                    "none",
                    {
                      "gradient-to": [
                        "t",
                        "tr",
                        "r",
                        "br",
                        "b",
                        "bl",
                        "l",
                        "tl",
                      ],
                    },
                    J,
                  ],
                },
              ],
              "bg-color": [{ bg: [e] }],
              "gradient-from-pos": [{ from: [p] }],
              "gradient-via-pos": [{ via: [p] }],
              "gradient-to-pos": [{ to: [p] }],
              "gradient-from": [{ from: [h] }],
              "gradient-via": [{ via: [h] }],
              "gradient-to": [{ to: [h] }],
              rounded: [{ rounded: [o] }],
              "rounded-s": [{ "rounded-s": [o] }],
              "rounded-e": [{ "rounded-e": [o] }],
              "rounded-t": [{ "rounded-t": [o] }],
              "rounded-r": [{ "rounded-r": [o] }],
              "rounded-b": [{ "rounded-b": [o] }],
              "rounded-l": [{ "rounded-l": [o] }],
              "rounded-ss": [{ "rounded-ss": [o] }],
              "rounded-se": [{ "rounded-se": [o] }],
              "rounded-ee": [{ "rounded-ee": [o] }],
              "rounded-es": [{ "rounded-es": [o] }],
              "rounded-tl": [{ "rounded-tl": [o] }],
              "rounded-tr": [{ "rounded-tr": [o] }],
              "rounded-br": [{ "rounded-br": [o] }],
              "rounded-bl": [{ "rounded-bl": [o] }],
              "border-w": [{ border: [s] }],
              "border-w-x": [{ "border-x": [s] }],
              "border-w-y": [{ "border-y": [s] }],
              "border-w-s": [{ "border-s": [s] }],
              "border-w-e": [{ "border-e": [s] }],
              "border-w-t": [{ "border-t": [s] }],
              "border-w-r": [{ "border-r": [s] }],
              "border-w-b": [{ "border-b": [s] }],
              "border-w-l": [{ "border-l": [s] }],
              "border-opacity": [{ "border-opacity": [y] }],
              "border-style": [{ border: [...R(), "hidden"] }],
              "divide-x": [{ "divide-x": [s] }],
              "divide-x-reverse": ["divide-x-reverse"],
              "divide-y": [{ "divide-y": [s] }],
              "divide-y-reverse": ["divide-y-reverse"],
              "divide-opacity": [{ "divide-opacity": [y] }],
              "divide-style": [{ divide: R() }],
              "border-color": [{ border: [i] }],
              "border-color-x": [{ "border-x": [i] }],
              "border-color-y": [{ "border-y": [i] }],
              "border-color-s": [{ "border-s": [i] }],
              "border-color-e": [{ "border-e": [i] }],
              "border-color-t": [{ "border-t": [i] }],
              "border-color-r": [{ "border-r": [i] }],
              "border-color-b": [{ "border-b": [i] }],
              "border-color-l": [{ "border-l": [i] }],
              "divide-color": [{ divide: [i] }],
              "outline-style": [{ outline: ["", ...R()] }],
              "outline-offset": [{ "outline-offset": [D, q] }],
              "outline-w": [{ outline: [D, U] }],
              "outline-color": [{ outline: [e] }],
              "ring-w": [{ ring: C() }],
              "ring-w-inset": ["ring-inset"],
              "ring-color": [{ ring: [e] }],
              "ring-opacity": [{ "ring-opacity": [y] }],
              "ring-offset-w": [{ "ring-offset": [D, U] }],
              "ring-offset-color": [{ "ring-offset": [e] }],
              shadow: [{ shadow: ["", "inner", "none", W, Y] }],
              "shadow-color": [{ shadow: [X] }],
              opacity: [{ opacity: [y] }],
              "mix-blend": [
                { "mix-blend": [...N(), "plus-lighter", "plus-darker"] },
              ],
              "bg-blend": [{ "bg-blend": N() }],
              filter: [{ filter: ["", "none"] }],
              blur: [{ blur: [r] }],
              brightness: [{ brightness: [n] }],
              contrast: [{ contrast: [l] }],
              "drop-shadow": [{ "drop-shadow": ["", "none", W, q] }],
              grayscale: [{ grayscale: [u] }],
              "hue-rotate": [{ "hue-rotate": [c] }],
              invert: [{ invert: [d] }],
              saturate: [{ saturate: [v] }],
              sepia: [{ sepia: [x] }],
              "backdrop-filter": [{ "backdrop-filter": ["", "none"] }],
              "backdrop-blur": [{ "backdrop-blur": [r] }],
              "backdrop-brightness": [{ "backdrop-brightness": [n] }],
              "backdrop-contrast": [{ "backdrop-contrast": [l] }],
              "backdrop-grayscale": [{ "backdrop-grayscale": [u] }],
              "backdrop-hue-rotate": [{ "backdrop-hue-rotate": [c] }],
              "backdrop-invert": [{ "backdrop-invert": [d] }],
              "backdrop-opacity": [{ "backdrop-opacity": [y] }],
              "backdrop-saturate": [{ "backdrop-saturate": [v] }],
              "backdrop-sepia": [{ "backdrop-sepia": [x] }],
              "border-collapse": [{ border: ["collapse", "separate"] }],
              "border-spacing": [{ "border-spacing": [a] }],
              "border-spacing-x": [{ "border-spacing-x": [a] }],
              "border-spacing-y": [{ "border-spacing-y": [a] }],
              "table-layout": [{ table: ["auto", "fixed"] }],
              caption: [{ caption: ["top", "bottom"] }],
              transition: [
                {
                  transition: [
                    "none",
                    "all",
                    "",
                    "colors",
                    "opacity",
                    "shadow",
                    "transform",
                    q,
                  ],
                },
              ],
              duration: [{ duration: L() }],
              ease: [{ ease: ["linear", "in", "out", "in-out", q] }],
              delay: [{ delay: L() }],
              animate: [
                { animate: ["none", "spin", "ping", "pulse", "bounce", q] },
              ],
              transform: [{ transform: ["", "gpu", "none"] }],
              scale: [{ scale: [w] }],
              "scale-x": [{ "scale-x": [w] }],
              "scale-y": [{ "scale-y": [w] }],
              rotate: [{ rotate: [z, q] }],
              "translate-x": [{ "translate-x": [k] }],
              "translate-y": [{ "translate-y": [k] }],
              "skew-x": [{ "skew-x": [A] }],
              "skew-y": [{ "skew-y": [A] }],
              "transform-origin": [
                {
                  origin: [
                    "center",
                    "top",
                    "top-right",
                    "right",
                    "bottom-right",
                    "bottom",
                    "bottom-left",
                    "left",
                    "top-left",
                    q,
                  ],
                },
              ],
              accent: [{ accent: ["auto", e] }],
              appearance: [{ appearance: ["none", "auto"] }],
              cursor: [
                {
                  cursor: [
                    "auto",
                    "default",
                    "pointer",
                    "wait",
                    "text",
                    "move",
                    "help",
                    "not-allowed",
                    "none",
                    "context-menu",
                    "progress",
                    "cell",
                    "crosshair",
                    "vertical-text",
                    "alias",
                    "copy",
                    "no-drop",
                    "grab",
                    "grabbing",
                    "all-scroll",
                    "col-resize",
                    "row-resize",
                    "n-resize",
                    "e-resize",
                    "s-resize",
                    "w-resize",
                    "ne-resize",
                    "nw-resize",
                    "se-resize",
                    "sw-resize",
                    "ew-resize",
                    "ns-resize",
                    "nesw-resize",
                    "nwse-resize",
                    "zoom-in",
                    "zoom-out",
                    q,
                  ],
                },
              ],
              "caret-color": [{ caret: [e] }],
              "pointer-events": [{ "pointer-events": ["none", "auto"] }],
              resize: [{ resize: ["none", "y", "x", ""] }],
              "scroll-behavior": [{ scroll: ["auto", "smooth"] }],
              "scroll-m": [{ "scroll-m": T() }],
              "scroll-mx": [{ "scroll-mx": T() }],
              "scroll-my": [{ "scroll-my": T() }],
              "scroll-ms": [{ "scroll-ms": T() }],
              "scroll-me": [{ "scroll-me": T() }],
              "scroll-mt": [{ "scroll-mt": T() }],
              "scroll-mr": [{ "scroll-mr": T() }],
              "scroll-mb": [{ "scroll-mb": T() }],
              "scroll-ml": [{ "scroll-ml": T() }],
              "scroll-p": [{ "scroll-p": T() }],
              "scroll-px": [{ "scroll-px": T() }],
              "scroll-py": [{ "scroll-py": T() }],
              "scroll-ps": [{ "scroll-ps": T() }],
              "scroll-pe": [{ "scroll-pe": T() }],
              "scroll-pt": [{ "scroll-pt": T() }],
              "scroll-pr": [{ "scroll-pr": T() }],
              "scroll-pb": [{ "scroll-pb": T() }],
              "scroll-pl": [{ "scroll-pl": T() }],
              "snap-align": [
                { snap: ["start", "end", "center", "align-none"] },
              ],
              "snap-stop": [{ snap: ["normal", "always"] }],
              "snap-type": [{ snap: ["none", "x", "y", "both"] }],
              "snap-strictness": [{ snap: ["mandatory", "proximity"] }],
              touch: [{ touch: ["auto", "none", "manipulation"] }],
              "touch-x": [{ "touch-pan": ["x", "left", "right"] }],
              "touch-y": [{ "touch-pan": ["y", "up", "down"] }],
              "touch-pz": ["touch-pinch-zoom"],
              select: [{ select: ["none", "text", "all", "auto"] }],
              "will-change": [
                {
                  "will-change": ["auto", "scroll", "contents", "transform", q],
                },
              ],
              fill: [{ fill: [e, "none"] }],
              "stroke-w": [{ stroke: [D, U, $] }],
              stroke: [{ stroke: [e, "none"] }],
              sr: ["sr-only", "not-sr-only"],
              "forced-color-adjust": [
                { "forced-color-adjust": ["auto", "none"] },
              ],
            },
            conflictingClassGroups: {
              overflow: ["overflow-x", "overflow-y"],
              overscroll: ["overscroll-x", "overscroll-y"],
              inset: [
                "inset-x",
                "inset-y",
                "start",
                "end",
                "top",
                "right",
                "bottom",
                "left",
              ],
              "inset-x": ["right", "left"],
              "inset-y": ["top", "bottom"],
              flex: ["basis", "grow", "shrink"],
              gap: ["gap-x", "gap-y"],
              p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
              px: ["pr", "pl"],
              py: ["pt", "pb"],
              m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
              mx: ["mr", "ml"],
              my: ["mt", "mb"],
              size: ["w", "h"],
              "font-size": ["leading"],
              "fvn-normal": [
                "fvn-ordinal",
                "fvn-slashed-zero",
                "fvn-figure",
                "fvn-spacing",
                "fvn-fraction",
              ],
              "fvn-ordinal": ["fvn-normal"],
              "fvn-slashed-zero": ["fvn-normal"],
              "fvn-figure": ["fvn-normal"],
              "fvn-spacing": ["fvn-normal"],
              "fvn-fraction": ["fvn-normal"],
              "line-clamp": ["display", "overflow"],
              rounded: [
                "rounded-s",
                "rounded-e",
                "rounded-t",
                "rounded-r",
                "rounded-b",
                "rounded-l",
                "rounded-ss",
                "rounded-se",
                "rounded-ee",
                "rounded-es",
                "rounded-tl",
                "rounded-tr",
                "rounded-br",
                "rounded-bl",
              ],
              "rounded-s": ["rounded-ss", "rounded-es"],
              "rounded-e": ["rounded-se", "rounded-ee"],
              "rounded-t": ["rounded-tl", "rounded-tr"],
              "rounded-r": ["rounded-tr", "rounded-br"],
              "rounded-b": ["rounded-br", "rounded-bl"],
              "rounded-l": ["rounded-tl", "rounded-bl"],
              "border-spacing": ["border-spacing-x", "border-spacing-y"],
              "border-w": [
                "border-w-s",
                "border-w-e",
                "border-w-t",
                "border-w-r",
                "border-w-b",
                "border-w-l",
              ],
              "border-w-x": ["border-w-r", "border-w-l"],
              "border-w-y": ["border-w-t", "border-w-b"],
              "border-color": [
                "border-color-s",
                "border-color-e",
                "border-color-t",
                "border-color-r",
                "border-color-b",
                "border-color-l",
              ],
              "border-color-x": ["border-color-r", "border-color-l"],
              "border-color-y": ["border-color-t", "border-color-b"],
              "scroll-m": [
                "scroll-mx",
                "scroll-my",
                "scroll-ms",
                "scroll-me",
                "scroll-mt",
                "scroll-mr",
                "scroll-mb",
                "scroll-ml",
              ],
              "scroll-mx": ["scroll-mr", "scroll-ml"],
              "scroll-my": ["scroll-mt", "scroll-mb"],
              "scroll-p": [
                "scroll-px",
                "scroll-py",
                "scroll-ps",
                "scroll-pe",
                "scroll-pt",
                "scroll-pr",
                "scroll-pb",
                "scroll-pl",
              ],
              "scroll-px": ["scroll-pr", "scroll-pl"],
              "scroll-py": ["scroll-pt", "scroll-pb"],
              touch: ["touch-x", "touch-y", "touch-pz"],
              "touch-x": ["touch"],
              "touch-y": ["touch"],
              "touch-pz": ["touch"],
            },
            conflictingClassGroupModifiers: { "font-size": ["leading"] },
          };
        },
        ea = (
          e,
          {
            cacheSize: t,
            prefix: r,
            separator: n,
            experimentalParseClassName: i,
            extend: o = {},
            override: a = {},
          }
        ) => {
          for (let o in (es(e, "cacheSize", t),
          es(e, "prefix", r),
          es(e, "separator", n),
          es(e, "experimentalParseClassName", i),
          a))
            el(e[o], a[o]);
          for (let t in o) eu(e[t], o[t]);
          return e;
        },
        es = (e, t, r) => {
          void 0 !== r && (e[t] = r);
        },
        el = (e, t) => {
          if (t) for (let r in t) es(e, r, t[r]);
        },
        eu = (e, t) => {
          if (t)
            for (let r in t) {
              let n = t[r];
              void 0 !== n && (e[r] = (e[r] || []).concat(n));
            }
        },
        ec = (e, ...t) =>
          "function" == typeof e ? C(eo, e, ...t) : C(() => ea(eo(), e), ...t),
        ed = C(eo);
      var ef = { twMerge: !0, twMergeConfig: {}, responsiveVariants: !1 },
        eh = (e) => e || void 0,
        ep = (...e) => eh(l(e).filter(Boolean).join(" ")),
        em = null,
        eg = {},
        ey = !1,
        eb =
          (...e) =>
          (t) =>
            t.twMerge
              ? ((!em || ey) &&
                  ((ey = !1),
                  (em = a(eg)
                    ? ed
                    : ec({
                        ...eg,
                        extend: {
                          theme: eg.theme,
                          classGroups: eg.classGroups,
                          conflictingClassGroupModifiers:
                            eg.conflictingClassGroupModifiers,
                          conflictingClassGroups: eg.conflictingClassGroups,
                          ...eg.extend,
                        },
                      }))),
                eh(em(ep(e))))
              : ep(e),
        ev = (e, t) => {
          for (let r in t)
            e.hasOwnProperty(r) ? (e[r] = ep(e[r], t[r])) : (e[r] = t[r]);
          return e;
        },
        ew = (e, t) => {
          let {
              extend: r = null,
              slots: n = {},
              variants: i = {},
              compoundVariants: l = [],
              compoundSlots: f = [],
              defaultVariants: h = {},
            } = e,
            p = { ...ef, ...t },
            m =
              null != r && r.base
                ? ep(r.base, null == e ? void 0 : e.base)
                : null == e
                ? void 0
                : e.base,
            g =
              null != r && r.variants && !a(r.variants) ? c(i, r.variants) : i,
            y =
              null != r && r.defaultVariants && !a(r.defaultVariants)
                ? { ...r.defaultVariants, ...h }
                : h;
          a(p.twMergeConfig) ||
            s(p.twMergeConfig, eg) ||
            ((ey = !0), (eg = p.twMergeConfig));
          let b = a(null == r ? void 0 : r.slots),
            v = a(n)
              ? {}
              : {
                  base: ep(
                    null == e ? void 0 : e.base,
                    b && (null == r ? void 0 : r.base)
                  ),
                  ...n,
                },
            w = b
              ? v
              : ev(
                  { ...(null == r ? void 0 : r.slots) },
                  a(v) ? { base: null == e ? void 0 : e.base } : v
                ),
            x = a(null == r ? void 0 : r.compoundVariants)
              ? l
              : u(null == r ? void 0 : r.compoundVariants, l),
            A = (e) => {
              if (a(g) && a(n) && b)
                return eb(
                  m,
                  null == e ? void 0 : e.class,
                  null == e ? void 0 : e.className
                )(p);
              if (x && !Array.isArray(x))
                throw TypeError(
                  `The "compoundVariants" prop must be an array. Received: ${typeof x}`
                );
              if (f && !Array.isArray(f))
                throw TypeError(
                  `The "compoundSlots" prop must be an array. Received: ${typeof f}`
                );
              let t = (e, t, r = [], n) => {
                  let i = r;
                  if ("string" == typeof t)
                    i = i.concat(
                      d(t)
                        .split(" ")
                        .map((t) => `${e}:${t}`)
                    );
                  else if (Array.isArray(t))
                    i = i.concat(t.reduce((t, r) => t.concat(`${e}:${r}`), []));
                  else if ("object" == typeof t && "string" == typeof n) {
                    for (let r in t)
                      if (t.hasOwnProperty(r) && r === n) {
                        let o = t[r];
                        if (o && "string" == typeof o) {
                          let t = d(o);
                          i[n]
                            ? (i[n] = i[n].concat(
                                t.split(" ").map((t) => `${e}:${t}`)
                              ))
                            : (i[n] = t.split(" ").map((t) => `${e}:${t}`));
                        } else
                          Array.isArray(o) &&
                            o.length > 0 &&
                            (i[n] = o.reduce(
                              (t, r) => t.concat(`${e}:${r}`),
                              []
                            ));
                      }
                  }
                  return i;
                },
                r = (r, n = g, i = null, s = null) => {
                  var l;
                  let u = n[r];
                  if (!u || a(u)) return null;
                  let c =
                    null != (l = null == s ? void 0 : s[r])
                      ? l
                      : null == e
                      ? void 0
                      : e[r];
                  if (null === c) return null;
                  let d = o(c),
                    f =
                      (Array.isArray(p.responsiveVariants) &&
                        p.responsiveVariants.length > 0) ||
                      !0 === p.responsiveVariants,
                    h = null == y ? void 0 : y[r],
                    m = [];
                  if ("object" == typeof d && f)
                    for (let [e, r] of Object.entries(d)) {
                      let n = u[r];
                      if ("initial" === e) {
                        h = r;
                        continue;
                      }
                      (Array.isArray(p.responsiveVariants) &&
                        !p.responsiveVariants.includes(e)) ||
                        (m = t(e, n, m, i));
                    }
                  let b =
                    u[
                      (null != d && "object" != typeof d ? d : o(h)) || "false"
                    ];
                  return "object" == typeof m && "string" == typeof i && m[i]
                    ? ev(m, b)
                    : m.length > 0
                    ? (m.push(b), "base" === i ? m.join(" ") : m)
                    : b;
                },
                i = (e, t) => {
                  if (!g || "object" != typeof g) return null;
                  let n = [];
                  for (let i in g) {
                    let o = r(i, g, e, t),
                      a = "base" === e && "string" == typeof o ? o : o && o[e];
                    a && (n[n.length] = a);
                  }
                  return n;
                },
                s = {};
              for (let t in e) void 0 !== e[t] && (s[t] = e[t]);
              let l = (t, r) => {
                  var n;
                  let i =
                    "object" == typeof (null == e ? void 0 : e[t])
                      ? { [t]: null == (n = e[t]) ? void 0 : n.initial }
                      : {};
                  return { ...y, ...s, ...i, ...r };
                },
                u = (e = [], t) => {
                  let r = [];
                  for (let { class: n, className: i, ...o } of e) {
                    let e = !0;
                    for (let [r, n] of Object.entries(o)) {
                      let i = l(r, t)[r];
                      if (Array.isArray(n)) {
                        if (!n.includes(i)) {
                          e = !1;
                          break;
                        }
                      } else {
                        let t = (e) => null == e || !1 === e;
                        if (t(n) && t(i)) continue;
                        if (i !== n) {
                          e = !1;
                          break;
                        }
                      }
                    }
                    e && (n && r.push(n), i && r.push(i));
                  }
                  return r;
                },
                c = (e) => {
                  let t = u(x, e);
                  if (!Array.isArray(t)) return t;
                  let r = {};
                  for (let e of t)
                    if (
                      ("string" == typeof e && (r.base = eb(r.base, e)(p)),
                      "object" == typeof e)
                    )
                      for (let [t, n] of Object.entries(e))
                        r[t] = eb(r[t], n)(p);
                  return r;
                },
                h = (e) => {
                  if (f.length < 1) return null;
                  let t = {};
                  for (let {
                    slots: r = [],
                    class: n,
                    className: i,
                    ...o
                  } of f) {
                    if (!a(o)) {
                      let t = !0;
                      for (let r of Object.keys(o)) {
                        let n = l(r, e)[r];
                        if (
                          void 0 === n ||
                          (Array.isArray(o[r]) ? !o[r].includes(n) : o[r] !== n)
                        ) {
                          t = !1;
                          break;
                        }
                      }
                      if (!t) continue;
                    }
                    for (let e of r) (t[e] = t[e] || []), t[e].push([n, i]);
                  }
                  return t;
                };
              if (!a(n) || !b) {
                let e = {};
                if ("object" == typeof w && !a(w))
                  for (let t of Object.keys(w))
                    e[t] = (e) => {
                      var r, n;
                      return eb(
                        w[t],
                        i(t, e),
                        (null != (r = c(e)) ? r : [])[t],
                        (null != (n = h(e)) ? n : [])[t],
                        null == e ? void 0 : e.class,
                        null == e ? void 0 : e.className
                      )(p);
                    };
                return e;
              }
              return eb(
                m,
                g ? Object.keys(g).map((e) => r(e, g)) : null,
                u(x),
                null == e ? void 0 : e.class,
                null == e ? void 0 : e.className
              )(p);
            };
          return (
            (A.variantKeys = (() => {
              if (!(!g || "object" != typeof g)) return Object.keys(g);
            })()),
            (A.extend = r),
            (A.base = m),
            (A.slots = w),
            (A.variants = g),
            (A.defaultVariants = y),
            (A.compoundSlots = f),
            (A.compoundVariants = x),
            A
          );
        },
        ex = (e, t) => {
          var r, n, o;
          return ew(e, {
            ...t,
            twMerge: null == (r = null == t ? void 0 : t.twMerge) || r,
            twMergeConfig: {
              ...(null == t ? void 0 : t.twMergeConfig),
              theme: {
                ...(null == (n = null == t ? void 0 : t.twMergeConfig)
                  ? void 0
                  : n.theme),
                ...i.theme,
              },
              classGroups: {
                ...(null == (o = null == t ? void 0 : t.twMergeConfig)
                  ? void 0
                  : o.classGroups),
                ...i.classGroups,
              },
            },
          });
        };
    },
    98043: (e, t, r) => {
      "use strict";
      r.d(t, { l: () => es });
      var n,
        i = r(12115);
      "undefined" != typeof window &&
        window.document &&
        window.document.createElement;
      let o = new Map();
      "undefined" != typeof FinalizationRegistry &&
        new FinalizationRegistry((e) => {
          o.delete(e);
        });
      var a = r(43463);
      function s(...e) {
        let t = { ...e[0] };
        for (let r = 1; r < e.length; r++) {
          let n = e[r];
          for (let e in n) {
            let r = t[e],
              i = n[e];
            "function" == typeof r &&
            "function" == typeof i &&
            "o" === e[0] &&
            "n" === e[1] &&
            e.charCodeAt(2) >= 65 &&
            90 >= e.charCodeAt(2)
              ? (t[e] = (function (...e) {
                  return (...t) => {
                    for (let r of e) "function" == typeof r && r(...t);
                  };
                })(r, i))
              : ("className" === e || "UNSAFE_className" === e) &&
                "string" == typeof r &&
                "string" == typeof i
              ? (t[e] = (0, a.A)(r, i))
              : "id" === e && r && i
              ? (t.id = (function (e, t) {
                  if (e === t) return e;
                  let r = o.get(e);
                  if (r) return r.forEach((e) => (e.current = t)), t;
                  let n = o.get(t);
                  return n ? (n.forEach((t) => (t.current = e)), e) : t;
                })(r, i))
              : (t[e] = void 0 !== i ? i : r);
          }
        }
        return t;
      }
      let l = new Set(["id"]),
        u = new Set([
          "aria-label",
          "aria-labelledby",
          "aria-describedby",
          "aria-details",
        ]),
        c = new Set([
          "href",
          "hrefLang",
          "target",
          "rel",
          "download",
          "ping",
          "referrerPolicy",
        ]),
        d = /^(data-.*)$/;
      var f = r(46175);
      let h = (e) => {
          var t;
          return null !== (t = null == e ? void 0 : e.ownerDocument) &&
            void 0 !== t
            ? t
            : document;
        },
        p = (e) =>
          e && "window" in e && e.window === e ? e : h(e).defaultView || window,
        m =
          "undefined" != typeof Element &&
          "checkVisibility" in Element.prototype,
        g = [
          "input:not([disabled]):not([type=hidden])",
          "select:not([disabled])",
          "textarea:not([disabled])",
          "button:not([disabled])",
          "a[href]",
          "area[href]",
          "summary",
          "iframe",
          "object",
          "embed",
          "audio[controls]",
          "video[controls]",
          '[contenteditable]:not([contenteditable^="false"])',
          "permission",
        ],
        y =
          g.join(":not([hidden]),") +
          ",[tabindex]:not([disabled]):not([hidden])";
      function b(e) {
        if (
          (function () {
            if (null == v) {
              v = !1;
              try {
                document.createElement("div").focus({
                  get preventScroll() {
                    return (v = !0), !0;
                  },
                });
              } catch {}
            }
            return v;
          })()
        )
          e.focus({ preventScroll: !0 });
        else {
          let t = (function (e) {
            let t = e.parentNode,
              r = [],
              n = document.scrollingElement || document.documentElement;
            for (; t instanceof HTMLElement && t !== n; )
              (t.offsetHeight < t.scrollHeight ||
                t.offsetWidth < t.scrollWidth) &&
                r.push({
                  element: t,
                  scrollTop: t.scrollTop,
                  scrollLeft: t.scrollLeft,
                }),
                (t = t.parentNode);
            return (
              n instanceof HTMLElement &&
                r.push({
                  element: n,
                  scrollTop: n.scrollTop,
                  scrollLeft: n.scrollLeft,
                }),
              r
            );
          })(e);
          e.focus(),
            (function (e) {
              for (let { element: t, scrollTop: r, scrollLeft: n } of e)
                (t.scrollTop = r), (t.scrollLeft = n);
            })(t);
        }
      }
      g.push('[tabindex]:not([tabindex="-1"]):not([disabled])'),
        g.join(':not([hidden]):not([tabindex="-1"]),');
      let v = null;
      function w(e) {
        var t;
        if ("undefined" == typeof window || null == window.navigator) return !1;
        let r =
          null === (t = window.navigator.userAgentData) || void 0 === t
            ? void 0
            : t.brands;
        return (
          (Array.isArray(r) && r.some((t) => e.test(t.brand))) ||
          e.test(window.navigator.userAgent)
        );
      }
      function x(e) {
        var t;
        return (
          "undefined" != typeof window &&
          null != window.navigator &&
          e.test(
            (null === (t = window.navigator.userAgentData) || void 0 === t
              ? void 0
              : t.platform) || window.navigator.platform
          )
        );
      }
      function A(e) {
        let t = null;
        return () => (null == t && (t = e()), t);
      }
      let E = A(function () {
          return x(/^Mac/i);
        }),
        k = A(function () {
          return x(/^iPhone/i);
        }),
        I = A(function () {
          return x(/^iPad/i) || (E() && navigator.maxTouchPoints > 1);
        }),
        S = A(function () {
          return k() || I();
        });
      A(function () {
        return E() || S();
      });
      let P = A(function () {
          return w(/AppleWebKit/i) && !T();
        }),
        T = A(function () {
          return w(/Chrome/i);
        }),
        C = A(function () {
          return w(/Android/i);
        }),
        O = A(function () {
          return w(/Firefox/i);
        }),
        _ = new Map(),
        B = new Set();
      function R() {
        if ("undefined" == typeof window) return;
        function e(e) {
          return "propertyName" in e;
        }
        let t = (r) => {
          if (!e(r) || !r.target) return;
          let n = _.get(r.target);
          if (
            n &&
            (n.delete(r.propertyName),
            0 === n.size &&
              (r.target.removeEventListener("transitioncancel", t),
              _.delete(r.target)),
            0 === _.size)
          ) {
            for (let e of B) e();
            B.clear();
          }
        };
        document.body.addEventListener("transitionrun", (r) => {
          if (!e(r) || !r.target) return;
          let n = _.get(r.target);
          n ||
            ((n = new Set()),
            _.set(r.target, n),
            r.target.addEventListener("transitioncancel", t, { once: !0 })),
            n.add(r.propertyName);
        }),
          document.body.addEventListener("transitionend", t);
      }
      "undefined" != typeof document &&
        ("loading" !== document.readyState
          ? R()
          : document.addEventListener("DOMContentLoaded", R));
      let N = "default",
        M = "",
        j = new WeakMap();
      function F(e) {
        if (S())
          "disabled" === N &&
            ((N = "restoring"),
            setTimeout(() => {
              var t;
              (t = () => {
                if ("restoring" === N) {
                  let t = h(e);
                  "none" === t.documentElement.style.webkitUserSelect &&
                    (t.documentElement.style.webkitUserSelect = M || ""),
                    (M = ""),
                    (N = "default");
                }
              }),
                requestAnimationFrame(() => {
                  (function () {
                    for (let [e] of _)
                      "isConnected" in e && !e.isConnected && _.delete(e);
                  })(),
                    0 === _.size ? t() : B.add(t);
                });
            }, 300));
        else if (
          (e instanceof HTMLElement || e instanceof SVGElement) &&
          e &&
          j.has(e)
        ) {
          let t = j.get(e),
            r = "userSelect" in e.style ? "userSelect" : "webkitUserSelect";
          "none" === e.style[r] && (e.style[r] = t),
            "" === e.getAttribute("style") && e.removeAttribute("style"),
            j.delete(e);
        }
      }
      let L = i.createContext({ register: () => {} });
      L.displayName = "PressResponderContext";
      var D = r(97207),
        U = r(66025),
        H = r(14);
      function $(...e) {
        return (...t) => {
          for (let r of e) "function" == typeof r && r(...t);
        };
      }
      "undefined" != typeof window &&
        window.document &&
        window.document.createElement;
      let z = new Map();
      function G(...e) {
        let t = { ...e[0] };
        for (let r = 1; r < e.length; r++) {
          let n = e[r];
          for (let e in n) {
            let r = t[e],
              i = n[e];
            "function" == typeof r &&
            "function" == typeof i &&
            "o" === e[0] &&
            "n" === e[1] &&
            e.charCodeAt(2) >= 65 &&
            90 >= e.charCodeAt(2)
              ? (t[e] = $(r, i))
              : ("className" === e || "UNSAFE_className" === e) &&
                "string" == typeof r &&
                "string" == typeof i
              ? (t[e] = (0, a.A)(r, i))
              : "id" === e && r && i
              ? (t.id = (function (e, t) {
                  if (e === t) return e;
                  let r = z.get(e);
                  if (r) return r.forEach((e) => (e.current = t)), t;
                  let n = z.get(t);
                  return n ? (n.forEach((t) => (t.current = e)), e) : t;
                })(r, i))
              : (t[e] = void 0 !== i ? i : r);
          }
        }
        return t;
      }
      "undefined" != typeof FinalizationRegistry &&
        new FinalizationRegistry((e) => {
          z.delete(e);
        });
      let q = "undefined" != typeof document ? i.useLayoutEffect : () => {},
        W = null !== (n = i.useInsertionEffect) && void 0 !== n ? n : q;
      function V(e) {
        let t = (0, i.useRef)(null);
        return (
          W(() => {
            t.current = e;
          }, [e]),
          (0, i.useCallback)((...e) => {
            let r = t.current;
            return null == r ? void 0 : r(...e);
          }, [])
        );
      }
      var Z = r(99124);
      function K(e, t) {
        if (!(0, Z.Nf)()) return !!t && !!e && e.contains(t);
        if (!e || !t) return !1;
        let r = t;
        for (; null !== r; ) {
          var n;
          if (r === e) return !0;
          r =
            "SLOT" === r.tagName && r.assignedSlot
              ? r.assignedSlot.parentNode
              : null !== (n = r) &&
                "object" == typeof n &&
                "nodeType" in n &&
                "number" == typeof n.nodeType &&
                n.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&
                "host" in n
              ? r.host
              : r.parentNode;
        }
        return !1;
      }
      function Q(e) {
        return (0, Z.Nf)() && e.target.shadowRoot && e.composedPath
          ? e.composedPath()[0]
          : e.target;
      }
      function J(e, t, r = !0) {
        var n, i;
        let { metaKey: o, ctrlKey: a, altKey: s, shiftKey: l } = t;
        O() &&
          (null === (i = window.event) || void 0 === i
            ? void 0
            : null === (n = i.type) || void 0 === n
            ? void 0
            : n.startsWith("key")) &&
          "_blank" === e.target &&
          (E() ? (o = !0) : (a = !0));
        let u =
          P() && E() && !I()
            ? new KeyboardEvent("keydown", {
                keyIdentifier: "Enter",
                metaKey: o,
                ctrlKey: a,
                altKey: s,
                shiftKey: l,
              })
            : new MouseEvent("click", {
                metaKey: o,
                ctrlKey: a,
                altKey: s,
                shiftKey: l,
                bubbles: !0,
                cancelable: !0,
              });
        (J.isOpening = r), b(e), e.dispatchEvent(u), (J.isOpening = !1);
      }
      (J.isOpening = !1), r(47650);
      var Y = new WeakMap();
      class X {
        continuePropagation() {
          (0, H._)(this, Y, !1);
        }
        get shouldStopPropagation() {
          return (0, D._)(this, Y);
        }
        constructor(e, t, r, n) {
          var i;
          (0, U._)(this, Y, { writable: !0, value: void 0 }),
            (0, H._)(this, Y, !0);
          let o =
              null !== (i = null == n ? void 0 : n.target) && void 0 !== i
                ? i
                : r.currentTarget,
            a = null == o ? void 0 : o.getBoundingClientRect(),
            s,
            l = 0,
            u,
            c = null;
          null != r.clientX &&
            null != r.clientY &&
            ((u = r.clientX), (c = r.clientY)),
            a &&
              (null != u && null != c
                ? ((s = u - a.left), (l = c - a.top))
                : ((s = a.width / 2), (l = a.height / 2))),
            (this.type = e),
            (this.pointerType = t),
            (this.target = r.currentTarget),
            (this.shiftKey = r.shiftKey),
            (this.metaKey = r.metaKey),
            (this.ctrlKey = r.ctrlKey),
            (this.altKey = r.altKey),
            (this.x = s),
            (this.y = l);
        }
      }
      let ee = Symbol("linkClicked");
      function et(e) {
        return "A" === e.tagName && e.hasAttribute("href");
      }
      function er(e, t) {
        let { key: r, code: n } = e,
          i = t.getAttribute("role");
        return (
          ("Enter" === r || " " === r || "Spacebar" === r || "Space" === n) &&
          !(
            (t instanceof p(t).HTMLInputElement && !ea(t, r)) ||
            t instanceof p(t).HTMLTextAreaElement ||
            t.isContentEditable
          ) &&
          !(("link" === i || (!i && et(t))) && "Enter" !== r)
        );
      }
      function en(e, t) {
        let r = t.clientX,
          n = t.clientY;
        return {
          currentTarget: e,
          shiftKey: t.shiftKey,
          ctrlKey: t.ctrlKey,
          metaKey: t.metaKey,
          altKey: t.altKey,
          clientX: r,
          clientY: n,
        };
      }
      function ei(e, t) {
        return e instanceof HTMLInputElement
          ? !ea(e, t)
          : !(e instanceof HTMLInputElement) &&
              (e instanceof HTMLButtonElement
                ? "submit" !== e.type && "reset" !== e.type
                : !et(e));
      }
      let eo = new Set([
        "checkbox",
        "radio",
        "range",
        "color",
        "file",
        "image",
        "button",
        "submit",
        "reset",
      ]);
      function ea(e, t) {
        return "checkbox" === e.type || "radio" === e.type
          ? " " === t
          : eo.has(e.type);
      }
      function es(e, t) {
        let r,
          {
            elementType: n = "button",
            isDisabled: o,
            onPress: a,
            onPressStart: g,
            onPressEnd: v,
            onPressChange: w,
            preventFocusOnPress: x,
            allowFocusWhenDisabled: A,
            onClick: k,
            href: I,
            target: P,
            rel: T,
            type: O = "button",
            allowTextSelectionOnPress: _,
          } = e;
        r =
          "button" === n
            ? { type: O, disabled: o }
            : {
                role: "button",
                href: "a" !== n || o ? void 0 : I,
                target: "a" === n ? P : void 0,
                type: "input" === n ? O : void 0,
                disabled: "input" === n ? o : void 0,
                "aria-disabled": o && "input" !== n ? o : void 0,
                rel: "a" === n ? T : void 0,
              };
        let { pressProps: B, isPressed: R } = (function (e) {
            let t,
              r,
              n,
              o,
              {
                onPress: a,
                onPressChange: s,
                onPressStart: l,
                onPressEnd: u,
                onPressUp: c,
                onClick: d,
                isDisabled: f,
                isPressed: g,
                preventFocusOnPress: v,
                shouldCancelOnPointerExit: w,
                allowTextSelectionOnPress: x,
                ref: A,
                ...k
              } = (function (e) {
                var t;
                let r = (0, i.useContext)(L);
                if (r) {
                  let { register: t, ...n } = r;
                  (e = G(n, e)), t();
                }
                return (
                  (t = e.ref),
                  q(() => {
                    if (r && r.ref && t)
                      return (
                        (r.ref.current = t.current),
                        () => {
                          r.ref && (r.ref.current = null);
                        }
                      );
                  }),
                  e
                );
              })(e),
              [I, P] = (0, i.useState)(!1),
              T = (0, i.useRef)({
                isPressed: !1,
                ignoreEmulatedMouseEvents: !1,
                didFirePressStart: !1,
                isTriggeringEvent: !1,
                activePointerId: null,
                target: null,
                isOverTarget: !1,
                pointerType: null,
                disposables: [],
              }),
              { addGlobalListener: O, removeAllGlobalListeners: _ } =
                ((t = (0, i.useRef)(new Map())),
                (r = (0, i.useCallback)((e, r, n, i) => {
                  let o = (null == i ? void 0 : i.once)
                    ? (...e) => {
                        t.current.delete(n), n(...e);
                      }
                    : n;
                  t.current.set(n, {
                    type: r,
                    eventTarget: e,
                    fn: o,
                    options: i,
                  }),
                    e.addEventListener(r, o, i);
                }, [])),
                (n = (0, i.useCallback)((e, r, n, i) => {
                  var o;
                  let a =
                    (null === (o = t.current.get(n)) || void 0 === o
                      ? void 0
                      : o.fn) || n;
                  e.removeEventListener(r, a, i), t.current.delete(n);
                }, [])),
                (o = (0, i.useCallback)(() => {
                  t.current.forEach((e, t) => {
                    n(e.eventTarget, e.type, t, e.options);
                  });
                }, [n])),
                (0, i.useEffect)(() => o, [o]),
                {
                  addGlobalListener: r,
                  removeGlobalListener: n,
                  removeAllGlobalListeners: o,
                }),
              B = V((e, t) => {
                let r = T.current;
                if (f || r.didFirePressStart) return !1;
                let n = !0;
                if (((r.isTriggeringEvent = !0), l)) {
                  let r = new X("pressstart", t, e);
                  l(r), (n = r.shouldStopPropagation);
                }
                return (
                  s && s(!0),
                  (r.isTriggeringEvent = !1),
                  (r.didFirePressStart = !0),
                  P(!0),
                  n
                );
              }),
              R = V((e, t, r = !0) => {
                let n = T.current;
                if (!n.didFirePressStart) return !1;
                (n.didFirePressStart = !1), (n.isTriggeringEvent = !0);
                let i = !0;
                if (u) {
                  let r = new X("pressend", t, e);
                  u(r), (i = r.shouldStopPropagation);
                }
                if ((s && s(!1), P(!1), a && r && !f)) {
                  let r = new X("press", t, e);
                  a(r), i && (i = r.shouldStopPropagation);
                }
                return (n.isTriggeringEvent = !1), i;
              }),
              D = V((e, t) => {
                let r = T.current;
                if (f) return !1;
                if (c) {
                  r.isTriggeringEvent = !0;
                  let n = new X("pressup", t, e);
                  return (
                    c(n), (r.isTriggeringEvent = !1), n.shouldStopPropagation
                  );
                }
                return !0;
              }),
              U = V((e) => {
                let t = T.current;
                if (t.isPressed && t.target) {
                  for (let r of (t.didFirePressStart &&
                    null != t.pointerType &&
                    R(en(t.target, e), t.pointerType, !1),
                  (t.isPressed = !1),
                  (t.isOverTarget = !1),
                  (t.activePointerId = null),
                  (t.pointerType = null),
                  _(),
                  x || F(t.target),
                  t.disposables))
                    r();
                  t.disposables = [];
                }
              }),
              H = V((e) => {
                w && U(e);
              }),
              z = V((e) => {
                null == d || d(e);
              }),
              W = V((e, t) => {
                if (d) {
                  let r = new MouseEvent("click", e);
                  Object.defineProperty(r, "target", { value: t }),
                    Object.defineProperty(r, "currentTarget", { value: t }),
                    d(
                      ((r.nativeEvent = r),
                      (r.isDefaultPrevented = () => r.defaultPrevented),
                      (r.isPropagationStopped = () => r.cancelBubble),
                      (r.persist = () => {}),
                      r)
                    );
                }
              }),
              Z = (0, i.useMemo)(() => {
                let e = T.current,
                  t = {
                    onKeyDown(t) {
                      if (
                        er(t.nativeEvent, t.currentTarget) &&
                        K(t.currentTarget, Q(t.nativeEvent))
                      ) {
                        var n;
                        ei(Q(t.nativeEvent), t.key) && t.preventDefault();
                        let i = !0;
                        if (!e.isPressed && !t.repeat) {
                          (e.target = t.currentTarget),
                            (e.isPressed = !0),
                            (e.pointerType = "keyboard"),
                            (i = B(t, "keyboard"));
                          let n = t.currentTarget;
                          O(
                            h(t.currentTarget),
                            "keyup",
                            $((t) => {
                              er(t, n) &&
                                !t.repeat &&
                                K(n, Q(t)) &&
                                e.target &&
                                D(en(e.target, t), "keyboard");
                            }, r),
                            !0
                          );
                        }
                        i && t.stopPropagation(),
                          t.metaKey &&
                            E() &&
                            (null === (n = e.metaKeyEvents) ||
                              void 0 === n ||
                              n.set(t.key, t.nativeEvent));
                      } else "Meta" === t.key && (e.metaKeyEvents = new Map());
                    },
                    onClick(t) {
                      if (
                        (!t || K(t.currentTarget, Q(t.nativeEvent))) &&
                        t &&
                        0 === t.button &&
                        !e.isTriggeringEvent &&
                        !J.isOpening
                      ) {
                        var r;
                        let n = !0;
                        if (
                          (f && t.preventDefault(),
                          e.ignoreEmulatedMouseEvents ||
                            e.isPressed ||
                            ("virtual" !== e.pointerType &&
                              ("" === (r = t.nativeEvent).pointerType &&
                              r.isTrusted
                                ? 0
                                : C() && r.pointerType
                                ? "click" !== r.type || 1 !== r.buttons
                                : 0 !== r.detail || r.pointerType)))
                        ) {
                          if (e.isPressed && "keyboard" !== e.pointerType) {
                            let r =
                              e.pointerType ||
                              t.nativeEvent.pointerType ||
                              "virtual";
                            (n = R(en(t.currentTarget, t), r, !0)),
                              (e.isOverTarget = !1),
                              z(t),
                              U(t);
                          }
                        } else {
                          let e = B(t, "virtual"),
                            r = D(t, "virtual"),
                            i = R(t, "virtual");
                          z(t), (n = e && r && i);
                        }
                        (e.ignoreEmulatedMouseEvents = !1),
                          n && t.stopPropagation();
                      }
                    },
                  },
                  r = (t) => {
                    var r, n, i;
                    if (e.isPressed && e.target && er(t, e.target)) {
                      ei(Q(t), t.key) && t.preventDefault();
                      let r = Q(t),
                        i = K(e.target, Q(t));
                      R(en(e.target, t), "keyboard", i),
                        i && W(t, e.target),
                        _(),
                        "Enter" !== t.key &&
                          et(e.target) &&
                          K(e.target, r) &&
                          !t[ee] &&
                          ((t[ee] = !0), J(e.target, t, !1)),
                        (e.isPressed = !1),
                        null === (n = e.metaKeyEvents) ||
                          void 0 === n ||
                          n.delete(t.key);
                    } else if (
                      "Meta" === t.key &&
                      (null === (r = e.metaKeyEvents) || void 0 === r
                        ? void 0
                        : r.size)
                    ) {
                      let t = e.metaKeyEvents;
                      for (let r of ((e.metaKeyEvents = void 0), t.values()))
                        null === (i = e.target) ||
                          void 0 === i ||
                          i.dispatchEvent(new KeyboardEvent("keyup", r));
                    }
                  };
                if ("undefined" != typeof PointerEvent) {
                  (t.onPointerDown = (t) => {
                    var i;
                    if (0 !== t.button || !K(t.currentTarget, Q(t.nativeEvent)))
                      return;
                    if (
                      ((i = t.nativeEvent),
                      (!C() && 0 === i.width && 0 === i.height) ||
                        (1 === i.width &&
                          1 === i.height &&
                          0 === i.pressure &&
                          0 === i.detail &&
                          "mouse" === i.pointerType))
                    ) {
                      e.pointerType = "virtual";
                      return;
                    }
                    e.pointerType = t.pointerType;
                    let o = !0;
                    if (!e.isPressed) {
                      (e.isPressed = !0),
                        (e.isOverTarget = !0),
                        (e.activePointerId = t.pointerId),
                        (e.target = t.currentTarget),
                        x ||
                          (function (e) {
                            if (S()) {
                              if ("default" === N) {
                                let t = h(e);
                                (M = t.documentElement.style.webkitUserSelect),
                                  (t.documentElement.style.webkitUserSelect =
                                    "none");
                              }
                              N = "disabled";
                            } else if (
                              e instanceof HTMLElement ||
                              e instanceof SVGElement
                            ) {
                              let t =
                                "userSelect" in e.style
                                  ? "userSelect"
                                  : "webkitUserSelect";
                              j.set(e, e.style[t]), (e.style[t] = "none");
                            }
                          })(e.target),
                        (o = B(t, e.pointerType));
                      let i = Q(t.nativeEvent);
                      "releasePointerCapture" in i &&
                        i.releasePointerCapture(t.pointerId),
                        O(h(t.currentTarget), "pointerup", r, !1),
                        O(h(t.currentTarget), "pointercancel", n, !1);
                    }
                    o && t.stopPropagation();
                  }),
                    (t.onMouseDown = (t) => {
                      if (
                        K(t.currentTarget, Q(t.nativeEvent)) &&
                        0 === t.button
                      ) {
                        if (v) {
                          let r = (function (e) {
                            for (
                              var t;
                              e &&
                              !(
                                (t = e).matches(y) &&
                                (function e(t, r) {
                                  return m
                                    ? t.checkVisibility() &&
                                        !t.closest(
                                          "[data-react-aria-prevent-focus]"
                                        )
                                    : "#comment" !== t.nodeName &&
                                        (function (e) {
                                          let t = p(e);
                                          if (
                                            !(e instanceof t.HTMLElement) &&
                                            !(e instanceof t.SVGElement)
                                          )
                                            return !1;
                                          let { display: r, visibility: n } =
                                              e.style,
                                            i =
                                              "none" !== r &&
                                              "hidden" !== n &&
                                              "collapse" !== n;
                                          if (i) {
                                            let { getComputedStyle: t } =
                                                e.ownerDocument.defaultView,
                                              { display: r, visibility: n } =
                                                t(e);
                                            i =
                                              "none" !== r &&
                                              "hidden" !== n &&
                                              "collapse" !== n;
                                          }
                                          return i;
                                        })(t) &&
                                        !t.hasAttribute("hidden") &&
                                        !t.hasAttribute(
                                          "data-react-aria-prevent-focus"
                                        ) &&
                                        ("DETAILS" !== t.nodeName ||
                                          !r ||
                                          "SUMMARY" === r.nodeName ||
                                          t.hasAttribute("open")) &&
                                        (!t.parentElement ||
                                          e(t.parentElement, t));
                                })(t) &&
                                !(function (e) {
                                  let t = e;
                                  for (; null != t; ) {
                                    if (
                                      t instanceof
                                        t.ownerDocument.defaultView
                                          .HTMLElement &&
                                      t.inert
                                    )
                                      return !0;
                                    t = t.parentElement;
                                  }
                                  return !1;
                                })(t)
                              );

                            )
                              e = e.parentElement;
                            let r = p(e),
                              n = r.document.activeElement;
                            if (!n || n === e) return;
                            let i = !1,
                              o = (e) => {
                                (e.target === n || i) &&
                                  e.stopImmediatePropagation();
                              },
                              a = (t) => {
                                (t.target !== n && !i) ||
                                  (t.stopImmediatePropagation(),
                                  e || i || ((i = !0), b(n), u()));
                              },
                              s = (t) => {
                                (t.target === e || i) &&
                                  t.stopImmediatePropagation();
                              },
                              l = (t) => {
                                (t.target === e || i) &&
                                  (t.stopImmediatePropagation(),
                                  i || ((i = !0), b(n), u()));
                              };
                            r.addEventListener("blur", o, !0),
                              r.addEventListener("focusout", a, !0),
                              r.addEventListener("focusin", l, !0),
                              r.addEventListener("focus", s, !0);
                            let u = () => {
                                cancelAnimationFrame(c),
                                  r.removeEventListener("blur", o, !0),
                                  r.removeEventListener("focusout", a, !0),
                                  r.removeEventListener("focusin", l, !0),
                                  r.removeEventListener("focus", s, !0),
                                  (i = !1);
                              },
                              c = requestAnimationFrame(u);
                            return u;
                          })(t.target);
                          r && e.disposables.push(r);
                        }
                        t.stopPropagation();
                      }
                    }),
                    (t.onPointerUp = (t) => {
                      K(t.currentTarget, Q(t.nativeEvent)) &&
                        "virtual" !== e.pointerType &&
                        0 === t.button &&
                        D(t, e.pointerType || t.pointerType);
                    }),
                    (t.onPointerEnter = (t) => {
                      t.pointerId === e.activePointerId &&
                        e.target &&
                        !e.isOverTarget &&
                        null != e.pointerType &&
                        ((e.isOverTarget = !0),
                        B(en(e.target, t), e.pointerType));
                    }),
                    (t.onPointerLeave = (t) => {
                      t.pointerId === e.activePointerId &&
                        e.target &&
                        e.isOverTarget &&
                        null != e.pointerType &&
                        ((e.isOverTarget = !1),
                        R(en(e.target, t), e.pointerType, !1),
                        H(t));
                    });
                  let r = (t) => {
                      if (
                        t.pointerId === e.activePointerId &&
                        e.isPressed &&
                        0 === t.button &&
                        e.target
                      ) {
                        if (K(e.target, Q(t)) && null != e.pointerType) {
                          let r = !1,
                            n = setTimeout(() => {
                              e.isPressed &&
                                e.target instanceof HTMLElement &&
                                (r ? U(t) : (b(e.target), e.target.click()));
                            }, 80);
                          O(t.currentTarget, "click", () => (r = !0), !0),
                            e.disposables.push(() => clearTimeout(n));
                        } else U(t);
                        e.isOverTarget = !1;
                      }
                    },
                    n = (e) => {
                      U(e);
                    };
                  t.onDragStart = (e) => {
                    K(e.currentTarget, Q(e.nativeEvent)) && U(e);
                  };
                }
                return t;
              }, [O, f, v, _, x, U, H, R, B, D, z, W]);
            return (
              (0, i.useEffect)(() => {
                let e = null == A ? void 0 : A.current;
                e &&
                  e instanceof p(e).Element &&
                  "auto" === p(e).getComputedStyle(e).touchAction &&
                  (e.style.touchAction = "pan-x pan-y pinch-zoom");
              }, [A]),
              (0, i.useEffect)(() => {
                let e = T.current;
                return () => {
                  var t;
                  for (let r of (x ||
                    F(null !== (t = e.target) && void 0 !== t ? t : void 0),
                  e.disposables))
                    r();
                  e.disposables = [];
                };
              }, [x]),
              { isPressed: g || I, pressProps: G(k, Z) }
            );
          })({
            onClick: k,
            onPressStart: g,
            onPressEnd: v,
            onPressChange: w,
            onPress: a,
            isDisabled: o,
            preventFocusOnPress: x,
            allowTextSelectionOnPress: _,
            ref: t,
          }),
          { focusableProps: D } = (0, f.Wc)(e, t);
        A && (D.tabIndex = o ? -1 : D.tabIndex);
        let U = s(
          D,
          B,
          (function (e, t = {}) {
            let { labelable: r, isLink: n, propNames: i } = t,
              o = {};
            for (let t in e)
              Object.prototype.hasOwnProperty.call(e, t) &&
                (l.has(t) ||
                  (r && u.has(t)) ||
                  (n && c.has(t)) ||
                  (null == i ? void 0 : i.has(t)) ||
                  d.test(t)) &&
                (o[t] = e[t]);
            return o;
          })(e, { labelable: !0 })
        );
        return {
          isPressed: R,
          buttonProps: s(r, U, {
            "aria-haspopup": e["aria-haspopup"],
            "aria-expanded": e["aria-expanded"],
            "aria-controls": e["aria-controls"],
            "aria-pressed": e["aria-pressed"],
            "aria-current": e["aria-current"],
          }),
        };
      }
    },
    62980: (e, t, r) => {
      "use strict";
      r.d(t, {
        B4: () => h,
        CQ: () => w,
        CW: () => v,
        Ei: () => d,
        F8: () => x,
        P5: () => f,
        TH: () => A,
        Vl: () => y,
        Vr: () => b,
        WM: () => p,
        WQ: () => g,
        im: () => m,
        jm: () => s,
        lD: () => o,
        qh: () => c,
        rE: () => l,
        ry: () => u,
        xn: () => a,
      });
      let n = BigInt(0x100000000 - 1),
        i = BigInt(32);
      function o(e, t = !1) {
        let r = e.length,
          a = new Uint32Array(r),
          s = new Uint32Array(r);
        for (let o = 0; o < r; o++) {
          let { h: r, l } = (function (e, t = !1) {
            return t
              ? { h: Number(e & n), l: Number((e >> i) & n) }
              : { h: 0 | Number((e >> i) & n), l: 0 | Number(e & n) };
          })(e[o], t);
          [a[o], s[o]] = [r, l];
        }
        return [a, s];
      }
      let a = (e, t, r) => e >>> r,
        s = (e, t, r) => (e << (32 - r)) | (t >>> r),
        l = (e, t, r) => (e >>> r) | (t << (32 - r)),
        u = (e, t, r) => (e << (32 - r)) | (t >>> r),
        c = (e, t, r) => (e << (64 - r)) | (t >>> (r - 32)),
        d = (e, t, r) => (e >>> (r - 32)) | (t << (64 - r)),
        f = (e, t, r) => (e << r) | (t >>> (32 - r)),
        h = (e, t, r) => (t << r) | (e >>> (32 - r)),
        p = (e, t, r) => (t << (r - 32)) | (e >>> (64 - r)),
        m = (e, t, r) => (e << (r - 32)) | (t >>> (64 - r));
      function g(e, t, r, n) {
        let i = (t >>> 0) + (n >>> 0);
        return { h: (e + r + ((i / 0x100000000) | 0)) | 0, l: 0 | i };
      }
      let y = (e, t, r) => (e >>> 0) + (t >>> 0) + (r >>> 0),
        b = (e, t, r, n) => (t + r + n + ((e / 0x100000000) | 0)) | 0,
        v = (e, t, r, n) => (e >>> 0) + (t >>> 0) + (r >>> 0) + (n >>> 0),
        w = (e, t, r, n, i) => (t + r + n + i + ((e / 0x100000000) | 0)) | 0,
        x = (e, t, r, n, i) =>
          (e >>> 0) + (t >>> 0) + (r >>> 0) + (n >>> 0) + (i >>> 0),
        A = (e, t, r, n, i, o) =>
          (t + r + n + i + o + ((e / 0x100000000) | 0)) | 0;
    },
    42869: (e, t, r) => {
      "use strict";
      r.d(t, { lY: () => w });
      var n = r(62980),
        i = r(43331);
      let o = BigInt(0),
        a = BigInt(1),
        s = BigInt(2),
        l = BigInt(7),
        u = BigInt(256),
        c = BigInt(113),
        d = [],
        f = [],
        h = [];
      for (let e = 0, t = a, r = 1, n = 0; e < 24; e++) {
        ([r, n] = [n, (2 * r + 3 * n) % 5]),
          d.push(2 * (5 * n + r)),
          f.push((((e + 1) * (e + 2)) / 2) % 64);
        let i = o;
        for (let e = 0; e < 7; e++)
          (t = ((t << a) ^ ((t >> l) * c)) % u) & s &&
            (i ^= a << ((a << BigInt(e)) - a));
        h.push(i);
      }
      let p = (0, n.lD)(h, !0),
        m = p[0],
        g = p[1],
        y = (e, t, r) => (r > 32 ? (0, n.WM)(e, t, r) : (0, n.P5)(e, t, r)),
        b = (e, t, r) => (r > 32 ? (0, n.im)(e, t, r) : (0, n.B4)(e, t, r));
      class v extends i.Vw {
        constructor(e, t, r, n = !1, o = 24) {
          if (
            (super(),
            (this.pos = 0),
            (this.posOut = 0),
            (this.finished = !1),
            (this.destroyed = !1),
            (this.enableXOF = !1),
            (this.blockLen = e),
            (this.suffix = t),
            (this.outputLen = r),
            (this.enableXOF = n),
            (this.rounds = o),
            (0, i.Fe)(r),
            !(0 < e && e < 200))
          )
            throw Error("only keccak-f1600 function is supported");
          (this.state = new Uint8Array(200)),
            (this.state32 = (0, i.DH)(this.state));
        }
        clone() {
          return this._cloneInto();
        }
        keccak() {
          (0, i.fd)(this.state32),
            (function (e, t = 24) {
              let r = new Uint32Array(10);
              for (let n = 24 - t; n < 24; n++) {
                for (let t = 0; t < 10; t++)
                  r[t] = e[t] ^ e[t + 10] ^ e[t + 20] ^ e[t + 30] ^ e[t + 40];
                for (let t = 0; t < 10; t += 2) {
                  let n = (t + 8) % 10,
                    i = (t + 2) % 10,
                    o = r[i],
                    a = r[i + 1],
                    s = y(o, a, 1) ^ r[n],
                    l = b(o, a, 1) ^ r[n + 1];
                  for (let r = 0; r < 50; r += 10)
                    (e[t + r] ^= s), (e[t + r + 1] ^= l);
                }
                let t = e[2],
                  i = e[3];
                for (let r = 0; r < 24; r++) {
                  let n = f[r],
                    o = y(t, i, n),
                    a = b(t, i, n),
                    s = d[r];
                  (t = e[s]), (i = e[s + 1]), (e[s] = o), (e[s + 1] = a);
                }
                for (let t = 0; t < 50; t += 10) {
                  for (let n = 0; n < 10; n++) r[n] = e[t + n];
                  for (let n = 0; n < 10; n++)
                    e[t + n] ^= ~r[(n + 2) % 10] & r[(n + 4) % 10];
                }
                (e[0] ^= m[n]), (e[1] ^= g[n]);
              }
              (0, i.uH)(r);
            })(this.state32, this.rounds),
            (0, i.fd)(this.state32),
            (this.posOut = 0),
            (this.pos = 0);
        }
        update(e) {
          (0, i.CC)(this), (e = (0, i.ZJ)(e)), (0, i.DO)(e);
          let { blockLen: t, state: r } = this,
            n = e.length;
          for (let i = 0; i < n; ) {
            let o = Math.min(t - this.pos, n - i);
            for (let t = 0; t < o; t++) r[this.pos++] ^= e[i++];
            this.pos === t && this.keccak();
          }
          return this;
        }
        finish() {
          if (this.finished) return;
          this.finished = !0;
          let { state: e, suffix: t, pos: r, blockLen: n } = this;
          (e[r] ^= t),
            (128 & t) != 0 && r === n - 1 && this.keccak(),
            (e[n - 1] ^= 128),
            this.keccak();
        }
        writeInto(e) {
          (0, i.CC)(this, !1), (0, i.DO)(e), this.finish();
          let t = this.state,
            { blockLen: r } = this;
          for (let n = 0, i = e.length; n < i; ) {
            this.posOut >= r && this.keccak();
            let o = Math.min(r - this.posOut, i - n);
            e.set(t.subarray(this.posOut, this.posOut + o), n),
              (this.posOut += o),
              (n += o);
          }
          return e;
        }
        xofInto(e) {
          if (!this.enableXOF)
            throw Error("XOF is not possible for this instance");
          return this.writeInto(e);
        }
        xof(e) {
          return (0, i.Fe)(e), this.xofInto(new Uint8Array(e));
        }
        digestInto(e) {
          if (((0, i.Ht)(e, this), this.finished))
            throw Error("digest() was already called");
          return this.writeInto(e), this.destroy(), e;
        }
        digest() {
          return this.digestInto(new Uint8Array(this.outputLen));
        }
        destroy() {
          (this.destroyed = !0), (0, i.uH)(this.state);
        }
        _cloneInto(e) {
          let {
            blockLen: t,
            suffix: r,
            outputLen: n,
            rounds: i,
            enableXOF: o,
          } = this;
          return (
            e || (e = new v(t, r, n, o, i)),
            e.state32.set(this.state32),
            (e.pos = this.pos),
            (e.posOut = this.posOut),
            (e.finished = this.finished),
            (e.rounds = i),
            (e.suffix = r),
            (e.outputLen = n),
            (e.enableXOF = o),
            (e.destroyed = this.destroyed),
            e
          );
        }
      }
      let w = (0, i.qj)(() => new v(136, 1, 32));
    },
    43331: (e, t, r) => {
      "use strict";
      r.d(t, {
        Vw: () => k,
        DO: () => a,
        CC: () => l,
        sd: () => s,
        Fe: () => o,
        Ht: () => u,
        My: () => y,
        uH: () => d,
        Id: () => E,
        qj: () => I,
        O8: () => f,
        aT: () => w,
        aY: () => i,
        po: () => S,
        Ow: () => h,
        fd: () => p,
        ZJ: () => A,
        DH: () => c,
        AI: () => x,
      });
      let n =
        "object" == typeof globalThis && "crypto" in globalThis
          ? globalThis.crypto
          : void 0;
      function i(e) {
        return (
          e instanceof Uint8Array ||
          (ArrayBuffer.isView(e) && "Uint8Array" === e.constructor.name)
        );
      }
      function o(e) {
        if (!Number.isSafeInteger(e) || e < 0)
          throw Error("positive integer expected, got " + e);
      }
      function a(e, ...t) {
        if (!i(e)) throw Error("Uint8Array expected");
        if (t.length > 0 && !t.includes(e.length))
          throw Error(
            "Uint8Array expected of length " + t + ", got length=" + e.length
          );
      }
      function s(e) {
        if ("function" != typeof e || "function" != typeof e.create)
          throw Error("Hash should be wrapped by utils.createHasher");
        o(e.outputLen), o(e.blockLen);
      }
      function l(e, t = !0) {
        if (e.destroyed) throw Error("Hash instance has been destroyed");
        if (t && e.finished)
          throw Error("Hash#digest() has already been called");
      }
      function u(e, t) {
        a(e);
        let r = t.outputLen;
        if (e.length < r)
          throw Error(
            "digestInto() expects output buffer of length at least " + r
          );
      }
      function c(e) {
        return new Uint32Array(
          e.buffer,
          e.byteOffset,
          Math.floor(e.byteLength / 4)
        );
      }
      function d(...e) {
        for (let t = 0; t < e.length; t++) e[t].fill(0);
      }
      function f(e) {
        return new DataView(e.buffer, e.byteOffset, e.byteLength);
      }
      function h(e, t) {
        return (e << (32 - t)) | (e >>> t);
      }
      let p =
          68 === new Uint8Array(new Uint32Array([0x11223344]).buffer)[0]
            ? (e) => e
            : function (e) {
                for (let r = 0; r < e.length; r++) {
                  var t;
                  e[r] =
                    (((t = e[r]) << 24) & 0xff000000) |
                    ((t << 8) & 0xff0000) |
                    ((t >>> 8) & 65280) |
                    ((t >>> 24) & 255);
                }
                return e;
              },
        m =
          "function" == typeof Uint8Array.from([]).toHex &&
          "function" == typeof Uint8Array.fromHex,
        g = Array.from({ length: 256 }, (e, t) =>
          t.toString(16).padStart(2, "0")
        );
      function y(e) {
        if ((a(e), m)) return e.toHex();
        let t = "";
        for (let r = 0; r < e.length; r++) t += g[e[r]];
        return t;
      }
      let b = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
      function v(e) {
        return e >= b._0 && e <= b._9
          ? e - b._0
          : e >= b.A && e <= b.F
          ? e - (b.A - 10)
          : e >= b.a && e <= b.f
          ? e - (b.a - 10)
          : void 0;
      }
      function w(e) {
        if ("string" != typeof e)
          throw Error("hex string expected, got " + typeof e);
        if (m) return Uint8Array.fromHex(e);
        let t = e.length,
          r = t / 2;
        if (t % 2)
          throw Error("hex string expected, got unpadded hex of length " + t);
        let n = new Uint8Array(r);
        for (let t = 0, i = 0; t < r; t++, i += 2) {
          let r = v(e.charCodeAt(i)),
            o = v(e.charCodeAt(i + 1));
          if (void 0 === r || void 0 === o)
            throw Error(
              'hex string expected, got non-hex character "' +
                (e[i] + e[i + 1]) +
                '" at index ' +
                i
            );
          n[t] = 16 * r + o;
        }
        return n;
      }
      function x(e) {
        if ("string" != typeof e) throw Error("string expected");
        return new Uint8Array(new TextEncoder().encode(e));
      }
      function A(e) {
        return "string" == typeof e && (e = x(e)), a(e), e;
      }
      function E(...e) {
        let t = 0;
        for (let r = 0; r < e.length; r++) {
          let n = e[r];
          a(n), (t += n.length);
        }
        let r = new Uint8Array(t);
        for (let t = 0, n = 0; t < e.length; t++) {
          let i = e[t];
          r.set(i, n), (n += i.length);
        }
        return r;
      }
      class k {}
      function I(e) {
        let t = (t) => e().update(A(t)).digest(),
          r = e();
        return (
          (t.outputLen = r.outputLen),
          (t.blockLen = r.blockLen),
          (t.create = () => e()),
          t
        );
      }
      function S(e = 32) {
        if (n && "function" == typeof n.getRandomValues)
          return n.getRandomValues(new Uint8Array(e));
        if (n && "function" == typeof n.randomBytes)
          return Uint8Array.from(n.randomBytes(e));
        throw Error("crypto.getRandomValues must be defined");
      }
    },
    57010: (e, t, r) => {
      "use strict";
      r.d(t, { o: () => s });
      var n = r(74055),
        i = r(98327),
        o = r(22258),
        a = r(12115);
      function s(e = {}) {
        let { autoFocus: t = !1, isTextInput: r, within: l } = e,
          u = (0, a.useRef)({
            isFocused: !1,
            isFocusVisible: t || (0, n.pP)(),
          }),
          [c, d] = (0, a.useState)(!1),
          [f, h] = (0, a.useState)(
            () => u.current.isFocused && u.current.isFocusVisible
          ),
          p = (0, a.useCallback)(
            () => h(u.current.isFocused && u.current.isFocusVisible),
            []
          ),
          m = (0, a.useCallback)(
            (e) => {
              (u.current.isFocused = e), d(e), p();
            },
            [p]
          );
        (0, n.K7)(
          (e) => {
            (u.current.isFocusVisible = e), p();
          },
          [],
          { isTextInput: r }
        );
        let { focusProps: g } = (0, i.i)({ isDisabled: l, onFocusChange: m }),
          { focusWithinProps: y } = (0, o.R)({
            isDisabled: !l,
            onFocusWithinChange: m,
          });
        return { isFocused: c, isFocusVisible: f, focusProps: l ? y : g };
      }
    },
    8748: (e, t, r) => {
      "use strict";
      r.d(t, { l: () => l });
      var n = r(74055),
        i = r(80243),
        o = r(71191),
        a = r(67118),
        s = r(57651);
      function l(e) {
        let t = (0, i.TW)(e),
          r = (0, o.bq)(t);
        "virtual" === (0, n.ME)()
          ? (0, a.v)(() => {
              (0, o.bq)(t) === r && e.isConnected && (0, s.e)(e);
            })
          : (0, s.e)(e);
      }
    },
    98327: (e, t, r) => {
      "use strict";
      r.d(t, { i: () => s });
      var n = r(53721),
        i = r(12115),
        o = r(80243),
        a = r(71191);
      function s(e) {
        let { isDisabled: t, onFocus: r, onBlur: s, onFocusChange: l } = e,
          u = (0, i.useCallback)(
            (e) => {
              if (e.target === e.currentTarget)
                return s && s(e), l && l(!1), !0;
            },
            [s, l]
          ),
          c = (0, n.yB)(u),
          d = (0, i.useCallback)(
            (e) => {
              let t = (0, o.TW)(e.target),
                n = t ? (0, a.bq)(t) : (0, a.bq)();
              e.target === e.currentTarget &&
                n === (0, a.wt)(e.nativeEvent) &&
                (r && r(e), l && l(!0), c(e));
            },
            [l, r, c]
          );
        return {
          focusProps: {
            onFocus: !t && (r || l || s) ? d : void 0,
            onBlur: !t && (s || l) ? u : void 0,
          },
        };
      }
    },
    74055: (e, t, r) => {
      "use strict";
      r.d(t, {
        ME: () => T,
        pP: () => P,
        Cl: () => C,
        K7: () => B,
        lb: () => O,
      });
      var n = r(53721),
        i = r(3985),
        o = r(80283),
        a = r(80243),
        s = r(12115);
      let l = { prefix: String(Math.round(1e10 * Math.random())), current: 0 },
        u = (s.createContext(l), s.createContext(!1));
      function c() {
        return !1;
      }
      function d() {
        return !0;
      }
      function f(e) {
        return () => {};
      }
      "undefined" != typeof window &&
        window.document &&
        window.document.createElement,
        new WeakMap(),
        s.useId;
      let h = null,
        p = new Set(),
        m = new Map(),
        g = !1,
        y = !1,
        b = { Tab: !0, Escape: !0 };
      function v(e, t) {
        for (let r of p) r(e, t);
      }
      function w(e) {
        (g = !0),
          e.metaKey ||
            (!(0, i.cX)() && e.altKey) ||
            e.ctrlKey ||
            "Control" === e.key ||
            "Shift" === e.key ||
            "Meta" === e.key ||
            ((h = "keyboard"), v("keyboard", e));
      }
      function x(e) {
        (h = "pointer"),
          ("mousedown" === e.type || "pointerdown" === e.type) &&
            ((g = !0), v("pointer", e));
      }
      function A(e) {
        (0, o.Y)(e) && ((g = !0), (h = "virtual"));
      }
      function E(e) {
        e.target !== window &&
          e.target !== document &&
          !n.lR &&
          e.isTrusted &&
          (g || y || ((h = "virtual"), v("virtual", e)), (g = !1), (y = !1));
      }
      function k() {
        n.lR || ((g = !1), (y = !0));
      }
      function I(e) {
        if (
          "undefined" == typeof window ||
          "undefined" == typeof document ||
          m.get((0, a.mD)(e))
        )
          return;
        let t = (0, a.mD)(e),
          r = (0, a.TW)(e),
          n = t.HTMLElement.prototype.focus;
        (t.HTMLElement.prototype.focus = function () {
          (g = !0), n.apply(this, arguments);
        }),
          r.addEventListener("keydown", w, !0),
          r.addEventListener("keyup", w, !0),
          r.addEventListener("click", A, !0),
          t.addEventListener("focus", E, !0),
          t.addEventListener("blur", k, !1),
          "undefined" != typeof PointerEvent &&
            (r.addEventListener("pointerdown", x, !0),
            r.addEventListener("pointermove", x, !0),
            r.addEventListener("pointerup", x, !0)),
          t.addEventListener(
            "beforeunload",
            () => {
              S(e);
            },
            { once: !0 }
          ),
          m.set(t, { focus: n });
      }
      let S = (e, t) => {
        let r = (0, a.mD)(e),
          n = (0, a.TW)(e);
        t && n.removeEventListener("DOMContentLoaded", t),
          m.has(r) &&
            ((r.HTMLElement.prototype.focus = m.get(r).focus),
            n.removeEventListener("keydown", w, !0),
            n.removeEventListener("keyup", w, !0),
            n.removeEventListener("click", A, !0),
            r.removeEventListener("focus", E, !0),
            r.removeEventListener("blur", k, !1),
            "undefined" != typeof PointerEvent &&
              (n.removeEventListener("pointerdown", x, !0),
              n.removeEventListener("pointermove", x, !0),
              n.removeEventListener("pointerup", x, !0)),
            m.delete(r));
      };
      function P() {
        return "pointer" !== h;
      }
      function T() {
        return h;
      }
      function C(e) {
        (h = e), v(e, null);
      }
      function O() {
        I();
        let [e, t] = (0, s.useState)(h);
        return (
          (0, s.useEffect)(() => {
            let e = () => {
              t(h);
            };
            return (
              p.add(e),
              () => {
                p.delete(e);
              }
            );
          }, []),
          (
            "function" == typeof s.useSyncExternalStore
              ? s.useSyncExternalStore(f, c, d)
              : (0, s.useContext)(u)
          )
            ? null
            : e
        );
      }
      "undefined" != typeof document &&
        (function (e) {
          let t;
          let r = (0, a.TW)(void 0);
          "loading" !== r.readyState
            ? I(void 0)
            : ((t = () => {
                I(void 0);
              }),
              r.addEventListener("DOMContentLoaded", t)),
            () => S(e, t);
        })();
      let _ = new Set([
        "checkbox",
        "radio",
        "range",
        "color",
        "file",
        "image",
        "button",
        "submit",
        "reset",
      ]);
      function B(e, t, r) {
        I(),
          (0, s.useEffect)(() => {
            let t = (t, n) => {
              (function (e, t, r) {
                let n = (0, a.TW)(null == r ? void 0 : r.target),
                  i =
                    "undefined" != typeof window
                      ? (0, a.mD)(null == r ? void 0 : r.target)
                          .HTMLInputElement
                      : HTMLInputElement,
                  o =
                    "undefined" != typeof window
                      ? (0, a.mD)(null == r ? void 0 : r.target)
                          .HTMLTextAreaElement
                      : HTMLTextAreaElement,
                  s =
                    "undefined" != typeof window
                      ? (0, a.mD)(null == r ? void 0 : r.target).HTMLElement
                      : HTMLElement,
                  l =
                    "undefined" != typeof window
                      ? (0, a.mD)(null == r ? void 0 : r.target).KeyboardEvent
                      : KeyboardEvent;
                return !(
                  (e =
                    e ||
                    (n.activeElement instanceof i &&
                      !_.has(n.activeElement.type)) ||
                    n.activeElement instanceof o ||
                    (n.activeElement instanceof s &&
                      n.activeElement.isContentEditable)) &&
                  "keyboard" === t &&
                  r instanceof l &&
                  !b[r.key]
                );
              })(!!(null == r ? void 0 : r.isTextInput), t, n) && e(P());
            };
            return (
              p.add(t),
              () => {
                p.delete(t);
              }
            );
          }, t);
      }
    },
    22258: (e, t, r) => {
      "use strict";
      r.d(t, { R: () => l });
      var n = r(53721),
        i = r(12115),
        o = r(45839),
        a = r(80243),
        s = r(71191);
      function l(e) {
        let {
            isDisabled: t,
            onBlurWithin: r,
            onFocusWithin: l,
            onFocusWithinChange: u,
          } = e,
          c = (0, i.useRef)({ isFocusWithin: !1 }),
          { addGlobalListener: d, removeAllGlobalListeners: f } = (0, o.A)(),
          h = (0, i.useCallback)(
            (e) => {
              e.currentTarget.contains(e.target) &&
                c.current.isFocusWithin &&
                !e.currentTarget.contains(e.relatedTarget) &&
                ((c.current.isFocusWithin = !1), f(), r && r(e), u && u(!1));
            },
            [r, u, c, f]
          ),
          p = (0, n.yB)(h),
          m = (0, i.useCallback)(
            (e) => {
              if (!e.currentTarget.contains(e.target)) return;
              let t = (0, a.TW)(e.target),
                r = (0, s.bq)(t);
              if (!c.current.isFocusWithin && r === (0, s.wt)(e.nativeEvent)) {
                l && l(e), u && u(!0), (c.current.isFocusWithin = !0), p(e);
                let r = e.currentTarget;
                d(
                  t,
                  "focus",
                  (e) => {
                    if (c.current.isFocusWithin && !(0, s.sD)(r, e.target)) {
                      let i = new t.defaultView.FocusEvent("blur", {
                        relatedTarget: e.target,
                      });
                      (0, n.o1)(i, r), h((0, n.eg)(i));
                    }
                  },
                  { capture: !0 }
                );
              }
            },
            [l, u, p, d, h]
          );
        return t
          ? { focusWithinProps: { onFocus: void 0, onBlur: void 0 } }
          : { focusWithinProps: { onFocus: m, onBlur: h } };
      }
    },
    46175: (e, t, r) => {
      "use strict";
      r.d(t, { Wc: () => c });
      var n = r(8748),
        i = r(98327),
        o = r(43176),
        a = r(54807),
        s = r(97262),
        l = r(12115);
      let u = l.createContext(null);
      function c(e, t) {
        let { focusProps: r } = (0, i.i)(e),
          { keyboardProps: c } = (0, o.d)(e),
          d = (0, s.v)(r, c),
          f = (function (e) {
            let t = (0, l.useContext)(u) || {};
            (0, a.w)(t, e);
            let { ref: r, ...n } = t;
            return n;
          })(t),
          h = e.isDisabled ? {} : f,
          p = (0, l.useRef)(e.autoFocus);
        (0, l.useEffect)(() => {
          p.current && t.current && (0, n.l)(t.current), (p.current = !1);
        }, [t]);
        let m = e.excludeFromTabOrder ? -1 : 0;
        return (
          e.isDisabled && (m = void 0),
          { focusableProps: (0, s.v)({ ...d, tabIndex: m }, h) }
        );
      }
    },
    43176: (e, t, r) => {
      "use strict";
      function n(e) {
        if (!e) return;
        let t = !0;
        return (r) => {
          e({
            ...r,
            preventDefault() {
              r.preventDefault();
            },
            isDefaultPrevented: () => r.isDefaultPrevented(),
            stopPropagation() {
              t = !0;
            },
            continuePropagation() {
              t = !1;
            },
            isPropagationStopped: () => t,
          }),
            t && r.stopPropagation();
        };
      }
      function i(e) {
        return {
          keyboardProps: e.isDisabled
            ? {}
            : { onKeyDown: n(e.onKeyDown), onKeyUp: n(e.onKeyUp) },
        };
      }
      r.d(t, { d: () => i });
    },
    53721: (e, t, r) => {
      "use strict";
      r.d(t, {
        LE: () => h,
        eg: () => u,
        lR: () => f,
        o1: () => c,
        yB: () => d,
      });
      var n = r(8858),
        i = r(52378),
        o = r(56143),
        a = r(80243),
        s = r(57651),
        l = r(12115);
      function u(e) {
        return (
          (e.nativeEvent = e),
          (e.isDefaultPrevented = () => e.defaultPrevented),
          (e.isPropagationStopped = () => e.cancelBubble),
          (e.persist = () => {}),
          e
        );
      }
      function c(e, t) {
        Object.defineProperty(e, "target", { value: t }),
          Object.defineProperty(e, "currentTarget", { value: t });
      }
      function d(e) {
        let t = (0, l.useRef)({ isFocused: !1, observer: null });
        (0, n.N)(() => {
          let e = t.current;
          return () => {
            e.observer && (e.observer.disconnect(), (e.observer = null));
          };
        }, []);
        let r = (0, i.J)((t) => {
          null == e || e(t);
        });
        return (0, l.useCallback)(
          (e) => {
            if (
              e.target instanceof HTMLButtonElement ||
              e.target instanceof HTMLInputElement ||
              e.target instanceof HTMLTextAreaElement ||
              e.target instanceof HTMLSelectElement
            ) {
              t.current.isFocused = !0;
              let n = e.target;
              n.addEventListener(
                "focusout",
                (e) => {
                  (t.current.isFocused = !1),
                    n.disabled && r(u(e)),
                    t.current.observer &&
                      (t.current.observer.disconnect(),
                      (t.current.observer = null));
                },
                { once: !0 }
              ),
                (t.current.observer = new MutationObserver(() => {
                  if (t.current.isFocused && n.disabled) {
                    var e;
                    null === (e = t.current.observer) ||
                      void 0 === e ||
                      e.disconnect();
                    let r =
                      n === document.activeElement
                        ? null
                        : document.activeElement;
                    n.dispatchEvent(
                      new FocusEvent("blur", { relatedTarget: r })
                    ),
                      n.dispatchEvent(
                        new FocusEvent("focusout", {
                          bubbles: !0,
                          relatedTarget: r,
                        })
                      );
                  }
                })),
                t.current.observer.observe(n, {
                  attributes: !0,
                  attributeFilter: ["disabled"],
                });
            }
          },
          [r]
        );
      }
      let f = !1;
      function h(e) {
        for (; e && !(0, o.t)(e); ) e = e.parentElement;
        let t = (0, a.mD)(e),
          r = t.document.activeElement;
        if (!r || r === e) return;
        f = !0;
        let n = !1,
          i = (e) => {
            (e.target === r || n) && e.stopImmediatePropagation();
          },
          l = (t) => {
            (t.target !== r && !n) ||
              (t.stopImmediatePropagation(),
              e || n || ((n = !0), (0, s.e)(r), d()));
          },
          u = (t) => {
            (t.target === e || n) && t.stopImmediatePropagation();
          },
          c = (t) => {
            (t.target === e || n) &&
              (t.stopImmediatePropagation(), n || ((n = !0), (0, s.e)(r), d()));
          };
        t.addEventListener("blur", i, !0),
          t.addEventListener("focusout", l, !0),
          t.addEventListener("focusin", c, !0),
          t.addEventListener("focus", u, !0);
        let d = () => {
            cancelAnimationFrame(h),
              t.removeEventListener("blur", i, !0),
              t.removeEventListener("focusout", l, !0),
              t.removeEventListener("focusin", c, !0),
              t.removeEventListener("focus", u, !0),
              (f = !1),
              (n = !1);
          },
          h = requestAnimationFrame(d);
        return d;
      }
    },
    64381: (e, t, r) => {
      "use strict";
      r.d(t, { gX: () => o });
      var n = r(12115);
      let i = (0, n.createContext)({});
      function o() {
        var e;
        return null !== (e = (0, n.useContext)(i)) && void 0 !== e ? e : {};
      }
    },
    52980: (e, t, r) => {
      "use strict";
      r.d(t, { Sf: () => d, so: () => c });
      var n = r(64381),
        i = r(12115),
        o = r(47650),
        a = r(95859);
      let s = i.createContext(null);
      function l(e) {
        let { children: t } = e,
          r = (0, i.useContext)(s),
          [n, o] = (0, i.useState)(0),
          a = (0, i.useMemo)(
            () => ({
              parent: r,
              modalCount: n,
              addModal() {
                o((e) => e + 1), r && r.addModal();
              },
              removeModal() {
                o((e) => e - 1), r && r.removeModal();
              },
            }),
            [r, n]
          );
        return i.createElement(s.Provider, { value: a }, t);
      }
      function u(e) {
        let t;
        let { modalProviderProps: r } = {
          modalProviderProps: {
            "aria-hidden":
              (!!(t = (0, i.useContext)(s)) && t.modalCount > 0) || void 0,
          },
        };
        return i.createElement("div", {
          "data-overlay-container": !0,
          ...e,
          ...r,
        });
      }
      function c(e) {
        return i.createElement(l, null, i.createElement(u, e));
      }
      function d(e) {
        let t = (0, a.wR)(),
          { portalContainer: r = t ? null : document.body, ...s } = e,
          { getContainer: l } = (0, n.gX)();
        if (
          (!e.portalContainer && l && (r = l()),
          i.useEffect(() => {
            if (null == r ? void 0 : r.closest("[data-overlay-container]"))
              throw Error(
                "An OverlayContainer must not be inside another container. Please change the portalContainer prop."
              );
          }, [r]),
          !r)
        )
          return null;
        let u = i.createElement(c, s);
        return o.createPortal(u, r);
      }
    },
    95859: (e, t, r) => {
      "use strict";
      r.d(t, { wR: () => u });
      var n = r(12115);
      let i = { prefix: String(Math.round(1e10 * Math.random())), current: 0 },
        o = (n.createContext(i), n.createContext(!1));
      function a() {
        return !1;
      }
      function s() {
        return !0;
      }
      function l(e) {
        return () => {};
      }
      function u() {
        return "function" == typeof n.useSyncExternalStore
          ? n.useSyncExternalStore(l, a, s)
          : (0, n.useContext)(o);
      }
      "undefined" != typeof window &&
        window.document &&
        window.document.createElement,
        new WeakMap(),
        n.useId;
    },
    71191: (e, t, r) => {
      "use strict";
      r.d(t, { bq: () => a, sD: () => o, wt: () => s });
      var n = r(80243),
        i = r(99124);
      function o(e, t) {
        if (!(0, i.Nf)()) return !!t && !!e && e.contains(t);
        if (!e || !t) return !1;
        let r = t;
        for (; null !== r; ) {
          if (r === e) return !0;
          r =
            "SLOT" === r.tagName && r.assignedSlot
              ? r.assignedSlot.parentNode
              : (0, n.Ng)(r)
              ? r.host
              : r.parentNode;
        }
        return !1;
      }
      let a = (e = document) => {
        var t;
        if (!(0, i.Nf)()) return e.activeElement;
        let r = e.activeElement;
        for (
          ;
          r &&
          "shadowRoot" in r &&
          (null === (t = r.shadowRoot) || void 0 === t
            ? void 0
            : t.activeElement);

        )
          r = r.shadowRoot.activeElement;
        return r;
      };
      function s(e) {
        return (0, i.Nf)() && e.target.shadowRoot && e.composedPath
          ? e.composedPath()[0]
          : e.target;
      }
    },
    67093: (e, t, r) => {
      "use strict";
      function n(...e) {
        return (...t) => {
          for (let r of e) "function" == typeof r && r(...t);
        };
      }
      r.d(t, { c: () => n });
    },
    80243: (e, t, r) => {
      "use strict";
      r.d(t, { Ng: () => o, TW: () => n, mD: () => i });
      let n = (e) => {
          var t;
          return null !== (t = null == e ? void 0 : e.ownerDocument) &&
            void 0 !== t
            ? t
            : document;
        },
        i = (e) =>
          e && "window" in e && e.window === e ? e : n(e).defaultView || window;
      function o(e) {
        return (
          null !== e &&
          "object" == typeof e &&
          "nodeType" in e &&
          "number" == typeof e.nodeType &&
          e.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&
          "host" in e
        );
      }
    },
    57651: (e, t, r) => {
      "use strict";
      function n(e) {
        if (
          (function () {
            if (null == i) {
              i = !1;
              try {
                document.createElement("div").focus({
                  get preventScroll() {
                    return (i = !0), !0;
                  },
                });
              } catch {}
            }
            return i;
          })()
        )
          e.focus({ preventScroll: !0 });
        else {
          let t = (function (e) {
            let t = e.parentNode,
              r = [],
              n = document.scrollingElement || document.documentElement;
            for (; t instanceof HTMLElement && t !== n; )
              (t.offsetHeight < t.scrollHeight ||
                t.offsetWidth < t.scrollWidth) &&
                r.push({
                  element: t,
                  scrollTop: t.scrollTop,
                  scrollLeft: t.scrollLeft,
                }),
                (t = t.parentNode);
            return (
              n instanceof HTMLElement &&
                r.push({
                  element: n,
                  scrollTop: n.scrollTop,
                  scrollLeft: n.scrollLeft,
                }),
              r
            );
          })(e);
          e.focus(),
            (function (e) {
              for (let { element: t, scrollTop: r, scrollLeft: n } of e)
                (t.scrollTop = r), (t.scrollLeft = n);
            })(t);
        }
      }
      r.d(t, { e: () => n });
      let i = null;
    },
    56143: (e, t, r) => {
      "use strict";
      r.d(t, { t: () => u, A: () => c });
      var n = r(80243);
      let i =
        "undefined" != typeof Element && "checkVisibility" in Element.prototype;
      function o(e, t) {
        return i
          ? e.checkVisibility() && !e.closest("[data-react-aria-prevent-focus]")
          : "#comment" !== e.nodeName &&
              (function (e) {
                let t = (0, n.mD)(e);
                if (
                  !(e instanceof t.HTMLElement) &&
                  !(e instanceof t.SVGElement)
                )
                  return !1;
                let { display: r, visibility: i } = e.style,
                  o = "none" !== r && "hidden" !== i && "collapse" !== i;
                if (o) {
                  let { getComputedStyle: t } = e.ownerDocument.defaultView,
                    { display: r, visibility: n } = t(e);
                  o = "none" !== r && "hidden" !== n && "collapse" !== n;
                }
                return o;
              })(e) &&
              !e.hasAttribute("hidden") &&
              !e.hasAttribute("data-react-aria-prevent-focus") &&
              ("DETAILS" !== e.nodeName ||
                !t ||
                "SUMMARY" === t.nodeName ||
                e.hasAttribute("open")) &&
              (!e.parentElement || o(e.parentElement, e));
      }
      let a = [
          "input:not([disabled]):not([type=hidden])",
          "select:not([disabled])",
          "textarea:not([disabled])",
          "button:not([disabled])",
          "a[href]",
          "area[href]",
          "summary",
          "iframe",
          "object",
          "embed",
          "audio[controls]",
          "video[controls]",
          '[contenteditable]:not([contenteditable^="false"])',
          "permission",
        ],
        s =
          a.join(":not([hidden]),") +
          ",[tabindex]:not([disabled]):not([hidden])";
      a.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
      let l = a.join(':not([hidden]):not([tabindex="-1"]),');
      function u(e) {
        return e.matches(s) && o(e) && !d(e);
      }
      function c(e) {
        return e.matches(l) && o(e) && !d(e);
      }
      function d(e) {
        let t = e;
        for (; null != t; ) {
          if (t instanceof t.ownerDocument.defaultView.HTMLElement && t.inert)
            return !0;
          t = t.parentElement;
        }
        return !1;
      }
    },
    80283: (e, t, r) => {
      "use strict";
      r.d(t, { P: () => o, Y: () => i });
      var n = r(3985);
      function i(e) {
        return (
          ("" === e.pointerType && !!e.isTrusted) ||
          ((0, n.m0)() && e.pointerType
            ? "click" === e.type && 1 === e.buttons
            : 0 === e.detail && !e.pointerType)
        );
      }
      function o(e) {
        return (
          (!(0, n.m0)() && 0 === e.width && 0 === e.height) ||
          (1 === e.width &&
            1 === e.height &&
            0 === e.pressure &&
            0 === e.detail &&
            "mouse" === e.pointerType)
        );
      }
    },
    97262: (e, t, r) => {
      "use strict";
      r.d(t, { v: () => a });
      var n = r(67093),
        i = r(27249),
        o = r(43463);
      function a(...e) {
        let t = { ...e[0] };
        for (let r = 1; r < e.length; r++) {
          let a = e[r];
          for (let e in a) {
            let r = t[e],
              s = a[e];
            "function" == typeof r &&
            "function" == typeof s &&
            "o" === e[0] &&
            "n" === e[1] &&
            e.charCodeAt(2) >= 65 &&
            90 >= e.charCodeAt(2)
              ? (t[e] = (0, n.c)(r, s))
              : ("className" === e || "UNSAFE_className" === e) &&
                "string" == typeof r &&
                "string" == typeof s
              ? (t[e] = (0, o.A)(r, s))
              : "id" === e && r && s
              ? (t.id = (0, i.Tw)(r, s))
              : (t[e] = void 0 !== s ? s : r);
          }
        }
        return t;
      }
    },
    3985: (e, t, r) => {
      "use strict";
      function n(e) {
        var t;
        if ("undefined" == typeof window || null == window.navigator) return !1;
        let r =
          null === (t = window.navigator.userAgentData) || void 0 === t
            ? void 0
            : t.brands;
        return (
          (Array.isArray(r) && r.some((t) => e.test(t.brand))) ||
          e.test(window.navigator.userAgent)
        );
      }
      function i(e) {
        var t;
        return (
          "undefined" != typeof window &&
          null != window.navigator &&
          e.test(
            (null === (t = window.navigator.userAgentData) || void 0 === t
              ? void 0
              : t.platform) || window.navigator.platform
          )
        );
      }
      function o(e) {
        let t = null;
        return () => (null == t && (t = e()), t);
      }
      r.d(t, {
        H8: () => f,
        Tc: () => d,
        bh: () => l,
        cX: () => a,
        gm: () => p,
        lg: () => c,
        m0: () => h,
        un: () => u,
      });
      let a = o(function () {
          return i(/^Mac/i);
        }),
        s = o(function () {
          return i(/^iPhone/i);
        }),
        l = o(function () {
          return i(/^iPad/i) || (a() && navigator.maxTouchPoints > 1);
        }),
        u = o(function () {
          return s() || l();
        }),
        c = o(function () {
          return a() || u();
        }),
        d = o(function () {
          return n(/AppleWebKit/i) && !f();
        }),
        f = o(function () {
          return n(/Chrome/i);
        }),
        h = o(function () {
          return n(/Android/i);
        }),
        p = o(function () {
          return n(/Firefox/i);
        });
    },
    67118: (e, t, r) => {
      "use strict";
      r.d(t, { v: () => a });
      let n = new Map(),
        i = new Set();
      function o() {
        if ("undefined" == typeof window) return;
        function e(e) {
          return "propertyName" in e;
        }
        let t = (r) => {
          if (!e(r) || !r.target) return;
          let o = n.get(r.target);
          if (
            o &&
            (o.delete(r.propertyName),
            0 === o.size &&
              (r.target.removeEventListener("transitioncancel", t),
              n.delete(r.target)),
            0 === n.size)
          ) {
            for (let e of i) e();
            i.clear();
          }
        };
        document.body.addEventListener("transitionrun", (r) => {
          if (!e(r) || !r.target) return;
          let i = n.get(r.target);
          i ||
            ((i = new Set()),
            n.set(r.target, i),
            r.target.addEventListener("transitioncancel", t, { once: !0 })),
            i.add(r.propertyName);
        }),
          document.body.addEventListener("transitionend", t);
      }
      function a(e) {
        requestAnimationFrame(() => {
          !(function () {
            for (let [e] of n)
              "isConnected" in e && !e.isConnected && n.delete(e);
          })(),
            0 === n.size ? e() : i.add(e);
        });
      }
      "undefined" != typeof document &&
        ("loading" !== document.readyState
          ? o()
          : document.addEventListener("DOMContentLoaded", o));
    },
    52378: (e, t, r) => {
      "use strict";
      r.d(t, { J: () => s });
      var n,
        i = r(8858),
        o = r(12115);
      let a = null !== (n = o.useInsertionEffect) && void 0 !== n ? n : i.N;
      function s(e) {
        let t = (0, o.useRef)(null);
        return (
          a(() => {
            t.current = e;
          }, [e]),
          (0, o.useCallback)((...e) => {
            let r = t.current;
            return null == r ? void 0 : r(...e);
          }, [])
        );
      }
    },
    45839: (e, t, r) => {
      "use strict";
      r.d(t, { A: () => i });
      var n = r(12115);
      function i() {
        let e = (0, n.useRef)(new Map()),
          t = (0, n.useCallback)((t, r, n, i) => {
            let o = (null == i ? void 0 : i.once)
              ? (...t) => {
                  e.current.delete(n), n(...t);
                }
              : n;
            e.current.set(n, { type: r, eventTarget: t, fn: o, options: i }),
              t.addEventListener(r, o, i);
          }, []),
          r = (0, n.useCallback)((t, r, n, i) => {
            var o;
            let a =
              (null === (o = e.current.get(n)) || void 0 === o
                ? void 0
                : o.fn) || n;
            t.removeEventListener(r, a, i), e.current.delete(n);
          }, []),
          i = (0, n.useCallback)(() => {
            e.current.forEach((e, t) => {
              r(e.eventTarget, e.type, t, e.options);
            });
          }, [r]);
        return (
          (0, n.useEffect)(() => i, [i]),
          {
            addGlobalListener: t,
            removeGlobalListener: r,
            removeAllGlobalListeners: i,
          }
        );
      }
    },
    27249: (e, t, r) => {
      "use strict";
      let n;
      r.d(t, { Tw: () => b, Bi: () => y, X1: () => v });
      var i = r(8858),
        o = r(52378),
        a = r(12115);
      let s = { prefix: String(Math.round(1e10 * Math.random())), current: 0 },
        l = a.createContext(s),
        u = a.createContext(!1);
      "undefined" != typeof window &&
        window.document &&
        window.document.createElement;
      let c = new WeakMap(),
        d =
          "function" == typeof a.useId
            ? function (e) {
                let t = a.useId(),
                  [r] = (0, a.useState)(
                    "function" == typeof a.useSyncExternalStore
                      ? a.useSyncExternalStore(p, f, h)
                      : (0, a.useContext)(u)
                  ),
                  n = r ? "react-aria" : `react-aria${s.prefix}`;
                return e || `${n}-${t}`;
              }
            : function (e) {
                let t = (0, a.useContext)(l),
                  r = (function (e = !1) {
                    let t = (0, a.useContext)(l),
                      r = (0, a.useRef)(null);
                    if (null === r.current && !e) {
                      var n, i;
                      let e =
                        null ===
                          (i =
                            a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) ||
                        void 0 === i
                          ? void 0
                          : null === (n = i.ReactCurrentOwner) || void 0 === n
                          ? void 0
                          : n.current;
                      if (e) {
                        let r = c.get(e);
                        null == r
                          ? c.set(e, { id: t.current, state: e.memoizedState })
                          : e.memoizedState !== r.state &&
                            ((t.current = r.id), c.delete(e));
                      }
                      r.current = ++t.current;
                    }
                    return r.current;
                  })(!!e),
                  n = `react-aria${t.prefix}`;
                return e || `${n}-${r}`;
              };
      function f() {
        return !1;
      }
      function h() {
        return !0;
      }
      function p(e) {
        return () => {};
      }
      let m = !!(
          "undefined" != typeof window &&
          window.document &&
          window.document.createElement
        ),
        g = new Map();
      function y(e) {
        let [t, r] = (0, a.useState)(e),
          o = (0, a.useRef)(null),
          s = d(t),
          l = (0, a.useRef)(null);
        if ((n && n.register(l, s), m)) {
          let e = g.get(s);
          e && !e.includes(o) ? e.push(o) : g.set(s, [o]);
        }
        return (
          (0, i.N)(
            () => () => {
              n && n.unregister(l), g.delete(s);
            },
            [s]
          ),
          (0, a.useEffect)(() => {
            let e = o.current;
            return (
              e && r(e),
              () => {
                e && (o.current = null);
              }
            );
          }),
          s
        );
      }
      function b(e, t) {
        if (e === t) return e;
        let r = g.get(e);
        if (r) return r.forEach((e) => (e.current = t)), t;
        let n = g.get(t);
        return n ? (n.forEach((t) => (t.current = e)), e) : t;
      }
      function v(e = []) {
        let t = y(),
          [r, n] = (function (e) {
            let [t, r] = (0, a.useState)(e),
              n = (0, a.useRef)(null),
              s = (0, o.J)(() => {
                if (!n.current) return;
                let e = n.current.next();
                if (e.done) {
                  n.current = null;
                  return;
                }
                t === e.value ? s() : r(e.value);
              });
            (0, i.N)(() => {
              n.current && s();
            });
            let l = (0, o.J)((e) => {
              (n.current = e(t)), s();
            });
            return [t, l];
          })(t),
          s = (0, a.useCallback)(() => {
            n(function* () {
              yield t, yield document.getElementById(t) ? t : void 0;
            });
          }, [t, n]);
        return (0, i.N)(s, [t, s, ...e]), r;
      }
      "undefined" != typeof FinalizationRegistry &&
        (n = new FinalizationRegistry((e) => {
          g.delete(e);
        }));
    },
    8858: (e, t, r) => {
      "use strict";
      r.d(t, { N: () => i });
      var n = r(12115);
      let i = "undefined" != typeof document ? n.useLayoutEffect : () => {};
    },
    54807: (e, t, r) => {
      "use strict";
      r.d(t, { w: () => i });
      var n = r(8858);
      function i(e, t) {
        (0, n.N)(() => {
          if (e && e.ref && t)
            return (
              (e.ref.current = t.current),
              () => {
                e.ref && (e.ref.current = null);
              }
            );
        });
      }
    },
    99124: (e, t, r) => {
      "use strict";
      function n() {
        return !1;
      }
      function i() {
        return !1;
      }
      r.d(t, { D5: () => n, Nf: () => i });
    },
    98961: (e, t, r) => {
      "use strict";
      r.d(t, { C: () => n });
      class n extends Error {
        constructor(e, t = {}) {
          let r =
              t.cause instanceof n
                ? t.cause.details
                : t.cause?.message
                ? t.cause.message
                : t.details,
            i = (t.cause instanceof n && t.cause.docsPath) || t.docsPath;
          super(
            [
              e || "An error occurred.",
              "",
              ...(t.metaMessages ? [...t.metaMessages, ""] : []),
              ...(i ? [`Docs: https://abitype.dev${i}`] : []),
              ...(r ? [`Details: ${r}`] : []),
              "Version: abitype@1.0.8",
            ].join("\n")
          ),
            Object.defineProperty(this, "details", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "docsPath", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "metaMessages", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "shortMessage", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "AbiTypeError",
            }),
            t.cause && (this.cause = t.cause),
            (this.details = r),
            (this.docsPath = i),
            (this.metaMessages = t.metaMessages),
            (this.shortMessage = e);
        }
      }
    },
    52076: (e, t, r) => {
      "use strict";
      r.d(t, { UG: () => o, zz: () => i });
      var n = r(98961);
      class i extends n.C {
        constructor({ type: e }) {
          super("Unknown type.", {
            metaMessages: [
              `Type "${e}" is not a valid ABI type. Perhaps you forgot to include a struct signature?`,
            ],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "UnknownTypeError",
            });
        }
      }
      class o extends n.C {
        constructor({ type: e }) {
          super("Unknown type.", {
            metaMessages: [`Type "${e}" is not a valid ABI type.`],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "UnknownSolidityTypeError",
            });
        }
      }
    },
    22858: (e, t, r) => {
      "use strict";
      r.d(t, {
        A9: () => i,
        NO: () => s,
        Pj: () => l,
        dV: () => o,
        nx: () => u,
        zd: () => a,
      });
      var n = r(98961);
      class i extends n.C {
        constructor({ params: e }) {
          super("Failed to parse ABI parameters.", {
            details: `parseAbiParameters(${JSON.stringify(e, null, 2)})`,
            docsPath: "/api/human#parseabiparameters-1",
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidAbiParametersError",
            });
        }
      }
      class o extends n.C {
        constructor({ param: e }) {
          super("Invalid ABI parameter.", { details: e }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidParameterError",
            });
        }
      }
      class a extends n.C {
        constructor({ param: e, name: t }) {
          super("Invalid ABI parameter.", {
            details: e,
            metaMessages: [
              `"${t}" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`,
            ],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "SolidityProtectedKeywordError",
            });
        }
      }
      class s extends n.C {
        constructor({ param: e, type: t, modifier: r }) {
          super("Invalid ABI parameter.", {
            details: e,
            metaMessages: [
              `Modifier "${r}" not allowed${t ? ` in "${t}" type` : ""}.`,
            ],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidModifierError",
            });
        }
      }
      class l extends n.C {
        constructor({ param: e, type: t, modifier: r }) {
          super("Invalid ABI parameter.", {
            details: e,
            metaMessages: [
              `Modifier "${r}" not allowed${t ? ` in "${t}" type` : ""}.`,
              `Data location can only be specified for array, struct, or mapping types, but "${r}" was given.`,
            ],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidFunctionModifierError",
            });
        }
      }
      class u extends n.C {
        constructor({ abiParameter: e }) {
          super("Invalid ABI parameter.", {
            details: JSON.stringify(e, null, 2),
            metaMessages: ["ABI parameter type is invalid."],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidAbiTypeParameterError",
            });
        }
      }
    },
    97847: (e, t, r) => {
      "use strict";
      r.d(t, { X9: () => a, s7: () => i, x8: () => o });
      var n = r(98961);
      class i extends n.C {
        constructor({ signature: e, type: t }) {
          super(`Invalid ${t} signature.`, { details: e }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidSignatureError",
            });
        }
      }
      class o extends n.C {
        constructor({ signature: e }) {
          super("Unknown signature.", { details: e }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "UnknownSignatureError",
            });
        }
      }
      class a extends n.C {
        constructor({ signature: e }) {
          super("Invalid struct signature.", {
            details: e,
            metaMessages: ["No properties exist."],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidStructSignatureError",
            });
        }
      }
    },
    89071: (e, t, r) => {
      "use strict";
      r.d(t, {
        Dv: () => k,
        FO: () => m,
        If: () => x,
        Ji: () => d,
        Rv: () => l,
        WL: () => p,
        Yo: () => b,
        ej: () => f,
        fC: () => I,
        iB: () => u,
        kz: () => a,
        l9: () => y,
        pc: () => o,
        sP: () => E,
        v7: () => S,
        v8: () => w,
      });
      var n = r(6463);
      let i = /^error (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)$/;
      function o(e) {
        return i.test(e);
      }
      function a(e) {
        return (0, n.Yv)(i, e);
      }
      let s = /^event (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)$/;
      function l(e) {
        return s.test(e);
      }
      function u(e) {
        return (0, n.Yv)(s, e);
      }
      let c =
        /^function (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)(?: (?<scope>external|public{1}))?(?: (?<stateMutability>pure|view|nonpayable|payable{1}))?(?: returns\s?\((?<returns>.*?)\))?$/;
      function d(e) {
        return c.test(e);
      }
      function f(e) {
        return (0, n.Yv)(c, e);
      }
      let h =
        /^struct (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*) \{(?<properties>.*?)\}$/;
      function p(e) {
        return h.test(e);
      }
      function m(e) {
        return (0, n.Yv)(h, e);
      }
      let g =
        /^constructor\((?<parameters>.*?)\)(?:\s(?<stateMutability>payable{1}))?$/;
      function y(e) {
        return g.test(e);
      }
      function b(e) {
        return (0, n.Yv)(g, e);
      }
      let v = /^fallback\(\) external(?:\s(?<stateMutability>payable{1}))?$/;
      function w(e) {
        return v.test(e);
      }
      function x(e) {
        return (0, n.Yv)(v, e);
      }
      let A = /^receive\(\) external payable$/;
      function E(e) {
        return A.test(e);
      }
      let k = new Set(["memory", "indexed", "storage", "calldata"]),
        I = new Set(["indexed"]),
        S = new Set(["calldata", "memory", "storage"]);
    },
    34494: (e, t, r) => {
      "use strict";
      r.d(t, { e: () => d });
      var n = r(6463),
        i = r(52076),
        o = r(22858),
        a = r(97847),
        s = r(98961);
      class l extends s.C {
        constructor({ type: e }) {
          super("Circular reference detected.", {
            metaMessages: [`Struct "${e}" is a circular reference.`],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "CircularReferenceError",
            });
        }
      }
      var u = r(89071),
        c = r(3133);
      function d(e) {
        let t = {},
          r = e.length;
        for (let n = 0; n < r; n++) {
          let r = e[n];
          if (!(0, u.WL)(r)) continue;
          let i = (0, u.FO)(r);
          if (!i) throw new a.s7({ signature: r, type: "struct" });
          let o = i.properties.split(";"),
            s = [],
            l = o.length;
          for (let e = 0; e < l; e++) {
            let t = o[e].trim();
            if (!t) continue;
            let r = (0, c.Pj)(t, { type: "struct" });
            s.push(r);
          }
          if (!s.length) throw new a.X9({ signature: r });
          t[i.name] = s;
        }
        let s = {},
          d = Object.entries(t),
          h = d.length;
        for (let e = 0; e < h; e++) {
          let [r, a] = d[e];
          s[r] = (function e(t, r, a = new Set()) {
            let s = [],
              u = t.length;
            for (let d = 0; d < u; d++) {
              let u = t[d];
              if (n.wj.test(u.type)) s.push(u);
              else {
                let t = (0, n.Yv)(f, u.type);
                if (!t?.type) throw new o.nx({ abiParameter: u });
                let { array: d, type: h } = t;
                if (h in r) {
                  if (a.has(h)) throw new l({ type: h });
                  s.push({
                    ...u,
                    type: `tuple${d ?? ""}`,
                    components: e(r[h] ?? [], r, new Set([...a, h])),
                  });
                } else if ((0, c._o)(h)) s.push(u);
                else throw new i.zz({ type: h });
              }
            }
            return s;
          })(a, t);
        }
        return s;
      }
      let f = /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\[\d*?\])+?)?$/;
    },
    3133: (e, t, r) => {
      "use strict";
      r.d(t, { _o: () => y, Pj: () => m, uT: () => d, NV: () => g });
      var n = r(6463),
        i = r(52076),
        o = r(22858),
        a = r(97847),
        s = r(98961);
      class l extends s.C {
        constructor({ current: e, depth: t }) {
          super("Unbalanced parentheses.", {
            metaMessages: [
              `"${e.trim()}" has too many ${
                t > 0 ? "opening" : "closing"
              } parentheses.`,
            ],
            details: `Depth "${t}"`,
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidParenthesisError",
            });
        }
      }
      let u = new Map([
        ["address", { type: "address" }],
        ["bool", { type: "bool" }],
        ["bytes", { type: "bytes" }],
        ["bytes32", { type: "bytes32" }],
        ["int", { type: "int256" }],
        ["int256", { type: "int256" }],
        ["string", { type: "string" }],
        ["uint", { type: "uint256" }],
        ["uint8", { type: "uint8" }],
        ["uint16", { type: "uint16" }],
        ["uint24", { type: "uint24" }],
        ["uint32", { type: "uint32" }],
        ["uint64", { type: "uint64" }],
        ["uint96", { type: "uint96" }],
        ["uint112", { type: "uint112" }],
        ["uint160", { type: "uint160" }],
        ["uint192", { type: "uint192" }],
        ["uint256", { type: "uint256" }],
        ["address owner", { type: "address", name: "owner" }],
        ["address to", { type: "address", name: "to" }],
        ["bool approved", { type: "bool", name: "approved" }],
        ["bytes _data", { type: "bytes", name: "_data" }],
        ["bytes data", { type: "bytes", name: "data" }],
        ["bytes signature", { type: "bytes", name: "signature" }],
        ["bytes32 hash", { type: "bytes32", name: "hash" }],
        ["bytes32 r", { type: "bytes32", name: "r" }],
        ["bytes32 root", { type: "bytes32", name: "root" }],
        ["bytes32 s", { type: "bytes32", name: "s" }],
        ["string name", { type: "string", name: "name" }],
        ["string symbol", { type: "string", name: "symbol" }],
        ["string tokenURI", { type: "string", name: "tokenURI" }],
        ["uint tokenId", { type: "uint256", name: "tokenId" }],
        ["uint8 v", { type: "uint8", name: "v" }],
        ["uint256 balance", { type: "uint256", name: "balance" }],
        ["uint256 tokenId", { type: "uint256", name: "tokenId" }],
        ["uint256 value", { type: "uint256", name: "value" }],
        [
          "event:address indexed from",
          { type: "address", name: "from", indexed: !0 },
        ],
        [
          "event:address indexed to",
          { type: "address", name: "to", indexed: !0 },
        ],
        [
          "event:uint indexed tokenId",
          { type: "uint256", name: "tokenId", indexed: !0 },
        ],
        [
          "event:uint256 indexed tokenId",
          { type: "uint256", name: "tokenId", indexed: !0 },
        ],
      ]);
      var c = r(89071);
      function d(e, t = {}) {
        if ((0, c.Ji)(e))
          return (function (e, t = {}) {
            let r = (0, c.ej)(e);
            if (!r) throw new a.s7({ signature: e, type: "function" });
            let n = g(r.parameters),
              i = [],
              o = n.length;
            for (let e = 0; e < o; e++)
              i.push(
                m(n[e], { modifiers: c.v7, structs: t, type: "function" })
              );
            let s = [];
            if (r.returns) {
              let e = g(r.returns),
                n = e.length;
              for (let r = 0; r < n; r++)
                s.push(
                  m(e[r], { modifiers: c.v7, structs: t, type: "function" })
                );
            }
            return {
              name: r.name,
              type: "function",
              stateMutability: r.stateMutability ?? "nonpayable",
              inputs: i,
              outputs: s,
            };
          })(e, t);
        if ((0, c.Rv)(e))
          return (function (e, t = {}) {
            let r = (0, c.iB)(e);
            if (!r) throw new a.s7({ signature: e, type: "event" });
            let n = g(r.parameters),
              i = [],
              o = n.length;
            for (let e = 0; e < o; e++)
              i.push(m(n[e], { modifiers: c.fC, structs: t, type: "event" }));
            return { name: r.name, type: "event", inputs: i };
          })(e, t);
        if ((0, c.pc)(e))
          return (function (e, t = {}) {
            let r = (0, c.kz)(e);
            if (!r) throw new a.s7({ signature: e, type: "error" });
            let n = g(r.parameters),
              i = [],
              o = n.length;
            for (let e = 0; e < o; e++)
              i.push(m(n[e], { structs: t, type: "error" }));
            return { name: r.name, type: "error", inputs: i };
          })(e, t);
        if ((0, c.l9)(e))
          return (function (e, t = {}) {
            let r = (0, c.Yo)(e);
            if (!r) throw new a.s7({ signature: e, type: "constructor" });
            let n = g(r.parameters),
              i = [],
              o = n.length;
            for (let e = 0; e < o; e++)
              i.push(m(n[e], { structs: t, type: "constructor" }));
            return {
              type: "constructor",
              stateMutability: r.stateMutability ?? "nonpayable",
              inputs: i,
            };
          })(e, t);
        if ((0, c.v8)(e))
          return (function (e) {
            let t = (0, c.If)(e);
            if (!t) throw new a.s7({ signature: e, type: "fallback" });
            return {
              type: "fallback",
              stateMutability: t.stateMutability ?? "nonpayable",
            };
          })(e);
        if ((0, c.sP)(e))
          return { type: "receive", stateMutability: "payable" };
        throw new a.x8({ signature: e });
      }
      let f =
          /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/,
        h =
          /^\((?<type>.+?)\)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/,
        p = /^u?int$/;
      function m(e, t) {
        var r, a;
        let s;
        let l = (function (e, t, r) {
          let n = "";
          if (r)
            for (let e of Object.entries(r)) {
              if (!e) continue;
              let t = "";
              for (let r of e[1])
                t += `[${r.type}${r.name ? `:${r.name}` : ""}]`;
              n += `(${e[0]}{${t}})`;
            }
          return t ? `${t}:${e}${n}` : e;
        })(e, t?.type, t?.structs);
        if (u.has(l)) return u.get(l);
        let d = n.wj.test(e),
          v = (0, n.Yv)(d ? h : f, e);
        if (!v) throw new o.dV({ param: e });
        if (
          v.name &&
          ("address" === (r = v.name) ||
            "bool" === r ||
            "function" === r ||
            "string" === r ||
            "tuple" === r ||
            n.BD.test(r) ||
            n.Ge.test(r) ||
            b.test(r))
        )
          throw new o.zd({ param: e, name: v.name });
        let w = v.name ? { name: v.name } : {},
          x = "indexed" === v.modifier ? { indexed: !0 } : {},
          A = t?.structs ?? {},
          E = {};
        if (d) {
          s = "tuple";
          let e = g(v.type),
            t = [],
            r = e.length;
          for (let n = 0; n < r; n++) t.push(m(e[n], { structs: A }));
          E = { components: t };
        } else if (v.type in A) (s = "tuple"), (E = { components: A[v.type] });
        else if (p.test(v.type)) s = `${v.type}256`;
        else if (((s = v.type), t?.type !== "struct" && !y(s)))
          throw new i.UG({ type: s });
        if (v.modifier) {
          if (!t?.modifiers?.has?.(v.modifier))
            throw new o.NO({ param: e, type: t?.type, modifier: v.modifier });
          if (
            c.v7.has(v.modifier) &&
            ((a = s),
            !v.array && "bytes" !== a && "string" !== a && "tuple" !== a)
          )
            throw new o.Pj({ param: e, type: t?.type, modifier: v.modifier });
        }
        let k = { type: `${s}${v.array ?? ""}`, ...w, ...x, ...E };
        return u.set(l, k), k;
      }
      function g(e, t = [], r = "", n = 0) {
        let i = e.trim().length;
        for (let o = 0; o < i; o++) {
          let i = e[o],
            a = e.slice(o + 1);
          switch (i) {
            case ",":
              return 0 === n ? g(a, [...t, r.trim()]) : g(a, t, `${r}${i}`, n);
            case "(":
              return g(a, t, `${r}${i}`, n + 1);
            case ")":
              return g(a, t, `${r}${i}`, n - 1);
            default:
              return g(a, t, `${r}${i}`, n);
          }
        }
        if ("" === r) return t;
        if (0 !== n) throw new l({ current: r, depth: n });
        return t.push(r.trim()), t;
      }
      function y(e) {
        return (
          "address" === e ||
          "bool" === e ||
          "function" === e ||
          "string" === e ||
          n.BD.test(e) ||
          n.Ge.test(e)
        );
      }
      let b =
        /^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/;
    },
    6463: (e, t, r) => {
      "use strict";
      function n(e, t) {
        let r = e.exec(t);
        return r?.groups;
      }
      r.d(t, { BD: () => i, Ge: () => o, Yv: () => n, wj: () => a });
      let i = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/,
        o =
          /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/,
        a = /^\(.+?\).*?$/;
    },
    82651: (e, t, r) => {
      "use strict";
      let n;
      r.d(t, { A: () => tu });
      var i,
        o,
        a,
        s = {};
      function l(e, t) {
        return function () {
          return e.apply(t, arguments);
        };
      }
      r.r(s),
        r.d(s, {
          hasBrowserEnv: () => ef,
          hasStandardBrowserEnv: () => ep,
          hasStandardBrowserWebWorkerEnv: () => em,
          navigator: () => eh,
          origin: () => eg,
        });
      var u = r(87358);
      let { toString: c } = Object.prototype,
        { getPrototypeOf: d } = Object,
        { iterator: f, toStringTag: h } = Symbol,
        p = ((e) => (t) => {
          let r = c.call(t);
          return e[r] || (e[r] = r.slice(8, -1).toLowerCase());
        })(Object.create(null)),
        m = (e) => ((e = e.toLowerCase()), (t) => p(t) === e),
        g = (e) => (t) => typeof t === e,
        { isArray: y } = Array,
        b = g("undefined"),
        v = m("ArrayBuffer"),
        w = g("string"),
        x = g("function"),
        A = g("number"),
        E = (e) => null !== e && "object" == typeof e,
        k = (e) => {
          if ("object" !== p(e)) return !1;
          let t = d(e);
          return (
            (null === t ||
              t === Object.prototype ||
              null === Object.getPrototypeOf(t)) &&
            !(h in e) &&
            !(f in e)
          );
        },
        I = m("Date"),
        S = m("File"),
        P = m("Blob"),
        T = m("FileList"),
        C = m("URLSearchParams"),
        [O, _, B, R] = ["ReadableStream", "Request", "Response", "Headers"].map(
          m
        );
      function N(e, t, { allOwnKeys: r = !1 } = {}) {
        let n, i;
        if (null != e) {
          if (("object" != typeof e && (e = [e]), y(e)))
            for (n = 0, i = e.length; n < i; n++) t.call(null, e[n], n, e);
          else {
            let i;
            let o = r ? Object.getOwnPropertyNames(e) : Object.keys(e),
              a = o.length;
            for (n = 0; n < a; n++) (i = o[n]), t.call(null, e[i], i, e);
          }
        }
      }
      function M(e, t) {
        let r;
        t = t.toLowerCase();
        let n = Object.keys(e),
          i = n.length;
        for (; i-- > 0; ) if (t === (r = n[i]).toLowerCase()) return r;
        return null;
      }
      let j =
          "undefined" != typeof globalThis
            ? globalThis
            : "undefined" != typeof self
            ? self
            : "undefined" != typeof window
            ? window
            : global,
        F = (e) => !b(e) && e !== j,
        L = (
          (e) => (t) =>
            e && t instanceof e
        )("undefined" != typeof Uint8Array && d(Uint8Array)),
        D = m("HTMLFormElement"),
        U = (
          ({ hasOwnProperty: e }) =>
          (t, r) =>
            e.call(t, r)
        )(Object.prototype),
        H = m("RegExp"),
        $ = (e, t) => {
          let r = Object.getOwnPropertyDescriptors(e),
            n = {};
          N(r, (r, i) => {
            let o;
            !1 !== (o = t(r, i, e)) && (n[i] = o || r);
          }),
            Object.defineProperties(e, n);
        },
        z = m("AsyncFunction"),
        G =
          ((i = "function" == typeof setImmediate),
          (o = x(j.postMessage)),
          i
            ? setImmediate
            : o
            ? ((e, t) => (
                j.addEventListener(
                  "message",
                  ({ source: r, data: n }) => {
                    r === j && n === e && t.length && t.shift()();
                  },
                  !1
                ),
                (r) => {
                  t.push(r), j.postMessage(e, "*");
                }
              ))(`axios@${Math.random()}`, [])
            : (e) => setTimeout(e)),
        q =
          "undefined" != typeof queueMicrotask
            ? queueMicrotask.bind(j)
            : (void 0 !== u && u.nextTick) || G,
        W = {
          isArray: y,
          isArrayBuffer: v,
          isBuffer: function (e) {
            return (
              null !== e &&
              !b(e) &&
              null !== e.constructor &&
              !b(e.constructor) &&
              x(e.constructor.isBuffer) &&
              e.constructor.isBuffer(e)
            );
          },
          isFormData: (e) => {
            let t;
            return (
              e &&
              (("function" == typeof FormData && e instanceof FormData) ||
                (x(e.append) &&
                  ("formdata" === (t = p(e)) ||
                    ("object" === t &&
                      x(e.toString) &&
                      "[object FormData]" === e.toString()))))
            );
          },
          isArrayBufferView: function (e) {
            return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView
              ? ArrayBuffer.isView(e)
              : e && e.buffer && v(e.buffer);
          },
          isString: w,
          isNumber: A,
          isBoolean: (e) => !0 === e || !1 === e,
          isObject: E,
          isPlainObject: k,
          isReadableStream: O,
          isRequest: _,
          isResponse: B,
          isHeaders: R,
          isUndefined: b,
          isDate: I,
          isFile: S,
          isBlob: P,
          isRegExp: H,
          isFunction: x,
          isStream: (e) => E(e) && x(e.pipe),
          isURLSearchParams: C,
          isTypedArray: L,
          isFileList: T,
          forEach: N,
          merge: function e() {
            let { caseless: t } = (F(this) && this) || {},
              r = {},
              n = (n, i) => {
                let o = (t && M(r, i)) || i;
                k(r[o]) && k(n)
                  ? (r[o] = e(r[o], n))
                  : k(n)
                  ? (r[o] = e({}, n))
                  : y(n)
                  ? (r[o] = n.slice())
                  : (r[o] = n);
              };
            for (let e = 0, t = arguments.length; e < t; e++)
              arguments[e] && N(arguments[e], n);
            return r;
          },
          extend: (e, t, r, { allOwnKeys: n } = {}) => (
            N(
              t,
              (t, n) => {
                r && x(t) ? (e[n] = l(t, r)) : (e[n] = t);
              },
              { allOwnKeys: n }
            ),
            e
          ),
          trim: (e) =>
            e.trim
              ? e.trim()
              : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, ""),
          stripBOM: (e) => (65279 === e.charCodeAt(0) && (e = e.slice(1)), e),
          inherits: (e, t, r, n) => {
            (e.prototype = Object.create(t.prototype, n)),
              (e.prototype.constructor = e),
              Object.defineProperty(e, "super", { value: t.prototype }),
              r && Object.assign(e.prototype, r);
          },
          toFlatObject: (e, t, r, n) => {
            let i, o, a;
            let s = {};
            if (((t = t || {}), null == e)) return t;
            do {
              for (o = (i = Object.getOwnPropertyNames(e)).length; o-- > 0; )
                (a = i[o]),
                  (!n || n(a, e, t)) && !s[a] && ((t[a] = e[a]), (s[a] = !0));
              e = !1 !== r && d(e);
            } while (e && (!r || r(e, t)) && e !== Object.prototype);
            return t;
          },
          kindOf: p,
          kindOfTest: m,
          endsWith: (e, t, r) => {
            (e = String(e)),
              (void 0 === r || r > e.length) && (r = e.length),
              (r -= t.length);
            let n = e.indexOf(t, r);
            return -1 !== n && n === r;
          },
          toArray: (e) => {
            if (!e) return null;
            if (y(e)) return e;
            let t = e.length;
            if (!A(t)) return null;
            let r = Array(t);
            for (; t-- > 0; ) r[t] = e[t];
            return r;
          },
          forEachEntry: (e, t) => {
            let r;
            let n = (e && e[f]).call(e);
            for (; (r = n.next()) && !r.done; ) {
              let n = r.value;
              t.call(e, n[0], n[1]);
            }
          },
          matchAll: (e, t) => {
            let r;
            let n = [];
            for (; null !== (r = e.exec(t)); ) n.push(r);
            return n;
          },
          isHTMLForm: D,
          hasOwnProperty: U,
          hasOwnProp: U,
          reduceDescriptors: $,
          freezeMethods: (e) => {
            $(e, (t, r) => {
              if (x(e) && -1 !== ["arguments", "caller", "callee"].indexOf(r))
                return !1;
              if (x(e[r])) {
                if (((t.enumerable = !1), "writable" in t)) {
                  t.writable = !1;
                  return;
                }
                t.set ||
                  (t.set = () => {
                    throw Error("Can not rewrite read-only method '" + r + "'");
                  });
              }
            });
          },
          toObjectSet: (e, t) => {
            let r = {};
            return (
              ((e) => {
                e.forEach((e) => {
                  r[e] = !0;
                });
              })(y(e) ? e : String(e).split(t)),
              r
            );
          },
          toCamelCase: (e) =>
            e
              .toLowerCase()
              .replace(/[-_\s]([a-z\d])(\w*)/g, function (e, t, r) {
                return t.toUpperCase() + r;
              }),
          noop: () => {},
          toFiniteNumber: (e, t) =>
            null != e && Number.isFinite((e = +e)) ? e : t,
          findKey: M,
          global: j,
          isContextDefined: F,
          isSpecCompliantForm: function (e) {
            return !!(e && x(e.append) && "FormData" === e[h] && e[f]);
          },
          toJSONObject: (e) => {
            let t = Array(10),
              r = (e, n) => {
                if (E(e)) {
                  if (t.indexOf(e) >= 0) return;
                  if (!("toJSON" in e)) {
                    t[n] = e;
                    let i = y(e) ? [] : {};
                    return (
                      N(e, (e, t) => {
                        let o = r(e, n + 1);
                        b(o) || (i[t] = o);
                      }),
                      (t[n] = void 0),
                      i
                    );
                  }
                }
                return e;
              };
            return r(e, 0);
          },
          isAsyncFn: z,
          isThenable: (e) => e && (E(e) || x(e)) && x(e.then) && x(e.catch),
          setImmediate: G,
          asap: q,
          isIterable: (e) => null != e && x(e[f]),
        };
      function V(e, t, r, n, i) {
        Error.call(this),
          Error.captureStackTrace
            ? Error.captureStackTrace(this, this.constructor)
            : (this.stack = Error().stack),
          (this.message = e),
          (this.name = "AxiosError"),
          t && (this.code = t),
          r && (this.config = r),
          n && (this.request = n),
          i &&
            ((this.response = i), (this.status = i.status ? i.status : null));
      }
      W.inherits(V, Error, {
        toJSON: function () {
          return {
            message: this.message,
            name: this.name,
            description: this.description,
            number: this.number,
            fileName: this.fileName,
            lineNumber: this.lineNumber,
            columnNumber: this.columnNumber,
            stack: this.stack,
            config: W.toJSONObject(this.config),
            code: this.code,
            status: this.status,
          };
        },
      });
      let Z = V.prototype,
        K = {};
      [
        "ERR_BAD_OPTION_VALUE",
        "ERR_BAD_OPTION",
        "ECONNABORTED",
        "ETIMEDOUT",
        "ERR_NETWORK",
        "ERR_FR_TOO_MANY_REDIRECTS",
        "ERR_DEPRECATED",
        "ERR_BAD_RESPONSE",
        "ERR_BAD_REQUEST",
        "ERR_CANCELED",
        "ERR_NOT_SUPPORT",
        "ERR_INVALID_URL",
      ].forEach((e) => {
        K[e] = { value: e };
      }),
        Object.defineProperties(V, K),
        Object.defineProperty(Z, "isAxiosError", { value: !0 }),
        (V.from = (e, t, r, n, i, o) => {
          let a = Object.create(Z);
          return (
            W.toFlatObject(
              e,
              a,
              function (e) {
                return e !== Error.prototype;
              },
              (e) => "isAxiosError" !== e
            ),
            V.call(a, e.message, t, r, n, i),
            (a.cause = e),
            (a.name = e.name),
            o && Object.assign(a, o),
            a
          );
        });
      var Q = r(75927).Buffer;
      function J(e) {
        return W.isPlainObject(e) || W.isArray(e);
      }
      function Y(e) {
        return W.endsWith(e, "[]") ? e.slice(0, -2) : e;
      }
      function X(e, t, r) {
        return e
          ? e
              .concat(t)
              .map(function (e, t) {
                return (e = Y(e)), !r && t ? "[" + e + "]" : e;
              })
              .join(r ? "." : "")
          : t;
      }
      let ee = W.toFlatObject(W, {}, null, function (e) {
          return /^is[A-Z]/.test(e);
        }),
        et = function (e, t, r) {
          if (!W.isObject(e)) throw TypeError("target must be an object");
          t = t || new FormData();
          let n = (r = W.toFlatObject(
              r,
              { metaTokens: !0, dots: !1, indexes: !1 },
              !1,
              function (e, t) {
                return !W.isUndefined(t[e]);
              }
            )).metaTokens,
            i = r.visitor || u,
            o = r.dots,
            a = r.indexes,
            s =
              (r.Blob || ("undefined" != typeof Blob && Blob)) &&
              W.isSpecCompliantForm(t);
          if (!W.isFunction(i)) throw TypeError("visitor must be a function");
          function l(e) {
            if (null === e) return "";
            if (W.isDate(e)) return e.toISOString();
            if (!s && W.isBlob(e))
              throw new V("Blob is not supported. Use a Buffer instead.");
            return W.isArrayBuffer(e) || W.isTypedArray(e)
              ? s && "function" == typeof Blob
                ? new Blob([e])
                : Q.from(e)
              : e;
          }
          function u(e, r, i) {
            let s = e;
            if (e && !i && "object" == typeof e) {
              if (W.endsWith(r, "{}"))
                (r = n ? r : r.slice(0, -2)), (e = JSON.stringify(e));
              else {
                var u;
                if (
                  (W.isArray(e) && ((u = e), W.isArray(u) && !u.some(J))) ||
                  ((W.isFileList(e) || W.endsWith(r, "[]")) &&
                    (s = W.toArray(e)))
                )
                  return (
                    (r = Y(r)),
                    s.forEach(function (e, n) {
                      W.isUndefined(e) ||
                        null === e ||
                        t.append(
                          !0 === a ? X([r], n, o) : null === a ? r : r + "[]",
                          l(e)
                        );
                    }),
                    !1
                  );
              }
            }
            return !!J(e) || (t.append(X(i, r, o), l(e)), !1);
          }
          let c = [],
            d = Object.assign(ee, {
              defaultVisitor: u,
              convertValue: l,
              isVisitable: J,
            });
          if (!W.isObject(e)) throw TypeError("data must be an object");
          return (
            !(function e(r, n) {
              if (!W.isUndefined(r)) {
                if (-1 !== c.indexOf(r))
                  throw Error("Circular reference detected in " + n.join("."));
                c.push(r),
                  W.forEach(r, function (r, o) {
                    !0 ===
                      (!(W.isUndefined(r) || null === r) &&
                        i.call(t, r, W.isString(o) ? o.trim() : o, n, d)) &&
                      e(r, n ? n.concat(o) : [o]);
                  }),
                  c.pop();
              }
            })(e),
            t
          );
        };
      function er(e) {
        let t = {
          "!": "%21",
          "'": "%27",
          "(": "%28",
          ")": "%29",
          "~": "%7E",
          "%20": "+",
          "%00": "\0",
        };
        return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function (e) {
          return t[e];
        });
      }
      function en(e, t) {
        (this._pairs = []), e && et(e, this, t);
      }
      let ei = en.prototype;
      function eo(e) {
        return encodeURIComponent(e)
          .replace(/%3A/gi, ":")
          .replace(/%24/g, "$")
          .replace(/%2C/gi, ",")
          .replace(/%20/g, "+")
          .replace(/%5B/gi, "[")
          .replace(/%5D/gi, "]");
      }
      function ea(e, t, r) {
        let n;
        if (!t) return e;
        let i = (r && r.encode) || eo;
        W.isFunction(r) && (r = { serialize: r });
        let o = r && r.serialize;
        if (
          (n = o
            ? o(t, r)
            : W.isURLSearchParams(t)
            ? t.toString()
            : new en(t, r).toString(i))
        ) {
          let t = e.indexOf("#");
          -1 !== t && (e = e.slice(0, t)),
            (e += (-1 === e.indexOf("?") ? "?" : "&") + n);
        }
        return e;
      }
      (ei.append = function (e, t) {
        this._pairs.push([e, t]);
      }),
        (ei.toString = function (e) {
          let t = e
            ? function (t) {
                return e.call(this, t, er);
              }
            : er;
          return this._pairs
            .map(function (e) {
              return t(e[0]) + "=" + t(e[1]);
            }, "")
            .join("&");
        });
      class es {
        constructor() {
          this.handlers = [];
        }
        use(e, t, r) {
          return (
            this.handlers.push({
              fulfilled: e,
              rejected: t,
              synchronous: !!r && r.synchronous,
              runWhen: r ? r.runWhen : null,
            }),
            this.handlers.length - 1
          );
        }
        eject(e) {
          this.handlers[e] && (this.handlers[e] = null);
        }
        clear() {
          this.handlers && (this.handlers = []);
        }
        forEach(e) {
          W.forEach(this.handlers, function (t) {
            null !== t && e(t);
          });
        }
      }
      let el = {
          silentJSONParsing: !0,
          forcedJSONParsing: !0,
          clarifyTimeoutError: !1,
        },
        eu = "undefined" != typeof URLSearchParams ? URLSearchParams : en,
        ec = "undefined" != typeof FormData ? FormData : null,
        ed = "undefined" != typeof Blob ? Blob : null,
        ef = "undefined" != typeof window && "undefined" != typeof document,
        eh = ("object" == typeof navigator && navigator) || void 0,
        ep =
          ef &&
          (!eh ||
            0 > ["ReactNative", "NativeScript", "NS"].indexOf(eh.product)),
        em =
          "undefined" != typeof WorkerGlobalScope &&
          self instanceof WorkerGlobalScope &&
          "function" == typeof self.importScripts,
        eg = (ef && window.location.href) || "http://localhost",
        ey = {
          ...s,
          isBrowser: !0,
          classes: { URLSearchParams: eu, FormData: ec, Blob: ed },
          protocols: ["http", "https", "file", "blob", "url", "data"],
        },
        eb = function (e) {
          if (W.isFormData(e) && W.isFunction(e.entries)) {
            let t = {};
            return (
              W.forEachEntry(e, (e, r) => {
                !(function e(t, r, n, i) {
                  let o = t[i++];
                  if ("__proto__" === o) return !0;
                  let a = Number.isFinite(+o),
                    s = i >= t.length;
                  return (
                    ((o = !o && W.isArray(n) ? n.length : o), s)
                      ? W.hasOwnProp(n, o)
                        ? (n[o] = [n[o], r])
                        : (n[o] = r)
                      : ((n[o] && W.isObject(n[o])) || (n[o] = []),
                        e(t, r, n[o], i) &&
                          W.isArray(n[o]) &&
                          (n[o] = (function (e) {
                            let t, r;
                            let n = {},
                              i = Object.keys(e),
                              o = i.length;
                            for (t = 0; t < o; t++) n[(r = i[t])] = e[r];
                            return n;
                          })(n[o]))),
                    !a
                  );
                })(
                  W.matchAll(/\w+|\[(\w*)]/g, e).map((e) =>
                    "[]" === e[0] ? "" : e[1] || e[0]
                  ),
                  r,
                  t,
                  0
                );
              }),
              t
            );
          }
          return null;
        },
        ev = {
          transitional: el,
          adapter: ["xhr", "http", "fetch"],
          transformRequest: [
            function (e, t) {
              let r;
              let n = t.getContentType() || "",
                i = n.indexOf("application/json") > -1,
                o = W.isObject(e);
              if (
                (o && W.isHTMLForm(e) && (e = new FormData(e)), W.isFormData(e))
              )
                return i ? JSON.stringify(eb(e)) : e;
              if (
                W.isArrayBuffer(e) ||
                W.isBuffer(e) ||
                W.isStream(e) ||
                W.isFile(e) ||
                W.isBlob(e) ||
                W.isReadableStream(e)
              )
                return e;
              if (W.isArrayBufferView(e)) return e.buffer;
              if (W.isURLSearchParams(e))
                return (
                  t.setContentType(
                    "application/x-www-form-urlencoded;charset=utf-8",
                    !1
                  ),
                  e.toString()
                );
              if (o) {
                if (n.indexOf("application/x-www-form-urlencoded") > -1) {
                  var a, s;
                  return ((a = e),
                  (s = this.formSerializer),
                  et(
                    a,
                    new ey.classes.URLSearchParams(),
                    Object.assign(
                      {
                        visitor: function (e, t, r, n) {
                          return ey.isNode && W.isBuffer(e)
                            ? (this.append(t, e.toString("base64")), !1)
                            : n.defaultVisitor.apply(this, arguments);
                        },
                      },
                      s
                    )
                  )).toString();
                }
                if (
                  (r = W.isFileList(e)) ||
                  n.indexOf("multipart/form-data") > -1
                ) {
                  let t = this.env && this.env.FormData;
                  return et(
                    r ? { "files[]": e } : e,
                    t && new t(),
                    this.formSerializer
                  );
                }
              }
              return o || i
                ? (t.setContentType("application/json", !1),
                  (function (e, t, r) {
                    if (W.isString(e))
                      try {
                        return (0, JSON.parse)(e), W.trim(e);
                      } catch (e) {
                        if ("SyntaxError" !== e.name) throw e;
                      }
                    return (0, JSON.stringify)(e);
                  })(e))
                : e;
            },
          ],
          transformResponse: [
            function (e) {
              let t = this.transitional || ev.transitional,
                r = t && t.forcedJSONParsing,
                n = "json" === this.responseType;
              if (W.isResponse(e) || W.isReadableStream(e)) return e;
              if (e && W.isString(e) && ((r && !this.responseType) || n)) {
                let r = t && t.silentJSONParsing;
                try {
                  return JSON.parse(e);
                } catch (e) {
                  if (!r && n) {
                    if ("SyntaxError" === e.name)
                      throw V.from(
                        e,
                        V.ERR_BAD_RESPONSE,
                        this,
                        null,
                        this.response
                      );
                    throw e;
                  }
                }
              }
              return e;
            },
          ],
          timeout: 0,
          xsrfCookieName: "XSRF-TOKEN",
          xsrfHeaderName: "X-XSRF-TOKEN",
          maxContentLength: -1,
          maxBodyLength: -1,
          env: { FormData: ey.classes.FormData, Blob: ey.classes.Blob },
          validateStatus: function (e) {
            return e >= 200 && e < 300;
          },
          headers: {
            common: {
              Accept: "application/json, text/plain, */*",
              "Content-Type": void 0,
            },
          },
        };
      W.forEach(["delete", "get", "head", "post", "put", "patch"], (e) => {
        ev.headers[e] = {};
      });
      let ew = W.toObjectSet([
          "age",
          "authorization",
          "content-length",
          "content-type",
          "etag",
          "expires",
          "from",
          "host",
          "if-modified-since",
          "if-unmodified-since",
          "last-modified",
          "location",
          "max-forwards",
          "proxy-authorization",
          "referer",
          "retry-after",
          "user-agent",
        ]),
        ex = (e) => {
          let t, r, n;
          let i = {};
          return (
            e &&
              e.split("\n").forEach(function (e) {
                (n = e.indexOf(":")),
                  (t = e.substring(0, n).trim().toLowerCase()),
                  (r = e.substring(n + 1).trim()),
                  !t ||
                    (i[t] && ew[t]) ||
                    ("set-cookie" === t
                      ? i[t]
                        ? i[t].push(r)
                        : (i[t] = [r])
                      : (i[t] = i[t] ? i[t] + ", " + r : r));
              }),
            i
          );
        },
        eA = Symbol("internals");
      function eE(e) {
        return e && String(e).trim().toLowerCase();
      }
      function ek(e) {
        return !1 === e || null == e ? e : W.isArray(e) ? e.map(ek) : String(e);
      }
      let eI = (e) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());
      function eS(e, t, r, n, i) {
        if (W.isFunction(n)) return n.call(this, t, r);
        if ((i && (t = r), W.isString(t))) {
          if (W.isString(n)) return -1 !== t.indexOf(n);
          if (W.isRegExp(n)) return n.test(t);
        }
      }
      class eP {
        constructor(e) {
          e && this.set(e);
        }
        set(e, t, r) {
          let n = this;
          function i(e, t, r) {
            let i = eE(t);
            if (!i) throw Error("header name must be a non-empty string");
            let o = W.findKey(n, i);
            (o &&
              void 0 !== n[o] &&
              !0 !== r &&
              (void 0 !== r || !1 === n[o])) ||
              (n[o || t] = ek(e));
          }
          let o = (e, t) => W.forEach(e, (e, r) => i(e, r, t));
          if (W.isPlainObject(e) || e instanceof this.constructor) o(e, t);
          else if (W.isString(e) && (e = e.trim()) && !eI(e)) o(ex(e), t);
          else if (W.isObject(e) && W.isIterable(e)) {
            let r = {},
              n,
              i;
            for (let t of e) {
              if (!W.isArray(t))
                throw TypeError("Object iterator must return a key-value pair");
              r[(i = t[0])] = (n = r[i])
                ? W.isArray(n)
                  ? [...n, t[1]]
                  : [n, t[1]]
                : t[1];
            }
            o(r, t);
          } else null != e && i(t, e, r);
          return this;
        }
        get(e, t) {
          if ((e = eE(e))) {
            let r = W.findKey(this, e);
            if (r) {
              let e = this[r];
              if (!t) return e;
              if (!0 === t)
                return (function (e) {
                  let t;
                  let r = Object.create(null),
                    n = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
                  for (; (t = n.exec(e)); ) r[t[1]] = t[2];
                  return r;
                })(e);
              if (W.isFunction(t)) return t.call(this, e, r);
              if (W.isRegExp(t)) return t.exec(e);
              throw TypeError("parser must be boolean|regexp|function");
            }
          }
        }
        has(e, t) {
          if ((e = eE(e))) {
            let r = W.findKey(this, e);
            return !!(
              r &&
              void 0 !== this[r] &&
              (!t || eS(this, this[r], r, t))
            );
          }
          return !1;
        }
        delete(e, t) {
          let r = this,
            n = !1;
          function i(e) {
            if ((e = eE(e))) {
              let i = W.findKey(r, e);
              i && (!t || eS(r, r[i], i, t)) && (delete r[i], (n = !0));
            }
          }
          return W.isArray(e) ? e.forEach(i) : i(e), n;
        }
        clear(e) {
          let t = Object.keys(this),
            r = t.length,
            n = !1;
          for (; r--; ) {
            let i = t[r];
            (!e || eS(this, this[i], i, e, !0)) && (delete this[i], (n = !0));
          }
          return n;
        }
        normalize(e) {
          let t = this,
            r = {};
          return (
            W.forEach(this, (n, i) => {
              let o = W.findKey(r, i);
              if (o) {
                (t[o] = ek(n)), delete t[i];
                return;
              }
              let a = e
                ? i
                    .trim()
                    .toLowerCase()
                    .replace(
                      /([a-z\d])(\w*)/g,
                      (e, t, r) => t.toUpperCase() + r
                    )
                : String(i).trim();
              a !== i && delete t[i], (t[a] = ek(n)), (r[a] = !0);
            }),
            this
          );
        }
        concat(...e) {
          return this.constructor.concat(this, ...e);
        }
        toJSON(e) {
          let t = Object.create(null);
          return (
            W.forEach(this, (r, n) => {
              null != r &&
                !1 !== r &&
                (t[n] = e && W.isArray(r) ? r.join(", ") : r);
            }),
            t
          );
        }
        [Symbol.iterator]() {
          return Object.entries(this.toJSON())[Symbol.iterator]();
        }
        toString() {
          return Object.entries(this.toJSON())
            .map(([e, t]) => e + ": " + t)
            .join("\n");
        }
        getSetCookie() {
          return this.get("set-cookie") || [];
        }
        get [Symbol.toStringTag]() {
          return "AxiosHeaders";
        }
        static from(e) {
          return e instanceof this ? e : new this(e);
        }
        static concat(e, ...t) {
          let r = new this(e);
          return t.forEach((e) => r.set(e)), r;
        }
        static accessor(e) {
          let t = (this[eA] = this[eA] = { accessors: {} }).accessors,
            r = this.prototype;
          function n(e) {
            let n = eE(e);
            t[n] ||
              (!(function (e, t) {
                let r = W.toCamelCase(" " + t);
                ["get", "set", "has"].forEach((n) => {
                  Object.defineProperty(e, n + r, {
                    value: function (e, r, i) {
                      return this[n].call(this, t, e, r, i);
                    },
                    configurable: !0,
                  });
                });
              })(r, e),
              (t[n] = !0));
          }
          return W.isArray(e) ? e.forEach(n) : n(e), this;
        }
      }
      function eT(e, t) {
        let r = this || ev,
          n = t || r,
          i = eP.from(n.headers),
          o = n.data;
        return (
          W.forEach(e, function (e) {
            o = e.call(r, o, i.normalize(), t ? t.status : void 0);
          }),
          i.normalize(),
          o
        );
      }
      function eC(e) {
        return !!(e && e.__CANCEL__);
      }
      function eO(e, t, r) {
        V.call(this, null == e ? "canceled" : e, V.ERR_CANCELED, t, r),
          (this.name = "CanceledError");
      }
      function e_(e, t, r) {
        let n = r.config.validateStatus;
        !r.status || !n || n(r.status)
          ? e(r)
          : t(
              new V(
                "Request failed with status code " + r.status,
                [V.ERR_BAD_REQUEST, V.ERR_BAD_RESPONSE][
                  Math.floor(r.status / 100) - 4
                ],
                r.config,
                r.request,
                r
              )
            );
      }
      eP.accessor([
        "Content-Type",
        "Content-Length",
        "Accept",
        "Accept-Encoding",
        "User-Agent",
        "Authorization",
      ]),
        W.reduceDescriptors(eP.prototype, ({ value: e }, t) => {
          let r = t[0].toUpperCase() + t.slice(1);
          return {
            get: () => e,
            set(e) {
              this[r] = e;
            },
          };
        }),
        W.freezeMethods(eP),
        W.inherits(eO, V, { __CANCEL__: !0 });
      let eB = function (e, t) {
          let r;
          let n = Array((e = e || 10)),
            i = Array(e),
            o = 0,
            a = 0;
          return (
            (t = void 0 !== t ? t : 1e3),
            function (s) {
              let l = Date.now(),
                u = i[a];
              r || (r = l), (n[o] = s), (i[o] = l);
              let c = a,
                d = 0;
              for (; c !== o; ) (d += n[c++]), (c %= e);
              if (((o = (o + 1) % e) === a && (a = (a + 1) % e), l - r < t))
                return;
              let f = u && l - u;
              return f ? Math.round((1e3 * d) / f) : void 0;
            }
          );
        },
        eR = function (e, t) {
          let r,
            n,
            i = 0,
            o = 1e3 / t,
            a = (t, o = Date.now()) => {
              (i = o),
                (r = null),
                n && (clearTimeout(n), (n = null)),
                e.apply(null, t);
            };
          return [
            (...e) => {
              let t = Date.now(),
                s = t - i;
              s >= o
                ? a(e, t)
                : ((r = e),
                  n ||
                    (n = setTimeout(() => {
                      (n = null), a(r);
                    }, o - s)));
            },
            () => r && a(r),
          ];
        },
        eN = (e, t, r = 3) => {
          let n = 0,
            i = eB(50, 250);
          return eR((r) => {
            let o = r.loaded,
              a = r.lengthComputable ? r.total : void 0,
              s = o - n,
              l = i(s);
            (n = o),
              e({
                loaded: o,
                total: a,
                progress: a ? o / a : void 0,
                bytes: s,
                rate: l || void 0,
                estimated: l && a && o <= a ? (a - o) / l : void 0,
                event: r,
                lengthComputable: null != a,
                [t ? "download" : "upload"]: !0,
              });
          }, r);
        },
        eM = (e, t) => {
          let r = null != e;
          return [
            (n) => t[0]({ lengthComputable: r, total: e, loaded: n }),
            t[1],
          ];
        },
        ej =
          (e) =>
          (...t) =>
            W.asap(() => e(...t)),
        eF = ey.hasStandardBrowserEnv
          ? ((e, t) => (r) => (
              (r = new URL(r, ey.origin)),
              e.protocol === r.protocol &&
                e.host === r.host &&
                (t || e.port === r.port)
            ))(
              new URL(ey.origin),
              ey.navigator && /(msie|trident)/i.test(ey.navigator.userAgent)
            )
          : () => !0,
        eL = ey.hasStandardBrowserEnv
          ? {
              write(e, t, r, n, i, o) {
                let a = [e + "=" + encodeURIComponent(t)];
                W.isNumber(r) && a.push("expires=" + new Date(r).toGMTString()),
                  W.isString(n) && a.push("path=" + n),
                  W.isString(i) && a.push("domain=" + i),
                  !0 === o && a.push("secure"),
                  (document.cookie = a.join("; "));
              },
              read(e) {
                let t = document.cookie.match(
                  RegExp("(^|;\\s*)(" + e + ")=([^;]*)")
                );
                return t ? decodeURIComponent(t[3]) : null;
              },
              remove(e) {
                this.write(e, "", Date.now() - 864e5);
              },
            }
          : { write() {}, read: () => null, remove() {} };
      function eD(e, t, r) {
        let n = !/^([a-z][a-z\d+\-.]*:)?\/\//i.test(t);
        return e && (n || !1 == r)
          ? t
            ? e.replace(/\/?\/$/, "") + "/" + t.replace(/^\/+/, "")
            : e
          : t;
      }
      let eU = (e) => (e instanceof eP ? { ...e } : e);
      function eH(e, t) {
        t = t || {};
        let r = {};
        function n(e, t, r, n) {
          return W.isPlainObject(e) && W.isPlainObject(t)
            ? W.merge.call({ caseless: n }, e, t)
            : W.isPlainObject(t)
            ? W.merge({}, t)
            : W.isArray(t)
            ? t.slice()
            : t;
        }
        function i(e, t, r, i) {
          return W.isUndefined(t)
            ? W.isUndefined(e)
              ? void 0
              : n(void 0, e, r, i)
            : n(e, t, r, i);
        }
        function o(e, t) {
          if (!W.isUndefined(t)) return n(void 0, t);
        }
        function a(e, t) {
          return W.isUndefined(t)
            ? W.isUndefined(e)
              ? void 0
              : n(void 0, e)
            : n(void 0, t);
        }
        function s(r, i, o) {
          return o in t ? n(r, i) : o in e ? n(void 0, r) : void 0;
        }
        let l = {
          url: o,
          method: o,
          data: o,
          baseURL: a,
          transformRequest: a,
          transformResponse: a,
          paramsSerializer: a,
          timeout: a,
          timeoutMessage: a,
          withCredentials: a,
          withXSRFToken: a,
          adapter: a,
          responseType: a,
          xsrfCookieName: a,
          xsrfHeaderName: a,
          onUploadProgress: a,
          onDownloadProgress: a,
          decompress: a,
          maxContentLength: a,
          maxBodyLength: a,
          beforeRedirect: a,
          transport: a,
          httpAgent: a,
          httpsAgent: a,
          cancelToken: a,
          socketPath: a,
          responseEncoding: a,
          validateStatus: s,
          headers: (e, t, r) => i(eU(e), eU(t), r, !0),
        };
        return (
          W.forEach(Object.keys(Object.assign({}, e, t)), function (n) {
            let o = l[n] || i,
              a = o(e[n], t[n], n);
            (W.isUndefined(a) && o !== s) || (r[n] = a);
          }),
          r
        );
      }
      let e$ = (e) => {
          let t;
          let r = eH({}, e),
            {
              data: n,
              withXSRFToken: i,
              xsrfHeaderName: o,
              xsrfCookieName: a,
              headers: s,
              auth: l,
            } = r;
          if (
            ((r.headers = s = eP.from(s)),
            (r.url = ea(
              eD(r.baseURL, r.url, r.allowAbsoluteUrls),
              e.params,
              e.paramsSerializer
            )),
            l &&
              s.set(
                "Authorization",
                "Basic " +
                  btoa(
                    (l.username || "") +
                      ":" +
                      (l.password
                        ? unescape(encodeURIComponent(l.password))
                        : "")
                  )
              ),
            W.isFormData(n))
          ) {
            if (ey.hasStandardBrowserEnv || ey.hasStandardBrowserWebWorkerEnv)
              s.setContentType(void 0);
            else if (!1 !== (t = s.getContentType())) {
              let [e, ...r] = t
                ? t
                    .split(";")
                    .map((e) => e.trim())
                    .filter(Boolean)
                : [];
              s.setContentType([e || "multipart/form-data", ...r].join("; "));
            }
          }
          if (
            ey.hasStandardBrowserEnv &&
            (i && W.isFunction(i) && (i = i(r)), i || (!1 !== i && eF(r.url)))
          ) {
            let e = o && a && eL.read(a);
            e && s.set(o, e);
          }
          return r;
        },
        ez =
          "undefined" != typeof XMLHttpRequest &&
          function (e) {
            return new Promise(function (t, r) {
              let n, i, o, a, s;
              let l = e$(e),
                u = l.data,
                c = eP.from(l.headers).normalize(),
                {
                  responseType: d,
                  onUploadProgress: f,
                  onDownloadProgress: h,
                } = l;
              function p() {
                a && a(),
                  s && s(),
                  l.cancelToken && l.cancelToken.unsubscribe(n),
                  l.signal && l.signal.removeEventListener("abort", n);
              }
              let m = new XMLHttpRequest();
              function g() {
                if (!m) return;
                let n = eP.from(
                  "getAllResponseHeaders" in m && m.getAllResponseHeaders()
                );
                e_(
                  function (e) {
                    t(e), p();
                  },
                  function (e) {
                    r(e), p();
                  },
                  {
                    data:
                      d && "text" !== d && "json" !== d
                        ? m.response
                        : m.responseText,
                    status: m.status,
                    statusText: m.statusText,
                    headers: n,
                    config: e,
                    request: m,
                  }
                ),
                  (m = null);
              }
              m.open(l.method.toUpperCase(), l.url, !0),
                (m.timeout = l.timeout),
                "onloadend" in m
                  ? (m.onloadend = g)
                  : (m.onreadystatechange = function () {
                      m &&
                        4 === m.readyState &&
                        (0 !== m.status ||
                          (m.responseURL &&
                            0 === m.responseURL.indexOf("file:"))) &&
                        setTimeout(g);
                    }),
                (m.onabort = function () {
                  m &&
                    (r(new V("Request aborted", V.ECONNABORTED, e, m)),
                    (m = null));
                }),
                (m.onerror = function () {
                  r(new V("Network Error", V.ERR_NETWORK, e, m)), (m = null);
                }),
                (m.ontimeout = function () {
                  let t = l.timeout
                      ? "timeout of " + l.timeout + "ms exceeded"
                      : "timeout exceeded",
                    n = l.transitional || el;
                  l.timeoutErrorMessage && (t = l.timeoutErrorMessage),
                    r(
                      new V(
                        t,
                        n.clarifyTimeoutError ? V.ETIMEDOUT : V.ECONNABORTED,
                        e,
                        m
                      )
                    ),
                    (m = null);
                }),
                void 0 === u && c.setContentType(null),
                "setRequestHeader" in m &&
                  W.forEach(c.toJSON(), function (e, t) {
                    m.setRequestHeader(t, e);
                  }),
                W.isUndefined(l.withCredentials) ||
                  (m.withCredentials = !!l.withCredentials),
                d && "json" !== d && (m.responseType = l.responseType),
                h && (([o, s] = eN(h, !0)), m.addEventListener("progress", o)),
                f &&
                  m.upload &&
                  (([i, a] = eN(f)),
                  m.upload.addEventListener("progress", i),
                  m.upload.addEventListener("loadend", a)),
                (l.cancelToken || l.signal) &&
                  ((n = (t) => {
                    m &&
                      (r(!t || t.type ? new eO(null, e, m) : t),
                      m.abort(),
                      (m = null));
                  }),
                  l.cancelToken && l.cancelToken.subscribe(n),
                  l.signal &&
                    (l.signal.aborted
                      ? n()
                      : l.signal.addEventListener("abort", n)));
              let y = (function (e) {
                let t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
                return (t && t[1]) || "";
              })(l.url);
              if (y && -1 === ey.protocols.indexOf(y)) {
                r(
                  new V("Unsupported protocol " + y + ":", V.ERR_BAD_REQUEST, e)
                );
                return;
              }
              m.send(u || null);
            });
          },
        eG = (e, t) => {
          let { length: r } = (e = e ? e.filter(Boolean) : []);
          if (t || r) {
            let r,
              n = new AbortController(),
              i = function (e) {
                if (!r) {
                  (r = !0), a();
                  let t = e instanceof Error ? e : this.reason;
                  n.abort(
                    t instanceof V
                      ? t
                      : new eO(t instanceof Error ? t.message : t)
                  );
                }
              },
              o =
                t &&
                setTimeout(() => {
                  (o = null),
                    i(new V(`timeout ${t} of ms exceeded`, V.ETIMEDOUT));
                }, t),
              a = () => {
                e &&
                  (o && clearTimeout(o),
                  (o = null),
                  e.forEach((e) => {
                    e.unsubscribe
                      ? e.unsubscribe(i)
                      : e.removeEventListener("abort", i);
                  }),
                  (e = null));
              };
            e.forEach((e) => e.addEventListener("abort", i));
            let { signal: s } = n;
            return (s.unsubscribe = () => W.asap(a)), s;
          }
        },
        eq = function* (e, t) {
          let r,
            n = e.byteLength;
          if (!t || n < t) {
            yield e;
            return;
          }
          let i = 0;
          for (; i < n; ) (r = i + t), yield e.slice(i, r), (i = r);
        },
        eW = async function* (e, t) {
          for await (let r of eV(e)) yield* eq(r, t);
        },
        eV = async function* (e) {
          if (e[Symbol.asyncIterator]) {
            yield* e;
            return;
          }
          let t = e.getReader();
          try {
            for (;;) {
              let { done: e, value: r } = await t.read();
              if (e) break;
              yield r;
            }
          } finally {
            await t.cancel();
          }
        },
        eZ = (e, t, r, n) => {
          let i;
          let o = eW(e, t),
            a = 0,
            s = (e) => {
              !i && ((i = !0), n && n(e));
            };
          return new ReadableStream(
            {
              async pull(e) {
                try {
                  let { done: t, value: n } = await o.next();
                  if (t) {
                    s(), e.close();
                    return;
                  }
                  let i = n.byteLength;
                  if (r) {
                    let e = (a += i);
                    r(e);
                  }
                  e.enqueue(new Uint8Array(n));
                } catch (e) {
                  throw (s(e), e);
                }
              },
              cancel: (e) => (s(e), o.return()),
            },
            { highWaterMark: 2 }
          );
        },
        eK =
          "function" == typeof fetch &&
          "function" == typeof Request &&
          "function" == typeof Response,
        eQ = eK && "function" == typeof ReadableStream,
        eJ =
          eK &&
          ("function" == typeof TextEncoder
            ? ((n = new TextEncoder()), (e) => n.encode(e))
            : async (e) => new Uint8Array(await new Response(e).arrayBuffer())),
        eY = (e, ...t) => {
          try {
            return !!e(...t);
          } catch (e) {
            return !1;
          }
        },
        eX =
          eQ &&
          eY(() => {
            let e = !1,
              t = new Request(ey.origin, {
                body: new ReadableStream(),
                method: "POST",
                get duplex() {
                  return (e = !0), "half";
                },
              }).headers.has("Content-Type");
            return e && !t;
          }),
        e0 = eQ && eY(() => W.isReadableStream(new Response("").body)),
        e1 = { stream: e0 && ((e) => e.body) };
      eK &&
        ((a = new Response()),
        ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((e) => {
          e1[e] ||
            (e1[e] = W.isFunction(a[e])
              ? (t) => t[e]()
              : (t, r) => {
                  throw new V(
                    `Response type '${e}' is not supported`,
                    V.ERR_NOT_SUPPORT,
                    r
                  );
                });
        }));
      let e2 = async (e) => {
          if (null == e) return 0;
          if (W.isBlob(e)) return e.size;
          if (W.isSpecCompliantForm(e)) {
            let t = new Request(ey.origin, { method: "POST", body: e });
            return (await t.arrayBuffer()).byteLength;
          }
          return W.isArrayBufferView(e) || W.isArrayBuffer(e)
            ? e.byteLength
            : (W.isURLSearchParams(e) && (e += ""), W.isString(e))
            ? (await eJ(e)).byteLength
            : void 0;
        },
        e6 = async (e, t) => {
          let r = W.toFiniteNumber(e.getContentLength());
          return null == r ? e2(t) : r;
        },
        e5 = {
          http: null,
          xhr: ez,
          fetch:
            eK &&
            (async (e) => {
              let t,
                r,
                {
                  url: n,
                  method: i,
                  data: o,
                  signal: a,
                  cancelToken: s,
                  timeout: l,
                  onDownloadProgress: u,
                  onUploadProgress: c,
                  responseType: d,
                  headers: f,
                  withCredentials: h = "same-origin",
                  fetchOptions: p,
                } = e$(e);
              d = d ? (d + "").toLowerCase() : "text";
              let m = eG([a, s && s.toAbortSignal()], l),
                g =
                  m &&
                  m.unsubscribe &&
                  (() => {
                    m.unsubscribe();
                  });
              try {
                if (
                  c &&
                  eX &&
                  "get" !== i &&
                  "head" !== i &&
                  0 !== (r = await e6(f, o))
                ) {
                  let e,
                    t = new Request(n, {
                      method: "POST",
                      body: o,
                      duplex: "half",
                    });
                  if (
                    (W.isFormData(o) &&
                      (e = t.headers.get("content-type")) &&
                      f.setContentType(e),
                    t.body)
                  ) {
                    let [e, n] = eM(r, eN(ej(c)));
                    o = eZ(t.body, 65536, e, n);
                  }
                }
                W.isString(h) || (h = h ? "include" : "omit");
                let a = "credentials" in Request.prototype;
                t = new Request(n, {
                  ...p,
                  signal: m,
                  method: i.toUpperCase(),
                  headers: f.normalize().toJSON(),
                  body: o,
                  duplex: "half",
                  credentials: a ? h : void 0,
                });
                let s = await fetch(t),
                  l = e0 && ("stream" === d || "response" === d);
                if (e0 && (u || (l && g))) {
                  let e = {};
                  ["status", "statusText", "headers"].forEach((t) => {
                    e[t] = s[t];
                  });
                  let t = W.toFiniteNumber(s.headers.get("content-length")),
                    [r, n] = (u && eM(t, eN(ej(u), !0))) || [];
                  s = new Response(
                    eZ(s.body, 65536, r, () => {
                      n && n(), g && g();
                    }),
                    e
                  );
                }
                d = d || "text";
                let y = await e1[W.findKey(e1, d) || "text"](s, e);
                return (
                  !l && g && g(),
                  await new Promise((r, n) => {
                    e_(r, n, {
                      data: y,
                      headers: eP.from(s.headers),
                      status: s.status,
                      statusText: s.statusText,
                      config: e,
                      request: t,
                    });
                  })
                );
              } catch (r) {
                if (
                  (g && g(),
                  r &&
                    "TypeError" === r.name &&
                    /Load failed|fetch/i.test(r.message))
                )
                  throw Object.assign(
                    new V("Network Error", V.ERR_NETWORK, e, t),
                    { cause: r.cause || r }
                  );
                throw V.from(r, r && r.code, e, t);
              }
            }),
        };
      W.forEach(e5, (e, t) => {
        if (e) {
          try {
            Object.defineProperty(e, "name", { value: t });
          } catch (e) {}
          Object.defineProperty(e, "adapterName", { value: t });
        }
      });
      let e3 = (e) => `- ${e}`,
        e8 = (e) => W.isFunction(e) || null === e || !1 === e,
        e4 = {
          getAdapter: (e) => {
            let t, r;
            let { length: n } = (e = W.isArray(e) ? e : [e]),
              i = {};
            for (let o = 0; o < n; o++) {
              let n;
              if (
                ((r = t = e[o]),
                !e8(t) && void 0 === (r = e5[(n = String(t)).toLowerCase()]))
              )
                throw new V(`Unknown adapter '${n}'`);
              if (r) break;
              i[n || "#" + o] = r;
            }
            if (!r) {
              let e = Object.entries(i).map(
                ([e, t]) =>
                  `adapter ${e} ` +
                  (!1 === t
                    ? "is not supported by the environment"
                    : "is not available in the build")
              );
              throw new V(
                "There is no suitable adapter to dispatch the request " +
                  (n
                    ? e.length > 1
                      ? "since :\n" + e.map(e3).join("\n")
                      : " " + e3(e[0])
                    : "as no adapter specified"),
                "ERR_NOT_SUPPORT"
              );
            }
            return r;
          },
        };
      function e9(e) {
        if (
          (e.cancelToken && e.cancelToken.throwIfRequested(),
          e.signal && e.signal.aborted)
        )
          throw new eO(null, e);
      }
      function e7(e) {
        return (
          e9(e),
          (e.headers = eP.from(e.headers)),
          (e.data = eT.call(e, e.transformRequest)),
          -1 !== ["post", "put", "patch"].indexOf(e.method) &&
            e.headers.setContentType("application/x-www-form-urlencoded", !1),
          e4
            .getAdapter(e.adapter || ev.adapter)(e)
            .then(
              function (t) {
                return (
                  e9(e),
                  (t.data = eT.call(e, e.transformResponse, t)),
                  (t.headers = eP.from(t.headers)),
                  t
                );
              },
              function (t) {
                return (
                  !eC(t) &&
                    (e9(e),
                    t &&
                      t.response &&
                      ((t.response.data = eT.call(
                        e,
                        e.transformResponse,
                        t.response
                      )),
                      (t.response.headers = eP.from(t.response.headers)))),
                  Promise.reject(t)
                );
              }
            )
        );
      }
      let te = "1.9.0",
        tt = {};
      ["object", "boolean", "number", "function", "string", "symbol"].forEach(
        (e, t) => {
          tt[e] = function (r) {
            return typeof r === e || "a" + (t < 1 ? "n " : " ") + e;
          };
        }
      );
      let tr = {};
      (tt.transitional = function (e, t, r) {
        function n(e, t) {
          return (
            "[Axios v" +
            te +
            "] Transitional option '" +
            e +
            "'" +
            t +
            (r ? ". " + r : "")
          );
        }
        return (r, i, o) => {
          if (!1 === e)
            throw new V(
              n(i, " has been removed" + (t ? " in " + t : "")),
              V.ERR_DEPRECATED
            );
          return (
            t &&
              !tr[i] &&
              ((tr[i] = !0),
              console.warn(
                n(
                  i,
                  " has been deprecated since v" +
                    t +
                    " and will be removed in the near future"
                )
              )),
            !e || e(r, i, o)
          );
        };
      }),
        (tt.spelling = function (e) {
          return (t, r) => (
            console.warn(`${r} is likely a misspelling of ${e}`), !0
          );
        });
      let tn = {
          assertOptions: function (e, t, r) {
            if ("object" != typeof e)
              throw new V("options must be an object", V.ERR_BAD_OPTION_VALUE);
            let n = Object.keys(e),
              i = n.length;
            for (; i-- > 0; ) {
              let o = n[i],
                a = t[o];
              if (a) {
                let t = e[o],
                  r = void 0 === t || a(t, o, e);
                if (!0 !== r)
                  throw new V(
                    "option " + o + " must be " + r,
                    V.ERR_BAD_OPTION_VALUE
                  );
                continue;
              }
              if (!0 !== r)
                throw new V("Unknown option " + o, V.ERR_BAD_OPTION);
            }
          },
          validators: tt,
        },
        ti = tn.validators;
      class to {
        constructor(e) {
          (this.defaults = e || {}),
            (this.interceptors = { request: new es(), response: new es() });
        }
        async request(e, t) {
          try {
            return await this._request(e, t);
          } catch (e) {
            if (e instanceof Error) {
              let t = {};
              Error.captureStackTrace
                ? Error.captureStackTrace(t)
                : (t = Error());
              let r = t.stack ? t.stack.replace(/^.+\n/, "") : "";
              try {
                e.stack
                  ? r &&
                    !String(e.stack).endsWith(r.replace(/^.+\n.+\n/, "")) &&
                    (e.stack += "\n" + r)
                  : (e.stack = r);
              } catch (e) {}
            }
            throw e;
          }
        }
        _request(e, t) {
          let r, n;
          "string" == typeof e ? ((t = t || {}).url = e) : (t = e || {});
          let {
            transitional: i,
            paramsSerializer: o,
            headers: a,
          } = (t = eH(this.defaults, t));
          void 0 !== i &&
            tn.assertOptions(
              i,
              {
                silentJSONParsing: ti.transitional(ti.boolean),
                forcedJSONParsing: ti.transitional(ti.boolean),
                clarifyTimeoutError: ti.transitional(ti.boolean),
              },
              !1
            ),
            null != o &&
              (W.isFunction(o)
                ? (t.paramsSerializer = { serialize: o })
                : tn.assertOptions(
                    o,
                    { encode: ti.function, serialize: ti.function },
                    !0
                  )),
            void 0 !== t.allowAbsoluteUrls ||
              (void 0 !== this.defaults.allowAbsoluteUrls
                ? (t.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls)
                : (t.allowAbsoluteUrls = !0)),
            tn.assertOptions(
              t,
              {
                baseUrl: ti.spelling("baseURL"),
                withXsrfToken: ti.spelling("withXSRFToken"),
              },
              !0
            ),
            (t.method = (
              t.method ||
              this.defaults.method ||
              "get"
            ).toLowerCase());
          let s = a && W.merge(a.common, a[t.method]);
          a &&
            W.forEach(
              ["delete", "get", "head", "post", "put", "patch", "common"],
              (e) => {
                delete a[e];
              }
            ),
            (t.headers = eP.concat(s, a));
          let l = [],
            u = !0;
          this.interceptors.request.forEach(function (e) {
            ("function" != typeof e.runWhen || !1 !== e.runWhen(t)) &&
              ((u = u && e.synchronous), l.unshift(e.fulfilled, e.rejected));
          });
          let c = [];
          this.interceptors.response.forEach(function (e) {
            c.push(e.fulfilled, e.rejected);
          });
          let d = 0;
          if (!u) {
            let e = [e7.bind(this), void 0];
            for (
              e.unshift.apply(e, l),
                e.push.apply(e, c),
                n = e.length,
                r = Promise.resolve(t);
              d < n;

            )
              r = r.then(e[d++], e[d++]);
            return r;
          }
          n = l.length;
          let f = t;
          for (d = 0; d < n; ) {
            let e = l[d++],
              t = l[d++];
            try {
              f = e(f);
            } catch (e) {
              t.call(this, e);
              break;
            }
          }
          try {
            r = e7.call(this, f);
          } catch (e) {
            return Promise.reject(e);
          }
          for (d = 0, n = c.length; d < n; ) r = r.then(c[d++], c[d++]);
          return r;
        }
        getUri(e) {
          return ea(
            eD((e = eH(this.defaults, e)).baseURL, e.url, e.allowAbsoluteUrls),
            e.params,
            e.paramsSerializer
          );
        }
      }
      W.forEach(["delete", "get", "head", "options"], function (e) {
        to.prototype[e] = function (t, r) {
          return this.request(
            eH(r || {}, { method: e, url: t, data: (r || {}).data })
          );
        };
      }),
        W.forEach(["post", "put", "patch"], function (e) {
          function t(t) {
            return function (r, n, i) {
              return this.request(
                eH(i || {}, {
                  method: e,
                  headers: t ? { "Content-Type": "multipart/form-data" } : {},
                  url: r,
                  data: n,
                })
              );
            };
          }
          (to.prototype[e] = t()), (to.prototype[e + "Form"] = t(!0));
        });
      class ta {
        constructor(e) {
          let t;
          if ("function" != typeof e)
            throw TypeError("executor must be a function.");
          this.promise = new Promise(function (e) {
            t = e;
          });
          let r = this;
          this.promise.then((e) => {
            if (!r._listeners) return;
            let t = r._listeners.length;
            for (; t-- > 0; ) r._listeners[t](e);
            r._listeners = null;
          }),
            (this.promise.then = (e) => {
              let t;
              let n = new Promise((e) => {
                r.subscribe(e), (t = e);
              }).then(e);
              return (
                (n.cancel = function () {
                  r.unsubscribe(t);
                }),
                n
              );
            }),
            e(function (e, n, i) {
              r.reason || ((r.reason = new eO(e, n, i)), t(r.reason));
            });
        }
        throwIfRequested() {
          if (this.reason) throw this.reason;
        }
        subscribe(e) {
          if (this.reason) {
            e(this.reason);
            return;
          }
          this._listeners ? this._listeners.push(e) : (this._listeners = [e]);
        }
        unsubscribe(e) {
          if (!this._listeners) return;
          let t = this._listeners.indexOf(e);
          -1 !== t && this._listeners.splice(t, 1);
        }
        toAbortSignal() {
          let e = new AbortController(),
            t = (t) => {
              e.abort(t);
            };
          return (
            this.subscribe(t),
            (e.signal.unsubscribe = () => this.unsubscribe(t)),
            e.signal
          );
        }
        static source() {
          let e;
          return {
            token: new ta(function (t) {
              e = t;
            }),
            cancel: e,
          };
        }
      }
      let ts = {
        Continue: 100,
        SwitchingProtocols: 101,
        Processing: 102,
        EarlyHints: 103,
        Ok: 200,
        Created: 201,
        Accepted: 202,
        NonAuthoritativeInformation: 203,
        NoContent: 204,
        ResetContent: 205,
        PartialContent: 206,
        MultiStatus: 207,
        AlreadyReported: 208,
        ImUsed: 226,
        MultipleChoices: 300,
        MovedPermanently: 301,
        Found: 302,
        SeeOther: 303,
        NotModified: 304,
        UseProxy: 305,
        Unused: 306,
        TemporaryRedirect: 307,
        PermanentRedirect: 308,
        BadRequest: 400,
        Unauthorized: 401,
        PaymentRequired: 402,
        Forbidden: 403,
        NotFound: 404,
        MethodNotAllowed: 405,
        NotAcceptable: 406,
        ProxyAuthenticationRequired: 407,
        RequestTimeout: 408,
        Conflict: 409,
        Gone: 410,
        LengthRequired: 411,
        PreconditionFailed: 412,
        PayloadTooLarge: 413,
        UriTooLong: 414,
        UnsupportedMediaType: 415,
        RangeNotSatisfiable: 416,
        ExpectationFailed: 417,
        ImATeapot: 418,
        MisdirectedRequest: 421,
        UnprocessableEntity: 422,
        Locked: 423,
        FailedDependency: 424,
        TooEarly: 425,
        UpgradeRequired: 426,
        PreconditionRequired: 428,
        TooManyRequests: 429,
        RequestHeaderFieldsTooLarge: 431,
        UnavailableForLegalReasons: 451,
        InternalServerError: 500,
        NotImplemented: 501,
        BadGateway: 502,
        ServiceUnavailable: 503,
        GatewayTimeout: 504,
        HttpVersionNotSupported: 505,
        VariantAlsoNegotiates: 506,
        InsufficientStorage: 507,
        LoopDetected: 508,
        NotExtended: 510,
        NetworkAuthenticationRequired: 511,
      };
      Object.entries(ts).forEach(([e, t]) => {
        ts[t] = e;
      });
      let tl = (function e(t) {
        let r = new to(t),
          n = l(to.prototype.request, r);
        return (
          W.extend(n, to.prototype, r, { allOwnKeys: !0 }),
          W.extend(n, r, null, { allOwnKeys: !0 }),
          (n.create = function (r) {
            return e(eH(t, r));
          }),
          n
        );
      })(ev);
      (tl.Axios = to),
        (tl.CanceledError = eO),
        (tl.CancelToken = ta),
        (tl.isCancel = eC),
        (tl.VERSION = te),
        (tl.toFormData = et),
        (tl.AxiosError = V),
        (tl.Cancel = tl.CanceledError),
        (tl.all = function (e) {
          return Promise.all(e);
        }),
        (tl.spread = function (e) {
          return function (t) {
            return e.apply(null, t);
          };
        }),
        (tl.isAxiosError = function (e) {
          return W.isObject(e) && !0 === e.isAxiosError;
        }),
        (tl.mergeConfig = eH),
        (tl.AxiosHeaders = eP),
        (tl.formToJSON = (e) => eb(W.isHTMLForm(e) ? new FormData(e) : e)),
        (tl.getAdapter = e4.getAdapter),
        (tl.HttpStatusCode = ts),
        (tl.default = tl);
      let tu = tl;
    },
    43463: (e, t, r) => {
      "use strict";
      function n() {
        for (var e, t, r = 0, n = "", i = arguments.length; r < i; r++)
          (e = arguments[r]) &&
            (t = (function e(t) {
              var r,
                n,
                i = "";
              if ("string" == typeof t || "number" == typeof t) i += t;
              else if ("object" == typeof t) {
                if (Array.isArray(t)) {
                  var o = t.length;
                  for (r = 0; r < o; r++)
                    t[r] && (n = e(t[r])) && (i && (i += " "), (i += n));
                } else for (n in t) t[n] && (i && (i += " "), (i += n));
              }
              return i;
            })(e)) &&
            (n && (n += " "), (n += t));
        return n;
      }
      r.d(t, { $: () => n, A: () => i });
      let i = n;
    },
    40280: (e, t, r) => {
      "use strict";
      r.d(t, { So: () => S });
      var n = r(44871),
        i = r(96790),
        o = r(86865);
      let a = [],
        s = [],
        l = [],
        u = BigInt(0),
        c = BigInt(1),
        d = BigInt(2),
        f = BigInt(7),
        h = BigInt(256),
        p = BigInt(113);
      for (let e = 0, t = c, r = 1, n = 0; e < 24; e++) {
        ([r, n] = [n, (2 * r + 3 * n) % 5]),
          a.push(2 * (5 * n + r)),
          s.push((((e + 1) * (e + 2)) / 2) % 64);
        let i = u;
        for (let e = 0; e < 7; e++)
          (t = ((t << c) ^ ((t >> f) * p)) % h) & d &&
            (i ^= c << ((c << BigInt(e)) - c));
        l.push(i);
      }
      let [m, g] = (0, i.lD)(l, !0),
        y = (e, t, r) => (r > 32 ? (0, i.WM)(e, t, r) : (0, i.P5)(e, t, r)),
        b = (e, t, r) => (r > 32 ? (0, i.im)(e, t, r) : (0, i.B4)(e, t, r));
      class v extends o.Vw {
        constructor(e, t, r, i = !1, a = 24) {
          if (
            (super(),
            (this.blockLen = e),
            (this.suffix = t),
            (this.outputLen = r),
            (this.enableXOF = i),
            (this.rounds = a),
            (this.pos = 0),
            (this.posOut = 0),
            (this.finished = !1),
            (this.destroyed = !1),
            (0, n.ai)(r),
            0 >= this.blockLen || this.blockLen >= 200)
          )
            throw Error("Sha3 supports only keccak-f1600 function");
          (this.state = new Uint8Array(200)),
            (this.state32 = (0, o.DH)(this.state));
        }
        keccak() {
          o.qv || (0, o.Fc)(this.state32),
            (function (e, t = 24) {
              let r = new Uint32Array(10);
              for (let n = 24 - t; n < 24; n++) {
                for (let t = 0; t < 10; t++)
                  r[t] = e[t] ^ e[t + 10] ^ e[t + 20] ^ e[t + 30] ^ e[t + 40];
                for (let t = 0; t < 10; t += 2) {
                  let n = (t + 8) % 10,
                    i = (t + 2) % 10,
                    o = r[i],
                    a = r[i + 1],
                    s = y(o, a, 1) ^ r[n],
                    l = b(o, a, 1) ^ r[n + 1];
                  for (let r = 0; r < 50; r += 10)
                    (e[t + r] ^= s), (e[t + r + 1] ^= l);
                }
                let t = e[2],
                  i = e[3];
                for (let r = 0; r < 24; r++) {
                  let n = s[r],
                    o = y(t, i, n),
                    l = b(t, i, n),
                    u = a[r];
                  (t = e[u]), (i = e[u + 1]), (e[u] = o), (e[u + 1] = l);
                }
                for (let t = 0; t < 50; t += 10) {
                  for (let n = 0; n < 10; n++) r[n] = e[t + n];
                  for (let n = 0; n < 10; n++)
                    e[t + n] ^= ~r[(n + 2) % 10] & r[(n + 4) % 10];
                }
                (e[0] ^= m[n]), (e[1] ^= g[n]);
              }
              r.fill(0);
            })(this.state32, this.rounds),
            o.qv || (0, o.Fc)(this.state32),
            (this.posOut = 0),
            (this.pos = 0);
        }
        update(e) {
          (0, n.t2)(this);
          let { blockLen: t, state: r } = this,
            i = (e = (0, o.ZJ)(e)).length;
          for (let n = 0; n < i; ) {
            let o = Math.min(t - this.pos, i - n);
            for (let t = 0; t < o; t++) r[this.pos++] ^= e[n++];
            this.pos === t && this.keccak();
          }
          return this;
        }
        finish() {
          if (this.finished) return;
          this.finished = !0;
          let { state: e, suffix: t, pos: r, blockLen: n } = this;
          (e[r] ^= t),
            (128 & t) != 0 && r === n - 1 && this.keccak(),
            (e[n - 1] ^= 128),
            this.keccak();
        }
        writeInto(e) {
          (0, n.t2)(this, !1), (0, n.ee)(e), this.finish();
          let t = this.state,
            { blockLen: r } = this;
          for (let n = 0, i = e.length; n < i; ) {
            this.posOut >= r && this.keccak();
            let o = Math.min(r - this.posOut, i - n);
            e.set(t.subarray(this.posOut, this.posOut + o), n),
              (this.posOut += o),
              (n += o);
          }
          return e;
        }
        xofInto(e) {
          if (!this.enableXOF)
            throw Error("XOF is not possible for this instance");
          return this.writeInto(e);
        }
        xof(e) {
          return (0, n.ai)(e), this.xofInto(new Uint8Array(e));
        }
        digestInto(e) {
          if (((0, n.CG)(e, this), this.finished))
            throw Error("digest() was already called");
          return this.writeInto(e), this.destroy(), e;
        }
        digest() {
          return this.digestInto(new Uint8Array(this.outputLen));
        }
        destroy() {
          (this.destroyed = !0), this.state.fill(0);
        }
        _cloneInto(e) {
          let {
            blockLen: t,
            suffix: r,
            outputLen: n,
            rounds: i,
            enableXOF: o,
          } = this;
          return (
            e || (e = new v(t, r, n, o, i)),
            e.state32.set(this.state32),
            (e.pos = this.pos),
            (e.posOut = this.posOut),
            (e.finished = this.finished),
            (e.rounds = i),
            (e.suffix = r),
            (e.outputLen = n),
            (e.enableXOF = o),
            (e.destroyed = this.destroyed),
            e
          );
        }
      }
      let w = (e, t, r) => (0, o.ld)(() => new v(t, e, r)),
        x = w(1, 144, 28),
        A = w(1, 136, 32),
        E = w(1, 104, 48),
        k = w(1, 72, 64);
      var I = r(10896);
      (0, I.RS)(x);
      let S = (() => {
        let e = (0, I.RS)(A);
        return (e.create = A.create), e;
      })();
      (0, I.RS)(E), (0, I.RS)(k);
    },
    10896: (e, t, r) => {
      "use strict";
      r.d(t, {
        AE: () => a,
        AI: () => i.AI,
        Id: () => i.Id,
        ND: () => s,
        RS: () => l,
        UI: () => o,
      });
      var n = r(44871),
        i = r(86865);
      n.Ay.bool;
      let o = n.Ay.bytes;
      function a(e) {
        if (!(e instanceof Uint8Array))
          throw TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof e}`);
        return new TextDecoder().decode(e);
      }
      function s(e, t) {
        if (e.length !== t.length) return !1;
        for (let r = 0; r < e.length; r++) if (e[r] !== t[r]) return !1;
        return !0;
      }
      function l(e) {
        return (t) => (n.Ay.bytes(t), e(t));
      }
      (() => {
        let e =
            "object" == typeof globalThis && "crypto" in globalThis
              ? globalThis.crypto
              : void 0,
          t =
            "undefined" != typeof module &&
            "function" == typeof module.require &&
            module.require.bind(module);
        return t && !e ? t("crypto") : void 0;
      })();
    },
    44871: (e, t, r) => {
      "use strict";
      function n(e) {
        if (!Number.isSafeInteger(e) || e < 0)
          throw Error(`positive integer expected, not ${e}`);
      }
      function i(e, ...t) {
        if (
          !(
            e instanceof Uint8Array ||
            (null != e &&
              "object" == typeof e &&
              "Uint8Array" === e.constructor.name)
          )
        )
          throw Error("Uint8Array expected");
        if (t.length > 0 && !t.includes(e.length))
          throw Error(
            `Uint8Array expected of length ${t}, not of length=${e.length}`
          );
      }
      function o(e) {
        if ("function" != typeof e || "function" != typeof e.create)
          throw Error("Hash should be wrapped by utils.wrapConstructor");
        n(e.outputLen), n(e.blockLen);
      }
      function a(e, t = !0) {
        if (e.destroyed) throw Error("Hash instance has been destroyed");
        if (t && e.finished)
          throw Error("Hash#digest() has already been called");
      }
      function s(e, t) {
        i(e);
        let r = t.outputLen;
        if (e.length < r)
          throw Error(
            `digestInto() expects output buffer of length at least ${r}`
          );
      }
      r.d(t, {
        Ay: () => l,
        CG: () => s,
        ai: () => n,
        ee: () => i,
        t2: () => a,
        tW: () => o,
      });
      let l = {
        number: n,
        bool: function (e) {
          if ("boolean" != typeof e) throw Error(`boolean expected, not ${e}`);
        },
        bytes: i,
        hash: o,
        exists: a,
        output: s,
      };
    },
    96790: (e, t, r) => {
      "use strict";
      r.d(t, {
        Ay: () => d,
        B4: () => l,
        P5: () => s,
        WM: () => u,
        im: () => c,
        lD: () => a,
      });
      let n = BigInt(0x100000000 - 1),
        i = BigInt(32);
      function o(e, t = !1) {
        return t
          ? { h: Number(e & n), l: Number((e >> i) & n) }
          : { h: 0 | Number((e >> i) & n), l: 0 | Number(e & n) };
      }
      function a(e, t = !1) {
        let r = new Uint32Array(e.length),
          n = new Uint32Array(e.length);
        for (let i = 0; i < e.length; i++) {
          let { h: a, l: s } = o(e[i], t);
          [r[i], n[i]] = [a, s];
        }
        return [r, n];
      }
      let s = (e, t, r) => (e << r) | (t >>> (32 - r)),
        l = (e, t, r) => (t << r) | (e >>> (32 - r)),
        u = (e, t, r) => (t << (r - 32)) | (e >>> (64 - r)),
        c = (e, t, r) => (e << (r - 32)) | (t >>> (64 - r)),
        d = {
          fromBig: o,
          split: a,
          toBig: (e, t) => (BigInt(e >>> 0) << i) | BigInt(t >>> 0),
          shrSH: (e, t, r) => e >>> r,
          shrSL: (e, t, r) => (e << (32 - r)) | (t >>> r),
          rotrSH: (e, t, r) => (e >>> r) | (t << (32 - r)),
          rotrSL: (e, t, r) => (e << (32 - r)) | (t >>> r),
          rotrBH: (e, t, r) => (e << (64 - r)) | (t >>> (r - 32)),
          rotrBL: (e, t, r) => (e >>> (r - 32)) | (t << (64 - r)),
          rotr32H: (e, t) => t,
          rotr32L: (e, t) => e,
          rotlSH: s,
          rotlSL: l,
          rotlBH: u,
          rotlBL: c,
          add: function (e, t, r, n) {
            let i = (t >>> 0) + (n >>> 0);
            return { h: (e + r + ((i / 0x100000000) | 0)) | 0, l: 0 | i };
          },
          add3L: (e, t, r) => (e >>> 0) + (t >>> 0) + (r >>> 0),
          add3H: (e, t, r, n) => (t + r + n + ((e / 0x100000000) | 0)) | 0,
          add4L: (e, t, r, n) => (e >>> 0) + (t >>> 0) + (r >>> 0) + (n >>> 0),
          add4H: (e, t, r, n, i) =>
            (t + r + n + i + ((e / 0x100000000) | 0)) | 0,
          add5H: (e, t, r, n, i, o) =>
            (t + r + n + i + o + ((e / 0x100000000) | 0)) | 0,
          add5L: (e, t, r, n, i) =>
            (e >>> 0) + (t >>> 0) + (r >>> 0) + (n >>> 0) + (i >>> 0),
        };
    },
    22945: (e, t, r) => {
      "use strict";
      r.d(t, { E: () => n });
      let n =
        "object" == typeof globalThis && "crypto" in globalThis
          ? globalThis.crypto
          : void 0;
    },
    86865: (e, t, r) => {
      "use strict";
      r.d(t, {
        AI: () => f,
        DH: () => o,
        Fc: () => d,
        Id: () => p,
        O8: () => a,
        Ow: () => s,
        Vw: () => m,
        ZJ: () => h,
        aZ: () => l,
        ld: () => b,
        po: () => v,
        qv: () => u,
        tY: () => y,
      });
      var n = r(22945),
        i = r(44871);
      let o = (e) =>
          new Uint32Array(e.buffer, e.byteOffset, Math.floor(e.byteLength / 4)),
        a = (e) => new DataView(e.buffer, e.byteOffset, e.byteLength),
        s = (e, t) => (e << (32 - t)) | (e >>> t),
        l = (e, t) => (e << t) | ((e >>> (32 - t)) >>> 0),
        u = 68 === new Uint8Array(new Uint32Array([0x11223344]).buffer)[0],
        c = (e) =>
          ((e << 24) & 0xff000000) |
          ((e << 8) & 0xff0000) |
          ((e >>> 8) & 65280) |
          ((e >>> 24) & 255);
      function d(e) {
        for (let t = 0; t < e.length; t++) e[t] = c(e[t]);
      }
      function f(e) {
        if ("string" != typeof e)
          throw Error(`utf8ToBytes expected string, got ${typeof e}`);
        return new Uint8Array(new TextEncoder().encode(e));
      }
      function h(e) {
        return "string" == typeof e && (e = f(e)), (0, i.ee)(e), e;
      }
      function p(...e) {
        let t = 0;
        for (let r = 0; r < e.length; r++) {
          let n = e[r];
          (0, i.ee)(n), (t += n.length);
        }
        let r = new Uint8Array(t);
        for (let t = 0, n = 0; t < e.length; t++) {
          let i = e[t];
          r.set(i, n), (n += i.length);
        }
        return r;
      }
      class m {
        clone() {
          return this._cloneInto();
        }
      }
      let g = {}.toString;
      function y(e, t) {
        if (void 0 !== t && "[object Object]" !== g.call(t))
          throw Error("Options should be object or undefined");
        return Object.assign(e, t);
      }
      function b(e) {
        let t = (t) => e().update(h(t)).digest(),
          r = e();
        return (
          (t.outputLen = r.outputLen),
          (t.blockLen = r.blockLen),
          (t.create = () => e()),
          t
        );
      }
      function v(e = 32) {
        if (n.E && "function" == typeof n.E.getRandomValues)
          return n.E.getRandomValues(new Uint8Array(e));
        throw Error("crypto.getRandomValues must be defined");
      }
    },
    29761: (e, t, r) => {
      "use strict";
      r.d(t, { A: () => i, b: () => n });
      var n = r(25778);
      let i = n;
    },
    17539: (e, t, r) => {
      "use strict";
      r.d(t, { n: () => n });
      let n = "data-" + (0, r(42717).I)("framerAppearId");
    },
    5385: (e, t, r) => {
      "use strict";
      function n(e) {
        return (
          null !== e && "object" == typeof e && "function" == typeof e.start
        );
      }
      r.d(t, { N: () => n });
    },
    82043: (e, t, r) => {
      "use strict";
      r.d(t, { p: () => n });
      let n = (e) => Array.isArray(e);
    },
    25683: (e, t, r) => {
      "use strict";
      r.d(t, { N: () => y });
      var n = r(95155),
        i = r(12115),
        o = r(39656),
        a = r(99234),
        s = r(49630);
      class l extends i.Component {
        getSnapshotBeforeUpdate(e) {
          let t = this.props.childRef.current;
          if (t && e.isPresent && !this.props.isPresent) {
            let e = this.props.sizeRef.current;
            (e.height = t.offsetHeight || 0),
              (e.width = t.offsetWidth || 0),
              (e.top = t.offsetTop),
              (e.left = t.offsetLeft);
          }
          return null;
        }
        componentDidUpdate() {}
        render() {
          return this.props.children;
        }
      }
      function u(e) {
        let { children: t, isPresent: r } = e,
          o = (0, i.useId)(),
          a = (0, i.useRef)(null),
          u = (0, i.useRef)({ width: 0, height: 0, top: 0, left: 0 }),
          { nonce: c } = (0, i.useContext)(s.Q);
        return (
          (0, i.useInsertionEffect)(() => {
            let { width: e, height: t, top: n, left: i } = u.current;
            if (r || !a.current || !e || !t) return;
            a.current.dataset.motionPopId = o;
            let s = document.createElement("style");
            return (
              c && (s.nonce = c),
              document.head.appendChild(s),
              s.sheet &&
                s.sheet.insertRule(
                  '\n          [data-motion-pop-id="'
                    .concat(
                      o,
                      '"] {\n            position: absolute !important;\n            width: '
                    )
                    .concat(e, "px !important;\n            height: ")
                    .concat(t, "px !important;\n            top: ")
                    .concat(n, "px !important;\n            left: ")
                    .concat(i, "px !important;\n          }\n        ")
                ),
              () => {
                document.head.removeChild(s);
              }
            );
          }, [r]),
          (0, n.jsx)(l, {
            isPresent: r,
            childRef: a,
            sizeRef: u,
            children: i.cloneElement(t, { ref: a }),
          })
        );
      }
      let c = (e) => {
        let {
            children: t,
            initial: r,
            isPresent: s,
            onExitComplete: l,
            custom: c,
            presenceAffectsLayout: f,
            mode: h,
          } = e,
          p = (0, a.M)(d),
          m = (0, i.useId)(),
          g = (0, i.useCallback)(
            (e) => {
              for (let t of (p.set(e, !0), p.values())) if (!t) return;
              l && l();
            },
            [p, l]
          ),
          y = (0, i.useMemo)(
            () => ({
              id: m,
              initial: r,
              isPresent: s,
              custom: c,
              onExitComplete: g,
              register: (e) => (p.set(e, !1), () => p.delete(e)),
            }),
            f ? [Math.random(), g] : [s, g]
          );
        return (
          (0, i.useMemo)(() => {
            p.forEach((e, t) => p.set(t, !1));
          }, [s]),
          i.useEffect(() => {
            s || p.size || !l || l();
          }, [s]),
          "popLayout" === h &&
            (t = (0, n.jsx)(u, { isPresent: s, children: t })),
          (0, n.jsx)(o.t.Provider, { value: y, children: t })
        );
      };
      function d() {
        return new Map();
      }
      var f = r(64710),
        h = r(45107);
      let p = (e) => e.key || "";
      function m(e) {
        let t = [];
        return (
          i.Children.forEach(e, (e) => {
            (0, i.isValidElement)(e) && t.push(e);
          }),
          t
        );
      }
      var g = r(35403);
      let y = (e) => {
        let {
          children: t,
          exitBeforeEnter: r,
          custom: o,
          initial: s = !0,
          onExitComplete: l,
          presenceAffectsLayout: u = !0,
          mode: d = "sync",
        } = e;
        (0, h.V)(!r, "Replace exitBeforeEnter with mode='wait'");
        let y = (0, i.useMemo)(() => m(t), [t]),
          b = y.map(p),
          v = (0, i.useRef)(!0),
          w = (0, i.useRef)(y),
          x = (0, a.M)(() => new Map()),
          [A, E] = (0, i.useState)(y),
          [k, I] = (0, i.useState)(y);
        (0, g.E)(() => {
          (v.current = !1), (w.current = y);
          for (let e = 0; e < k.length; e++) {
            let t = p(k[e]);
            b.includes(t) ? x.delete(t) : !0 !== x.get(t) && x.set(t, !1);
          }
        }, [k, b.length, b.join("-")]);
        let S = [];
        if (y !== A) {
          let e = [...y];
          for (let t = 0; t < k.length; t++) {
            let r = k[t],
              n = p(r);
            b.includes(n) || (e.splice(t, 0, r), S.push(r));
          }
          "wait" === d && S.length && (e = S), I(m(e)), E(y);
          return;
        }
        let { forceRender: P } = (0, i.useContext)(f.L);
        return (0, n.jsx)(n.Fragment, {
          children: k.map((e) => {
            let t = p(e),
              r = y === k || b.includes(t);
            return (0, n.jsx)(
              c,
              {
                isPresent: r,
                initial: (!v.current || !!s) && void 0,
                custom: r ? void 0 : o,
                presenceAffectsLayout: u,
                mode: d,
                onExitComplete: r
                  ? void 0
                  : () => {
                      if (!x.has(t)) return;
                      x.set(t, !0);
                      let e = !0;
                      x.forEach((t) => {
                        t || (e = !1);
                      }),
                        e && (null == P || P(), I(w.current), l && l());
                    },
                children: e,
              },
              t
            );
          }),
        });
      };
    },
    76498: (e, t, r) => {
      "use strict";
      r.d(t, { F: () => s });
      var n = r(95155),
        i = r(12115),
        o = r(75815),
        a = r(94705);
      function s(e) {
        let { children: t, features: r, strict: s = !1 } = e,
          [, u] = (0, i.useState)(!l(r)),
          c = (0, i.useRef)(void 0);
        if (!l(r)) {
          let { renderer: e, ...t } = r;
          (c.current = e), (0, a.Y)(t);
        }
        return (
          (0, i.useEffect)(() => {
            l(r) &&
              r().then((e) => {
                let { renderer: t, ...r } = e;
                (0, a.Y)(r), (c.current = t), u(!0);
              });
          }, []),
          (0, n.jsx)(o.Y.Provider, {
            value: { renderer: c.current, strict: s },
            children: t,
          })
        );
      }
      function l(e) {
        return "function" == typeof e;
      }
    },
    64710: (e, t, r) => {
      "use strict";
      r.d(t, { L: () => n });
      let n = (0, r(12115).createContext)({});
    },
    75815: (e, t, r) => {
      "use strict";
      r.d(t, { Y: () => n });
      let n = (0, r(12115).createContext)({ strict: !1 });
    },
    49630: (e, t, r) => {
      "use strict";
      r.d(t, { Q: () => n });
      let n = (0, r(12115).createContext)({
        transformPagePoint: (e) => e,
        isStatic: !1,
        reducedMotion: "never",
      });
    },
    39656: (e, t, r) => {
      "use strict";
      r.d(t, { t: () => n });
      let n = (0, r(12115).createContext)(null);
    },
    14499: (e, t, r) => {
      "use strict";
      r.d(t, { I: () => o });
      var n = r(93903);
      let i = [
        "read",
        "resolveKeyframes",
        "update",
        "preRender",
        "render",
        "postRender",
      ];
      function o(e, t) {
        let r = !1,
          o = !0,
          a = { delta: 0, timestamp: 0, isProcessing: !1 },
          s = () => (r = !0),
          l = i.reduce(
            (e, t) => (
              (e[t] = (function (e) {
                let t = new Set(),
                  r = new Set(),
                  n = !1,
                  i = !1,
                  o = new WeakSet(),
                  a = { delta: 0, timestamp: 0, isProcessing: !1 };
                function s(t) {
                  o.has(t) && (l.schedule(t), e()), t(a);
                }
                let l = {
                  schedule: (e, i = !1, a = !1) => {
                    let s = a && n ? t : r;
                    return i && o.add(e), s.has(e) || s.add(e), e;
                  },
                  cancel: (e) => {
                    r.delete(e), o.delete(e);
                  },
                  process: (e) => {
                    if (((a = e), n)) {
                      i = !0;
                      return;
                    }
                    (n = !0),
                      ([t, r] = [r, t]),
                      r.clear(),
                      t.forEach(s),
                      (n = !1),
                      i && ((i = !1), l.process(e));
                  },
                };
                return l;
              })(s)),
              e
            ),
            {}
          ),
          {
            read: u,
            resolveKeyframes: c,
            update: d,
            preRender: f,
            render: h,
            postRender: p,
          } = l,
          m = () => {
            let i = n.W.useManualTiming ? a.timestamp : performance.now();
            (r = !1),
              (a.delta = o
                ? 1e3 / 60
                : Math.max(Math.min(i - a.timestamp, 40), 1)),
              (a.timestamp = i),
              (a.isProcessing = !0),
              u.process(a),
              c.process(a),
              d.process(a),
              f.process(a),
              h.process(a),
              p.process(a),
              (a.isProcessing = !1),
              r && t && ((o = !1), e(m));
          },
          g = () => {
            (r = !0), (o = !0), a.isProcessing || e(m);
          };
        return {
          schedule: i.reduce((e, t) => {
            let n = l[t];
            return (
              (e[t] = (e, t = !1, i = !1) => (r || g(), n.schedule(e, t, i))), e
            );
          }, {}),
          cancel: (e) => {
            for (let t = 0; t < i.length; t++) l[i[t]].cancel(e);
          },
          state: a,
          steps: l,
        };
      }
    },
    3307: (e, t, r) => {
      "use strict";
      r.d(t, { Gt: () => i, WG: () => o, uv: () => a });
      var n = r(26054);
      let {
        schedule: i,
        cancel: o,
        state: a,
        steps: s,
      } = (0, r(14499).I)(
        "undefined" != typeof requestAnimationFrame
          ? requestAnimationFrame
          : n.l,
        !0
      );
    },
    66247: (e, t, r) => {
      "use strict";
      r.d(t, { B: () => i });
      let n = {
          animation: [
            "animate",
            "variants",
            "whileHover",
            "whileTap",
            "exit",
            "whileInView",
            "whileFocus",
            "whileDrag",
          ],
          exit: ["exit"],
          drag: ["drag", "dragControls"],
          focus: ["whileFocus"],
          hover: ["whileHover", "onHoverStart", "onHoverEnd"],
          tap: ["whileTap", "onTap", "onTapStart", "onTapCancel"],
          pan: ["onPan", "onPanStart", "onPanSessionStart", "onPanEnd"],
          inView: ["whileInView", "onViewportEnter", "onViewportLeave"],
          layout: ["layout", "layoutId"],
        },
        i = {};
      for (let e in n) i[e] = { isEnabled: (t) => n[e].some((e) => !!t[e]) };
    },
    94705: (e, t, r) => {
      "use strict";
      r.d(t, { Y: () => i });
      var n = r(66247);
      function i(e) {
        for (let t in e) n.B[t] = { ...n.B[t], ...e[t] };
      }
    },
    67910: (e, t, r) => {
      "use strict";
      r.d(t, { z: () => o });
      let n = {};
      var i = r(31371);
      function o(e, { layout: t, layoutId: r }) {
        return (
          i.f.has(e) ||
          e.startsWith("origin") ||
          ((t || void 0 !== r) && (!!n[e] || "opacity" === e))
        );
      }
    },
    63648: (e, t, r) => {
      "use strict";
      r.d(t, { m: () => z });
      var n = r(95155),
        i = r(12115),
        o = r(49630);
      let a = (0, i.createContext)({});
      var s = r(39656),
        l = r(35403),
        u = r(75815),
        c = r(17539);
      let { schedule: d, cancel: f } = (0, r(14499).I)(queueMicrotask, !1);
      function h(e) {
        return (
          e &&
          "object" == typeof e &&
          Object.prototype.hasOwnProperty.call(e, "current")
        );
      }
      let p = (0, i.createContext)({});
      var m = r(62896),
        g = r(99038);
      function y(e) {
        return Array.isArray(e) ? e.join(" ") : e;
      }
      var b = r(94705),
        v = r(15687),
        w = r(64710);
      let x = Symbol.for("motionComponentSymbol");
      var A = r(66247),
        E = r(75526),
        k = r(47928),
        I = r(72126),
        S = r(5385),
        P = r(78442),
        T = r(99234),
        C = r(55238),
        O = r(84707);
      let _ = (e) => (t, r) => {
          let n = (0, i.useContext)(a),
            o = (0, i.useContext)(s.t),
            l = () =>
              (function (
                {
                  scrapeMotionValuesFromProps: e,
                  createRenderState: t,
                  onMount: r,
                },
                n,
                i,
                o
              ) {
                let a = {
                  latestValues: (function (e, t, r, n) {
                    let i = {},
                      o = n(e, {});
                    for (let e in o)
                      i[e] = (function (e) {
                        let t = (0, O.S)(e) ? e.get() : e;
                        return (0, C.B)(t) ? t.toValue() : t;
                      })(o[e]);
                    let { initial: a, animate: s } = e,
                      l = (0, g.e)(e),
                      u = (0, g.O)(e);
                    t &&
                      u &&
                      !l &&
                      !1 !== e.inherit &&
                      (void 0 === a && (a = t.initial),
                      void 0 === s && (s = t.animate));
                    let c = !!r && !1 === r.initial,
                      d = (c = c || !1 === a) ? s : a;
                    if (d && "boolean" != typeof d && !(0, S.N)(d)) {
                      let t = Array.isArray(d) ? d : [d];
                      for (let r = 0; r < t.length; r++) {
                        let n = (0, P.a)(e, t[r]);
                        if (n) {
                          let { transitionEnd: e, transition: t, ...r } = n;
                          for (let e in r) {
                            let t = r[e];
                            if (Array.isArray(t)) {
                              let e = c ? t.length - 1 : 0;
                              t = t[e];
                            }
                            null !== t && (i[e] = t);
                          }
                          for (let t in e) i[t] = e[t];
                        }
                      }
                    }
                    return i;
                  })(n, i, o, e),
                  renderState: t(),
                };
                return r && (a.mount = (e) => r(n, e, a)), a;
              })(e, t, n, o);
          return r ? l() : (0, T.M)(l);
        },
        B = () => ({ style: {}, transform: {}, transformOrigin: {}, vars: {} }),
        R = () => ({ ...B(), attrs: {} });
      var N = r(71721),
        M = r(7986),
        j = r(3307);
      let F = {
          useVisualState: _({
            scrapeMotionValuesFromProps: I.x,
            createRenderState: R,
            onMount: (e, t, { renderState: r, latestValues: n }) => {
              j.Gt.read(() => {
                try {
                  r.dimensions =
                    "function" == typeof t.getBBox
                      ? t.getBBox()
                      : t.getBoundingClientRect();
                } catch (e) {
                  r.dimensions = { x: 0, y: 0, width: 0, height: 0 };
                }
              }),
                j.Gt.render(() => {
                  (0, N.B)(r, n, (0, M.n)(t.tagName), e.transformTemplate),
                    (0, k.d)(t, r);
                });
            },
          }),
        },
        L = {
          useVisualState: _({
            scrapeMotionValuesFromProps: r(701).x,
            createRenderState: B,
          }),
        };
      var D = r(67910),
        U = r(67192);
      function H(e, t, r) {
        for (let n in t) (0, O.S)(t[n]) || (0, D.z)(n, r) || (e[n] = t[n]);
      }
      var $ = r(39970);
      let z = (function (e) {
        if ("undefined" == typeof Proxy) return e;
        let t = new Map();
        return new Proxy((...t) => e(...t), {
          get: (r, n) =>
            "create" === n ? e : (t.has(n) || t.set(n, e(n)), t.get(n)),
        });
      })(function (e, { forwardMotionProps: t } = { forwardMotionProps: !1 }) {
        return (function (e) {
          let {
            preloadedFeatures: t,
            createVisualElement: r,
            useRender: f,
            useVisualState: E,
            Component: k,
          } = e;
          t && (0, b.Y)(t);
          let I = (0, i.forwardRef)(function (e, t) {
            var b;
            let x;
            let I = {
                ...(0, i.useContext)(o.Q),
                ...e,
                layoutId: (function (e) {
                  let { layoutId: t } = e,
                    r = (0, i.useContext)(w.L).id;
                  return r && void 0 !== t ? r + "-" + t : t;
                })(e),
              },
              { isStatic: S } = I,
              P = (function (e) {
                let { initial: t, animate: r } = (function (e, t) {
                  if ((0, g.e)(e)) {
                    let { initial: t, animate: r } = e;
                    return {
                      initial: !1 === t || (0, m.w)(t) ? t : void 0,
                      animate: (0, m.w)(r) ? r : void 0,
                    };
                  }
                  return !1 !== e.inherit ? t : {};
                })(e, (0, i.useContext)(a));
                return (0, i.useMemo)(
                  () => ({ initial: t, animate: r }),
                  [y(t), y(r)]
                );
              })(e),
              T = E(e, S);
            if (!S && v.B) {
              (0, i.useContext)(u.Y).strict;
              let e = (function (e) {
                let { drag: t, layout: r } = A.B;
                if (!t && !r) return {};
                let n = { ...t, ...r };
                return {
                  MeasureLayout:
                    (null == t ? void 0 : t.isEnabled(e)) ||
                    (null == r ? void 0 : r.isEnabled(e))
                      ? n.MeasureLayout
                      : void 0,
                  ProjectionNode: n.ProjectionNode,
                };
              })(I);
              (x = e.MeasureLayout),
                (P.visualElement = (function (e, t, r, n, f) {
                  var m, g;
                  let { visualElement: y } = (0, i.useContext)(a),
                    b = (0, i.useContext)(u.Y),
                    v = (0, i.useContext)(s.t),
                    w = (0, i.useContext)(o.Q).reducedMotion,
                    x = (0, i.useRef)();
                  (n = n || b.renderer),
                    !x.current &&
                      n &&
                      (x.current = n(e, {
                        visualState: t,
                        parent: y,
                        props: r,
                        presenceContext: v,
                        blockInitialAnimation: !!v && !1 === v.initial,
                        reducedMotionConfig: w,
                      }));
                  let A = x.current,
                    E = (0, i.useContext)(p);
                  A &&
                    !A.projection &&
                    f &&
                    ("html" === A.type || "svg" === A.type) &&
                    (function (e, t, r, n) {
                      let {
                        layoutId: i,
                        layout: o,
                        drag: a,
                        dragConstraints: s,
                        layoutScroll: l,
                        layoutRoot: u,
                      } = t;
                      (e.projection = new r(
                        e.latestValues,
                        t["data-framer-portal-id"]
                          ? void 0
                          : (function e(t) {
                              if (t)
                                return !1 !== t.options.allowProjection
                                  ? t.projection
                                  : e(t.parent);
                            })(e.parent)
                      )),
                        e.projection.setOptions({
                          layoutId: i,
                          layout: o,
                          alwaysMeasureLayout: !!a || (s && h(s)),
                          visualElement: e,
                          animationType: "string" == typeof o ? o : "both",
                          initialPromotionConfig: n,
                          layoutScroll: l,
                          layoutRoot: u,
                        });
                    })(x.current, r, f, E);
                  let k = (0, i.useRef)(!1);
                  (0, i.useInsertionEffect)(() => {
                    A && k.current && A.update(r, v);
                  });
                  let I = r[c.n],
                    S = (0, i.useRef)(
                      !!I &&
                        !(null === (m = window.MotionHandoffIsComplete) ||
                        void 0 === m
                          ? void 0
                          : m.call(window, I)) &&
                        (null === (g = window.MotionHasOptimisedAnimation) ||
                        void 0 === g
                          ? void 0
                          : g.call(window, I))
                    );
                  return (
                    (0, l.E)(() => {
                      A &&
                        ((k.current = !0),
                        (window.MotionIsMounted = !0),
                        A.updateFeatures(),
                        d.render(A.render),
                        S.current &&
                          A.animationState &&
                          A.animationState.animateChanges());
                    }),
                    (0, i.useEffect)(() => {
                      A &&
                        (!S.current &&
                          A.animationState &&
                          A.animationState.animateChanges(),
                        S.current &&
                          (queueMicrotask(() => {
                            var e;
                            null === (e = window.MotionHandoffMarkAsComplete) ||
                              void 0 === e ||
                              e.call(window, I);
                          }),
                          (S.current = !1)));
                    }),
                    A
                  );
                })(k, T, I, r, e.ProjectionNode));
            }
            return (0, n.jsxs)(a.Provider, {
              value: P,
              children: [
                x && P.visualElement
                  ? (0, n.jsx)(x, { visualElement: P.visualElement, ...I })
                  : null,
                f(
                  k,
                  e,
                  ((b = P.visualElement),
                  (0, i.useCallback)(
                    (e) => {
                      e && T.mount && T.mount(e),
                        b && (e ? b.mount(e) : b.unmount()),
                        t &&
                          ("function" == typeof t
                            ? t(e)
                            : h(t) && (t.current = e));
                    },
                    [b]
                  )),
                  T,
                  S,
                  P.visualElement
                ),
              ],
            });
          });
          return (I[x] = k), I;
        })({
          ...((0, E.Q)(e) ? F : L),
          preloadedFeatures: void 0,
          useRender: (function (e = !1) {
            return (t, r, n, { latestValues: o }, a) => {
              let s = (
                  (0, E.Q)(t)
                    ? function (e, t, r, n) {
                        let o = (0, i.useMemo)(() => {
                          let r = R();
                          return (
                            (0, N.B)(r, t, (0, M.n)(n), e.transformTemplate),
                            { ...r.attrs, style: { ...r.style } }
                          );
                        }, [t]);
                        if (e.style) {
                          let t = {};
                          H(t, e.style, e), (o.style = { ...t, ...o.style });
                        }
                        return o;
                      }
                    : function (e, t) {
                        let r = {},
                          n = (function (e, t) {
                            let r = e.style || {},
                              n = {};
                            return (
                              H(n, r, e),
                              Object.assign(
                                n,
                                (function ({ transformTemplate: e }, t) {
                                  return (0, i.useMemo)(() => {
                                    let r = B();
                                    return (
                                      (0, U.O)(r, t, e),
                                      Object.assign({}, r.vars, r.style)
                                    );
                                  }, [t]);
                                })(e, t)
                              ),
                              n
                            );
                          })(e, t);
                        return (
                          e.drag &&
                            !1 !== e.dragListener &&
                            ((r.draggable = !1),
                            (n.userSelect =
                              n.WebkitUserSelect =
                              n.WebkitTouchCallout =
                                "none"),
                            (n.touchAction =
                              !0 === e.drag
                                ? "none"
                                : `pan-${"x" === e.drag ? "y" : "x"}`)),
                          void 0 === e.tabIndex &&
                            (e.onTap || e.onTapStart || e.whileTap) &&
                            (r.tabIndex = 0),
                          (r.style = n),
                          r
                        );
                      }
                )(r, o, a, t),
                l = (0, $.J)(r, "string" == typeof t, e),
                u = t !== i.Fragment ? { ...l, ...s, ref: n } : {},
                { children: c } = r,
                d = (0, i.useMemo)(() => ((0, O.S)(c) ? c.get() : c), [c]);
              return (0, i.createElement)(t, { ...u, children: d });
            };
          })(t),
          createVisualElement: void 0,
          Component: e,
        });
      });
    },
    42717: (e, t, r) => {
      "use strict";
      r.d(t, { I: () => n });
      let n = (e) => e.replace(/([a-z])([A-Z])/gu, "$1-$2").toLowerCase();
    },
    39970: (e, t, r) => {
      "use strict";
      r.d(t, { J: () => s, D: () => a });
      let n = new Set([
        "animate",
        "exit",
        "variants",
        "initial",
        "style",
        "values",
        "variants",
        "transition",
        "transformTemplate",
        "custom",
        "inherit",
        "onBeforeLayoutMeasure",
        "onAnimationStart",
        "onAnimationComplete",
        "onUpdate",
        "onDragStart",
        "onDrag",
        "onDragEnd",
        "onMeasureDragConstraints",
        "onDirectionLock",
        "onDragTransitionEnd",
        "_dragX",
        "_dragY",
        "onHoverStart",
        "onHoverEnd",
        "onViewportEnter",
        "onViewportLeave",
        "globalTapTarget",
        "ignoreStrict",
        "viewport",
      ]);
      function i(e) {
        return (
          e.startsWith("while") ||
          (e.startsWith("drag") && "draggable" !== e) ||
          e.startsWith("layout") ||
          e.startsWith("onTap") ||
          e.startsWith("onPan") ||
          e.startsWith("onLayout") ||
          n.has(e)
        );
      }
      let o = (e) => !i(e);
      function a(e) {
        e && (o = (t) => (t.startsWith("on") ? !i(t) : e(t)));
      }
      try {
        a(require("@emotion/is-prop-valid").default);
      } catch (e) {}
      function s(e, t, r) {
        let n = {};
        for (let a in e)
          ("values" !== a || "object" != typeof e.values) &&
            (o(a) ||
              (!0 === r && i(a)) ||
              (!t && !i(a)) ||
              (e.draggable && a.startsWith("onDrag"))) &&
            (n[a] = e[a]);
        return n;
      }
    },
    12271: (e, t, r) => {
      "use strict";
      r.d(t, { j: () => i, p: () => a });
      let n = (e) => (t) => "string" == typeof t && t.startsWith(e),
        i = n("--"),
        o = n("var(--"),
        a = (e) => !!o(e) && s.test(e.split("/*")[0].trim()),
        s =
          /var\(--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)$/iu;
    },
    75526: (e, t, r) => {
      "use strict";
      r.d(t, { Q: () => i });
      let n = [
        "animate",
        "circle",
        "defs",
        "desc",
        "ellipse",
        "g",
        "image",
        "line",
        "filter",
        "marker",
        "mask",
        "metadata",
        "path",
        "pattern",
        "polygon",
        "polyline",
        "rect",
        "stop",
        "switch",
        "symbol",
        "svg",
        "text",
        "tspan",
        "use",
        "view",
      ];
      function i(e) {
        if ("string" != typeof e || e.includes("-"));
        else if (n.indexOf(e) > -1 || /[A-Z]/u.test(e)) return !0;
        return !1;
      }
    },
    618: (e, t, r) => {
      "use strict";
      r.d(t, { W: () => l });
      var n = r(41535),
        i = r(43406);
      let o = {
          borderWidth: i.px,
          borderTopWidth: i.px,
          borderRightWidth: i.px,
          borderBottomWidth: i.px,
          borderLeftWidth: i.px,
          borderRadius: i.px,
          radius: i.px,
          borderTopLeftRadius: i.px,
          borderTopRightRadius: i.px,
          borderBottomRightRadius: i.px,
          borderBottomLeftRadius: i.px,
          width: i.px,
          maxWidth: i.px,
          height: i.px,
          maxHeight: i.px,
          top: i.px,
          right: i.px,
          bottom: i.px,
          left: i.px,
          padding: i.px,
          paddingTop: i.px,
          paddingRight: i.px,
          paddingBottom: i.px,
          paddingLeft: i.px,
          margin: i.px,
          marginTop: i.px,
          marginRight: i.px,
          marginBottom: i.px,
          marginLeft: i.px,
          backgroundPositionX: i.px,
          backgroundPositionY: i.px,
        },
        a = {
          rotate: i.uj,
          rotateX: i.uj,
          rotateY: i.uj,
          rotateZ: i.uj,
          scale: n.hs,
          scaleX: n.hs,
          scaleY: n.hs,
          scaleZ: n.hs,
          skew: i.uj,
          skewX: i.uj,
          skewY: i.uj,
          distance: i.px,
          translateX: i.px,
          translateY: i.px,
          translateZ: i.px,
          x: i.px,
          y: i.px,
          z: i.px,
          perspective: i.px,
          transformPerspective: i.px,
          opacity: n.X4,
          originX: i.gQ,
          originY: i.gQ,
          originZ: i.px,
        },
        s = { ...n.ai, transform: Math.round },
        l = {
          ...o,
          ...a,
          zIndex: s,
          size: i.px,
          fillOpacity: n.X4,
          strokeOpacity: n.X4,
          numOctaves: s,
        };
    },
    67192: (e, t, r) => {
      "use strict";
      r.d(t, { O: () => u });
      var n = r(31371);
      let i = (e, t) => (t && "number" == typeof e ? t.transform(e) : e);
      var o = r(618);
      let a = {
          x: "translateX",
          y: "translateY",
          z: "translateZ",
          transformPerspective: "perspective",
        },
        s = n.U.length;
      var l = r(12271);
      function u(e, t, r) {
        let { style: u, vars: c, transformOrigin: d } = e,
          f = !1,
          h = !1;
        for (let e in t) {
          let r = t[e];
          if (n.f.has(e)) {
            f = !0;
            continue;
          }
          if ((0, l.j)(e)) {
            c[e] = r;
            continue;
          }
          {
            let t = i(r, o.W[e]);
            e.startsWith("origin") ? ((h = !0), (d[e] = t)) : (u[e] = t);
          }
        }
        if (
          (!t.transform &&
            (f || r
              ? (u.transform = (function (e, t, r) {
                  let l = "",
                    u = !0;
                  for (let c = 0; c < s; c++) {
                    let s = n.U[c],
                      d = e[s];
                    if (void 0 === d) continue;
                    let f = !0;
                    if (
                      !(f =
                        "number" == typeof d
                          ? d === (s.startsWith("scale") ? 1 : 0)
                          : 0 === parseFloat(d)) ||
                      r
                    ) {
                      let e = i(d, o.W[s]);
                      if (!f) {
                        u = !1;
                        let t = a[s] || s;
                        l += `${t}(${e}) `;
                      }
                      r && (t[s] = e);
                    }
                  }
                  return (
                    (l = l.trim()),
                    r ? (l = r(t, u ? "" : l)) : u && (l = "none"),
                    l
                  );
                })(t, e.transform, r))
              : u.transform && (u.transform = "none")),
          h)
        ) {
          let { originX: e = "50%", originY: t = "50%", originZ: r = 0 } = d;
          u.transformOrigin = `${e} ${t} ${r}`;
        }
      }
    },
    98535: (e, t, r) => {
      "use strict";
      function n(e, { style: t, vars: r }, n, i) {
        for (let o in (Object.assign(e.style, t, i && i.getProjectionStyles(n)),
        r))
          e.style.setProperty(o, r[o]);
      }
      r.d(t, { e: () => n });
    },
    701: (e, t, r) => {
      "use strict";
      r.d(t, { x: () => o });
      var n = r(67910),
        i = r(84707);
      function o(e, t, r) {
        var o;
        let { style: a } = e,
          s = {};
        for (let l in a)
          ((0, i.S)(a[l]) ||
            (t.style && (0, i.S)(t.style[l])) ||
            (0, n.z)(l, e) ||
            (null === (o = null == r ? void 0 : r.getValue(l)) || void 0 === o
              ? void 0
              : o.liveStyle) !== void 0) &&
            (s[l] = a[l]);
        return s;
      }
    },
    31371: (e, t, r) => {
      "use strict";
      r.d(t, { U: () => n, f: () => i });
      let n = [
          "transformPerspective",
          "x",
          "y",
          "z",
          "translateX",
          "translateY",
          "translateZ",
          "scale",
          "scaleX",
          "scaleY",
          "rotate",
          "rotateX",
          "rotateY",
          "rotateZ",
          "skew",
          "skewX",
          "skewY",
        ],
        i = new Set(n);
    },
    71721: (e, t, r) => {
      "use strict";
      r.d(t, { B: () => l });
      var n = r(67192),
        i = r(43406);
      function o(e, t, r) {
        return "string" == typeof e ? e : i.px.transform(t + r * e);
      }
      let a = { offset: "stroke-dashoffset", array: "stroke-dasharray" },
        s = { offset: "strokeDashoffset", array: "strokeDasharray" };
      function l(
        e,
        {
          attrX: t,
          attrY: r,
          attrScale: l,
          originX: u,
          originY: c,
          pathLength: d,
          pathSpacing: f = 1,
          pathOffset: h = 0,
          ...p
        },
        m,
        g
      ) {
        if (((0, n.O)(e, p, g), m)) {
          e.style.viewBox && (e.attrs.viewBox = e.style.viewBox);
          return;
        }
        (e.attrs = e.style), (e.style = {});
        let { attrs: y, style: b, dimensions: v } = e;
        y.transform && (v && (b.transform = y.transform), delete y.transform),
          v &&
            (void 0 !== u || void 0 !== c || b.transform) &&
            (b.transformOrigin = (function (e, t, r) {
              let n = o(t, e.x, e.width),
                i = o(r, e.y, e.height);
              return `${n} ${i}`;
            })(v, void 0 !== u ? u : 0.5, void 0 !== c ? c : 0.5)),
          void 0 !== t && (y.x = t),
          void 0 !== r && (y.y = r),
          void 0 !== l && (y.scale = l),
          void 0 !== d &&
            (function (e, t, r = 1, n = 0, o = !0) {
              e.pathLength = 1;
              let l = o ? a : s;
              e[l.offset] = i.px.transform(-n);
              let u = i.px.transform(t),
                c = i.px.transform(r);
              e[l.array] = `${u} ${c}`;
            })(y, d, f, h, !1);
      }
    },
    19552: (e, t, r) => {
      "use strict";
      r.d(t, { e: () => n });
      let n = new Set([
        "baseFrequency",
        "diffuseConstant",
        "kernelMatrix",
        "kernelUnitLength",
        "keySplines",
        "keyTimes",
        "limitingConeAngle",
        "markerHeight",
        "markerWidth",
        "numOctaves",
        "targetX",
        "targetY",
        "surfaceScale",
        "specularConstant",
        "specularExponent",
        "stdDeviation",
        "tableValues",
        "viewBox",
        "gradientTransform",
        "pathLength",
        "startOffset",
        "textLength",
        "lengthAdjust",
      ]);
    },
    7986: (e, t, r) => {
      "use strict";
      r.d(t, { n: () => n });
      let n = (e) => "string" == typeof e && "svg" === e.toLowerCase();
    },
    47928: (e, t, r) => {
      "use strict";
      r.d(t, { d: () => a });
      var n = r(42717),
        i = r(98535),
        o = r(19552);
      function a(e, t, r, a) {
        for (let r in ((0, i.e)(e, t, void 0, a), t.attrs))
          e.setAttribute(o.e.has(r) ? r : (0, n.I)(r), t.attrs[r]);
      }
    },
    72126: (e, t, r) => {
      "use strict";
      r.d(t, { x: () => a });
      var n = r(84707),
        i = r(701),
        o = r(31371);
      function a(e, t, r) {
        let a = (0, i.x)(e, t, r);
        for (let r in e)
          ((0, n.S)(e[r]) || (0, n.S)(t[r])) &&
            (a[
              -1 !== o.U.indexOf(r)
                ? "attr" + r.charAt(0).toUpperCase() + r.substring(1)
                : r
            ] = e[r]);
        return a;
      }
    },
    99038: (e, t, r) => {
      "use strict";
      r.d(t, { O: () => s, e: () => a });
      var n = r(5385),
        i = r(62896),
        o = r(34543);
      function a(e) {
        return (0, n.N)(e.animate) || o._.some((t) => (0, i.w)(e[t]));
      }
      function s(e) {
        return !!(a(e) || e.variants);
      }
    },
    62896: (e, t, r) => {
      "use strict";
      function n(e) {
        return "string" == typeof e || Array.isArray(e);
      }
      r.d(t, { w: () => n });
    },
    78442: (e, t, r) => {
      "use strict";
      function n(e, t, r, n) {
        if (
          "function" == typeof t ||
          ("string" == typeof t && (t = e.variants && e.variants[t]),
          "function" == typeof t)
        ) {
          let [i, o] = (function (e) {
            let t = [{}, {}];
            return (
              null == e ||
                e.values.forEach((e, r) => {
                  (t[0][r] = e.get()), (t[1][r] = e.getVelocity());
                }),
              t
            );
          })(n);
          t = t(void 0 !== r ? r : e.custom, i, o);
        }
        return t;
      }
      r.d(t, { a: () => n });
    },
    34543: (e, t, r) => {
      "use strict";
      r.d(t, { U: () => n, _: () => i });
      let n = [
          "animate",
          "whileInView",
          "whileFocus",
          "whileHover",
          "whileTap",
          "whileDrag",
          "exit",
        ],
        i = ["initial", ...n];
    },
    93903: (e, t, r) => {
      "use strict";
      r.d(t, { W: () => n });
      let n = { skipAnimations: !1, useManualTiming: !1 };
    },
    16611: (e, t, r) => {
      "use strict";
      r.d(t, { q: () => n });
      let n = (e, t, r) => (r > t ? t : r < e ? e : r);
    },
    15687: (e, t, r) => {
      "use strict";
      r.d(t, { B: () => n });
      let n = "undefined" != typeof window;
    },
    55238: (e, t, r) => {
      "use strict";
      r.d(t, { B: () => i, K: () => o });
      var n = r(82043);
      let i = (e) => !!(e && "object" == typeof e && e.mix && e.toValue),
        o = (e) => ((0, n.p)(e) ? e[e.length - 1] || 0 : e);
    },
    99234: (e, t, r) => {
      "use strict";
      r.d(t, { M: () => i });
      var n = r(12115);
      function i(e) {
        let t = (0, n.useRef)(null);
        return null === t.current && (t.current = e()), t.current;
      }
    },
    35403: (e, t, r) => {
      "use strict";
      r.d(t, { E: () => i });
      var n = r(12115);
      let i = r(15687).B ? n.useLayoutEffect : n.useEffect;
    },
    41535: (e, t, r) => {
      "use strict";
      r.d(t, { X4: () => o, ai: () => i, hs: () => a });
      var n = r(16611);
      let i = {
          test: (e) => "number" == typeof e,
          parse: parseFloat,
          transform: (e) => e,
        },
        o = { ...i, transform: (e) => (0, n.q)(0, 1, e) },
        a = { ...i, default: 1 };
    },
    43406: (e, t, r) => {
      "use strict";
      r.d(t, {
        KN: () => o,
        gQ: () => u,
        px: () => a,
        uj: () => i,
        vh: () => s,
        vw: () => l,
      });
      let n = (e) => ({
          test: (t) =>
            "string" == typeof t && t.endsWith(e) && 1 === t.split(" ").length,
          parse: parseFloat,
          transform: (t) => `${t}${e}`,
        }),
        i = n("deg"),
        o = n("%"),
        a = n("px"),
        s = n("vh"),
        l = n("vw"),
        u = {
          ...o,
          parse: (e) => o.parse(e) / 100,
          transform: (e) => o.transform(100 * e),
        };
    },
    84707: (e, t, r) => {
      "use strict";
      r.d(t, { S: () => n });
      let n = (e) => !!(e && e.getVelocity);
    },
    45107: (e, t, r) => {
      "use strict";
      r.d(t, { $: () => i, V: () => o });
      var n = r(26054);
      let i = n.l,
        o = n.l;
    },
    26054: (e, t, r) => {
      "use strict";
      r.d(t, { l: () => n });
      let n = (e) => e;
    },
    67113: (e, t, r) => {
      "use strict";
      r.d(t, { N: () => u });
      var n = r(12115),
        i = (e, t, r, n, i, o, a, s) => {
          let l = document.documentElement,
            u = ["light", "dark"];
          function c(t) {
            (Array.isArray(e) ? e : [e]).forEach((e) => {
              let r = "class" === e,
                n = r && o ? i.map((e) => o[e] || e) : i;
              r
                ? (l.classList.remove(...n),
                  l.classList.add(o && o[t] ? o[t] : t))
                : l.setAttribute(e, t);
            }),
              s && u.includes(t) && (l.style.colorScheme = t);
          }
          if (n) c(n);
          else
            try {
              let e = localStorage.getItem(t) || r,
                n =
                  a && "system" === e
                    ? window.matchMedia("(prefers-color-scheme: dark)").matches
                      ? "dark"
                      : "light"
                    : e;
              c(n);
            } catch (e) {}
        },
        o = ["light", "dark"],
        a = "(prefers-color-scheme: dark)",
        s = "undefined" == typeof window,
        l = n.createContext(void 0),
        u = (e) =>
          n.useContext(l)
            ? n.createElement(n.Fragment, null, e.children)
            : n.createElement(d, { ...e }),
        c = ["light", "dark"],
        d = (e) => {
          let {
              forcedTheme: t,
              disableTransitionOnChange: r = !1,
              enableSystem: i = !0,
              enableColorScheme: s = !0,
              storageKey: u = "theme",
              themes: d = c,
              defaultTheme: g = i ? "system" : "light",
              attribute: y = "data-theme",
              value: b,
              children: v,
              nonce: w,
              scriptProps: x,
            } = e,
            [A, E] = n.useState(() => h(u, g)),
            [k, I] = n.useState(() => ("system" === A ? m() : A)),
            S = b ? Object.values(b) : d,
            P = n.useCallback(
              (e) => {
                let t = e;
                if (!t) return;
                "system" === e && i && (t = m());
                let n = b ? b[t] : t,
                  a = r ? p(w) : null,
                  l = document.documentElement,
                  u = (e) => {
                    "class" === e
                      ? (l.classList.remove(...S), n && l.classList.add(n))
                      : e.startsWith("data-") &&
                        (n ? l.setAttribute(e, n) : l.removeAttribute(e));
                  };
                if ((Array.isArray(y) ? y.forEach(u) : u(y), s)) {
                  let e = o.includes(g) ? g : null,
                    r = o.includes(t) ? t : e;
                  l.style.colorScheme = r;
                }
                null == a || a();
              },
              [w]
            ),
            T = n.useCallback(
              (e) => {
                let t = "function" == typeof e ? e(A) : e;
                E(t);
                try {
                  localStorage.setItem(u, t);
                } catch (e) {}
              },
              [A]
            ),
            C = n.useCallback(
              (e) => {
                I(m(e)), "system" === A && i && !t && P("system");
              },
              [A, t]
            );
          n.useEffect(() => {
            let e = window.matchMedia(a);
            return e.addListener(C), C(e), () => e.removeListener(C);
          }, [C]),
            n.useEffect(() => {
              let e = (e) => {
                e.key === u && (e.newValue ? E(e.newValue) : T(g));
              };
              return (
                window.addEventListener("storage", e),
                () => window.removeEventListener("storage", e)
              );
            }, [T]),
            n.useEffect(() => {
              P(null != t ? t : A);
            }, [t, A]);
          let O = n.useMemo(
            () => ({
              theme: A,
              setTheme: T,
              forcedTheme: t,
              resolvedTheme: "system" === A ? k : A,
              themes: i ? [...d, "system"] : d,
              systemTheme: i ? k : void 0,
            }),
            [A, T, t, k, i, d]
          );
          return n.createElement(
            l.Provider,
            { value: O },
            n.createElement(f, {
              forcedTheme: t,
              storageKey: u,
              attribute: y,
              enableSystem: i,
              enableColorScheme: s,
              defaultTheme: g,
              value: b,
              themes: d,
              nonce: w,
              scriptProps: x,
            }),
            v
          );
        },
        f = n.memo((e) => {
          let {
              forcedTheme: t,
              storageKey: r,
              attribute: o,
              enableSystem: a,
              enableColorScheme: s,
              defaultTheme: l,
              value: u,
              themes: c,
              nonce: d,
              scriptProps: f,
            } = e,
            h = JSON.stringify([o, r, l, t, c, u, a, s]).slice(1, -1);
          return n.createElement("script", {
            ...f,
            suppressHydrationWarning: !0,
            nonce: "undefined" == typeof window ? d : "",
            dangerouslySetInnerHTML: {
              __html: "(".concat(i.toString(), ")(").concat(h, ")"),
            },
          });
        }),
        h = (e, t) => {
          let r;
          if (!s) {
            try {
              r = localStorage.getItem(e) || void 0;
            } catch (e) {}
            return r || t;
          }
        },
        p = (e) => {
          let t = document.createElement("style");
          return (
            e && t.setAttribute("nonce", e),
            t.appendChild(
              document.createTextNode(
                "*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}"
              )
            ),
            document.head.appendChild(t),
            () => {
              window.getComputedStyle(document.body),
                setTimeout(() => {
                  document.head.removeChild(t);
                }, 1);
            }
          );
        },
        m = (e) => (
          e || (e = window.matchMedia(a)), e.matches ? "dark" : "light"
        );
    },
    92369: (e, t, r) => {
      "use strict";
      function n(e, t, r) {
        if (!t.has(e))
          throw TypeError(
            "attempted to " + r + " private field on non-instance"
          );
        return t.get(e);
      }
      r.d(t, { _: () => n });
    },
    97207: (e, t, r) => {
      "use strict";
      r.d(t, { _: () => i });
      var n = r(92369);
      function i(e, t) {
        var r = (0, n._)(e, t, "get");
        return r.get ? r.get.call(e) : r.value;
      }
    },
    66025: (e, t, r) => {
      "use strict";
      function n(e, t, r) {
        !(function (e, t) {
          if (t.has(e))
            throw TypeError(
              "Cannot initialize the same private elements twice on an object"
            );
        })(e, t),
          t.set(e, r);
      }
      r.d(t, { _: () => n });
    },
    14: (e, t, r) => {
      "use strict";
      r.d(t, { _: () => i });
      var n = r(92369);
      function i(e, t, r) {
        var i = (0, n._)(e, t, "set");
        return (
          !(function (e, t, r) {
            if (t.set) t.set.call(e, r);
            else {
              if (!t.writable)
                throw TypeError("attempted to set read only private field");
              t.value = r;
            }
          })(e, i, r),
          r
        );
      }
    },
    6476: (e, t, r) => {
      "use strict";
      r.r(t),
        r.d(t, {
          __addDisposableResource: () => M,
          __assign: () => o,
          __asyncDelegator: () => I,
          __asyncGenerator: () => k,
          __asyncValues: () => S,
          __await: () => E,
          __awaiter: () => p,
          __classPrivateFieldGet: () => B,
          __classPrivateFieldIn: () => N,
          __classPrivateFieldSet: () => R,
          __createBinding: () => g,
          __decorate: () => s,
          __disposeResources: () => F,
          __esDecorate: () => u,
          __exportStar: () => y,
          __extends: () => i,
          __generator: () => m,
          __importDefault: () => _,
          __importStar: () => O,
          __makeTemplateObject: () => P,
          __metadata: () => h,
          __param: () => l,
          __propKey: () => d,
          __read: () => v,
          __rest: () => a,
          __rewriteRelativeImportExtension: () => L,
          __runInitializers: () => c,
          __setFunctionName: () => f,
          __spread: () => w,
          __spreadArray: () => A,
          __spreadArrays: () => x,
          __values: () => b,
          default: () => D,
        });
      var n = function (e, t) {
        return (n =
          Object.setPrototypeOf ||
          ({ __proto__: [] } instanceof Array &&
            function (e, t) {
              e.__proto__ = t;
            }) ||
          function (e, t) {
            for (var r in t)
              Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
          })(e, t);
      };
      function i(e, t) {
        if ("function" != typeof t && null !== t)
          throw TypeError(
            "Class extends value " + String(t) + " is not a constructor or null"
          );
        function r() {
          this.constructor = e;
        }
        n(e, t),
          (e.prototype =
            null === t
              ? Object.create(t)
              : ((r.prototype = t.prototype), new r()));
      }
      var o = function () {
        return (o =
          Object.assign ||
          function (e) {
            for (var t, r = 1, n = arguments.length; r < n; r++)
              for (var i in (t = arguments[r]))
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
            return e;
          }).apply(this, arguments);
      };
      function a(e, t) {
        var r = {};
        for (var n in e)
          Object.prototype.hasOwnProperty.call(e, n) &&
            0 > t.indexOf(n) &&
            (r[n] = e[n]);
        if (null != e && "function" == typeof Object.getOwnPropertySymbols)
          for (
            var i = 0, n = Object.getOwnPropertySymbols(e);
            i < n.length;
            i++
          )
            0 > t.indexOf(n[i]) &&
              Object.prototype.propertyIsEnumerable.call(e, n[i]) &&
              (r[n[i]] = e[n[i]]);
        return r;
      }
      function s(e, t, r, n) {
        var i,
          o = arguments.length,
          a =
            o < 3
              ? t
              : null === n
              ? (n = Object.getOwnPropertyDescriptor(t, r))
              : n;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          a = Reflect.decorate(e, t, r, n);
        else
          for (var s = e.length - 1; s >= 0; s--)
            (i = e[s]) &&
              (a = (o < 3 ? i(a) : o > 3 ? i(t, r, a) : i(t, r)) || a);
        return o > 3 && a && Object.defineProperty(t, r, a), a;
      }
      function l(e, t) {
        return function (r, n) {
          t(r, n, e);
        };
      }
      function u(e, t, r, n, i, o) {
        function a(e) {
          if (void 0 !== e && "function" != typeof e)
            throw TypeError("Function expected");
          return e;
        }
        for (
          var s,
            l = n.kind,
            u = "getter" === l ? "get" : "setter" === l ? "set" : "value",
            c = !t && e ? (n.static ? e : e.prototype) : null,
            d = t || (c ? Object.getOwnPropertyDescriptor(c, n.name) : {}),
            f = !1,
            h = r.length - 1;
          h >= 0;
          h--
        ) {
          var p = {};
          for (var m in n) p[m] = "access" === m ? {} : n[m];
          for (var m in n.access) p.access[m] = n.access[m];
          p.addInitializer = function (e) {
            if (f)
              throw TypeError(
                "Cannot add initializers after decoration has completed"
              );
            o.push(a(e || null));
          };
          var g = (0, r[h])(
            "accessor" === l ? { get: d.get, set: d.set } : d[u],
            p
          );
          if ("accessor" === l) {
            if (void 0 === g) continue;
            if (null === g || "object" != typeof g)
              throw TypeError("Object expected");
            (s = a(g.get)) && (d.get = s),
              (s = a(g.set)) && (d.set = s),
              (s = a(g.init)) && i.unshift(s);
          } else (s = a(g)) && ("field" === l ? i.unshift(s) : (d[u] = s));
        }
        c && Object.defineProperty(c, n.name, d), (f = !0);
      }
      function c(e, t, r) {
        for (var n = arguments.length > 2, i = 0; i < t.length; i++)
          r = n ? t[i].call(e, r) : t[i].call(e);
        return n ? r : void 0;
      }
      function d(e) {
        return "symbol" == typeof e ? e : "".concat(e);
      }
      function f(e, t, r) {
        return (
          "symbol" == typeof t &&
            (t = t.description ? "[".concat(t.description, "]") : ""),
          Object.defineProperty(e, "name", {
            configurable: !0,
            value: r ? "".concat(r, " ", t) : t,
          })
        );
      }
      function h(e, t) {
        if ("object" == typeof Reflect && "function" == typeof Reflect.metadata)
          return Reflect.metadata(e, t);
      }
      function p(e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      }
      function m(e, t) {
        var r,
          n,
          i,
          o = {
            label: 0,
            sent: function () {
              if (1 & i[0]) throw i[1];
              return i[1];
            },
            trys: [],
            ops: [],
          },
          a = Object.create(
            ("function" == typeof Iterator ? Iterator : Object).prototype
          );
        return (
          (a.next = s(0)),
          (a.throw = s(1)),
          (a.return = s(2)),
          "function" == typeof Symbol &&
            (a[Symbol.iterator] = function () {
              return this;
            }),
          a
        );
        function s(s) {
          return function (l) {
            return (function (s) {
              if (r) throw TypeError("Generator is already executing.");
              for (; a && ((a = 0), s[0] && (o = 0)), o; )
                try {
                  if (
                    ((r = 1),
                    n &&
                      (i =
                        2 & s[0]
                          ? n.return
                          : s[0]
                          ? n.throw || ((i = n.return) && i.call(n), 0)
                          : n.next) &&
                      !(i = i.call(n, s[1])).done)
                  )
                    return i;
                  switch (((n = 0), i && (s = [2 & s[0], i.value]), s[0])) {
                    case 0:
                    case 1:
                      i = s;
                      break;
                    case 4:
                      return o.label++, { value: s[1], done: !1 };
                    case 5:
                      o.label++, (n = s[1]), (s = [0]);
                      continue;
                    case 7:
                      (s = o.ops.pop()), o.trys.pop();
                      continue;
                    default:
                      if (
                        !(i = (i = o.trys).length > 0 && i[i.length - 1]) &&
                        (6 === s[0] || 2 === s[0])
                      ) {
                        o = 0;
                        continue;
                      }
                      if (3 === s[0] && (!i || (s[1] > i[0] && s[1] < i[3]))) {
                        o.label = s[1];
                        break;
                      }
                      if (6 === s[0] && o.label < i[1]) {
                        (o.label = i[1]), (i = s);
                        break;
                      }
                      if (i && o.label < i[2]) {
                        (o.label = i[2]), o.ops.push(s);
                        break;
                      }
                      i[2] && o.ops.pop(), o.trys.pop();
                      continue;
                  }
                  s = t.call(e, o);
                } catch (e) {
                  (s = [6, e]), (n = 0);
                } finally {
                  r = i = 0;
                }
              if (5 & s[0]) throw s[1];
              return { value: s[0] ? s[1] : void 0, done: !0 };
            })([s, l]);
          };
        }
      }
      var g = Object.create
        ? function (e, t, r, n) {
            void 0 === n && (n = r);
            var i = Object.getOwnPropertyDescriptor(t, r);
            (!i ||
              ("get" in i ? !t.__esModule : i.writable || i.configurable)) &&
              (i = {
                enumerable: !0,
                get: function () {
                  return t[r];
                },
              }),
              Object.defineProperty(e, n, i);
          }
        : function (e, t, r, n) {
            void 0 === n && (n = r), (e[n] = t[r]);
          };
      function y(e, t) {
        for (var r in e)
          "default" === r ||
            Object.prototype.hasOwnProperty.call(t, r) ||
            g(t, e, r);
      }
      function b(e) {
        var t = "function" == typeof Symbol && Symbol.iterator,
          r = t && e[t],
          n = 0;
        if (r) return r.call(e);
        if (e && "number" == typeof e.length)
          return {
            next: function () {
              return (
                e && n >= e.length && (e = void 0),
                { value: e && e[n++], done: !e }
              );
            },
          };
        throw TypeError(
          t ? "Object is not iterable." : "Symbol.iterator is not defined."
        );
      }
      function v(e, t) {
        var r = "function" == typeof Symbol && e[Symbol.iterator];
        if (!r) return e;
        var n,
          i,
          o = r.call(e),
          a = [];
        try {
          for (; (void 0 === t || t-- > 0) && !(n = o.next()).done; )
            a.push(n.value);
        } catch (e) {
          i = { error: e };
        } finally {
          try {
            n && !n.done && (r = o.return) && r.call(o);
          } finally {
            if (i) throw i.error;
          }
        }
        return a;
      }
      function w() {
        for (var e = [], t = 0; t < arguments.length; t++)
          e = e.concat(v(arguments[t]));
        return e;
      }
      function x() {
        for (var e = 0, t = 0, r = arguments.length; t < r; t++)
          e += arguments[t].length;
        for (var n = Array(e), i = 0, t = 0; t < r; t++)
          for (var o = arguments[t], a = 0, s = o.length; a < s; a++, i++)
            n[i] = o[a];
        return n;
      }
      function A(e, t, r) {
        if (r || 2 == arguments.length)
          for (var n, i = 0, o = t.length; i < o; i++)
            (!n && i in t) ||
              (n || (n = Array.prototype.slice.call(t, 0, i)), (n[i] = t[i]));
        return e.concat(n || Array.prototype.slice.call(t));
      }
      function E(e) {
        return this instanceof E ? ((this.v = e), this) : new E(e);
      }
      function k(e, t, r) {
        if (!Symbol.asyncIterator)
          throw TypeError("Symbol.asyncIterator is not defined.");
        var n,
          i = r.apply(e, t || []),
          o = [];
        return (
          (n = Object.create(
            ("function" == typeof AsyncIterator ? AsyncIterator : Object)
              .prototype
          )),
          a("next"),
          a("throw"),
          a("return", function (e) {
            return function (t) {
              return Promise.resolve(t).then(e, u);
            };
          }),
          (n[Symbol.asyncIterator] = function () {
            return this;
          }),
          n
        );
        function a(e, t) {
          i[e] &&
            ((n[e] = function (t) {
              return new Promise(function (r, n) {
                o.push([e, t, r, n]) > 1 || s(e, t);
              });
            }),
            t && (n[e] = t(n[e])));
        }
        function s(e, t) {
          try {
            var r;
            (r = i[e](t)).value instanceof E
              ? Promise.resolve(r.value.v).then(l, u)
              : c(o[0][2], r);
          } catch (e) {
            c(o[0][3], e);
          }
        }
        function l(e) {
          s("next", e);
        }
        function u(e) {
          s("throw", e);
        }
        function c(e, t) {
          e(t), o.shift(), o.length && s(o[0][0], o[0][1]);
        }
      }
      function I(e) {
        var t, r;
        return (
          (t = {}),
          n("next"),
          n("throw", function (e) {
            throw e;
          }),
          n("return"),
          (t[Symbol.iterator] = function () {
            return this;
          }),
          t
        );
        function n(n, i) {
          t[n] = e[n]
            ? function (t) {
                return (r = !r)
                  ? { value: E(e[n](t)), done: !1 }
                  : i
                  ? i(t)
                  : t;
              }
            : i;
        }
      }
      function S(e) {
        if (!Symbol.asyncIterator)
          throw TypeError("Symbol.asyncIterator is not defined.");
        var t,
          r = e[Symbol.asyncIterator];
        return r
          ? r.call(e)
          : ((e = b(e)),
            (t = {}),
            n("next"),
            n("throw"),
            n("return"),
            (t[Symbol.asyncIterator] = function () {
              return this;
            }),
            t);
        function n(r) {
          t[r] =
            e[r] &&
            function (t) {
              return new Promise(function (n, i) {
                !(function (e, t, r, n) {
                  Promise.resolve(n).then(function (t) {
                    e({ value: t, done: r });
                  }, t);
                })(n, i, (t = e[r](t)).done, t.value);
              });
            };
        }
      }
      function P(e, t) {
        return (
          Object.defineProperty
            ? Object.defineProperty(e, "raw", { value: t })
            : (e.raw = t),
          e
        );
      }
      var T = Object.create
          ? function (e, t) {
              Object.defineProperty(e, "default", { enumerable: !0, value: t });
            }
          : function (e, t) {
              e.default = t;
            },
        C = function (e) {
          return (C =
            Object.getOwnPropertyNames ||
            function (e) {
              var t = [];
              for (var r in e)
                Object.prototype.hasOwnProperty.call(e, r) && (t[t.length] = r);
              return t;
            })(e);
        };
      function O(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r = C(e), n = 0; n < r.length; n++)
            "default" !== r[n] && g(t, e, r[n]);
        return T(t, e), t;
      }
      function _(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function B(e, t, r, n) {
        if ("a" === r && !n)
          throw TypeError("Private accessor was defined without a getter");
        if ("function" == typeof t ? e !== t || !n : !t.has(e))
          throw TypeError(
            "Cannot read private member from an object whose class did not declare it"
          );
        return "m" === r ? n : "a" === r ? n.call(e) : n ? n.value : t.get(e);
      }
      function R(e, t, r, n, i) {
        if ("m" === n) throw TypeError("Private method is not writable");
        if ("a" === n && !i)
          throw TypeError("Private accessor was defined without a setter");
        if ("function" == typeof t ? e !== t || !i : !t.has(e))
          throw TypeError(
            "Cannot write private member to an object whose class did not declare it"
          );
        return "a" === n ? i.call(e, r) : i ? (i.value = r) : t.set(e, r), r;
      }
      function N(e, t) {
        if (null === t || ("object" != typeof t && "function" != typeof t))
          throw TypeError("Cannot use 'in' operator on non-object");
        return "function" == typeof e ? t === e : e.has(t);
      }
      function M(e, t, r) {
        if (null != t) {
          var n, i;
          if ("object" != typeof t && "function" != typeof t)
            throw TypeError("Object expected.");
          if (r) {
            if (!Symbol.asyncDispose)
              throw TypeError("Symbol.asyncDispose is not defined.");
            n = t[Symbol.asyncDispose];
          }
          if (void 0 === n) {
            if (!Symbol.dispose)
              throw TypeError("Symbol.dispose is not defined.");
            (n = t[Symbol.dispose]), r && (i = n);
          }
          if ("function" != typeof n) throw TypeError("Object not disposable.");
          i &&
            (n = function () {
              try {
                i.call(this);
              } catch (e) {
                return Promise.reject(e);
              }
            }),
            e.stack.push({ value: t, dispose: n, async: r });
        } else r && e.stack.push({ async: !0 });
        return t;
      }
      var j =
        "function" == typeof SuppressedError
          ? SuppressedError
          : function (e, t, r) {
              var n = Error(r);
              return (
                (n.name = "SuppressedError"),
                (n.error = e),
                (n.suppressed = t),
                n
              );
            };
      function F(e) {
        function t(t) {
          (e.error = e.hasError
            ? new j(t, e.error, "An error was suppressed during disposal.")
            : t),
            (e.hasError = !0);
        }
        var r,
          n = 0;
        return (function i() {
          for (; (r = e.stack.pop()); )
            try {
              if (!r.async && 1 === n)
                return (n = 0), e.stack.push(r), Promise.resolve().then(i);
              if (r.dispose) {
                var o = r.dispose.call(r.value);
                if (r.async)
                  return (
                    (n |= 2),
                    Promise.resolve(o).then(i, function (e) {
                      return t(e), i();
                    })
                  );
              } else n |= 1;
            } catch (e) {
              t(e);
            }
          if (1 === n)
            return e.hasError ? Promise.reject(e.error) : Promise.resolve();
          if (e.hasError) throw e.error;
        })();
      }
      function L(e, t) {
        return "string" == typeof e && /^\.\.?\//.test(e)
          ? e.replace(
              /\.(tsx)$|((?:\.d)?)((?:\.[^./]+?)?)\.([cm]?)ts$/i,
              function (e, r, n, i, o) {
                return r
                  ? t
                    ? ".jsx"
                    : ".js"
                  : !n || (i && o)
                  ? n + i + "." + o.toLowerCase() + "js"
                  : e;
              }
            )
          : e;
      }
      let D = {
        __extends: i,
        __assign: o,
        __rest: a,
        __decorate: s,
        __param: l,
        __esDecorate: u,
        __runInitializers: c,
        __propKey: d,
        __setFunctionName: f,
        __metadata: h,
        __awaiter: p,
        __generator: m,
        __createBinding: g,
        __exportStar: y,
        __values: b,
        __read: v,
        __spread: w,
        __spreadArrays: x,
        __spreadArray: A,
        __await: E,
        __asyncGenerator: k,
        __asyncDelegator: I,
        __asyncValues: S,
        __makeTemplateObject: P,
        __importStar: O,
        __importDefault: _,
        __classPrivateFieldGet: B,
        __classPrivateFieldSet: R,
        __classPrivateFieldIn: N,
        __addDisposableResource: M,
        __disposeResources: F,
        __rewriteRelativeImportExtension: L,
      };
    },
    98722: (e, t, r) => {
      "use strict";
      function n(e) {
        return "string" == typeof e ? { address: e, type: "json-rpc" } : e;
      }
      r.d(t, { J: () => n });
    },
    66750: (e, t, r) => {
      "use strict";
      r.d(t, { T: () => k });
      var n = r(89071),
        i = r(34494),
        o = r(3133);
      function a(e) {
        let t = (0, i.e)(e),
          r = [],
          a = e.length;
        for (let i = 0; i < a; i++) {
          let a = e[i];
          (0, n.WL)(a) || r.push((0, o.uT)(a, t));
        }
        return r;
      }
      var s = r(98722),
        l = r(38472),
        u = r(33726),
        c = r(80477),
        d = r(89780),
        f = r(88085),
        h = r(59719),
        p = r(62937),
        m = r(74046),
        g = r(40874),
        y = r(98979),
        b = r(14303),
        v = r(24058),
        w = r(53864),
        x = r(40304),
        A = r(52368),
        E = r(41953);
      async function k(e, t) {
        let {
            account: n = e.account,
            batch: i = !!e.batch?.multicall,
            blockNumber: o,
            blockTag: l = "latest",
            accessList: h,
            blobs: m,
            code: g,
            data: x,
            factory: k,
            factoryData: S,
            gas: P,
            gasPrice: T,
            maxFeePerBlobGas: C,
            maxFeePerGas: O,
            maxPriorityFeePerGas: _,
            nonce: B,
            to: R,
            value: N,
            stateOverride: M,
            ...j
          } = t,
          F = n ? (0, s.J)(n) : void 0;
        if (g && (k || S))
          throw new c.C(
            "Cannot provide both `code` & `factory`/`factoryData` as parameters."
          );
        if (g && R)
          throw new c.C("Cannot provide both `code` & `to` as parameters.");
        let L = g && x,
          D = k && S && R && x,
          U = L || D,
          H = L
            ? (function (e) {
                let { code: t, data: r } = e;
                return (0, p.m)({
                  abi: a(["constructor(bytes, bytes)"]),
                  bytecode: u.LX,
                  args: [t, r],
                });
              })({ code: g, data: x })
            : D
            ? (function (e) {
                let { data: t, factory: r, factoryData: n, to: i } = e;
                return (0, p.m)({
                  abi: a(["constructor(address, bytes, address, bytes)"]),
                  bytecode: u.WN,
                  args: [i, t, r, n],
                });
              })({ data: x, factory: k, factoryData: S, to: R })
            : x;
        try {
          (0, E.c)(t);
          let r = (o ? (0, y.cK)(o) : void 0) || l,
            n = (0, A.yH)(M),
            a = e.chain?.formatters?.transactionRequest?.format,
            s = (a || w.Bv)({
              ...(0, v.o)(j, { format: a }),
              from: F?.address,
              accessList: h,
              blobs: m,
              data: H,
              gas: P,
              gasPrice: T,
              maxFeePerBlobGas: C,
              maxFeePerGas: O,
              maxPriorityFeePerGas: _,
              nonce: B,
              to: U ? void 0 : R,
              value: N,
            });
          if (
            i &&
            (function ({ request: e }) {
              let { data: t, to: r, ...n } = e;
              return (
                !(!t || t.startsWith("0x82ad56cb")) &&
                !!r &&
                !(Object.values(n).filter((e) => void 0 !== e).length > 0)
              );
            })({ request: s }) &&
            !n
          )
            try {
              return await I(e, { ...s, blockNumber: o, blockTag: l });
            } catch (e) {
              if (!(e instanceof d.YE) && !(e instanceof d.rj)) throw e;
            }
          let u = await e.request({
            method: "eth_call",
            params: n ? [s, r, n] : [s, r],
          });
          if ("0x" === u) return { data: void 0 };
          return { data: u };
        } catch (a) {
          let n = (function (e) {
              if (!(e instanceof c.C)) return;
              let t = e.walk();
              return "object" == typeof t?.data ? t.data?.data : t.data;
            })(a),
            { offchainLookup: i, offchainLookupSignature: o } = await r
              .e(4496)
              .then(r.bind(r, 54496));
          if (!1 !== e.ccipRead && n?.slice(0, 10) === o && R)
            return { data: await i(e, { data: n, to: R }) };
          if (U && n?.slice(0, 10) === "0x101bb98d")
            throw new f.Po({ factory: k });
          throw (0, b.d)(a, { ...t, account: F, chain: e.chain });
        }
      }
      async function I(e, t) {
        let { batchSize: r = 1024, wait: n = 0 } =
            "object" == typeof e.batch?.multicall ? e.batch.multicall : {},
          {
            blockNumber: i,
            blockTag: o = "latest",
            data: a,
            multicallAddress: s,
            to: u,
          } = t,
          c = s;
        if (!c) {
          if (!e.chain) throw new d.YE();
          c = (0, g.M)({
            blockNumber: i,
            chain: e.chain,
            contract: "multicall3",
          });
        }
        let p = (i ? (0, y.cK)(i) : void 0) || o,
          { schedule: b } = (0, x.u)({
            id: `${e.uid}.${p}`,
            wait: n,
            shouldSplitBatch: (e) =>
              e.reduce((e, { data: t }) => e + (t.length - 2), 0) > 2 * r,
            fn: async (t) => {
              let r = t.map((e) => ({
                  allowFailure: !0,
                  callData: e.data,
                  target: e.to,
                })),
                n = (0, m.p)({
                  abi: l.v2,
                  args: [r],
                  functionName: "aggregate3",
                }),
                i = await e.request({
                  method: "eth_call",
                  params: [{ data: n, to: c }, p],
                });
              return (0, h.e)({
                abi: l.v2,
                args: [r],
                functionName: "aggregate3",
                data: i || "0x",
              });
            },
          }),
          [{ returnData: v, success: w }] = await b({ data: a, to: u });
        if (!w) throw new f.$S({ data: v });
        return "0x" === v ? { data: void 0 } : { data: v };
      }
    },
    60710: (e, t, r) => {
      "use strict";
      r.d(t, { O: () => u, _: () => l });
      var n = r(62333),
        i = r(72447),
        o = r(50801),
        a = r(84208),
        s = r(8269);
      async function l(e, t) {
        return u(e, t);
      }
      async function u(e, t) {
        let {
            block: r,
            chain: l = e.chain,
            request: u,
            type: c = "eip1559",
          } = t || {},
          d = await (async () =>
            "function" == typeof l?.fees?.baseFeeMultiplier
              ? l.fees.baseFeeMultiplier({ block: r, client: e, request: u })
              : l?.fees?.baseFeeMultiplier ?? 1.2)();
        if (d < 1) throw new n.sM();
        let f = d.toString().split(".")[1]?.length ?? 0,
          h = 10 ** f,
          p = (e) => (e * BigInt(Math.ceil(d * h))) / BigInt(h),
          m = r || (await (0, i.T)(e, a.g, "getBlock")({}));
        if ("function" == typeof l?.fees?.estimateFeesPerGas) {
          let t = await l.fees.estimateFeesPerGas({
            block: r,
            client: e,
            multiply: p,
            request: u,
            type: c,
          });
          if (null !== t) return t;
        }
        if ("eip1559" === c) {
          if ("bigint" != typeof m.baseFeePerGas) throw new n.pw();
          let t =
              "bigint" == typeof u?.maxPriorityFeePerGas
                ? u.maxPriorityFeePerGas
                : await (0, o.N)(e, { block: m, chain: l, request: u }),
            r = p(m.baseFeePerGas);
          return {
            maxFeePerGas: u?.maxFeePerGas ?? r + t,
            maxPriorityFeePerGas: t,
          };
        }
        return {
          gasPrice: u?.gasPrice ?? p(await (0, i.T)(e, s.L, "getGasPrice")({})),
        };
      }
    },
    35679: (e, t, r) => {
      "use strict";
      r.d(t, { Q: () => v });
      var n = r(98722),
        i = r(80477),
        o = r(11007),
        a = r(98979),
        s = r(69595),
        l = r(18773),
        u = r(45757);
      class c extends i.C {
        constructor(
          e,
          {
            account: t,
            docsPath: r,
            chain: n,
            data: i,
            gas: o,
            gasPrice: a,
            maxFeePerGas: c,
            maxPriorityFeePerGas: d,
            nonce: f,
            to: h,
            value: p,
          }
        ) {
          super(e.shortMessage, {
            cause: e,
            docsPath: r,
            metaMessages: [
              ...(e.metaMessages ? [...e.metaMessages, " "] : []),
              "Estimate Gas Arguments:",
              (0, u.aO)({
                from: t?.address,
                to: h,
                value:
                  void 0 !== p &&
                  `${(0, s.c)(p)} ${n?.nativeCurrency?.symbol || "ETH"}`,
                data: i,
                gas: o,
                gasPrice: void 0 !== a && `${(0, l.Q)(a)} gwei`,
                maxFeePerGas: void 0 !== c && `${(0, l.Q)(c)} gwei`,
                maxPriorityFeePerGas: void 0 !== d && `${(0, l.Q)(d)} gwei`,
                nonce: f,
              }),
            ].filter(Boolean),
            name: "EstimateGasExecutionError",
          }),
            Object.defineProperty(this, "cause", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.cause = e);
        }
      }
      var d = r(87939),
        f = r(90563),
        h = r(24058),
        p = r(53864),
        m = r(52368),
        g = r(41953),
        y = r(23721),
        b = r(53765);
      async function v(e, t) {
        let { account: r = e.account } = t,
          s = r ? (0, n.J)(r) : void 0;
        try {
          let {
              accessList: r,
              authorizationList: n,
              blobs: u,
              blobVersionedHashes: c,
              blockNumber: d,
              blockTag: f,
              data: v,
              gas: w,
              gasPrice: x,
              maxFeePerBlobGas: A,
              maxFeePerGas: E,
              maxPriorityFeePerGas: k,
              nonce: I,
              value: S,
              stateOverride: P,
              ...T
            } = await (0, y.ft)(e, {
              ...t,
              parameters:
                s?.type === "local" ? void 0 : ["blobVersionedHashes"],
            }),
            C = (d ? (0, a.cK)(d) : void 0) || f,
            O = (0, m.yH)(P),
            _ = await (async () =>
              T.to
                ? T.to
                : n && n.length > 0
                ? await (0, o.g)({ authorization: n[0] }).catch(() => {
                    throw new i.C(
                      "`to` is required. Could not infer from `authorizationList`"
                    );
                  })
                : void 0)();
          (0, g.c)(t);
          let B = e.chain?.formatters?.transactionRequest?.format,
            R = (B || p.Bv)({
              ...(0, h.o)(T, { format: B }),
              from: s?.address,
              accessList: r,
              authorizationList: n,
              blobs: u,
              blobVersionedHashes: c,
              data: v,
              gas: w,
              gasPrice: x,
              maxFeePerBlobGas: A,
              maxFeePerGas: E,
              maxPriorityFeePerGas: k,
              nonce: I,
              to: _,
              value: S,
            });
          function l(t) {
            let { block: r, request: n, rpcStateOverride: i } = t;
            return e.request({
              method: "eth_estimateGas",
              params: i ? [n, r ?? "latest", i] : r ? [n, r] : [n],
            });
          }
          let N = BigInt(
            await l({ block: C, request: R, rpcStateOverride: O })
          );
          if (n) {
            let t = await (0, b.r)(e, { address: R.from }),
              r = await Promise.all(
                n.map(async (e) => {
                  let { address: r } = e,
                    n = await l({
                      block: C,
                      request: {
                        authorizationList: void 0,
                        data: v,
                        from: s?.address,
                        to: r,
                        value: (0, a.cK)(t),
                      },
                      rpcStateOverride: O,
                    }).catch(() => 100000n);
                  return 2n * BigInt(n);
                })
              );
            N += r.reduce((e, t) => e + t, 0n);
          }
          return N;
        } catch (r) {
          throw (function (e, { docsPath: t, ...r }) {
            return new c(
              (() => {
                let t = (0, f.l)(e, r);
                return t instanceof d.RM ? e : t;
              })(),
              { docsPath: t, ...r }
            );
          })(r, { ...t, account: s, chain: e.chain });
        }
      }
    },
    50801: (e, t, r) => {
      "use strict";
      r.d(t, { N: () => u, b: () => l });
      var n = r(62333),
        i = r(45732),
        o = r(72447),
        a = r(84208),
        s = r(8269);
      async function l(e, t) {
        return u(e, t);
      }
      async function u(e, t) {
        let { block: r, chain: l = e.chain, request: u } = t || {};
        try {
          let t = l?.fees?.maxPriorityFeePerGas ?? l?.fees?.defaultPriorityFee;
          if ("function" == typeof t) {
            let n = r || (await (0, o.T)(e, a.g, "getBlock")({})),
              i = await t({ block: n, client: e, request: u });
            if (null === i) throw Error();
            return i;
          }
          if (void 0 !== t) return t;
          let n = await e.request({ method: "eth_maxPriorityFeePerGas" });
          return (0, i.uU)(n);
        } catch {
          let [t, i] = await Promise.all([
            r ? Promise.resolve(r) : (0, o.T)(e, a.g, "getBlock")({}),
            (0, o.T)(e, s.L, "getGasPrice")({}),
          ]);
          if ("bigint" != typeof t.baseFeePerGas) throw new n.pw();
          let l = i - t.baseFeePerGas;
          if (l < 0n) return 0n;
          return l;
        }
      }
    },
    53765: (e, t, r) => {
      "use strict";
      r.d(t, { r: () => i });
      var n = r(98979);
      async function i(
        e,
        { address: t, blockNumber: r, blockTag: i = "latest" }
      ) {
        let o = r ? (0, n.cK)(r) : void 0;
        return BigInt(
          await e.request({ method: "eth_getBalance", params: [t, o || i] })
        );
      }
    },
    84208: (e, t, r) => {
      "use strict";
      r.d(t, { g: () => a });
      var n = r(62496),
        i = r(98979),
        o = r(55878);
      async function a(
        e,
        {
          blockHash: t,
          blockNumber: r,
          blockTag: s,
          includeTransactions: l,
        } = {}
      ) {
        let u = l ?? !1,
          c = void 0 !== r ? (0, i.cK)(r) : void 0,
          d = null;
        if (
          !(d = t
            ? await e.request(
                { method: "eth_getBlockByHash", params: [t, u] },
                { dedupe: !0 }
              )
            : await e.request(
                {
                  method: "eth_getBlockByNumber",
                  params: [c || (s ?? "latest"), u],
                },
                { dedupe: !!c }
              ))
        )
          throw new n.l({ blockHash: t, blockNumber: r });
        return (e.chain?.formatters?.block?.format || o.$)(d);
      }
    },
    30733: (e, t, r) => {
      "use strict";
      r.d(t, { T: () => i });
      var n = r(45732);
      async function i(e) {
        let t = await e.request({ method: "eth_chainId" }, { dedupe: !0 });
        return (0, n.ME)(t);
      }
    },
    8269: (e, t, r) => {
      "use strict";
      async function n(e) {
        return BigInt(await e.request({ method: "eth_gasPrice" }));
      }
      r.d(t, { L: () => n });
    },
    77184: (e, t, r) => {
      "use strict";
      r.d(t, { y: () => o });
      var n = r(45732),
        i = r(98979);
      async function o(
        e,
        { address: t, blockTag: r = "latest", blockNumber: o }
      ) {
        let a = await e.request(
          {
            method: "eth_getTransactionCount",
            params: [t, o ? (0, i.cK)(o) : r],
          },
          { dedupe: !!o }
        );
        return (0, n.ME)(a);
      }
    },
    23721: (e, t, r) => {
      "use strict";
      r.d(t, { MM: () => y, ft: () => v });
      var n = r(98722),
        i = r(60710),
        o = r(35679),
        a = r(84208),
        s = r(77184),
        l = r(62333),
        u = r(73492),
        c = r(94949),
        d = r(53502),
        f = r(43279),
        h = r(72447),
        p = r(41953),
        m = r(75086),
        g = r(30733);
      let y = [
          "blobVersionedHashes",
          "chainId",
          "fees",
          "gas",
          "nonce",
          "type",
        ],
        b = new Map();
      async function v(e, t) {
        let r, v;
        let {
            account: w = e.account,
            blobs: x,
            chain: A,
            gas: E,
            kzg: k,
            nonce: I,
            nonceManager: S,
            parameters: P = y,
            type: T,
          } = t,
          C = w ? (0, n.J)(w) : w,
          O = { ...t, ...(C ? { from: C?.address } : {}) };
        async function _() {
          return (
            r ||
            (r = await (0, h.T)(e, a.g, "getBlock")({ blockTag: "latest" }))
          );
        }
        async function B() {
          return (
            v ||
            (A
              ? A.id
              : void 0 !== t.chainId
              ? t.chainId
              : (v = await (0, h.T)(e, g.T, "getChainId")({})))
          );
        }
        if (P.includes("nonce") && void 0 === I && C) {
          if (S) {
            let t = await B();
            O.nonce = await S.consume({
              address: C.address,
              chainId: t,
              client: e,
            });
          } else
            O.nonce = await (0, h.T)(
              e,
              s.y,
              "getTransactionCount"
            )({ address: C.address, blockTag: "pending" });
        }
        if (
          (P.includes("blobVersionedHashes") || P.includes("sidecars")) &&
          x &&
          k
        ) {
          let e = (0, u.S)({ blobs: x, kzg: k });
          if (P.includes("blobVersionedHashes")) {
            let t = (0, d.d)({ commitments: e, to: "hex" });
            O.blobVersionedHashes = t;
          }
          if (P.includes("sidecars")) {
            let t = (0, c.t)({ blobs: x, commitments: e, kzg: k }),
              r = (0, f.T)({ blobs: x, commitments: e, proofs: t, to: "hex" });
            O.sidecars = r;
          }
        }
        if (
          (P.includes("chainId") && (O.chainId = await B()),
          (P.includes("fees") || P.includes("type")) && void 0 === T)
        )
          try {
            O.type = (0, m.L)(O);
          } catch {
            let t = b.get(e.uid);
            if (void 0 === t) {
              let r = await _();
              (t = "bigint" == typeof r?.baseFeePerGas), b.set(e.uid, t);
            }
            O.type = t ? "eip1559" : "legacy";
          }
        if (P.includes("fees")) {
          if ("legacy" !== O.type && "eip2930" !== O.type) {
            if (
              void 0 === O.maxFeePerGas ||
              void 0 === O.maxPriorityFeePerGas
            ) {
              let r = await _(),
                { maxFeePerGas: n, maxPriorityFeePerGas: o } = await (0, i.O)(
                  e,
                  { block: r, chain: A, request: O }
                );
              if (
                void 0 === t.maxPriorityFeePerGas &&
                t.maxFeePerGas &&
                t.maxFeePerGas < o
              )
                throw new l.RR({ maxPriorityFeePerGas: o });
              (O.maxPriorityFeePerGas = o), (O.maxFeePerGas = n);
            }
          } else {
            if (void 0 !== t.maxFeePerGas || void 0 !== t.maxPriorityFeePerGas)
              throw new l.pw();
            if (void 0 === t.gasPrice) {
              let t = await _(),
                { gasPrice: r } = await (0, i.O)(e, {
                  block: t,
                  chain: A,
                  request: O,
                  type: "legacy",
                });
              O.gasPrice = r;
            }
          }
        }
        return (
          P.includes("gas") &&
            void 0 === E &&
            (O.gas = await (0, h.T)(
              e,
              o.Q,
              "estimateGas"
            )({
              ...O,
              account: C ? { address: C.address, type: "json-rpc" } : C,
            })),
          (0, p.c)(O),
          delete O.parameters,
          O
        );
      }
    },
    29665: (e, t, r) => {
      "use strict";
      async function n(e, { serializedTransaction: t }) {
        return e.request(
          { method: "eth_sendRawTransaction", params: [t] },
          { retryCount: 0 }
        );
      }
      r.d(t, { L: () => n });
    },
    53453: (e, t, r) => {
      "use strict";
      r.d(t, { N: () => n });
      let n = (0, r(68275).x)({
        id: 56,
        name: "BNB Smart Chain",
        nativeCurrency: { decimals: 18, name: "BNB", symbol: "BNB" },
        rpcUrls: { default: { http: ["https://56.rpc.thirdweb.com"] } },
        blockExplorers: {
          default: {
            name: "BscScan",
            url: "https://bscscan.com",
            apiUrl: "https://api.bscscan.com/api",
          },
        },
        contracts: {
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 0xf2f12c,
          },
        },
      });
    },
    9736: (e, t, r) => {
      "use strict";
      r.d(t, { c: () => n });
      let n = (0, r(68275).x)({
        id: 97,
        name: "Binance Smart Chain Testnet",
        nativeCurrency: { decimals: 18, name: "BNB", symbol: "tBNB" },
        rpcUrls: {
          default: {
            http: ["https://data-seed-prebsc-1-s1.bnbchain.org:8545"],
          },
        },
        blockExplorers: {
          default: {
            name: "BscScan",
            url: "https://testnet.bscscan.com",
            apiUrl: "https://api-testnet.bscscan.com/api",
          },
        },
        contracts: {
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 0x109d893,
          },
        },
        testnet: !0,
      });
    },
    44711: (e, t, r) => {
      "use strict";
      r.d(t, { U: () => o });
      var n = r(98722),
        i = r(43071);
      function o(e) {
        let {
            batch: t,
            cacheTime: r = e.pollingInterval ?? 4e3,
            ccipRead: o,
            key: a = "base",
            name: s = "Base Client",
            pollingInterval: l = 4e3,
            type: u = "base",
          } = e,
          c = e.chain,
          d = e.account ? (0, n.J)(e.account) : void 0,
          {
            config: f,
            request: h,
            value: p,
          } = e.transport({ chain: c, pollingInterval: l }),
          m = {
            account: d,
            batch: t,
            cacheTime: r,
            ccipRead: o,
            chain: c,
            key: a,
            name: s,
            pollingInterval: l,
            request: h,
            transport: { ...f, ...p },
            type: u,
            uid: (0, i.L)(),
          };
        return Object.assign(m, {
          extend: (function e(t) {
            return (r) => {
              let n = r(t);
              for (let e in m) delete n[e];
              let i = { ...t, ...n };
              return Object.assign(i, { extend: e(i) });
            };
          })(m),
        });
      }
    },
    4898: (e, t, r) => {
      "use strict";
      r.d(t, { l: () => r4 });
      var n = r(44711),
        i = r(38472),
        o = r(59719),
        a = r(74046),
        s = r(40874),
        l = r(67368),
        u = r(98979),
        c = r(4382),
        d = r(80477),
        f = r(88085);
      function h(e, t) {
        if (!(e instanceof d.C)) return !1;
        let r = e.walk((e) => e instanceof f.M);
        return (
          r instanceof f.M &&
          (!!(
            r.data?.errorName === "ResolverNotFound" ||
            r.data?.errorName === "ResolverWildcardNotSupported" ||
            r.data?.errorName === "ResolverNotContract" ||
            r.data?.errorName === "ResolverError" ||
            r.data?.errorName === "HttpError" ||
            r.reason?.includes(
              "Wildcard on non-extended resolvers is not supported"
            )
          ) ||
            ("reverse" === t && r.reason === c.fD[50]))
        );
      }
      var p = r(52857),
        m = r(16704),
        g = r(76397),
        y = r(65978),
        b = r(11601);
      function v(e) {
        if (66 !== e.length || 0 !== e.indexOf("[") || 65 !== e.indexOf("]"))
          return null;
        let t = `0x${e.slice(1, 65)}`;
        return (0, b.q)(t) ? t : null;
      }
      function w(e) {
        let t = new Uint8Array(32).fill(0);
        if (!e) return (0, u.My)(t);
        let r = e.split(".");
        for (let e = r.length - 1; e >= 0; e -= 1) {
          let n = v(r[e]),
            i = n ? (0, g.ZJ)(n) : (0, y.S)((0, g.Af)(r[e]), "bytes");
          t = (0, y.S)((0, m.xW)([t, i]), "bytes");
        }
        return (0, u.My)(t);
      }
      function x(e) {
        let t = e.replace(/^\.|\.$/gm, "");
        if (0 === t.length) return new Uint8Array(1);
        let r = new Uint8Array((0, g.Af)(t).byteLength + 2),
          n = 0,
          i = t.split(".");
        for (let e = 0; e < i.length; e++) {
          let t = (0, g.Af)(i[e]);
          if (t.byteLength > 255) {
            var o;
            t = (0, g.Af)(
              ((o = (function (e) {
                let t = new Uint8Array(32).fill(0);
                return e ? v(e) || (0, y.S)((0, g.Af)(e)) : (0, u.My)(t);
              })(i[e])),
              `[${o.slice(2)}]`)
            );
          }
          (r[n] = t.length), r.set(t, n + 1), (n += t.length + 1);
        }
        return r.byteLength !== n + 1 ? r.slice(0, n + 1) : r;
      }
      var A = r(72447),
        E = r(80305),
        k = r(66750);
      async function I(e, t) {
        let { abi: r, address: n, args: i, functionName: s, ...l } = t,
          u = (0, a.p)({ abi: r, args: i, functionName: s });
        try {
          let { data: t } = await (0, A.T)(
            e,
            k.T,
            "call"
          )({ ...l, data: u, to: n });
          return (0, o.e)({
            abi: r,
            args: i,
            functionName: s,
            data: t || "0x",
          });
        } catch (e) {
          throw (0, E.j)(e, {
            abi: r,
            address: n,
            args: i,
            docsPath: "/docs/contract/readContract",
            functionName: s,
          });
        }
      }
      async function S(e, t) {
        let {
            blockNumber: r,
            blockTag: n,
            coinType: c,
            name: d,
            gatewayUrls: f,
            strict: m,
          } = t,
          { chain: g } = e,
          y = (() => {
            if (t.universalResolverAddress) return t.universalResolverAddress;
            if (!g)
              throw Error(
                "client chain not configured. universalResolverAddress is required."
              );
            return (0, s.M)({
              blockNumber: r,
              chain: g,
              contract: "ensUniversalResolver",
            });
          })(),
          b = g?.ensTlds;
        if (b && !b.some((e) => d.endsWith(e))) return null;
        try {
          let t = (0, a.p)({
              abi: i.Rm,
              functionName: "addr",
              ...(null != c ? { args: [w(d), BigInt(c)] } : { args: [w(d)] }),
            }),
            s = {
              address: y,
              abi: i.Ag,
              functionName: "resolve",
              args: [(0, u.nj)(x(d)), t, f ?? [p.J]],
              blockNumber: r,
              blockTag: n,
            },
            h = (0, A.T)(e, I, "readContract"),
            m = await h(s);
          if ("0x" === m[0]) return null;
          let g = (0, o.e)({
            abi: i.Rm,
            args: null != c ? [w(d), BigInt(c)] : void 0,
            functionName: "addr",
            data: m[0],
          });
          if ("0x" === g || "0x00" === (0, l.B)(g)) return null;
          return g;
        } catch (e) {
          if (m) throw e;
          if (h(e, "resolve")) return null;
          throw e;
        }
      }
      class P extends d.C {
        constructor({ data: e }) {
          super(
            "Unable to extract image from metadata. The metadata may be malformed or invalid.",
            {
              metaMessages: [
                "- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.",
                "",
                `Provided data: ${JSON.stringify(e)}`,
              ],
              name: "EnsAvatarInvalidMetadataError",
            }
          );
        }
      }
      class T extends d.C {
        constructor({ reason: e }) {
          super(`ENS NFT avatar URI is invalid. ${e}`, {
            name: "EnsAvatarInvalidNftUriError",
          });
        }
      }
      class C extends d.C {
        constructor({ uri: e }) {
          super(
            `Unable to resolve ENS avatar URI "${e}". The URI may be malformed, invalid, or does not respond with a valid image.`,
            { name: "EnsAvatarUriResolutionError" }
          );
        }
      }
      class O extends d.C {
        constructor({ namespace: e }) {
          super(
            `ENS NFT avatar namespace "${e}" is not supported. Must be "erc721" or "erc1155".`,
            { name: "EnsAvatarUnsupportedNamespaceError" }
          );
        }
      }
      let _ =
          /(?<protocol>https?:\/\/[^\/]*|ipfs:\/|ipns:\/|ar:\/)?(?<root>\/)?(?<subpath>ipfs\/|ipns\/)?(?<target>[\w\-.]+)(?<subtarget>\/.*)?/,
        B =
          /^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\/(?<target>[\w\-.]+))?(?<subtarget>\/.*)?$/,
        R = /^data:([a-zA-Z\-/+]*);base64,([^"].*)/,
        N = /^data:([a-zA-Z\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/;
      async function M(e) {
        try {
          let t = await fetch(e, { method: "HEAD" });
          if (200 === t.status) {
            let e = t.headers.get("content-type");
            return e?.startsWith("image/");
          }
          return !1;
        } catch (t) {
          if (
            ("object" == typeof t && void 0 !== t.response) ||
            !globalThis.hasOwnProperty("Image")
          )
            return !1;
          return new Promise((t) => {
            let r = new Image();
            (r.onload = () => {
              t(!0);
            }),
              (r.onerror = () => {
                t(!1);
              }),
              (r.src = e);
          });
        }
      }
      function j(e, t) {
        return e ? (e.endsWith("/") ? e.slice(0, -1) : e) : t;
      }
      function F({ uri: e, gatewayUrls: t }) {
        let r = R.test(e);
        if (r) return { uri: e, isOnChain: !0, isEncoded: r };
        let n = j(t?.ipfs, "https://ipfs.io"),
          i = j(t?.arweave, "https://arweave.net"),
          o = e.match(_),
          {
            protocol: a,
            subpath: s,
            target: l,
            subtarget: u = "",
          } = o?.groups || {},
          c = "ipns:/" === a || "ipns/" === s,
          d = "ipfs:/" === a || "ipfs/" === s || B.test(e);
        if (e.startsWith("http") && !c && !d) {
          let r = e;
          return (
            t?.arweave && (r = e.replace(/https:\/\/arweave.net/g, t?.arweave)),
            { uri: r, isOnChain: !1, isEncoded: !1 }
          );
        }
        if ((c || d) && l)
          return {
            uri: `${n}/${c ? "ipns" : "ipfs"}/${l}${u}`,
            isOnChain: !1,
            isEncoded: !1,
          };
        if ("ar:/" === a && l)
          return { uri: `${i}/${l}${u || ""}`, isOnChain: !1, isEncoded: !1 };
        let f = e.replace(N, "");
        if (
          (f.startsWith("<svg") && (f = `data:image/svg+xml;base64,${btoa(f)}`),
          f.startsWith("data:") || f.startsWith("{"))
        )
          return { uri: f, isOnChain: !0, isEncoded: !1 };
        throw new C({ uri: e });
      }
      function L(e) {
        if (
          "object" != typeof e ||
          (!("image" in e) && !("image_url" in e) && !("image_data" in e))
        )
          throw new P({ data: e });
        return e.image || e.image_url || e.image_data;
      }
      async function D({ gatewayUrls: e, uri: t }) {
        try {
          let r = await fetch(t).then((e) => e.json());
          return await U({ gatewayUrls: e, uri: L(r) });
        } catch {
          throw new C({ uri: t });
        }
      }
      async function U({ gatewayUrls: e, uri: t }) {
        let { uri: r, isOnChain: n } = F({ uri: t, gatewayUrls: e });
        if (n || (await M(r))) return r;
        throw new C({ uri: t });
      }
      async function H(e, { nft: t }) {
        if ("erc721" === t.namespace)
          return I(e, {
            address: t.contractAddress,
            abi: [
              {
                name: "tokenURI",
                type: "function",
                stateMutability: "view",
                inputs: [{ name: "tokenId", type: "uint256" }],
                outputs: [{ name: "", type: "string" }],
              },
            ],
            functionName: "tokenURI",
            args: [BigInt(t.tokenID)],
          });
        if ("erc1155" === t.namespace)
          return I(e, {
            address: t.contractAddress,
            abi: [
              {
                name: "uri",
                type: "function",
                stateMutability: "view",
                inputs: [{ name: "_id", type: "uint256" }],
                outputs: [{ name: "", type: "string" }],
              },
            ],
            functionName: "uri",
            args: [BigInt(t.tokenID)],
          });
        throw new O({ namespace: t.namespace });
      }
      async function $(e, { gatewayUrls: t, record: r }) {
        return /eip155:/i.test(r)
          ? z(e, { gatewayUrls: t, record: r })
          : U({ uri: r, gatewayUrls: t });
      }
      async function z(e, { gatewayUrls: t, record: r }) {
        let n = (function (e) {
            let t = e;
            t.startsWith("did:nft:") &&
              (t = t.replace("did:nft:", "").replace(/_/g, "/"));
            let [r, n, i] = t.split("/"),
              [o, a] = r.split(":"),
              [s, l] = n.split(":");
            if (!o || "eip155" !== o.toLowerCase())
              throw new T({ reason: "Only EIP-155 supported" });
            if (!a) throw new T({ reason: "Chain ID not found" });
            if (!l) throw new T({ reason: "Contract address not found" });
            if (!i) throw new T({ reason: "Token ID not found" });
            if (!s) throw new T({ reason: "ERC namespace not found" });
            return {
              chainID: Number.parseInt(a),
              namespace: s.toLowerCase(),
              contractAddress: l,
              tokenID: i,
            };
          })(r),
          {
            uri: i,
            isOnChain: o,
            isEncoded: a,
          } = F({ uri: await H(e, { nft: n }), gatewayUrls: t });
        if (
          o &&
          (i.includes("data:application/json;base64,") || i.startsWith("{"))
        )
          return U({
            uri: L(
              JSON.parse(
                a ? atob(i.replace("data:application/json;base64,", "")) : i
              )
            ),
            gatewayUrls: t,
          });
        let s = n.tokenID;
        return (
          "erc1155" === n.namespace &&
            (s = s.replace("0x", "").padStart(64, "0")),
          D({ gatewayUrls: t, uri: i.replace(/(?:0x)?{id}/, s) })
        );
      }
      async function G(e, t) {
        let {
            blockNumber: r,
            blockTag: n,
            key: l,
            name: c,
            gatewayUrls: d,
            strict: f,
          } = t,
          { chain: m } = e,
          g = (() => {
            if (t.universalResolverAddress) return t.universalResolverAddress;
            if (!m)
              throw Error(
                "client chain not configured. universalResolverAddress is required."
              );
            return (0, s.M)({
              blockNumber: r,
              chain: m,
              contract: "ensUniversalResolver",
            });
          })(),
          y = m?.ensTlds;
        if (y && !y.some((e) => c.endsWith(e))) return null;
        try {
          let t = {
              address: g,
              abi: i.Ag,
              functionName: "resolve",
              args: [
                (0, u.nj)(x(c)),
                (0, a.p)({ abi: i.SJ, functionName: "text", args: [w(c), l] }),
                d ?? [p.J],
              ],
              blockNumber: r,
              blockTag: n,
            },
            s = (0, A.T)(e, I, "readContract"),
            f = await s(t);
          if ("0x" === f[0]) return null;
          let h = (0, o.e)({ abi: i.SJ, functionName: "text", data: f[0] });
          return "" === h ? null : h;
        } catch (e) {
          if (f) throw e;
          if (h(e, "resolve")) return null;
          throw e;
        }
      }
      async function q(
        e,
        {
          blockNumber: t,
          blockTag: r,
          assetGatewayUrls: n,
          name: i,
          gatewayUrls: o,
          strict: a,
          universalResolverAddress: s,
        }
      ) {
        let l = await (0, A.T)(
          e,
          G,
          "getEnsText"
        )({
          blockNumber: t,
          blockTag: r,
          key: "avatar",
          name: i,
          universalResolverAddress: s,
          gatewayUrls: o,
          strict: a,
        });
        if (!l) return null;
        try {
          return await $(e, { record: l, gatewayUrls: n });
        } catch {
          return null;
        }
      }
      async function W(
        e,
        {
          address: t,
          blockNumber: r,
          blockTag: n,
          gatewayUrls: o,
          strict: a,
          universalResolverAddress: l,
        }
      ) {
        let c = l;
        if (!c) {
          if (!e.chain)
            throw Error(
              "client chain not configured. universalResolverAddress is required."
            );
          c = (0, s.M)({
            blockNumber: r,
            chain: e.chain,
            contract: "ensUniversalResolver",
          });
        }
        let d = `${t.toLowerCase().substring(2)}.addr.reverse`;
        try {
          let a = {
              address: c,
              abi: i.oX,
              functionName: "reverse",
              args: [(0, u.nj)(x(d))],
              blockNumber: r,
              blockTag: n,
            },
            s = (0, A.T)(e, I, "readContract"),
            [l, f] = o ? await s({ ...a, args: [...a.args, o] }) : await s(a);
          if (t.toLowerCase() !== f.toLowerCase()) return null;
          return l;
        } catch (e) {
          if (a) throw e;
          if (h(e, "reverse")) return null;
          throw e;
        }
      }
      async function V(e, t) {
        let { blockNumber: r, blockTag: n, name: i } = t,
          { chain: o } = e,
          a = (() => {
            if (t.universalResolverAddress) return t.universalResolverAddress;
            if (!o)
              throw Error(
                "client chain not configured. universalResolverAddress is required."
              );
            return (0, s.M)({
              blockNumber: r,
              chain: o,
              contract: "ensUniversalResolver",
            });
          })(),
          l = o?.ensTlds;
        if (l && !l.some((e) => i.endsWith(e)))
          throw Error(
            `${i} is not a valid ENS TLD (${l?.join(", ")}) for chain "${
              o.name
            }" (id: ${o.id}).`
          );
        let [c] = await (0, A.T)(
          e,
          I,
          "readContract"
        )({
          address: a,
          abi: [
            {
              inputs: [{ type: "bytes" }],
              name: "findResolver",
              outputs: [{ type: "address" }, { type: "bytes32" }],
              stateMutability: "view",
              type: "function",
            },
          ],
          functionName: "findResolver",
          args: [(0, u.nj)(x(i))],
          blockNumber: r,
          blockTag: n,
        });
        return c;
      }
      var Z = r(98722),
        K = r(14303),
        Q = r(24058),
        J = r(53864),
        Y = r(41953);
      async function X(e, t) {
        let {
            account: r = e.account,
            blockNumber: n,
            blockTag: i = "latest",
            blobs: o,
            data: a,
            gas: s,
            gasPrice: l,
            maxFeePerBlobGas: c,
            maxFeePerGas: d,
            maxPriorityFeePerGas: f,
            to: h,
            value: p,
            ...m
          } = t,
          g = r ? (0, Z.J)(r) : void 0;
        try {
          (0, Y.c)(t);
          let r = n ? (0, u.cK)(n) : void 0,
            y = e.chain?.formatters?.transactionRequest?.format,
            b = (y || J.Bv)({
              ...(0, Q.o)(m, { format: y }),
              from: g?.address,
              blobs: o,
              data: a,
              gas: s,
              gasPrice: l,
              maxFeePerBlobGas: c,
              maxFeePerGas: d,
              maxPriorityFeePerGas: f,
              to: h,
              value: p,
            }),
            v = await e.request({
              method: "eth_createAccessList",
              params: [b, r || i],
            });
          return { accessList: v.accessList, gasUsed: BigInt(v.gasUsed) };
        } catch (r) {
          throw (0, K.d)(r, { ...t, account: g, chain: e.chain });
        }
      }
      function ee(e, { method: t }) {
        let r = {};
        return (
          "fallback" === e.transport.type &&
            e.transport.onResponse?.(
              ({ method: e, response: n, status: i, transport: o }) => {
                "success" === i && t === e && (r[n] = o.request);
              }
            ),
          (t) => r[t] || e.request
        );
      }
      async function et(e) {
        let t = ee(e, { method: "eth_newBlockFilter" }),
          r = await e.request({ method: "eth_newBlockFilter" });
        return { id: r, request: t(r), type: "block" };
      }
      var er = r(36991);
      class en extends d.C {
        constructor(e) {
          super(`Filter type "${e}" is not supported.`, {
            name: "FilterTypeNotSupportedError",
          });
        }
      }
      var ei = r(94490),
        eo = r(46304),
        ea = r(57880),
        es = r(4617);
      let el = "/docs/contract/encodeEventTopics";
      function eu(e) {
        let { abi: t, eventName: r, args: n } = e,
          i = t[0];
        if (r) {
          let e = (0, es.iY)({ abi: t, name: r });
          if (!e) throw new er.M_(r, { docsPath: el });
          i = e;
        }
        if ("event" !== i.type) throw new er.M_(void 0, { docsPath: el });
        let o = (0, ea.B)(i),
          a = (0, ei.h)(o),
          s = [];
        if (n && "inputs" in i) {
          let e = i.inputs?.filter((e) => "indexed" in e && e.indexed),
            t = Array.isArray(n)
              ? n
              : Object.values(n).length > 0
              ? e?.map((e) => n[e.name]) ?? []
              : [];
          t.length > 0 &&
            (s =
              e?.map((e, r) =>
                Array.isArray(t[r])
                  ? t[r].map((n, i) => ec({ param: e, value: t[r][i] }))
                  : void 0 !== t[r] && null !== t[r]
                  ? ec({ param: e, value: t[r] })
                  : null
              ) ?? []);
        }
        return [a, ...s];
      }
      function ec({ param: e, value: t }) {
        if ("string" === e.type || "bytes" === e.type)
          return (0, y.S)((0, g.ZJ)(t));
        if ("tuple" === e.type || e.type.match(/^(.*)\[(\d+)?\]$/))
          throw new en(e.type);
        return (0, eo.h)([e], [t]);
      }
      async function ed(e, t) {
        let {
            address: r,
            abi: n,
            args: i,
            eventName: o,
            fromBlock: a,
            strict: s,
            toBlock: l,
          } = t,
          c = ee(e, { method: "eth_newFilter" }),
          d = o ? eu({ abi: n, args: i, eventName: o }) : void 0,
          f = await e.request({
            method: "eth_newFilter",
            params: [
              {
                address: r,
                fromBlock: "bigint" == typeof a ? (0, u.cK)(a) : a,
                toBlock: "bigint" == typeof l ? (0, u.cK)(l) : l,
                topics: d,
              },
            ],
          });
        return {
          abi: n,
          args: i,
          eventName: o,
          id: f,
          request: c(f),
          strict: !!s,
          type: "event",
        };
      }
      async function ef(
        e,
        {
          address: t,
          args: r,
          event: n,
          events: i,
          fromBlock: o,
          strict: a,
          toBlock: s,
        } = {}
      ) {
        let l = i ?? (n ? [n] : void 0),
          c = ee(e, { method: "eth_newFilter" }),
          d = [];
        l &&
          ((d = [
            l.flatMap((e) => eu({ abi: [e], eventName: e.name, args: r })),
          ]),
          n && (d = d[0]));
        let f = await e.request({
          method: "eth_newFilter",
          params: [
            {
              address: t,
              fromBlock: "bigint" == typeof o ? (0, u.cK)(o) : o,
              toBlock: "bigint" == typeof s ? (0, u.cK)(s) : s,
              ...(d.length ? { topics: d } : {}),
            },
          ],
        });
        return {
          abi: l,
          args: r,
          eventName: n ? n.name : void 0,
          fromBlock: o,
          id: f,
          request: c(f),
          strict: !!a,
          toBlock: s,
          type: "event",
        };
      }
      async function eh(e) {
        let t = ee(e, { method: "eth_newPendingTransactionFilter" }),
          r = await e.request({ method: "eth_newPendingTransactionFilter" });
        return { id: r, request: t(r), type: "transaction" };
      }
      var ep = r(35679);
      async function em(e, t) {
        let {
            abi: r,
            address: n,
            args: i,
            functionName: o,
            dataSuffix: s,
            ...l
          } = t,
          u = (0, a.p)({ abi: r, args: i, functionName: o });
        try {
          return await (0, A.T)(
            e,
            ep.Q,
            "estimateGas"
          )({ data: `${u}${s ? s.replace("0x", "") : ""}`, to: n, ...l });
        } catch (t) {
          let e = l.account ? (0, Z.J)(l.account) : void 0;
          throw (0, E.j)(t, {
            abi: r,
            address: n,
            args: i,
            docsPath: "/docs/contract/estimateContractGas",
            functionName: o,
            sender: e?.address,
          });
        }
      }
      var eg = r(60710),
        ey = r(50801),
        eb = r(53765);
      async function ev(e) {
        return BigInt(await e.request({ method: "eth_blobBaseFee" }));
      }
      var ew = r(84208);
      let ex = new Map(),
        eA = new Map();
      async function eE(
        e,
        { cacheKey: t, cacheTime: r = Number.POSITIVE_INFINITY }
      ) {
        let n = (function (e) {
            let t = (e, t) => ({
                clear: () => t.delete(e),
                get: () => t.get(e),
                set: (r) => t.set(e, r),
              }),
              r = t(e, ex),
              n = t(e, eA);
            return {
              clear: () => {
                r.clear(), n.clear();
              },
              promise: r,
              response: n,
            };
          })(t),
          i = n.response.get();
        if (i && r > 0 && new Date().getTime() - i.created.getTime() < r)
          return i.data;
        let o = n.promise.get();
        o || ((o = e()), n.promise.set(o));
        try {
          let e = await o;
          return n.response.set({ created: new Date(), data: e }), e;
        } finally {
          n.promise.clear();
        }
      }
      let ek = (e) => `blockNumber.${e}`;
      async function eI(e, { cacheTime: t = e.cacheTime } = {}) {
        return BigInt(
          await eE(() => e.request({ method: "eth_blockNumber" }), {
            cacheKey: ek(e.uid),
            cacheTime: t,
          })
        );
      }
      var eS = r(45732);
      async function eP(
        e,
        { blockHash: t, blockNumber: r, blockTag: n = "latest" } = {}
      ) {
        let i;
        let o = void 0 !== r ? (0, u.cK)(r) : void 0;
        return (
          (i = t
            ? await e.request(
                { method: "eth_getBlockTransactionCountByHash", params: [t] },
                { dedupe: !0 }
              )
            : await e.request(
                {
                  method: "eth_getBlockTransactionCountByNumber",
                  params: [o || n],
                },
                { dedupe: !!o }
              )),
          (0, eS.ME)(i)
        );
      }
      var eT = r(30733);
      async function eC(
        e,
        { address: t, blockNumber: r, blockTag: n = "latest" }
      ) {
        let i = void 0 !== r ? (0, u.cK)(r) : void 0,
          o = await e.request(
            { method: "eth_getCode", params: [t, i || n] },
            { dedupe: !!i }
          );
        if ("0x" !== o) return o;
      }
      var eO = r(81770),
        e_ = r(91149),
        eB = r(90305),
        eR = r(68424);
      let eN = "/docs/contract/decodeEventLog";
      function eM(e) {
        let { abi: t, data: r, strict: n, topics: i } = e,
          o = n ?? !0,
          [a, ...s] = i;
        if (!a) throw new er._z({ docsPath: eN });
        let l =
          1 === t.length
            ? t[0]
            : t.find(
                (e) => "event" === e.type && a === (0, ei.h)((0, ea.B)(e))
              );
        if (!(l && "name" in l) || "event" !== l.type)
          throw new er.kE(a, { docsPath: eN });
        let { name: u, inputs: c } = l,
          d = c?.some((e) => !("name" in e && e.name)),
          f = d ? [] : {},
          h = c.filter((e) => "indexed" in e && e.indexed);
        for (let e = 0; e < h.length; e++) {
          let t = h[e],
            r = s[e];
          if (!r) throw new er.l3({ abiItem: l, param: t });
          f[d ? e : t.name || e] = (function ({ param: e, value: t }) {
            return "string" === e.type ||
              "bytes" === e.type ||
              "tuple" === e.type ||
              e.type.match(/^(.*)\[(\d+)?\]$/)
              ? t
              : ((0, eR.n)([e], t) || [])[0];
          })({ param: t, value: r });
        }
        let p = c.filter((e) => !("indexed" in e && e.indexed));
        if (p.length > 0) {
          if (r && "0x" !== r)
            try {
              let e = (0, eR.n)(p, r);
              if (e) {
                if (d) f = [...f, ...e];
                else for (let t = 0; t < p.length; t++) f[p[t].name] = e[t];
              }
            } catch (e) {
              if (o) {
                if (e instanceof er.Iy || e instanceof eB.SK)
                  throw new er.fo({
                    abiItem: l,
                    data: r,
                    params: p,
                    size: (0, e_.E)(r),
                  });
                throw e;
              }
            }
          else if (o)
            throw new er.fo({ abiItem: l, data: "0x", params: p, size: 0 });
        }
        return { eventName: u, args: Object.values(f).length > 0 ? f : void 0 };
      }
      function ej(e) {
        let { abi: t, args: r, logs: n, strict: i = !0 } = e,
          o = (() => {
            if (e.eventName)
              return Array.isArray(e.eventName) ? e.eventName : [e.eventName];
          })();
        return n
          .map((e) => {
            try {
              let n = t.find(
                (t) => "event" === t.type && e.topics[0] === (0, ei.h)(t)
              );
              if (!n) return null;
              let a = eM({ ...e, abi: [n], strict: i });
              if (
                (o && !o.includes(a.eventName)) ||
                !(function (e) {
                  let { args: t, inputs: r, matchArgs: n } = e;
                  if (!n) return !0;
                  if (!t) return !1;
                  function i(e, t, r) {
                    try {
                      if ("address" === e.type) return (0, eO.h)(t, r);
                      if ("string" === e.type || "bytes" === e.type)
                        return (0, y.S)((0, g.ZJ)(t)) === r;
                      return t === r;
                    } catch {
                      return !1;
                    }
                  }
                  return Array.isArray(t) && Array.isArray(n)
                    ? n.every((e, n) => {
                        if (null == e) return !0;
                        let o = r[n];
                        return (
                          !!o &&
                          (Array.isArray(e) ? e : [e]).some((e) =>
                            i(o, e, t[n])
                          )
                        );
                      })
                    : !(
                        "object" != typeof t ||
                        Array.isArray(t) ||
                        "object" != typeof n ||
                        Array.isArray(n)
                      ) &&
                        Object.entries(n).every(([e, n]) => {
                          if (null == n) return !0;
                          let o = r.find((t) => t.name === e);
                          return (
                            !!o &&
                            (Array.isArray(n) ? n : [n]).some((r) =>
                              i(o, r, t[e])
                            )
                          );
                        });
                })({ args: a.args, inputs: n.inputs, matchArgs: r })
              )
                return null;
              return { ...a, ...e };
            } catch (n) {
              let t, r;
              if (n instanceof er.kE) return null;
              if (n instanceof er.fo || n instanceof er.l3) {
                if (i) return null;
                (t = n.abiItem.name),
                  (r = n.abiItem.inputs?.some((e) => !("name" in e && e.name)));
              }
              return { ...e, args: r ? [] : {}, eventName: t };
            }
          })
          .filter(Boolean);
      }
      var eF = r(58981);
      async function eL(
        e,
        {
          address: t,
          blockHash: r,
          fromBlock: n,
          toBlock: i,
          event: o,
          events: a,
          args: s,
          strict: l,
        } = {}
      ) {
        let c = a ?? (o ? [o] : void 0),
          d = [];
        c &&
          ((d = [
            c.flatMap((e) =>
              eu({ abi: [e], eventName: e.name, args: a ? void 0 : s })
            ),
          ]),
          o && (d = d[0]));
        let f = (
          r
            ? await e.request({
                method: "eth_getLogs",
                params: [{ address: t, topics: d, blockHash: r }],
              })
            : await e.request({
                method: "eth_getLogs",
                params: [
                  {
                    address: t,
                    topics: d,
                    fromBlock: "bigint" == typeof n ? (0, u.cK)(n) : n,
                    toBlock: "bigint" == typeof i ? (0, u.cK)(i) : i,
                  },
                ],
              })
        ).map((e) => (0, eF.e)(e));
        return c ? ej({ abi: c, args: s, logs: f, strict: l ?? !1 }) : f;
      }
      async function eD(e, t) {
        let {
            abi: r,
            address: n,
            args: i,
            blockHash: o,
            eventName: a,
            fromBlock: s,
            toBlock: l,
            strict: u,
          } = t,
          c = a ? (0, es.iY)({ abi: r, name: a }) : void 0,
          d = c ? void 0 : r.filter((e) => "event" === e.type);
        return (0, A.T)(
          e,
          eL,
          "getLogs"
        )({
          address: n,
          args: i,
          blockHash: o,
          event: c,
          events: d,
          fromBlock: s,
          toBlock: l,
          strict: u,
        });
      }
      class eU extends d.C {
        constructor({ address: e }) {
          super(`No EIP-712 domain found on contract "${e}".`, {
            metaMessages: [
              "Ensure that:",
              `- The contract is deployed at the address "${e}".`,
              "- `eip712Domain()` function exists on the contract.",
              "- `eip712Domain()` function matches signature to ERC-5267 specification.",
            ],
            name: "Eip712DomainNotFoundError",
          });
        }
      }
      async function eH(e, t) {
        let { address: r, factory: n, factoryData: i } = t;
        try {
          let [t, o, a, s, l, u, c] = await (0, A.T)(
            e,
            I,
            "readContract"
          )({
            abi: e$,
            address: r,
            functionName: "eip712Domain",
            factory: n,
            factoryData: i,
          });
          return {
            domain: {
              name: o,
              version: a,
              chainId: Number(s),
              verifyingContract: l,
              salt: u,
            },
            extensions: c,
            fields: t,
          };
        } catch (e) {
          if (
            "ContractFunctionExecutionError" === e.name &&
            "ContractFunctionZeroDataError" === e.cause.name
          )
            throw new eU({ address: r });
          throw e;
        }
      }
      let e$ = [
        {
          inputs: [],
          name: "eip712Domain",
          outputs: [
            { name: "fields", type: "bytes1" },
            { name: "name", type: "string" },
            { name: "version", type: "string" },
            { name: "chainId", type: "uint256" },
            { name: "verifyingContract", type: "address" },
            { name: "salt", type: "bytes32" },
            { name: "extensions", type: "uint256[]" },
          ],
          stateMutability: "view",
          type: "function",
        },
      ];
      async function ez(
        e,
        {
          blockCount: t,
          blockNumber: r,
          blockTag: n = "latest",
          rewardPercentiles: i,
        }
      ) {
        var o;
        let a = r ? (0, u.cK)(r) : void 0;
        return {
          baseFeePerGas: (o = await e.request(
            { method: "eth_feeHistory", params: [(0, u.cK)(t), a || n, i] },
            { dedupe: !!a }
          )).baseFeePerGas.map((e) => BigInt(e)),
          gasUsedRatio: o.gasUsedRatio,
          oldestBlock: BigInt(o.oldestBlock),
          reward: o.reward?.map((e) => e.map((e) => BigInt(e))),
        };
      }
      async function eG(e, { filter: t }) {
        let r = "strict" in t && t.strict,
          n = await t.request({
            method: "eth_getFilterChanges",
            params: [t.id],
          });
        if ("string" == typeof n[0]) return n;
        let i = n.map((e) => (0, eF.e)(e));
        return "abi" in t && t.abi ? ej({ abi: t.abi, logs: i, strict: r }) : i;
      }
      async function eq(e, { filter: t }) {
        let r = t.strict ?? !1,
          n = (
            await t.request({ method: "eth_getFilterLogs", params: [t.id] })
          ).map((e) => (0, eF.e)(e));
        return t.abi ? ej({ abi: t.abi, logs: n, strict: r }) : n;
      }
      var eW = r(8269);
      async function eV(
        e,
        { address: t, blockNumber: r, blockTag: n, storageKeys: i }
      ) {
        var o;
        let a = void 0 !== r ? (0, u.cK)(r) : void 0;
        return {
          ...(o = await e.request({
            method: "eth_getProof",
            params: [t, i, a || (n ?? "latest")],
          })),
          balance: o.balance ? BigInt(o.balance) : void 0,
          nonce: o.nonce ? (0, eS.ME)(o.nonce) : void 0,
          storageProof: o.storageProof
            ? o.storageProof.map((e) => ({ ...e, value: BigInt(e.value) }))
            : void 0,
        };
      }
      async function eZ(
        e,
        { address: t, blockNumber: r, blockTag: n = "latest", slot: i }
      ) {
        let o = void 0 !== r ? (0, u.cK)(r) : void 0;
        return await e.request({
          method: "eth_getStorageAt",
          params: [t, i, o || n],
        });
      }
      var eK = r(45757),
        eQ = r(6035);
      async function eJ(
        e,
        { blockHash: t, blockNumber: r, blockTag: n, hash: i, index: o }
      ) {
        let a = n || "latest",
          s = void 0 !== r ? (0, u.cK)(r) : void 0,
          l = null;
        if (
          (i
            ? (l = await e.request(
                { method: "eth_getTransactionByHash", params: [i] },
                { dedupe: !0 }
              ))
            : t
            ? (l = await e.request(
                {
                  method: "eth_getTransactionByBlockHashAndIndex",
                  params: [t, (0, u.cK)(o)],
                },
                { dedupe: !0 }
              ))
            : (s || a) &&
              (l = await e.request(
                {
                  method: "eth_getTransactionByBlockNumberAndIndex",
                  params: [s || a, (0, u.cK)(o)],
                },
                { dedupe: !!s }
              )),
          !l)
        )
          throw new eK.Kz({
            blockHash: t,
            blockNumber: r,
            blockTag: a,
            hash: i,
            index: o,
          });
        return (e.chain?.formatters?.transaction?.format || eQ.uP)(l);
      }
      async function eY(e, { hash: t, transactionReceipt: r }) {
        let [n, i] = await Promise.all([
            (0, A.T)(e, eI, "getBlockNumber")({}),
            t ? (0, A.T)(e, eJ, "getTransaction")({ hash: t }) : void 0,
          ]),
          o = r?.blockNumber || i?.blockNumber;
        return o ? n - o + 1n : 0n;
      }
      var eX = r(77184),
        e0 = r(68613);
      async function e1(e, { hash: t }) {
        let r = await e.request(
          { method: "eth_getTransactionReceipt", params: [t] },
          { dedupe: !0 }
        );
        if (!r) throw new eK.Kc({ hash: t });
        return (e.chain?.formatters?.transactionReceipt?.format || e0.uL)(r);
      }
      async function e2(e, t) {
        let {
            allowFailure: r = !0,
            batchSize: n,
            blockNumber: l,
            blockTag: u,
            multicallAddress: c,
            stateOverride: h,
          } = t,
          p = t.contracts,
          m =
            n ??
            (("object" == typeof e.batch?.multicall &&
              e.batch.multicall.batchSize) ||
              1024),
          g = c;
        if (!g) {
          if (!e.chain)
            throw Error(
              "client chain not configured. multicallAddress is required."
            );
          g = (0, s.M)({
            blockNumber: l,
            chain: e.chain,
            contract: "multicall3",
          });
        }
        let y = [[]],
          b = 0,
          v = 0;
        for (let e = 0; e < p.length; e++) {
          let { abi: t, address: n, args: i, functionName: o } = p[e];
          try {
            let e = (0, a.p)({ abi: t, args: i, functionName: o });
            (v += (e.length - 2) / 2),
              m > 0 &&
                v > m &&
                y[b].length > 0 &&
                (b++, (v = (e.length - 2) / 2), (y[b] = [])),
              (y[b] = [...y[b], { allowFailure: !0, callData: e, target: n }]);
          } catch (a) {
            let e = (0, E.j)(a, {
              abi: t,
              address: n,
              args: i,
              docsPath: "/docs/contract/multicall",
              functionName: o,
            });
            if (!r) throw e;
            y[b] = [...y[b], { allowFailure: !0, callData: "0x", target: n }];
          }
        }
        let w = await Promise.allSettled(
            y.map((t) =>
              (0, A.T)(
                e,
                I,
                "readContract"
              )({
                abi: i.v2,
                address: g,
                args: [t],
                blockNumber: l,
                blockTag: u,
                functionName: "aggregate3",
                stateOverride: h,
              })
            )
          ),
          x = [];
        for (let e = 0; e < w.length; e++) {
          let t = w[e];
          if ("rejected" === t.status) {
            if (!r) throw t.reason;
            for (let r = 0; r < y[e].length; r++)
              x.push({ status: "failure", error: t.reason, result: void 0 });
            continue;
          }
          let n = t.value;
          for (let t = 0; t < n.length; t++) {
            let { returnData: i, success: a } = n[t],
              { callData: s } = y[e][t],
              { abi: l, address: u, functionName: c, args: d } = p[x.length];
            try {
              if ("0x" === s) throw new er.O();
              if (!a) throw new f.$S({ data: i });
              let e = (0, o.e)({ abi: l, args: d, data: i, functionName: c });
              x.push(r ? { result: e, status: "success" } : e);
            } catch (t) {
              let e = (0, E.j)(t, {
                abi: l,
                address: u,
                args: d,
                docsPath: "/docs/contract/multicall",
                functionName: c,
              });
              if (!r) throw e;
              x.push({ error: e, result: void 0, status: "failure" });
            }
          }
        }
        if (x.length !== p.length) throw new d.C("multicall results mismatch");
        return x;
      }
      class e6 extends Error {
        constructor(e, t = {}) {
          let r = (() => {
              if (t.cause instanceof e6) {
                if (t.cause.details) return t.cause.details;
                if (t.cause.shortMessage) return t.cause.shortMessage;
              }
              return t.cause?.message ? t.cause.message : t.details;
            })(),
            n = (t.cause instanceof e6 && t.cause.docsPath) || t.docsPath,
            i = `https://oxlib.sh${n ?? ""}`;
          super(
            [
              e || "An error occurred.",
              ...(t.metaMessages ? ["", ...t.metaMessages] : []),
              ...(r || n
                ? ["", r ? `Details: ${r}` : void 0, n ? `See: ${i}` : void 0]
                : []),
            ]
              .filter((e) => "string" == typeof e)
              .join("\n"),
            t.cause ? { cause: t.cause } : void 0
          ),
            Object.defineProperty(this, "details", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "docs", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "docsPath", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "shortMessage", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "cause", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "BaseError",
            }),
            Object.defineProperty(this, "version", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "ox@0.1.1",
            }),
            (this.cause = t.cause),
            (this.details = r),
            (this.docs = i),
            (this.docsPath = n),
            (this.shortMessage = e);
        }
        walk(e) {
          return (function e(t, r) {
            return r?.(t)
              ? t
              : t && "object" == typeof t && "cause" in t && t.cause
              ? e(t.cause, r)
              : r
              ? null
              : t;
          })(this, e);
        }
      }
      function e5(e, t) {
        if (ta(e) > t) throw new tc({ givenSize: ta(e), maxSize: t });
      }
      function e3(e, t = {}) {
        let { dir: r, size: n = 32 } = t;
        if (0 === n) return e;
        let i = e.replace("0x", "");
        if (i.length > 2 * n)
          throw new tf({
            size: Math.ceil(i.length / 2),
            targetSize: n,
            type: "Hex",
          });
        return `0x${i["right" === r ? "padEnd" : "padStart"](2 * n, "0")}`;
      }
      let e8 = new TextEncoder(),
        e4 = Array.from({ length: 256 }, (e, t) =>
          t.toString(16).padStart(2, "0")
        );
      function e9(...e) {
        return `0x${e.reduce((e, t) => e + t.replace("0x", ""), "")}`;
      }
      function e7(e, t = {}) {
        let r = `0x${Number(e)}`;
        return "number" == typeof t.size ? (e5(r, t.size), tn(r, t.size)) : r;
      }
      function te(e, t = {}) {
        let r = "";
        for (let t = 0; t < e.length; t++) r += e4[e[t]];
        let n = `0x${r}`;
        return "number" == typeof t.size ? (e5(n, t.size), ti(n, t.size)) : n;
      }
      function tt(e, t = {}) {
        let r;
        let { signed: n, size: i } = t,
          o = BigInt(e);
        i
          ? (r = n
              ? (1n << (8n * BigInt(i) - 1n)) - 1n
              : 2n ** (8n * BigInt(i)) - 1n)
          : "number" == typeof e && (r = BigInt(Number.MAX_SAFE_INTEGER));
        let a = "bigint" == typeof r && n ? -r - 1n : 0;
        if ((r && o > r) || o < a) {
          let t = "bigint" == typeof e ? "n" : "";
          throw new ts({
            max: r ? `${r}${t}` : void 0,
            min: `${a}${t}`,
            signed: n,
            size: i,
            value: `${e}${t}`,
          });
        }
        let s = (n && o < 0 ? (1n << BigInt(8 * i)) + BigInt(o) : o).toString(
            16
          ),
          l = `0x${s}`;
        return i ? tn(l, i) : l;
      }
      function tr(e, t = {}) {
        return te(e8.encode(e), t);
      }
      function tn(e, t) {
        return e3(e, { dir: "left", size: t });
      }
      function ti(e, t) {
        return e3(e, { dir: "right", size: t });
      }
      function to(e, t, r, n = {}) {
        let { strict: i } = n;
        !(function (e, t) {
          if ("number" == typeof t && t > 0 && t > ta(e) - 1)
            throw new td({ offset: t, position: "start", size: ta(e) });
        })(e, t);
        let o = `0x${e
          .replace("0x", "")
          .slice((t ?? 0) * 2, (r ?? e.length) * 2)}`;
        return (
          i &&
            (function (e, t, r) {
              if (
                "number" == typeof t &&
                "number" == typeof r &&
                ta(e) !== r - t
              )
                throw new td({ offset: r, position: "end", size: ta(e) });
            })(o, t, r),
          o
        );
      }
      function ta(e) {
        return Math.ceil((e.length - 2) / 2);
      }
      class ts extends e6 {
        constructor({ max: e, min: t, signed: r, size: n, value: i }) {
          super(
            `Number \`${i}\` is not in safe${n ? ` ${8 * n}-bit` : ""}${
              r ? " signed" : " unsigned"
            } integer range ${
              e ? `(\`${t}\` to \`${e}\`)` : `(above \`${t}\`)`
            }`
          ),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "Hex.IntegerOutOfRangeError",
            });
        }
      }
      class tl extends e6 {
        constructor(e) {
          super(
            `Value \`${
              "object" == typeof e
                ? (function (e, t, r) {
                    return JSON.stringify(
                      e,
                      (e, t) =>
                        "bigint" == typeof t ? t.toString() + "#__bigint" : t,
                      void 0
                    );
                  })(e)
                : e
            }\` of type \`${typeof e}\` is an invalid hex type.`,
            {
              metaMessages: [
                'Hex types must be represented as `"0x${string}"`.',
              ],
            }
          ),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "Hex.InvalidHexTypeError",
            });
        }
      }
      class tu extends e6 {
        constructor(e) {
          super(`Value \`${e}\` is an invalid hex value.`, {
            metaMessages: [
              'Hex values must start with `"0x"` and contain only hexadecimal characters (0-9, a-f, A-F).',
            ],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "Hex.InvalidHexValueError",
            });
        }
      }
      class tc extends e6 {
        constructor({ givenSize: e, maxSize: t }) {
          super(
            `Size cannot exceed \`${t}\` bytes. Given size: \`${e}\` bytes.`
          ),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "Hex.SizeOverflowError",
            });
        }
      }
      class td extends e6 {
        constructor({ offset: e, position: t, size: r }) {
          super(
            `Slice ${
              "start" === t ? "starting" : "ending"
            } at offset \`${e}\` is out-of-bounds (size: \`${r}\`).`
          ),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "Hex.SliceOffsetOutOfBoundsError",
            });
        }
      }
      class tf extends e6 {
        constructor({ size: e, targetSize: t, type: r }) {
          super(
            `${r.charAt(0).toUpperCase()}${r
              .slice(1)
              .toLowerCase()} size (\`${e}\`) exceeds padding size (\`${t}\`).`
          ),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "Hex.SizeExceedsPaddingSizeError",
            });
        }
      }
      function th(e) {
        return {
          address: e.address,
          amount: tt(e.amount),
          index: tt(e.index),
          validatorIndex: tt(e.validatorIndex),
        };
      }
      var tp = r(87939),
        tm = r(90563),
        tg = r(55878),
        ty = r(52368);
      async function tb(e, t) {
        let {
          blockNumber: r,
          blockTag: n = "latest",
          blocks: i,
          returnFullTransactions: s,
          traceTransfers: l,
          validation: c,
        } = t;
        try {
          let t = [];
          for (let e of i) {
            var d;
            let r = e.blockOverrides
                ? ((d = e.blockOverrides),
                  {
                    ...("bigint" == typeof d.baseFeePerGas && {
                      baseFeePerGas: tt(d.baseFeePerGas),
                    }),
                    ...("bigint" == typeof d.blobBaseFee && {
                      blobBaseFee: tt(d.blobBaseFee),
                    }),
                    ...("string" == typeof d.feeRecipient && {
                      feeRecipient: d.feeRecipient,
                    }),
                    ...("bigint" == typeof d.gasLimit && {
                      gasLimit: tt(d.gasLimit),
                    }),
                    ...("bigint" == typeof d.number && {
                      number: tt(d.number),
                    }),
                    ...("bigint" == typeof d.prevRandao && {
                      prevRandao: tt(d.prevRandao),
                    }),
                    ...("bigint" == typeof d.time && { time: tt(d.time) }),
                    ...(d.withdrawals && {
                      withdrawals: d.withdrawals.map(th),
                    }),
                  })
                : void 0,
              n = e.calls.map((e) => {
                let t = e.account ? (0, Z.J)(e.account) : void 0,
                  r = {
                    ...e,
                    data: e.abi ? (0, a.p)(e) : e.data,
                    from: e.from ?? t?.address,
                  };
                return (0, Y.c)(r), (0, J.Bv)(r);
              }),
              i = e.stateOverrides ? (0, ty.yH)(e.stateOverrides) : void 0;
            t.push({ blockOverrides: r, calls: n, stateOverrides: i });
          }
          let h = r ? (0, u.cK)(r) : void 0;
          return (
            await e.request({
              method: "eth_simulateV1",
              params: [
                {
                  blockStateCalls: t,
                  returnFullTransactions: s,
                  traceTransfers: l,
                  validation: c,
                },
                h || n,
              ],
            })
          ).map((e, t) => ({
            ...(0, tg.$)(e),
            calls: e.calls.map((e, r) => {
              let { abi: n, args: a, functionName: s, to: l } = i[t].calls[r],
                u = e.error?.data ?? e.returnData,
                c = BigInt(e.gasUsed),
                d = e.logs?.map((e) => eF.e(e)),
                h = "0x1" === e.status ? "success" : "failure",
                p =
                  n && "success" === h && "0x" !== u
                    ? (0, o.e)({ abi: n, data: u, functionName: s })
                    : null,
                m = (() => {
                  let t;
                  if (
                    "success" !== h &&
                    (e.error?.data === "0x"
                      ? (t = new er.O())
                      : e.error && (t = new f.$S(e.error)),
                    t)
                  )
                    return (0, E.j)(t, {
                      abi: n ?? [],
                      address: l,
                      args: a,
                      functionName: s ?? "<unknown>",
                    });
                })();
              return {
                data: u,
                gasUsed: c,
                logs: d,
                status: h,
                ...("success" === h ? { result: p } : { error: m }),
              };
            }),
          }));
        } catch (t) {
          let e = (0, tm.l)(t, {});
          if (e instanceof tp.RM) throw t;
          throw e;
        }
      }
      class tv extends Error {
        constructor(e, t = {}) {
          let r =
              t.cause instanceof tv
                ? t.cause.details
                : t.cause?.message
                ? t.cause.message
                : t.details,
            n = (t.cause instanceof tv && t.cause.docsPath) || t.docsPath;
          super(
            [
              e || "An error occurred.",
              "",
              ...(t.metaMessages ? [...t.metaMessages, ""] : []),
              ...(n ? [`Docs: https://abitype.dev${n}`] : []),
              ...(r ? [`Details: ${r}`] : []),
              "Version: abitype@1.1.0",
            ].join("\n")
          ),
            Object.defineProperty(this, "details", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "docsPath", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "metaMessages", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "shortMessage", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "AbiTypeError",
            }),
            t.cause && (this.cause = t.cause),
            (this.details = r),
            (this.docsPath = n),
            (this.metaMessages = t.metaMessages),
            (this.shortMessage = e);
        }
      }
      class tw extends tv {
        constructor({ signature: e }) {
          super("Failed to parse ABI item.", {
            details: `parseAbiItem(${JSON.stringify(e, null, 2)})`,
            docsPath: "/api/human#parseabiitem-1",
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidAbiItemError",
            });
        }
      }
      class tx extends tv {
        constructor({ type: e }) {
          super("Unknown type.", {
            metaMessages: [
              `Type "${e}" is not a valid ABI type. Perhaps you forgot to include a struct signature?`,
            ],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "UnknownTypeError",
            });
        }
      }
      class tA extends tv {
        constructor({ type: e }) {
          super("Unknown type.", {
            metaMessages: [`Type "${e}" is not a valid ABI type.`],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "UnknownSolidityTypeError",
            });
        }
      }
      function tE(e, t) {
        let r = e.exec(t);
        return r?.groups;
      }
      let tk = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/,
        tI =
          /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/,
        tS = /^\(.+?\).*?$/,
        tP = /^error (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)$/,
        tT = /^event (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)$/,
        tC =
          /^function (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)(?: (?<scope>external|public{1}))?(?: (?<stateMutability>pure|view|nonpayable|payable{1}))?(?: returns\s?\((?<returns>.*?)\))?$/,
        tO =
          /^struct (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*) \{(?<properties>.*?)\}$/,
        t_ =
          /^constructor\((?<parameters>.*?)\)(?:\s(?<stateMutability>payable{1}))?$/,
        tB = /^fallback\(\) external(?:\s(?<stateMutability>payable{1}))?$/,
        tR = /^receive\(\) external payable$/,
        tN = new Set(["indexed"]),
        tM = new Set(["calldata", "memory", "storage"]);
      class tj extends tv {
        constructor({ param: e }) {
          super("Invalid ABI parameter.", { details: e }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidParameterError",
            });
        }
      }
      class tF extends tv {
        constructor({ param: e, name: t }) {
          super("Invalid ABI parameter.", {
            details: e,
            metaMessages: [
              `"${t}" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`,
            ],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "SolidityProtectedKeywordError",
            });
        }
      }
      class tL extends tv {
        constructor({ param: e, type: t, modifier: r }) {
          super("Invalid ABI parameter.", {
            details: e,
            metaMessages: [
              `Modifier "${r}" not allowed${t ? ` in "${t}" type` : ""}.`,
            ],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidModifierError",
            });
        }
      }
      class tD extends tv {
        constructor({ param: e, type: t, modifier: r }) {
          super("Invalid ABI parameter.", {
            details: e,
            metaMessages: [
              `Modifier "${r}" not allowed${t ? ` in "${t}" type` : ""}.`,
              `Data location can only be specified for array, struct, or mapping types, but "${r}" was given.`,
            ],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidFunctionModifierError",
            });
        }
      }
      class tU extends tv {
        constructor({ abiParameter: e }) {
          super("Invalid ABI parameter.", {
            details: JSON.stringify(e, null, 2),
            metaMessages: ["ABI parameter type is invalid."],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidAbiTypeParameterError",
            });
        }
      }
      class tH extends tv {
        constructor({ signature: e, type: t }) {
          super(`Invalid ${t} signature.`, { details: e }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidSignatureError",
            });
        }
      }
      class t$ extends tv {
        constructor({ signature: e }) {
          super("Unknown signature.", { details: e }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "UnknownSignatureError",
            });
        }
      }
      class tz extends tv {
        constructor({ signature: e }) {
          super("Invalid struct signature.", {
            details: e,
            metaMessages: ["No properties exist."],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidStructSignatureError",
            });
        }
      }
      class tG extends tv {
        constructor({ type: e }) {
          super("Circular reference detected.", {
            metaMessages: [`Struct "${e}" is a circular reference.`],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "CircularReferenceError",
            });
        }
      }
      class tq extends tv {
        constructor({ current: e, depth: t }) {
          super("Unbalanced parentheses.", {
            metaMessages: [
              `"${e.trim()}" has too many ${
                t > 0 ? "opening" : "closing"
              } parentheses.`,
            ],
            details: `Depth "${t}"`,
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidParenthesisError",
            });
        }
      }
      let tW = new Map([
        ["address", { type: "address" }],
        ["bool", { type: "bool" }],
        ["bytes", { type: "bytes" }],
        ["bytes32", { type: "bytes32" }],
        ["int", { type: "int256" }],
        ["int256", { type: "int256" }],
        ["string", { type: "string" }],
        ["uint", { type: "uint256" }],
        ["uint8", { type: "uint8" }],
        ["uint16", { type: "uint16" }],
        ["uint24", { type: "uint24" }],
        ["uint32", { type: "uint32" }],
        ["uint64", { type: "uint64" }],
        ["uint96", { type: "uint96" }],
        ["uint112", { type: "uint112" }],
        ["uint160", { type: "uint160" }],
        ["uint192", { type: "uint192" }],
        ["uint256", { type: "uint256" }],
        ["address owner", { type: "address", name: "owner" }],
        ["address to", { type: "address", name: "to" }],
        ["bool approved", { type: "bool", name: "approved" }],
        ["bytes _data", { type: "bytes", name: "_data" }],
        ["bytes data", { type: "bytes", name: "data" }],
        ["bytes signature", { type: "bytes", name: "signature" }],
        ["bytes32 hash", { type: "bytes32", name: "hash" }],
        ["bytes32 r", { type: "bytes32", name: "r" }],
        ["bytes32 root", { type: "bytes32", name: "root" }],
        ["bytes32 s", { type: "bytes32", name: "s" }],
        ["string name", { type: "string", name: "name" }],
        ["string symbol", { type: "string", name: "symbol" }],
        ["string tokenURI", { type: "string", name: "tokenURI" }],
        ["uint tokenId", { type: "uint256", name: "tokenId" }],
        ["uint8 v", { type: "uint8", name: "v" }],
        ["uint256 balance", { type: "uint256", name: "balance" }],
        ["uint256 tokenId", { type: "uint256", name: "tokenId" }],
        ["uint256 value", { type: "uint256", name: "value" }],
        [
          "event:address indexed from",
          { type: "address", name: "from", indexed: !0 },
        ],
        [
          "event:address indexed to",
          { type: "address", name: "to", indexed: !0 },
        ],
        [
          "event:uint indexed tokenId",
          { type: "uint256", name: "tokenId", indexed: !0 },
        ],
        [
          "event:uint256 indexed tokenId",
          { type: "uint256", name: "tokenId", indexed: !0 },
        ],
      ]);
      function tV(e, t = {}) {
        if (tC.test(e))
          return (function (e, t = {}) {
            let r = tE(tC, e);
            if (!r) throw new tH({ signature: e, type: "function" });
            let n = tY(r.parameters),
              i = [],
              o = n.length;
            for (let e = 0; e < o; e++)
              i.push(tJ(n[e], { modifiers: tM, structs: t, type: "function" }));
            let a = [];
            if (r.returns) {
              let e = tY(r.returns),
                n = e.length;
              for (let r = 0; r < n; r++)
                a.push(
                  tJ(e[r], { modifiers: tM, structs: t, type: "function" })
                );
            }
            return {
              name: r.name,
              type: "function",
              stateMutability: r.stateMutability ?? "nonpayable",
              inputs: i,
              outputs: a,
            };
          })(e, t);
        if (tT.test(e))
          return (function (e, t = {}) {
            let r = tE(tT, e);
            if (!r) throw new tH({ signature: e, type: "event" });
            let n = tY(r.parameters),
              i = [],
              o = n.length;
            for (let e = 0; e < o; e++)
              i.push(tJ(n[e], { modifiers: tN, structs: t, type: "event" }));
            return { name: r.name, type: "event", inputs: i };
          })(e, t);
        if (tP.test(e))
          return (function (e, t = {}) {
            let r = tE(tP, e);
            if (!r) throw new tH({ signature: e, type: "error" });
            let n = tY(r.parameters),
              i = [],
              o = n.length;
            for (let e = 0; e < o; e++)
              i.push(tJ(n[e], { structs: t, type: "error" }));
            return { name: r.name, type: "error", inputs: i };
          })(e, t);
        if (t_.test(e))
          return (function (e, t = {}) {
            let r = tE(t_, e);
            if (!r) throw new tH({ signature: e, type: "constructor" });
            let n = tY(r.parameters),
              i = [],
              o = n.length;
            for (let e = 0; e < o; e++)
              i.push(tJ(n[e], { structs: t, type: "constructor" }));
            return {
              type: "constructor",
              stateMutability: r.stateMutability ?? "nonpayable",
              inputs: i,
            };
          })(e, t);
        if (tB.test(e))
          return (function (e) {
            let t = tE(tB, e);
            if (!t) throw new tH({ signature: e, type: "fallback" });
            return {
              type: "fallback",
              stateMutability: t.stateMutability ?? "nonpayable",
            };
          })(e);
        if (tR.test(e)) return { type: "receive", stateMutability: "payable" };
        throw new t$({ signature: e });
      }
      let tZ =
          /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*(?:\spayable)?)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/,
        tK =
          /^\((?<type>.+?)\)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/,
        tQ = /^u?int$/;
      function tJ(e, t) {
        var r, n;
        let i;
        let o = (function (e, t, r) {
          let n = "";
          if (r)
            for (let e of Object.entries(r)) {
              if (!e) continue;
              let t = "";
              for (let r of e[1])
                t += `[${r.type}${r.name ? `:${r.name}` : ""}]`;
              n += `(${e[0]}{${t}})`;
            }
          return t ? `${t}:${e}${n}` : e;
        })(e, t?.type, t?.structs);
        if (tW.has(o)) return tW.get(o);
        let a = tS.test(e),
          s = tE(a ? tK : tZ, e);
        if (!s) throw new tj({ param: e });
        if (
          s.name &&
          ("address" === (r = s.name) ||
            "bool" === r ||
            "function" === r ||
            "string" === r ||
            "tuple" === r ||
            tk.test(r) ||
            tI.test(r) ||
            t0.test(r))
        )
          throw new tF({ param: e, name: s.name });
        let l = s.name ? { name: s.name } : {},
          u = "indexed" === s.modifier ? { indexed: !0 } : {},
          c = t?.structs ?? {},
          d = {};
        if (a) {
          i = "tuple";
          let e = tY(s.type),
            t = [],
            r = e.length;
          for (let n = 0; n < r; n++) t.push(tJ(e[n], { structs: c }));
          d = { components: t };
        } else if (s.type in c) (i = "tuple"), (d = { components: c[s.type] });
        else if (tQ.test(s.type)) i = `${s.type}256`;
        else if ("address payable" === s.type) i = "address";
        else if (((i = s.type), t?.type !== "struct" && !tX(i)))
          throw new tA({ type: i });
        if (s.modifier) {
          if (!t?.modifiers?.has?.(s.modifier))
            throw new tL({ param: e, type: t?.type, modifier: s.modifier });
          if (
            tM.has(s.modifier) &&
            ((n = i),
            !s.array && "bytes" !== n && "string" !== n && "tuple" !== n)
          )
            throw new tD({ param: e, type: t?.type, modifier: s.modifier });
        }
        let f = { type: `${i}${s.array ?? ""}`, ...l, ...u, ...d };
        return tW.set(o, f), f;
      }
      function tY(e, t = [], r = "", n = 0) {
        let i = e.trim().length;
        for (let o = 0; o < i; o++) {
          let i = e[o],
            a = e.slice(o + 1);
          switch (i) {
            case ",":
              return 0 === n
                ? tY(a, [...t, r.trim()])
                : tY(a, t, `${r}${i}`, n);
            case "(":
              return tY(a, t, `${r}${i}`, n + 1);
            case ")":
              return tY(a, t, `${r}${i}`, n - 1);
            default:
              return tY(a, t, `${r}${i}`, n);
          }
        }
        if ("" === r) return t;
        if (0 !== n) throw new tq({ current: r, depth: n });
        return t.push(r.trim()), t;
      }
      function tX(e) {
        return (
          "address" === e ||
          "bool" === e ||
          "function" === e ||
          "string" === e ||
          tk.test(e) ||
          tI.test(e)
        );
      }
      let t0 =
          /^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/,
        t1 = /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\[\d*?\])+?)?$/,
        t2 = /^tuple(?<array>(\[(\d*)\])*)$/;
      function t6(e) {
        let t = "",
          r = e.length;
        for (let n = 0; n < r; n++)
          (t += (function e(t) {
            let r = t.type;
            if (t2.test(t.type) && "components" in t) {
              r = "(";
              let n = t.components.length;
              for (let i = 0; i < n; i++)
                (r += e(t.components[i])), i < n - 1 && (r += ", ");
              let i = tE(t2, t.type);
              return (r += `)${i?.array ?? ""}`), e({ ...t, type: r });
            }
            return ("indexed" in t && t.indexed && (r = `${r} indexed`), t.name)
              ? `${r} ${t.name}`
              : r;
          })(e[n])),
            n !== r - 1 && (t += ", ");
        return t;
      }
      function t5(e) {
        return "function" === e.type
          ? `function ${e.name}(${t6(e.inputs)})${
              e.stateMutability && "nonpayable" !== e.stateMutability
                ? ` ${e.stateMutability}`
                : ""
            }${e.outputs?.length ? ` returns (${t6(e.outputs)})` : ""}`
          : "event" === e.type
          ? `event ${e.name}(${t6(e.inputs)})`
          : "error" === e.type
          ? `error ${e.name}(${t6(e.inputs)})`
          : "constructor" === e.type
          ? `constructor(${t6(e.inputs)})${
              "payable" === e.stateMutability ? " payable" : ""
            }`
          : "fallback" === e.type
          ? `fallback() external${
              "payable" === e.stateMutability ? " payable" : ""
            }`
          : "receive() external payable";
      }
      var t3 = r(42869);
      let t8 = { zero: 48, nine: 57, A: 65, F: 70, a: 97, f: 102 };
      function t4(e) {
        return e >= t8.zero && e <= t8.nine
          ? e - t8.zero
          : e >= t8.A && e <= t8.F
          ? e - (t8.A - 10)
          : e >= t8.a && e <= t8.f
          ? e - (t8.a - 10)
          : void 0;
      }
      let t9 = new TextEncoder();
      class t7 extends e6 {
        constructor({ givenSize: e, maxSize: t }) {
          super(
            `Size cannot exceed \`${t}\` bytes. Given size: \`${e}\` bytes.`
          ),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "Bytes.SizeOverflowError",
            });
        }
      }
      class re extends e6 {
        constructor({ size: e, targetSize: t, type: r }) {
          super(
            `${r.charAt(0).toUpperCase()}${r
              .slice(1)
              .toLowerCase()} size (\`${e}\`) exceeds padding size (\`${t}\`).`
          ),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "Bytes.SizeExceedsPaddingSizeError",
            });
        }
      }
      function rt(e, t = {}) {
        let { as: r = "string" == typeof e ? "Hex" : "Bytes" } = t,
          n = (0, t3.lY)(
            e instanceof Uint8Array
              ? e
              : "string" == typeof e
              ? (function (e, t = {}) {
                  let { size: r } = t,
                    n = e;
                  r && (e5(e, r), (n = ti(e, r)));
                  let i = n.slice(2);
                  i.length % 2 && (i = `0${i}`);
                  let o = i.length / 2,
                    a = new Uint8Array(o);
                  for (let e = 0, t = 0; e < o; e++) {
                    let r = t4(i.charCodeAt(t++)),
                      n = t4(i.charCodeAt(t++));
                    if (void 0 === r || void 0 === n)
                      throw new e6(
                        `Invalid byte sequence ("${i[t - 2]}${
                          i[t - 1]
                        }" in "${i}").`
                      );
                    a[e] = 16 * r + n;
                  }
                  return a;
                })(e)
              : e instanceof Uint8Array
              ? e
              : new Uint8Array(e)
          );
        return "Bytes" === r ? n : te(n);
      }
      class rr extends Map {
        constructor(e) {
          super(),
            Object.defineProperty(this, "maxSize", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.maxSize = e);
        }
        get(e) {
          let t = super.get(e);
          return (
            super.has(e) && void 0 !== t && (this.delete(e), super.set(e, t)), t
          );
        }
        set(e, t) {
          if ((super.set(e, t), this.maxSize && this.size > this.maxSize)) {
            let e = this.keys().next().value;
            e && this.delete(e);
          }
          return this;
        }
      }
      let rn = { checksum: new rr(8192) }.checksum,
        ri = /^0x[a-fA-F0-9]{40}$/;
      function ro(e, t = {}) {
        let { strict: r = !0 } = t;
        if (!ri.test(e)) throw new rs({ address: e, cause: new rl() });
        if (r) {
          if (e.toLowerCase() === e) return;
          if (
            (function (e) {
              if (rn.has(e)) return rn.get(e);
              ro(e, { strict: !1 });
              let t = e.substring(2).toLowerCase(),
                r = rt(
                  (function (e, t = {}) {
                    let { size: r } = t,
                      n = t9.encode(e);
                    return "number" == typeof r
                      ? (!(function (e, t) {
                          if (e.length > t)
                            throw new t7({ givenSize: e.length, maxSize: t });
                        })(n, r),
                        (function (e, t = {}) {
                          let { dir: r, size: n = 32 } = t;
                          if (0 === n) return e;
                          if (e.length > n)
                            throw new re({
                              size: e.length,
                              targetSize: n,
                              type: "Bytes",
                            });
                          let i = new Uint8Array(n);
                          for (let t = 0; t < n; t++) {
                            let o = "right" === r;
                            i[o ? t : n - t - 1] = e[o ? t : e.length - t - 1];
                          }
                          return i;
                        })(n, { dir: "right", size: r }))
                      : n;
                  })(t),
                  { as: "Bytes" }
                ),
                n = t.split("");
              for (let e = 0; e < 40; e += 2)
                r[e >> 1] >> 4 >= 8 && n[e] && (n[e] = n[e].toUpperCase()),
                  (15 & r[e >> 1]) >= 8 &&
                    n[e + 1] &&
                    (n[e + 1] = n[e + 1].toUpperCase());
              let i = `0x${n.join("")}`;
              return rn.set(e, i), i;
            })(e) !== e
          )
            throw new rs({ address: e, cause: new ru() });
        }
      }
      function ra(e, t = {}) {
        let { strict: r = !0 } = t ?? {};
        try {
          return ro(e, { strict: r }), !0;
        } catch {
          return !1;
        }
      }
      class rs extends e6 {
        constructor({ address: e, cause: t }) {
          super(`Address "${e}" is invalid.`, { cause: t }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "Address.InvalidAddressError",
            });
        }
      }
      class rl extends e6 {
        constructor() {
          super("Address is not a 20 byte (40 hexadecimal character) value."),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "Address.InvalidInputError",
            });
        }
      }
      class ru extends e6 {
        constructor() {
          super("Address does not match its checksum counterpart."),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "Address.InvalidChecksumError",
            });
        }
      }
      function rc(e) {
        let t = !0,
          r = "",
          n = 0,
          i = "",
          o = !1;
        for (let a = 0; a < e.length; a++) {
          let s = e[a];
          if (
            (["(", ")", ","].includes(s) && (t = !0),
            "(" === s && n++,
            ")" === s && n--,
            t)
          ) {
            if (0 === n) {
              if (" " === s && ["event", "function", "error", ""].includes(i))
                i = "";
              else if (((i += s), ")" === s)) {
                o = !0;
                break;
              }
              continue;
            }
            if (" " === s) {
              "," !== e[a - 1] &&
                "," !== r &&
                ",(" !== r &&
                ((r = ""), (t = !1));
              continue;
            }
            (i += s), (r += s);
          }
        }
        if (!o) throw new e6("Unable to normalize signature.");
        return i;
      }
      function rd(e, t = {}) {
        let { prepare: r = !0 } = t,
          n =
            Array.isArray(e) || "string" == typeof e
              ? (function (e) {
                  let t;
                  if ("string" == typeof e) t = tV(e);
                  else {
                    let r = (function (e) {
                        let t = {},
                          r = e.length;
                        for (let n = 0; n < r; n++) {
                          let r = e[n];
                          if (!tO.test(r)) continue;
                          let i = tE(tO, r);
                          if (!i)
                            throw new tH({ signature: r, type: "struct" });
                          let o = i.properties.split(";"),
                            a = [],
                            s = o.length;
                          for (let e = 0; e < s; e++) {
                            let t = o[e].trim();
                            if (!t) continue;
                            let r = tJ(t, { type: "struct" });
                            a.push(r);
                          }
                          if (!a.length) throw new tz({ signature: r });
                          t[i.name] = a;
                        }
                        let n = {},
                          i = Object.entries(t),
                          o = i.length;
                        for (let e = 0; e < o; e++) {
                          let [r, o] = i[e];
                          n[r] = (function e(t, r, n = new Set()) {
                            let i = [],
                              o = t.length;
                            for (let a = 0; a < o; a++) {
                              let o = t[a];
                              if (tS.test(o.type)) i.push(o);
                              else {
                                let t = tE(t1, o.type);
                                if (!t?.type) throw new tU({ abiParameter: o });
                                let { array: a, type: s } = t;
                                if (s in r) {
                                  if (n.has(s)) throw new tG({ type: s });
                                  i.push({
                                    ...o,
                                    type: `tuple${a ?? ""}`,
                                    components: e(
                                      r[s] ?? [],
                                      r,
                                      new Set([...n, s])
                                    ),
                                  });
                                } else if (tX(s)) i.push(o);
                                else throw new tx({ type: s });
                              }
                            }
                            return i;
                          })(o, t);
                        }
                        return n;
                      })(e),
                      n = e.length;
                    for (let i = 0; i < n; i++) {
                      let n = e[i];
                      if (!tO.test(n)) {
                        t = tV(n, r);
                        break;
                      }
                    }
                  }
                  if (!t) throw new tw({ signature: e });
                  return t;
                })(e)
              : e;
        return { ...n, ...(r ? { hash: rh(n) } : {}) };
      }
      function rf(e) {
        return to(rh(e), 0, 4);
      }
      function rh(e) {
        return "string" != typeof e && "hash" in e && e.hash
          ? e.hash
          : rt(tr(rc("string" == typeof e ? e : t5(e))));
      }
      class rp extends e6 {
        constructor(e, t) {
          super("Found ambiguous types in overloaded ABI Items.", {
            metaMessages: [
              `\`${e.type}\` in \`${rc(t5(e.abiItem))}\`, and`,
              `\`${t.type}\` in \`${rc(t5(t.abiItem))}\``,
              "",
              "These types encode differently and cannot be distinguished at runtime.",
              "Remove one of the ambiguous items in the ABI.",
            ],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "AbiItem.AmbiguityError",
            });
        }
      }
      class rm extends e6 {
        constructor({ name: e, data: t, type: r = "item" }) {
          super(
            `ABI ${r}${
              e ? ` with name "${e}"` : t ? ` with data "${t}"` : ""
            } not found.`
          ),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "AbiItem.NotFoundError",
            });
        }
      }
      let rg = /^(.*)\[([0-9]*)\]$/,
        ry = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/,
        rb =
          /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;
      function rv(e) {
        let t = 0;
        for (let r = 0; r < e.length; r++) {
          let { dynamic: n, encoded: i } = e[r];
          n ? (t += 32) : (t += ta(i));
        }
        let r = [],
          n = [],
          i = 0;
        for (let o = 0; o < e.length; o++) {
          let { dynamic: a, encoded: s } = e[o];
          a
            ? (r.push(tt(t + i, { size: 32 })), n.push(s), (i += ta(s)))
            : r.push(s);
        }
        return e9(...r, ...n);
      }
      function rw(e) {
        let t = e.match(/^(.*)\[(\d+)?\]$/);
        return t ? [t[2] ? Number(t[2]) : null, t[1]] : void 0;
      }
      function rx(e, t, r) {
        let { checksumAddress: n = !1 } = r ?? {};
        if (e.length !== t.length)
          throw new rI({ expectedLength: e.length, givenLength: t.length });
        let i = rv(
          (function ({ checksumAddress: e, parameters: t, values: r }) {
            let n = [];
            for (let i = 0; i < t.length; i++)
              n.push(
                (function e({
                  checksumAddress: t = !1,
                  parameter: r,
                  value: n,
                }) {
                  let i = rw(r.type);
                  if (i) {
                    let [o, a] = i;
                    return (function (t, r) {
                      let { checksumAddress: n, length: i, parameter: o } = r,
                        a = null === i;
                      if (!Array.isArray(t)) throw new rS(t);
                      if (!a && t.length !== i)
                        throw new rE({
                          expectedLength: i,
                          givenLength: t.length,
                          type: `${o.type}[${i}]`,
                        });
                      let s = !1,
                        l = [];
                      for (let r = 0; r < t.length; r++) {
                        let i = e({
                          checksumAddress: n,
                          parameter: o,
                          value: t[r],
                        });
                        i.dynamic && (s = !0), l.push(i);
                      }
                      if (a || s) {
                        let e = rv(l);
                        if (a) {
                          let t = tt(l.length, { size: 32 });
                          return {
                            dynamic: !0,
                            encoded: l.length > 0 ? e9(t, e) : t,
                          };
                        }
                        if (s) return { dynamic: !0, encoded: e };
                      }
                      return {
                        dynamic: !1,
                        encoded: e9(...l.map(({ encoded: e }) => e)),
                      };
                    })(n, {
                      checksumAddress: t,
                      length: o,
                      parameter: { ...r, type: a },
                    });
                  }
                  if ("tuple" === r.type)
                    return (function (t, r) {
                      let { checksumAddress: n, parameter: i } = r,
                        o = !1,
                        a = [];
                      for (let r = 0; r < i.components.length; r++) {
                        let s = i.components[r],
                          l = Array.isArray(t) ? r : s.name,
                          u = e({
                            checksumAddress: n,
                            parameter: s,
                            value: t[l],
                          });
                        a.push(u), u.dynamic && (o = !0);
                      }
                      return {
                        dynamic: o,
                        encoded: o
                          ? rv(a)
                          : e9(...a.map(({ encoded: e }) => e)),
                      };
                    })(n, { checksumAddress: t, parameter: r });
                  if ("address" === r.type)
                    return (function (e, t) {
                      let { checksum: r = !1 } = t;
                      return (
                        ro(e, { strict: r }),
                        { dynamic: !1, encoded: tn(e.toLowerCase()) }
                      );
                    })(n, { checksum: t });
                  if ("bool" === r.type)
                    return (function (e) {
                      if ("boolean" != typeof e)
                        throw new e6(
                          `Invalid boolean value: "${e}" (type: ${typeof e}). Expected: \`true\` or \`false\`.`
                        );
                      return { dynamic: !1, encoded: tn(e7(e)) };
                    })(n);
                  if (r.type.startsWith("uint") || r.type.startsWith("int")) {
                    let e = r.type.startsWith("int"),
                      [, , t = "256"] = rb.exec(r.type) ?? [];
                    return (function (e, { signed: t, size: r }) {
                      if ("number" == typeof r) {
                        let n = 2n ** (BigInt(r) - (t ? 1n : 0n)) - 1n,
                          i = t ? -n - 1n : 0n;
                        if (e > n || e < i)
                          throw new ts({
                            max: n.toString(),
                            min: i.toString(),
                            signed: t,
                            size: r / 8,
                            value: e.toString(),
                          });
                      }
                      return {
                        dynamic: !1,
                        encoded: tt(e, { size: 32, signed: t }),
                      };
                    })(n, { signed: e, size: Number(t) });
                  }
                  if (r.type.startsWith("bytes"))
                    return (function (e, { type: t }) {
                      let [, r] = t.split("bytes"),
                        n = ta(e);
                      if (!r) {
                        let t = e;
                        return (
                          n % 32 != 0 &&
                            (t = ti(
                              t,
                              32 * Math.ceil((e.length - 2) / 2 / 32)
                            )),
                          {
                            dynamic: !0,
                            encoded: e9(tn(tt(n, { size: 32 })), t),
                          }
                        );
                      }
                      if (n !== Number.parseInt(r))
                        throw new rk({
                          expectedSize: Number.parseInt(r),
                          value: e,
                        });
                      return { dynamic: !1, encoded: ti(e) };
                    })(n, { type: r.type });
                  if ("string" === r.type)
                    return (function (e) {
                      let t = tr(e),
                        r = Math.ceil(ta(t) / 32),
                        n = [];
                      for (let e = 0; e < r; e++)
                        n.push(ti(to(t, 32 * e, (e + 1) * 32)));
                      return {
                        dynamic: !0,
                        encoded: e9(ti(tt(ta(t), { size: 32 })), ...n),
                      };
                    })(n);
                  throw new rP(r.type);
                })({ checksumAddress: e, parameter: t[i], value: r[i] })
              );
            return n;
          })({ checksumAddress: n, parameters: e, values: t })
        );
        return 0 === i.length ? "0x" : i;
      }
      function rA(e, t) {
        if (e.length !== t.length)
          throw new rI({ expectedLength: e.length, givenLength: t.length });
        let r = [];
        for (let n = 0; n < e.length; n++) {
          let i = e[n],
            o = t[n];
          r.push(rA.encode(i, o));
        }
        return e9(...r);
      }
      (rA || (rA = {})).encode = function e(t, r, n = !1) {
        if ("address" === t) return ro(r), tn(r.toLowerCase(), n ? 32 : 0);
        if ("string" === t) return tr(r);
        if ("bytes" === t) return r;
        if ("bool" === t) return tn(e7(r), n ? 32 : 1);
        let i = t.match(rb);
        if (i) {
          let [e, t, o = "256"] = i,
            a = Number.parseInt(o) / 8;
          return tt(r, { size: n ? 32 : a, signed: "int" === t });
        }
        let o = t.match(ry);
        if (o) {
          let [e, t] = o;
          if (Number.parseInt(t) !== (r.length - 2) / 2)
            throw new rk({ expectedSize: Number.parseInt(t), value: r });
          return ti(r, n ? 32 : 0);
        }
        let a = t.match(rg);
        if (a && Array.isArray(r)) {
          let [t, n] = a,
            i = [];
          for (let t = 0; t < r.length; t++) i.push(e(n, r[t], !0));
          return 0 === i.length ? "0x" : e9(...i);
        }
        throw new rP(t);
      };
      class rE extends e6 {
        constructor({ expectedLength: e, givenLength: t, type: r }) {
          super(
            `Array length mismatch for type \`${r}\`. Expected: \`${e}\`. Given: \`${t}\`.`
          ),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "AbiParameters.ArrayLengthMismatchError",
            });
        }
      }
      class rk extends e6 {
        constructor({ expectedSize: e, value: t }) {
          super(
            `Size of bytes "${t}" (bytes${ta(
              t
            )}) does not match expected size (bytes${e}).`
          ),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "AbiParameters.BytesSizeMismatchError",
            });
        }
      }
      class rI extends e6 {
        constructor({ expectedLength: e, givenLength: t }) {
          super(`ABI encoding parameters/values length mismatch.
Expected length (parameters): ${e}
Given length (values): ${t}`),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "AbiParameters.LengthMismatchError",
            });
        }
      }
      class rS extends e6 {
        constructor(e) {
          super(`Value \`${e}\` is not a valid array.`),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "AbiParameters.InvalidArrayError",
            });
        }
      }
      class rP extends e6 {
        constructor(e) {
          super(`Type \`${e}\` is not a valid ABI Type.`),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "AbiParameters.InvalidTypeError",
            });
        }
      }
      function rT(e, t = {}) {
        return rd(e, t);
      }
      let rC = "0x0000000000000000000000000000000000000000";
      var rO = r(33726);
      async function r_(e, t) {
        let {
            blockNumber: r,
            blockTag: n,
            calls: i,
            stateOverrides: o,
            traceAssetChanges: s,
            traceTransfers: l,
            validation: u,
          } = t,
          c = t.account ? (0, Z.J)(t.account) : void 0;
        if (s && !c)
          throw new d.C(
            "`account` is required when `traceAssetChanges` is true"
          );
        let f = c
            ? (function (e, t) {
                let { bytecode: r, args: n } = t;
                return e9(
                  r,
                  e.inputs?.length && n?.length ? rx(e.inputs, n) : "0x"
                );
              })(rd("constructor(bytes, bytes)"), {
                bytecode: rO.LX,
                args: [
                  "0x6080604052348015600e575f80fd5b5061016d8061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063f8b2cb4f1461002d575b5f80fd5b610047600480360381019061004291906100db565b61005d565b604051610054919061011e565b60405180910390f35b5f8173ffffffffffffffffffffffffffffffffffffffff16319050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100aa82610081565b9050919050565b6100ba816100a0565b81146100c4575f80fd5b50565b5f813590506100d5816100b1565b92915050565b5f602082840312156100f0576100ef61007d565b5b5f6100fd848285016100c7565b91505092915050565b5f819050919050565b61011881610106565b82525050565b5f6020820190506101315f83018461010f565b9291505056fea26469706673582212203b9fe929fe995c7cf9887f0bdba8a36dd78e8b73f149b17d2d9ad7cd09d2dc6264736f6c634300081a0033",
                  (function (e, ...t) {
                    let { overloads: r } = e,
                      n = r
                        ? (function (e, t, r) {
                            let n = (function (e, t, r) {
                              let n;
                              let { args: i = [], prepare: o = !0 } = r ?? {},
                                a = (function (e, t = {}) {
                                  let { strict: r = !1 } = t;
                                  try {
                                    return (
                                      !(function (e, t = {}) {
                                        let { strict: r = !1 } = t;
                                        if (!e || "string" != typeof e)
                                          throw new tl(e);
                                        if (
                                          (r && !/^0x[0-9a-fA-F]*$/.test(e)) ||
                                          !e.startsWith("0x")
                                        )
                                          throw new tu(e);
                                      })(e, { strict: r }),
                                      !0
                                    );
                                  } catch {
                                    return !1;
                                  }
                                })(t, { strict: !1 }),
                                s = e.filter((e) =>
                                  a
                                    ? "function" === e.type ||
                                      "error" === e.type
                                      ? rf(e) === to(t, 0, 4)
                                      : "event" === e.type && rh(e) === t
                                    : "name" in e && e.name === t
                                );
                              if (0 === s.length) throw new rm({ name: t });
                              if (1 === s.length)
                                return {
                                  ...s[0],
                                  ...(o ? { hash: rh(s[0]) } : {}),
                                };
                              for (let e of s)
                                if ("inputs" in e) {
                                  if (!i || 0 === i.length) {
                                    if (!e.inputs || 0 === e.inputs.length)
                                      return {
                                        ...e,
                                        ...(o ? { hash: rh(e) } : {}),
                                      };
                                    continue;
                                  }
                                  if (
                                    e.inputs &&
                                    0 !== e.inputs.length &&
                                    e.inputs.length === i.length &&
                                    i.every((t, r) => {
                                      let n = "inputs" in e && e.inputs[r];
                                      return (
                                        !!n &&
                                        (function e(t, r) {
                                          let n = typeof t,
                                            i = r.type;
                                          switch (i) {
                                            case "address":
                                              return ra(t, { strict: !1 });
                                            case "bool":
                                              return "boolean" === n;
                                            case "function":
                                            case "string":
                                              return "string" === n;
                                            default:
                                              if (
                                                "tuple" === i &&
                                                "components" in r
                                              )
                                                return Object.values(
                                                  r.components
                                                ).every((r, n) =>
                                                  e(Object.values(t)[n], r)
                                                );
                                              if (
                                                /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(
                                                  i
                                                )
                                              )
                                                return (
                                                  "number" === n ||
                                                  "bigint" === n
                                                );
                                              if (
                                                /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(
                                                  i
                                                )
                                              )
                                                return (
                                                  "string" === n ||
                                                  t instanceof Uint8Array
                                                );
                                              if (
                                                /[a-z]+[1-9]{0,3}(\[[0-9]{0,}\])+$/.test(
                                                  i
                                                )
                                              )
                                                return (
                                                  Array.isArray(t) &&
                                                  t.every((t) =>
                                                    e(t, {
                                                      ...r,
                                                      type: i.replace(
                                                        /(\[[0-9]{0,}\])$/,
                                                        ""
                                                      ),
                                                    })
                                                  )
                                                );
                                              return !1;
                                          }
                                        })(t, n)
                                      );
                                    })
                                  ) {
                                    if (n && "inputs" in n && n.inputs) {
                                      let t = (function e(t, r, n) {
                                        for (let i in t) {
                                          let o = t[i],
                                            a = r[i];
                                          if (
                                            "tuple" === o.type &&
                                            "tuple" === a.type &&
                                            "components" in o &&
                                            "components" in a
                                          )
                                            return e(
                                              o.components,
                                              a.components,
                                              n[i]
                                            );
                                          let s = [o.type, a.type];
                                          if (
                                            (s.includes("address") &&
                                              s.includes("bytes20")) ||
                                            (((s.includes("address") &&
                                              s.includes("string")) ||
                                              (s.includes("address") &&
                                                s.includes("bytes"))) &&
                                              ra(n[i], { strict: !1 }))
                                          )
                                            return s;
                                        }
                                      })(e.inputs, n.inputs, i);
                                      if (t)
                                        throw new rp(
                                          { abiItem: e, type: t[0] },
                                          { abiItem: n, type: t[1] }
                                        );
                                    }
                                    n = e;
                                  }
                                }
                              let l = (() => {
                                if (n) return n;
                                let [e, ...t] = s;
                                return { ...e, overloads: t };
                              })();
                              if (!l) throw new rm({ name: t });
                              return { ...l, ...(o ? { hash: rh(l) } : {}) };
                            })(e, t, r);
                            if ("function" !== n.type)
                              throw new rm({ name: t, type: "function" });
                            return n;
                          })([e, ...r], e.name, { args: t[0] })
                        : e,
                      i = rf(n),
                      o = t.length > 0 ? rx(n.inputs, t[0]) : void 0;
                    return o ? e9(i, o) : i;
                  })(rT("function getBalance(address)"), [c.address]),
                ],
              })
            : void 0,
          h = s
            ? await Promise.all(
                t.calls.map(async (t) => {
                  if (!t.data && !t.abi) return;
                  let { accessList: r } = await X(e, {
                    account: c.address,
                    ...t,
                    data: t.abi ? (0, a.p)(t) : t.data,
                  });
                  return r.map(({ address: e, storageKeys: t }) =>
                    t.length > 0 ? e : null
                  );
                })
              ).then((e) => e.flat().filter(Boolean))
            : [],
          p = o?.map((e) =>
            e.address === c?.address ? { ...e, nonce: 0 } : e
          ),
          m = await tb(e, {
            blockNumber: r,
            blockTag: n,
            blocks: [
              ...(s
                ? [
                    { calls: [{ data: f }], stateOverrides: o },
                    {
                      calls: h.map((e, t) => ({
                        abi: [
                          rT("function balanceOf(address) returns (uint256)"),
                        ],
                        functionName: "balanceOf",
                        args: [c.address],
                        to: e,
                        from: rC,
                        nonce: t,
                      })),
                      stateOverrides: [{ address: rC, nonce: 0 }],
                    },
                  ]
                : []),
              {
                calls: [...i, {}].map((e, t) => ({
                  ...e,
                  from: c?.address,
                  nonce: t,
                })),
                stateOverrides: p,
              },
              ...(s
                ? [
                    { calls: [{ data: f }] },
                    {
                      calls: h.map((e, t) => ({
                        abi: [
                          rT("function balanceOf(address) returns (uint256)"),
                        ],
                        functionName: "balanceOf",
                        args: [c.address],
                        to: e,
                        from: rC,
                        nonce: t,
                      })),
                      stateOverrides: [{ address: rC, nonce: 0 }],
                    },
                    {
                      calls: h.map((e, t) => ({
                        to: e,
                        abi: [rT("function decimals() returns (uint256)")],
                        functionName: "decimals",
                        from: rC,
                        nonce: t,
                      })),
                      stateOverrides: [{ address: rC, nonce: 0 }],
                    },
                    {
                      calls: h.map((e, t) => ({
                        to: e,
                        abi: [
                          rT("function tokenURI(uint256) returns (string)"),
                        ],
                        functionName: "tokenURI",
                        args: [0n],
                        from: rC,
                        nonce: t,
                      })),
                      stateOverrides: [{ address: rC, nonce: 0 }],
                    },
                    {
                      calls: h.map((e, t) => ({
                        to: e,
                        abi: [rT("function symbol() returns (string)")],
                        functionName: "symbol",
                        from: rC,
                        nonce: t,
                      })),
                      stateOverrides: [{ address: rC, nonce: 0 }],
                    },
                  ]
                : []),
            ],
            traceTransfers: l,
            validation: u,
          }),
          g = s ? m[2] : m[0],
          [y, b, , v, w, x, A, E] = s ? m : [],
          { calls: k, ...I } = g,
          S = k.slice(0, -1) ?? [],
          P = [...(y?.calls ?? []), ...(b?.calls ?? [])].map((e) =>
            "success" === e.status ? (0, eS.uU)(e.data) : null
          ),
          T = [...(v?.calls ?? []), ...(w?.calls ?? [])].map((e) =>
            "success" === e.status ? (0, eS.uU)(e.data) : null
          ),
          C = (x?.calls ?? []).map((e) =>
            "success" === e.status ? e.result : null
          ),
          O = (E?.calls ?? []).map((e) =>
            "success" === e.status ? e.result : null
          ),
          _ = (A?.calls ?? []).map((e) =>
            "success" === e.status ? e.result : null
          ),
          B = [];
        for (let [e, t] of T.entries()) {
          let r = P[e];
          if ("bigint" != typeof t || "bigint" != typeof r) continue;
          let n = C[e - 1],
            i = O[e - 1],
            o = _[e - 1],
            a =
              0 === e
                ? {
                    address: "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
                    decimals: 18,
                    symbol: "ETH",
                  }
                : {
                    address: h[e - 1],
                    decimals: o || n ? Number(n ?? 1) : void 0,
                    symbol: i ?? void 0,
                  };
          B.some((e) => e.token.address === a.address) ||
            B.push({ token: a, value: { pre: r, post: t, diff: t - r } });
        }
        return { assetChanges: B, block: I, results: S };
      }
      async function rB(e, t) {
        let {
            abi: r,
            address: n,
            args: i,
            dataSuffix: s,
            functionName: l,
            ...u
          } = t,
          c = u.account ? (0, Z.J)(u.account) : e.account,
          d = (0, a.p)({ abi: r, args: i, functionName: l });
        try {
          let { data: a } = await (0, A.T)(
              e,
              k.T,
              "call"
            )({
              batch: !1,
              data: `${d}${s ? s.replace("0x", "") : ""}`,
              to: n,
              ...u,
              account: c,
            }),
            f = (0, o.e)({ abi: r, args: i, functionName: l, data: a || "0x" }),
            h = r.filter((e) => "name" in e && e.name === t.functionName);
          return {
            result: f,
            request: {
              abi: h,
              address: n,
              args: i,
              dataSuffix: s,
              functionName: l,
              ...u,
              account: c,
            },
          };
        } catch (e) {
          throw (0, E.j)(e, {
            abi: r,
            address: n,
            args: i,
            docsPath: "/docs/contract/simulateContract",
            functionName: l,
            sender: c?.address,
          });
        }
      }
      async function rR(e, { filter: t }) {
        return t.request({ method: "eth_uninstallFilter", params: [t.id] });
      }
      function rN(e, t) {
        return (0, y.S)(
          (function (e) {
            let t =
                "string" == typeof e
                  ? (0, u.i3)(e)
                  : "string" == typeof e.raw
                  ? e.raw
                  : (0, u.My)(e.raw),
              r = (0, u.i3)(`\x19Ethereum Signed Message:
${(0, e_.E)(t)}`);
            return (0, m.xW)([r, t]);
          })(e),
          t
        );
      }
      var rM = r(62937),
        rj = r(40814);
      let rF =
        "0x6492649264926492649264926492649264926492649264926492649264926492";
      var rL = r(22162),
        rD = r(29157),
        rU = r(60102);
      async function rH(e, t) {
        let {
            address: r,
            factory: n,
            factoryData: o,
            hash: s,
            signature: l,
            universalSignatureVerifierAddress: c = e.chain?.contracts
              ?.universalSignatureVerifier?.address,
            ...d
          } = t,
          h = (0, b.q)(l)
            ? l
            : "object" == typeof l && "r" in l && "s" in l
            ? (function ({ r: e, s: t, to: r = "hex", v: n, yParity: i }) {
                let o = (() => {
                    if (0 === i || 1 === i) return i;
                    if (n && (27n === n || 28n === n || n >= 35n))
                      return n % 2n === 0n ? 1 : 0;
                    throw Error("Invalid `v` or `yParity` value");
                  })(),
                  a = `0x${new rU.secp256k1.Signature(
                    (0, eS.uU)(e),
                    (0, eS.uU)(t)
                  ).toCompactHex()}${0 === o ? "1b" : "1c"}`;
                return "hex" === r ? a : (0, g.aT)(a);
              })(l)
            : (0, u.My)(l),
          p = await (async () =>
            n || o
              ? (0, rL.iN)(h, -32) === rF
                ? h
                : (function (e) {
                    let {
                        address: t,
                        data: r,
                        signature: n,
                        to: i = "hex",
                      } = e,
                      o = (0, m.aP)([
                        (0, eo.h)(
                          [
                            { type: "address" },
                            { type: "bytes" },
                            { type: "bytes" },
                          ],
                          [t, r, n]
                        ),
                        rF,
                      ]);
                    return "hex" === i ? o : (0, g.aT)(o);
                  })({ address: n, data: o, signature: h })
              : h)();
        try {
          let t = c
              ? {
                  to: c,
                  data: (0, a.p)({
                    abi: i._,
                    functionName: "isValidSig",
                    args: [r, s, p],
                  }),
                  ...d,
                }
              : {
                  data: (0, rM.m)({
                    abi: i._,
                    args: [r, s, p],
                    bytecode: rO.nP,
                  }),
                  ...d,
                },
            { data: n } = await (0, A.T)(e, k.T, "call")(t);
          return (0, eS.Nx)(n ?? "0x0");
        } catch (e) {
          try {
            if (
              (0, eO.h)(
                (0, rj.b)(r),
                await (0, rD.x)({ hash: s, signature: l })
              )
            )
              return !0;
          } catch {}
          if (e instanceof f.zX) return !1;
          throw e;
        }
      }
      async function r$(
        e,
        {
          address: t,
          message: r,
          factory: n,
          factoryData: i,
          signature: o,
          ...a
        }
      ) {
        return rH(e, {
          address: t,
          factory: n,
          factoryData: i,
          hash: rN(r),
          signature: o,
          ...a,
        });
      }
      var rz = r(37939);
      function rG({ data: e, primaryType: t, types: r }) {
        let n = (function e({ data: t, primaryType: r, types: n }) {
          let i = [{ type: "bytes32" }],
            o = [
              (function ({ primaryType: e, types: t }) {
                let r = (0, u.nj)(
                  (function ({ primaryType: e, types: t }) {
                    let r = "",
                      n = (function e(
                        { primaryType: t, types: r },
                        n = new Set()
                      ) {
                        let i = t.match(/^\w*/u),
                          o = i?.[0];
                        if (n.has(o) || void 0 === r[o]) return n;
                        for (let t of (n.add(o), r[o]))
                          e({ primaryType: t.type, types: r }, n);
                        return n;
                      })({ primaryType: e, types: t });
                    for (let i of (n.delete(e), [e, ...Array.from(n).sort()]))
                      r += `${i}(${t[i]
                        .map(({ name: e, type: t }) => `${t} ${e}`)
                        .join(",")})`;
                    return r;
                  })({ primaryType: e, types: t })
                );
                return (0, y.S)(r);
              })({ primaryType: r, types: n }),
            ];
          for (let a of n[r]) {
            let [r, s] = (function t({ types: r, name: n, type: i, value: o }) {
              if (void 0 !== r[i])
                return [
                  { type: "bytes32" },
                  (0, y.S)(e({ data: o, primaryType: i, types: r })),
                ];
              if ("bytes" === i) {
                let e = o.length % 2 ? "0" : "";
                return (
                  (o = `0x${e + o.slice(2)}`),
                  [{ type: "bytes32" }, (0, y.S)(o)]
                );
              }
              if ("string" === i)
                return [{ type: "bytes32" }, (0, y.S)((0, u.nj)(o))];
              if (i.lastIndexOf("]") === i.length - 1) {
                let e = i.slice(0, i.lastIndexOf("[")),
                  a = o.map((i) => t({ name: n, type: e, types: r, value: i }));
                return [
                  { type: "bytes32" },
                  (0, y.S)(
                    (0, eo.h)(
                      a.map(([e]) => e),
                      a.map(([, e]) => e)
                    )
                  ),
                ];
              }
              return [{ type: i }, o];
            })({ types: n, name: a.name, type: a.type, value: t[a.name] });
            i.push(r), o.push(s);
          }
          return (0, eo.h)(i, o);
        })({ data: e, primaryType: t, types: r });
        return (0, y.S)(n);
      }
      async function rq(e, t) {
        let {
          address: r,
          factory: n,
          factoryData: i,
          signature: o,
          message: a,
          primaryType: s,
          types: l,
          domain: u,
          ...c
        } = t;
        return rH(e, {
          address: r,
          factory: n,
          factoryData: i,
          hash: (function (e) {
            let { domain: t = {}, message: r, primaryType: n } = e,
              i = { EIP712Domain: (0, rz.H4)({ domain: t }), ...e.types };
            (0, rz.$$)({ domain: t, message: r, primaryType: n, types: i });
            let o = ["0x1901"];
            return (
              t &&
                o.push(
                  (function ({ domain: e, types: t }) {
                    return rG({
                      data: e,
                      primaryType: "EIP712Domain",
                      types: t,
                    });
                  })({ domain: t, types: i })
                ),
              "EIP712Domain" !== n &&
                o.push(rG({ data: r, primaryType: n, types: i })),
              (0, y.S)((0, m.xW)(o))
            );
          })({ message: a, primaryType: s, types: l, domain: u }),
          signature: o,
          ...c,
        });
      }
      var rW = r(62496),
        rV = r(88429),
        rZ = r(30400),
        rK = r(9869),
        rQ = r(66692),
        rJ = r(92342);
      function rY(
        e,
        {
          emitOnBegin: t = !1,
          emitMissed: r = !1,
          onBlockNumber: n,
          onError: i,
          poll: o,
          pollingInterval: a = e.pollingInterval,
        }
      ) {
        let s;
        return (
          void 0 !== o
            ? o
            : "webSocket" !== e.transport.type &&
              ("fallback" !== e.transport.type ||
                "webSocket" !== e.transport.transports[0].config.type)
        )
          ? (() => {
              let o = (0, rQ.A)(["watchBlockNumber", e.uid, t, r, a]);
              return (0, rV.lB)(o, { onBlockNumber: n, onError: i }, (n) =>
                (0, rJ.w)(
                  async () => {
                    try {
                      let t = await (0, A.T)(
                        e,
                        eI,
                        "getBlockNumber"
                      )({ cacheTime: 0 });
                      if (s) {
                        if (t === s) return;
                        if (t - s > 1 && r)
                          for (let e = s + 1n; e < t; e++)
                            n.onBlockNumber(e, s), (s = e);
                      }
                      (!s || t > s) && (n.onBlockNumber(t, s), (s = t));
                    } catch (e) {
                      n.onError?.(e);
                    }
                  },
                  { emitOnBegin: t, interval: a }
                )
              );
            })()
          : (() => {
              let o = (0, rQ.A)(["watchBlockNumber", e.uid, t, r]);
              return (0, rV.lB)(o, { onBlockNumber: n, onError: i }, (t) => {
                let r = !0,
                  n = () => (r = !1);
                return (
                  (async () => {
                    try {
                      let i = (() => {
                          if ("fallback" === e.transport.type) {
                            let t = e.transport.transports.find(
                              (e) => "webSocket" === e.config.type
                            );
                            return t ? t.value : e.transport;
                          }
                          return e.transport;
                        })(),
                        { unsubscribe: o } = await i.subscribe({
                          params: ["newHeads"],
                          onData(e) {
                            if (!r) return;
                            let n = (0, eS.uU)(e.result?.number);
                            t.onBlockNumber(n, s), (s = n);
                          },
                          onError(e) {
                            t.onError?.(e);
                          },
                        });
                      (n = o), r || n();
                    } catch (e) {
                      i?.(e);
                    }
                  })(),
                  () => n()
                );
              });
            })();
      }
      async function rX(
        e,
        {
          confirmations: t = 1,
          hash: r,
          onReplaced: n,
          pollingInterval: i = e.pollingInterval,
          retryCount: o = 6,
          retryDelay: a = ({ count: e }) => 200 * ~~(1 << e),
          timeout: s = 18e4,
        }
      ) {
        let l, u, c;
        let d = (0, rQ.A)(["waitForTransactionReceipt", e.uid, r]),
          f = !1,
          { promise: h, resolve: p, reject: m } = (0, rZ.Y)(),
          g = s ? setTimeout(() => m(new eK.WA({ hash: r })), s) : void 0,
          y = (0, rV.lB)(d, { onReplaced: n, resolve: p, reject: m }, (n) => {
            let s = (0, A.T)(
              e,
              rY,
              "watchBlockNumber"
            )({
              emitMissed: !0,
              emitOnBegin: !0,
              poll: !0,
              pollingInterval: i,
              async onBlockNumber(i) {
                let d = (e) => {
                    clearTimeout(g), s(), e(), y();
                  },
                  h = i;
                if (!f)
                  try {
                    if (c) {
                      if (
                        t > 1 &&
                        (!c.blockNumber || h - c.blockNumber + 1n < t)
                      )
                        return;
                      d(() => n.resolve(c));
                      return;
                    }
                    if (
                      (l ||
                        ((f = !0),
                        await (0, rK.b)(
                          async () => {
                            (l = await (0, A.T)(
                              e,
                              eJ,
                              "getTransaction"
                            )({ hash: r })).blockNumber && (h = l.blockNumber);
                          },
                          { delay: a, retryCount: o }
                        ),
                        (f = !1)),
                      (c = await (0, A.T)(
                        e,
                        e1,
                        "getTransactionReceipt"
                      )({ hash: r })),
                      t > 1 && (!c.blockNumber || h - c.blockNumber + 1n < t))
                    )
                      return;
                    d(() => n.resolve(c));
                  } catch (r) {
                    if (r instanceof eK.Kz || r instanceof eK.Kc) {
                      if (!l) {
                        f = !1;
                        return;
                      }
                      try {
                        (u = l), (f = !0);
                        let r = await (0, rK.b)(
                          () =>
                            (0, A.T)(
                              e,
                              ew.g,
                              "getBlock"
                            )({ blockNumber: h, includeTransactions: !0 }),
                          {
                            delay: a,
                            retryCount: o,
                            shouldRetry: ({ error: e }) => e instanceof rW.l,
                          }
                        );
                        f = !1;
                        let i = r.transactions.find(
                          ({ from: e, nonce: t }) =>
                            e === u.from && t === u.nonce
                        );
                        if (
                          !i ||
                          ((c = await (0, A.T)(
                            e,
                            e1,
                            "getTransactionReceipt"
                          )({ hash: i.hash })),
                          t > 1 &&
                            (!c.blockNumber || h - c.blockNumber + 1n < t))
                        )
                          return;
                        let s = "replaced";
                        i.to === u.to &&
                        i.value === u.value &&
                        i.input === u.input
                          ? (s = "repriced")
                          : i.from === i.to &&
                            0n === i.value &&
                            (s = "cancelled"),
                          d(() => {
                            n.onReplaced?.({
                              reason: s,
                              replacedTransaction: u,
                              transaction: i,
                              transactionReceipt: c,
                            }),
                              n.resolve(c);
                          });
                      } catch (e) {
                        d(() => n.reject(e));
                      }
                    } else d(() => n.reject(r));
                  }
              },
            });
          });
        return h;
      }
      var r0 = r(76790);
      let r1 =
          /^(?:(?<scheme>[a-zA-Z][a-zA-Z0-9+-.]*):\/\/)?(?<domain>[a-zA-Z0-9+-.]*(?::[0-9]{1,5})?) (?:wants you to sign in with your Ethereum account:\n)(?<address>0x[a-fA-F0-9]{40})\n\n(?:(?<statement>.*)\n\n)?/,
        r2 =
          /(?:URI: (?<uri>.+))\n(?:Version: (?<version>.+))\n(?:Chain ID: (?<chainId>\d+))\n(?:Nonce: (?<nonce>[a-zA-Z0-9]+))\n(?:Issued At: (?<issuedAt>.+))(?:\nExpiration Time: (?<expirationTime>.+))?(?:\nNot Before: (?<notBefore>.+))?(?:\nRequest ID: (?<requestId>.+))?/;
      async function r6(e, t) {
        let {
            address: r,
            domain: n,
            message: i,
            nonce: o,
            scheme: a,
            signature: s,
            time: l = new Date(),
            ...u
          } = t,
          c = (function (e) {
            let { scheme: t, statement: r, ...n } = e.match(r1)?.groups ?? {},
              {
                chainId: i,
                expirationTime: o,
                issuedAt: a,
                notBefore: s,
                requestId: l,
                ...u
              } = e.match(r2)?.groups ?? {},
              c = e.split("Resources:")[1]?.split("\n- ").slice(1);
            return {
              ...n,
              ...u,
              ...(i ? { chainId: Number(i) } : {}),
              ...(o ? { expirationTime: new Date(o) } : {}),
              ...(a ? { issuedAt: new Date(a) } : {}),
              ...(s ? { notBefore: new Date(s) } : {}),
              ...(l ? { requestId: l } : {}),
              ...(c ? { resources: c } : {}),
              ...(t ? { scheme: t } : {}),
              ...(r ? { statement: r } : {}),
            };
          })(i);
        if (
          !c.address ||
          !(function (e) {
            let {
              address: t,
              domain: r,
              message: n,
              nonce: i,
              scheme: o,
              time: a = new Date(),
            } = e;
            if (
              (r && n.domain !== r) ||
              (i && n.nonce !== i) ||
              (o && n.scheme !== o) ||
              (n.expirationTime && a >= n.expirationTime) ||
              (n.notBefore && a < n.notBefore)
            )
              return !1;
            try {
              if (!n.address || (t && !(0, eO.h)(n.address, t))) return !1;
            } catch {
              return !1;
            }
            return !0;
          })({
            address: r,
            domain: n,
            message: c,
            nonce: o,
            scheme: a,
            time: l,
          })
        )
          return !1;
        let d = rN(i);
        return rH(e, { address: c.address, hash: d, signature: s, ...u });
      }
      var r5 = r(23721),
        r3 = r(29665);
      function r8(e) {
        return {
          call: (t) => (0, k.T)(e, t),
          createAccessList: (t) => X(e, t),
          createBlockFilter: () => et(e),
          createContractEventFilter: (t) => ed(e, t),
          createEventFilter: (t) => ef(e, t),
          createPendingTransactionFilter: () => eh(e),
          estimateContractGas: (t) => em(e, t),
          estimateGas: (t) => (0, ep.Q)(e, t),
          getBalance: (t) => (0, eb.r)(e, t),
          getBlobBaseFee: () => ev(e),
          getBlock: (t) => (0, ew.g)(e, t),
          getBlockNumber: (t) => eI(e, t),
          getBlockTransactionCount: (t) => eP(e, t),
          getBytecode: (t) => eC(e, t),
          getChainId: () => (0, eT.T)(e),
          getCode: (t) => eC(e, t),
          getContractEvents: (t) => eD(e, t),
          getEip712Domain: (t) => eH(e, t),
          getEnsAddress: (t) => S(e, t),
          getEnsAvatar: (t) => q(e, t),
          getEnsName: (t) => W(e, t),
          getEnsResolver: (t) => V(e, t),
          getEnsText: (t) => G(e, t),
          getFeeHistory: (t) => ez(e, t),
          estimateFeesPerGas: (t) => (0, eg._)(e, t),
          getFilterChanges: (t) => eG(e, t),
          getFilterLogs: (t) => eq(e, t),
          getGasPrice: () => (0, eW.L)(e),
          getLogs: (t) => eL(e, t),
          getProof: (t) => eV(e, t),
          estimateMaxPriorityFeePerGas: (t) => (0, ey.b)(e, t),
          getStorageAt: (t) => eZ(e, t),
          getTransaction: (t) => eJ(e, t),
          getTransactionConfirmations: (t) => eY(e, t),
          getTransactionCount: (t) => (0, eX.y)(e, t),
          getTransactionReceipt: (t) => e1(e, t),
          multicall: (t) => e2(e, t),
          prepareTransactionRequest: (t) => (0, r5.ft)(e, t),
          readContract: (t) => I(e, t),
          sendRawTransaction: (t) => (0, r3.L)(e, t),
          simulate: (t) => tb(e, t),
          simulateBlocks: (t) => tb(e, t),
          simulateCalls: (t) => r_(e, t),
          simulateContract: (t) => rB(e, t),
          verifyMessage: (t) => r$(e, t),
          verifySiweMessage: (t) => r6(e, t),
          verifyTypedData: (t) => rq(e, t),
          uninstallFilter: (t) => rR(e, t),
          waitForTransactionReceipt: (t) => rX(e, t),
          watchBlocks: (t) =>
            (function (
              e,
              {
                blockTag: t = "latest",
                emitMissed: r = !1,
                emitOnBegin: n = !1,
                onBlock: i,
                onError: o,
                includeTransactions: a,
                poll: s,
                pollingInterval: l = e.pollingInterval,
              }
            ) {
              let u, c, d, f;
              let h =
                  void 0 !== s
                    ? s
                    : "webSocket" !== e.transport.type &&
                      ("fallback" !== e.transport.type ||
                        "webSocket" !== e.transport.transports[0].config.type),
                p = a ?? !1;
              return h
                ? (() => {
                    let a = (0, rQ.A)(["watchBlocks", e.uid, t, r, n, p, l]);
                    return (0, rV.lB)(a, { onBlock: i, onError: o }, (i) =>
                      (0, rJ.w)(
                        async () => {
                          try {
                            let n = await (0, A.T)(
                              e,
                              ew.g,
                              "getBlock"
                            )({ blockTag: t, includeTransactions: p });
                            if (n.number && u?.number) {
                              if (n.number === u.number) return;
                              if (n.number - u.number > 1 && r)
                                for (
                                  let t = u?.number + 1n;
                                  t < n.number;
                                  t++
                                ) {
                                  let r = await (0, A.T)(
                                    e,
                                    ew.g,
                                    "getBlock"
                                  )({ blockNumber: t, includeTransactions: p });
                                  i.onBlock(r, u), (u = r);
                                }
                            }
                            (!u?.number ||
                              ("pending" === t && !n?.number) ||
                              (n.number && n.number > u.number)) &&
                              (i.onBlock(n, u), (u = n));
                          } catch (e) {
                            i.onError?.(e);
                          }
                        },
                        { emitOnBegin: n, interval: l }
                      )
                    );
                  })()
                : ((c = !0),
                  (d = !0),
                  (f = () => (c = !1)),
                  (async () => {
                    try {
                      n &&
                        (0, A.T)(
                          e,
                          ew.g,
                          "getBlock"
                        )({ blockTag: t, includeTransactions: p }).then((e) => {
                          c && d && (i(e, void 0), (d = !1));
                        });
                      let r = (() => {
                          if ("fallback" === e.transport.type) {
                            let t = e.transport.transports.find(
                              (e) => "webSocket" === e.config.type
                            );
                            return t ? t.value : e.transport;
                          }
                          return e.transport;
                        })(),
                        { unsubscribe: a } = await r.subscribe({
                          params: ["newHeads"],
                          async onData(t) {
                            if (!c) return;
                            let r = await (0, A.T)(
                              e,
                              ew.g,
                              "getBlock"
                            )({
                              blockNumber: t.blockNumber,
                              includeTransactions: p,
                            }).catch(() => {});
                            c && (i(r, u), (d = !1), (u = r));
                          },
                          onError(e) {
                            o?.(e);
                          },
                        });
                      (f = a), c || f();
                    } catch (e) {
                      o?.(e);
                    }
                  })(),
                  () => f());
            })(e, t),
          watchBlockNumber: (t) => rY(e, t),
          watchContractEvent: (t) =>
            (function (e, t) {
              let {
                abi: r,
                address: n,
                args: i,
                batch: o = !0,
                eventName: a,
                fromBlock: s,
                onError: l,
                onLogs: u,
                poll: c,
                pollingInterval: d = e.pollingInterval,
                strict: f,
              } = t;
              return (
                void 0 !== c
                  ? c
                  : "bigint" == typeof s ||
                    ("webSocket" !== e.transport.type &&
                      ("fallback" !== e.transport.type ||
                        "webSocket" !== e.transport.transports[0].config.type))
              )
                ? (() => {
                    let t = f ?? !1,
                      c = (0, rQ.A)([
                        "watchContractEvent",
                        n,
                        i,
                        o,
                        e.uid,
                        a,
                        d,
                        t,
                        s,
                      ]);
                    return (0, rV.lB)(c, { onLogs: u, onError: l }, (l) => {
                      let u, c;
                      void 0 !== s && (u = s - 1n);
                      let f = !1,
                        h = (0, rJ.w)(
                          async () => {
                            if (!f) {
                              try {
                                c = await (0, A.T)(
                                  e,
                                  ed,
                                  "createContractEventFilter"
                                )({
                                  abi: r,
                                  address: n,
                                  args: i,
                                  eventName: a,
                                  strict: t,
                                  fromBlock: s,
                                });
                              } catch {}
                              f = !0;
                              return;
                            }
                            try {
                              let s;
                              if (c)
                                s = await (0, A.T)(
                                  e,
                                  eG,
                                  "getFilterChanges"
                                )({ filter: c });
                              else {
                                let o = await (0, A.T)(
                                  e,
                                  eI,
                                  "getBlockNumber"
                                )({});
                                (s =
                                  u && u < o
                                    ? await (0, A.T)(
                                        e,
                                        eD,
                                        "getContractEvents"
                                      )({
                                        abi: r,
                                        address: n,
                                        args: i,
                                        eventName: a,
                                        fromBlock: u + 1n,
                                        toBlock: o,
                                        strict: t,
                                      })
                                    : []),
                                  (u = o);
                              }
                              if (0 === s.length) return;
                              if (o) l.onLogs(s);
                              else for (let e of s) l.onLogs([e]);
                            } catch (e) {
                              c && e instanceof r0.Di && (f = !1),
                                l.onError?.(e);
                            }
                          },
                          { emitOnBegin: !0, interval: d }
                        );
                      return async () => {
                        c &&
                          (await (0, A.T)(
                            e,
                            rR,
                            "uninstallFilter"
                          )({ filter: c })),
                          h();
                      };
                    });
                  })()
                : (() => {
                    let t = (0, rQ.A)([
                        "watchContractEvent",
                        n,
                        i,
                        o,
                        e.uid,
                        a,
                        d,
                        f ?? !1,
                      ]),
                      s = !0,
                      c = () => (s = !1);
                    return (0, rV.lB)(
                      t,
                      { onLogs: u, onError: l },
                      (t) => (
                        (async () => {
                          try {
                            let o = (() => {
                                if ("fallback" === e.transport.type) {
                                  let t = e.transport.transports.find(
                                    (e) => "webSocket" === e.config.type
                                  );
                                  return t ? t.value : e.transport;
                                }
                                return e.transport;
                              })(),
                              l = a
                                ? eu({ abi: r, eventName: a, args: i })
                                : [],
                              { unsubscribe: u } = await o.subscribe({
                                params: ["logs", { address: n, topics: l }],
                                onData(e) {
                                  if (!s) return;
                                  let n = e.result;
                                  try {
                                    let { eventName: e, args: i } = eM({
                                        abi: r,
                                        data: n.data,
                                        topics: n.topics,
                                        strict: f,
                                      }),
                                      o = (0, eF.e)(n, {
                                        args: i,
                                        eventName: e,
                                      });
                                    t.onLogs([o]);
                                  } catch (o) {
                                    let e, r;
                                    if (
                                      o instanceof er.fo ||
                                      o instanceof er.l3
                                    ) {
                                      if (f) return;
                                      (e = o.abiItem.name),
                                        (r = o.abiItem.inputs?.some(
                                          (e) => !("name" in e && e.name)
                                        ));
                                    }
                                    let i = (0, eF.e)(n, {
                                      args: r ? [] : {},
                                      eventName: e,
                                    });
                                    t.onLogs([i]);
                                  }
                                },
                                onError(e) {
                                  t.onError?.(e);
                                },
                              });
                            (c = u), s || c();
                          } catch (e) {
                            l?.(e);
                          }
                        })(),
                        () => c()
                      )
                    );
                  })();
            })(e, t),
          watchEvent: (t) =>
            (function (
              e,
              {
                address: t,
                args: r,
                batch: n = !0,
                event: i,
                events: o,
                fromBlock: a,
                onError: s,
                onLogs: l,
                poll: u,
                pollingInterval: c = e.pollingInterval,
                strict: d,
              }
            ) {
              let f, h;
              let p =
                  void 0 !== u
                    ? u
                    : "bigint" == typeof a ||
                      ("webSocket" !== e.transport.type &&
                        ("fallback" !== e.transport.type ||
                          "webSocket" !==
                            e.transport.transports[0].config.type)),
                m = d ?? !1;
              return p
                ? (() => {
                    let u = (0, rQ.A)(["watchEvent", t, r, n, e.uid, i, c, a]);
                    return (0, rV.lB)(u, { onLogs: l, onError: s }, (s) => {
                      let l, u;
                      void 0 !== a && (l = a - 1n);
                      let d = !1,
                        f = (0, rJ.w)(
                          async () => {
                            if (!d) {
                              try {
                                u = await (0, A.T)(
                                  e,
                                  ef,
                                  "createEventFilter"
                                )({
                                  address: t,
                                  args: r,
                                  event: i,
                                  events: o,
                                  strict: m,
                                  fromBlock: a,
                                });
                              } catch {}
                              d = !0;
                              return;
                            }
                            try {
                              let a;
                              if (u)
                                a = await (0, A.T)(
                                  e,
                                  eG,
                                  "getFilterChanges"
                                )({ filter: u });
                              else {
                                let n = await (0, A.T)(
                                  e,
                                  eI,
                                  "getBlockNumber"
                                )({});
                                (a =
                                  l && l !== n
                                    ? await (0, A.T)(
                                        e,
                                        eL,
                                        "getLogs"
                                      )({
                                        address: t,
                                        args: r,
                                        event: i,
                                        events: o,
                                        fromBlock: l + 1n,
                                        toBlock: n,
                                      })
                                    : []),
                                  (l = n);
                              }
                              if (0 === a.length) return;
                              if (n) s.onLogs(a);
                              else for (let e of a) s.onLogs([e]);
                            } catch (e) {
                              u && e instanceof r0.Di && (d = !1),
                                s.onError?.(e);
                            }
                          },
                          { emitOnBegin: !0, interval: c }
                        );
                      return async () => {
                        u &&
                          (await (0, A.T)(
                            e,
                            rR,
                            "uninstallFilter"
                          )({ filter: u })),
                          f();
                      };
                    });
                  })()
                : ((f = !0),
                  (h = () => (f = !1)),
                  (async () => {
                    try {
                      let n = (() => {
                          if ("fallback" === e.transport.type) {
                            let t = e.transport.transports.find(
                              (e) => "webSocket" === e.config.type
                            );
                            return t ? t.value : e.transport;
                          }
                          return e.transport;
                        })(),
                        a = o ?? (i ? [i] : void 0),
                        u = [];
                      a &&
                        ((u = [
                          a.flatMap((e) =>
                            eu({ abi: [e], eventName: e.name, args: r })
                          ),
                        ]),
                        i && (u = u[0]));
                      let { unsubscribe: c } = await n.subscribe({
                        params: ["logs", { address: t, topics: u }],
                        onData(e) {
                          if (!f) return;
                          let t = e.result;
                          try {
                            let { eventName: e, args: r } = eM({
                                abi: a ?? [],
                                data: t.data,
                                topics: t.topics,
                                strict: m,
                              }),
                              n = (0, eF.e)(t, { args: r, eventName: e });
                            l([n]);
                          } catch (i) {
                            let e, r;
                            if (i instanceof er.fo || i instanceof er.l3) {
                              if (d) return;
                              (e = i.abiItem.name),
                                (r = i.abiItem.inputs?.some(
                                  (e) => !("name" in e && e.name)
                                ));
                            }
                            let n = (0, eF.e)(t, {
                              args: r ? [] : {},
                              eventName: e,
                            });
                            l([n]);
                          }
                        },
                        onError(e) {
                          s?.(e);
                        },
                      });
                      (h = c), f || h();
                    } catch (e) {
                      s?.(e);
                    }
                  })(),
                  () => h());
            })(e, t),
          watchPendingTransactions: (t) =>
            (function (
              e,
              {
                batch: t = !0,
                onError: r,
                onTransactions: n,
                poll: i,
                pollingInterval: o = e.pollingInterval,
              }
            ) {
              let a, s;
              return (void 0 !== i ? i : "webSocket" !== e.transport.type)
                ? (() => {
                    let i = (0, rQ.A)([
                      "watchPendingTransactions",
                      e.uid,
                      t,
                      o,
                    ]);
                    return (0, rV.lB)(
                      i,
                      { onTransactions: n, onError: r },
                      (r) => {
                        let n;
                        let i = (0, rJ.w)(
                          async () => {
                            try {
                              if (!n)
                                try {
                                  n = await (0, A.T)(
                                    e,
                                    eh,
                                    "createPendingTransactionFilter"
                                  )({});
                                  return;
                                } catch (e) {
                                  throw (i(), e);
                                }
                              let o = await (0, A.T)(
                                e,
                                eG,
                                "getFilterChanges"
                              )({ filter: n });
                              if (0 === o.length) return;
                              if (t) r.onTransactions(o);
                              else for (let e of o) r.onTransactions([e]);
                            } catch (e) {
                              r.onError?.(e);
                            }
                          },
                          { emitOnBegin: !0, interval: o }
                        );
                        return async () => {
                          n &&
                            (await (0, A.T)(
                              e,
                              rR,
                              "uninstallFilter"
                            )({ filter: n })),
                            i();
                        };
                      }
                    );
                  })()
                : ((a = !0),
                  (s = () => (a = !1)),
                  (async () => {
                    try {
                      let { unsubscribe: t } = await e.transport.subscribe({
                        params: ["newPendingTransactions"],
                        onData(e) {
                          if (!a) return;
                          let t = e.result;
                          n([t]);
                        },
                        onError(e) {
                          r?.(e);
                        },
                      });
                      (s = t), a || s();
                    } catch (e) {
                      r?.(e);
                    }
                  })(),
                  () => s());
            })(e, t),
        };
      }
      function r4(e) {
        let { key: t = "public", name: r = "Public Client" } = e;
        return (0, n.U)({ ...e, key: t, name: r, type: "publicClient" }).extend(
          r8
        );
      }
    },
    67128: (e, t, r) => {
      "use strict";
      r.d(t, { o: () => d });
      var n = r(80477),
        i = r(40928),
        o = r(76790),
        a = r(98979);
      let s = new (r(46140).A)(8192);
      var l = r(9869),
        u = r(66692),
        c = r(43071);
      function d(
        {
          key: e,
          methods: t,
          name: r,
          request: d,
          retryCount: f = 3,
          retryDelay: h = 150,
          timeout: p,
          type: m,
        },
        g
      ) {
        return {
          config: {
            key: e,
            methods: t,
            name: r,
            request: d,
            retryCount: f,
            retryDelay: h,
            timeout: p,
            type: m,
          },
          request: (function (e, t = {}) {
            return async (r, c = {}) => {
              let {
                  dedupe: d = !1,
                  methods: f,
                  retryDelay: h = 150,
                  retryCount: p = 3,
                  uid: m,
                } = { ...t, ...c },
                { method: g } = r;
              if (
                f?.exclude?.includes(g) ||
                (f?.include && !f.include.includes(g))
              )
                throw new o.ab(Error("method not supported"), { method: g });
              let y = d ? (0, a.i3)(`${m}.${(0, u.A)(r)}`) : void 0;
              return (function (e, { enabled: t = !0, id: r }) {
                if (!t || !r) return e();
                if (s.get(r)) return s.get(r);
                let n = e().finally(() => s.delete(r));
                return s.set(r, n), n;
              })(
                () =>
                  (0, l.b)(
                    async () => {
                      try {
                        return await e(r);
                      } catch (e) {
                        switch (e.code) {
                          case o.XU.code:
                            throw new o.XU(e);
                          case o.CL.code:
                            throw new o.CL(e);
                          case o.Gi.code:
                            throw new o.Gi(e, { method: r.method });
                          case o.D5.code:
                            throw new o.D5(e);
                          case o.bq.code:
                            throw new o.bq(e);
                          case o.Di.code:
                            throw new o.Di(e);
                          case o.hA.code:
                            throw new o.hA(e);
                          case o.qZ.code:
                            throw new o.qZ(e);
                          case o.YW.code:
                            throw new o.YW(e);
                          case o.ab.code:
                            throw new o.ab(e, { method: r.method });
                          case o.s0.code:
                            throw new o.s0(e);
                          case o.xQ.code:
                            throw new o.xQ(e);
                          case o.vx.code:
                            throw new o.vx(e);
                          case o.sV.code:
                            throw new o.sV(e);
                          case o.Sf.code:
                            throw new o.Sf(e);
                          case o.RV.code:
                            throw new o.RV(e);
                          case o.xq.code:
                            throw new o.xq(e);
                          case o.ch.code:
                            throw new o.ch(e);
                          case o.L5.code:
                            throw new o.L5(e);
                          case o.WT.code:
                            throw new o.WT(e);
                          case o.hl.code:
                            throw new o.hl(e);
                          case o.cg.code:
                            throw new o.cg(e);
                          case o.uL.code:
                            throw new o.uL(e);
                          case o.G1.code:
                            throw new o.G1(e);
                          case o.jz.code:
                            throw new o.jz(e);
                          case 5e3:
                            throw new o.vx(e);
                          default:
                            if (e instanceof n.C) throw e;
                            throw new o.MI(e);
                        }
                      }
                    },
                    {
                      delay: ({ count: e, error: t }) => {
                        if (t && t instanceof i.Ci) {
                          let e = t?.headers?.get("Retry-After");
                          if (e?.match(/\d/)) return 1e3 * Number.parseInt(e);
                        }
                        return ~~(1 << e) * h;
                      },
                      retryCount: p,
                      shouldRetry: ({ error: e }) =>
                        "code" in e && "number" == typeof e.code
                          ? -1 === e.code ||
                            e.code === o.s0.code ||
                            e.code === o.bq.code
                          : !(e instanceof i.Ci) ||
                            !e.status ||
                            403 === e.status ||
                            408 === e.status ||
                            413 === e.status ||
                            429 === e.status ||
                            500 === e.status ||
                            502 === e.status ||
                            503 === e.status ||
                            504 === e.status,
                    }
                  ),
                { enabled: d, id: y }
              );
            };
          })(d, { methods: t, retryCount: f, retryDelay: h, uid: (0, c.L)() }),
          value: g,
        };
      }
    },
    48713: (e, t, r) => {
      "use strict";
      r.d(t, { L: () => c });
      var n = r(40928),
        i = r(80477);
      class o extends i.C {
        constructor() {
          super(
            "No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.",
            { docsPath: "/docs/clients/intro", name: "UrlRequiredError" }
          );
        }
      }
      var a = r(40304),
        s = r(66692);
      let l = {
        current: 0,
        take() {
          return this.current++;
        },
        reset() {
          this.current = 0;
        },
      };
      var u = r(67128);
      function c(e, t = {}) {
        let {
          batch: r,
          fetchOptions: i,
          key: d = "http",
          methods: f,
          name: h = "HTTP JSON-RPC",
          onFetchRequest: p,
          onFetchResponse: m,
          retryDelay: g,
          raw: y,
        } = t;
        return ({ chain: c, retryCount: b, timeout: v }) => {
          let { batchSize: w = 1e3, wait: x = 0 } =
              "object" == typeof r ? r : {},
            A = t.retryCount ?? b,
            E = v ?? t.timeout ?? 1e4,
            k = e || c?.rpcUrls.default.http[0];
          if (!k) throw new o();
          let I = (function (e, t = {}) {
            return {
              async request(r) {
                let {
                    body: i,
                    onRequest: o = t.onRequest,
                    onResponse: a = t.onResponse,
                    timeout: u = t.timeout ?? 1e4,
                  } = r,
                  c = { ...(t.fetchOptions ?? {}), ...(r.fetchOptions ?? {}) },
                  { headers: d, method: f, signal: h } = c;
                try {
                  let t;
                  let r = await (function (
                    e,
                    {
                      errorInstance: t = Error("timed out"),
                      timeout: r,
                      signal: n,
                    }
                  ) {
                    return new Promise((i, o) => {
                      (async () => {
                        let a;
                        try {
                          let s = new AbortController();
                          r > 0 &&
                            (a = setTimeout(() => {
                              n ? s.abort() : o(t);
                            }, r)),
                            i(await e({ signal: s?.signal || null }));
                        } catch (e) {
                          e?.name === "AbortError" && o(t), o(e);
                        } finally {
                          clearTimeout(a);
                        }
                      })();
                    });
                  })(
                    async ({ signal: t }) => {
                      let r = {
                          ...c,
                          body: Array.isArray(i)
                            ? (0, s.A)(
                                i.map((e) => ({
                                  jsonrpc: "2.0",
                                  id: e.id ?? l.take(),
                                  ...e,
                                }))
                              )
                            : (0, s.A)({
                                jsonrpc: "2.0",
                                id: i.id ?? l.take(),
                                ...i,
                              }),
                          headers: { "Content-Type": "application/json", ...d },
                          method: f || "POST",
                          signal: h || (u > 0 ? t : null),
                        },
                        n = new Request(e, r),
                        a = (await o?.(n, r)) ?? { ...r, url: e };
                      return await fetch(a.url ?? e, a);
                    },
                    {
                      errorInstance: new n.MU({ body: i, url: e }),
                      timeout: u,
                      signal: !0,
                    }
                  );
                  if (
                    (a && (await a(r)),
                    r.headers
                      .get("Content-Type")
                      ?.startsWith("application/json"))
                  )
                    t = await r.json();
                  else {
                    t = await r.text();
                    try {
                      t = JSON.parse(t || "{}");
                    } catch (e) {
                      if (r.ok) throw e;
                      t = { error: t };
                    }
                  }
                  if (!r.ok)
                    throw new n.Ci({
                      body: i,
                      details: (0, s.A)(t.error) || r.statusText,
                      headers: r.headers,
                      status: r.status,
                      url: e,
                    });
                  return t;
                } catch (t) {
                  if (t instanceof n.Ci || t instanceof n.MU) throw t;
                  throw new n.Ci({ body: i, cause: t, url: e });
                }
              },
            };
          })(k, { fetchOptions: i, onRequest: p, onResponse: m, timeout: E });
          return (0, u.o)(
            {
              key: d,
              methods: f,
              name: h,
              async request({ method: e, params: t }) {
                let i = { method: e, params: t },
                  { schedule: o } = (0, a.u)({
                    id: k,
                    wait: x,
                    shouldSplitBatch: (e) => e.length > w,
                    fn: (e) => I.request({ body: e }),
                    sort: (e, t) => e.id - t.id,
                  }),
                  s = async (e) => (r ? o(e) : [await I.request({ body: e })]),
                  [{ error: l, result: u }] = await s(i);
                if (y) return { error: l, result: u };
                if (l) throw new n.J8({ body: i, error: l, url: k });
                return u;
              },
              retryCount: A,
              retryDelay: g,
              timeout: E,
              type: "http",
            },
            { fetchOptions: i, url: k }
          );
        };
      }
    },
    38472: (e, t, r) => {
      "use strict";
      r.d(t, {
        Ag: () => a,
        Rm: () => u,
        SJ: () => l,
        _: () => c,
        b2: () => i,
        oX: () => s,
        v2: () => n,
      });
      let n = [
          {
            inputs: [
              {
                components: [
                  { name: "target", type: "address" },
                  { name: "allowFailure", type: "bool" },
                  { name: "callData", type: "bytes" },
                ],
                name: "calls",
                type: "tuple[]",
              },
            ],
            name: "aggregate3",
            outputs: [
              {
                components: [
                  { name: "success", type: "bool" },
                  { name: "returnData", type: "bytes" },
                ],
                name: "returnData",
                type: "tuple[]",
              },
            ],
            stateMutability: "view",
            type: "function",
          },
        ],
        i = [
          {
            name: "query",
            type: "function",
            stateMutability: "view",
            inputs: [
              {
                type: "tuple[]",
                name: "queries",
                components: [
                  { type: "address", name: "sender" },
                  { type: "string[]", name: "urls" },
                  { type: "bytes", name: "data" },
                ],
              },
            ],
            outputs: [
              { type: "bool[]", name: "failures" },
              { type: "bytes[]", name: "responses" },
            ],
          },
          {
            name: "HttpError",
            type: "error",
            inputs: [
              { type: "uint16", name: "status" },
              { type: "string", name: "message" },
            ],
          },
        ],
        o = [
          { inputs: [], name: "ResolverNotFound", type: "error" },
          { inputs: [], name: "ResolverWildcardNotSupported", type: "error" },
          { inputs: [], name: "ResolverNotContract", type: "error" },
          {
            inputs: [{ name: "returnData", type: "bytes" }],
            name: "ResolverError",
            type: "error",
          },
          {
            inputs: [
              {
                components: [
                  { name: "status", type: "uint16" },
                  { name: "message", type: "string" },
                ],
                name: "errors",
                type: "tuple[]",
              },
            ],
            name: "HttpError",
            type: "error",
          },
        ],
        a = [
          ...o,
          {
            name: "resolve",
            type: "function",
            stateMutability: "view",
            inputs: [
              { name: "name", type: "bytes" },
              { name: "data", type: "bytes" },
            ],
            outputs: [
              { name: "", type: "bytes" },
              { name: "address", type: "address" },
            ],
          },
          {
            name: "resolve",
            type: "function",
            stateMutability: "view",
            inputs: [
              { name: "name", type: "bytes" },
              { name: "data", type: "bytes" },
              { name: "gateways", type: "string[]" },
            ],
            outputs: [
              { name: "", type: "bytes" },
              { name: "address", type: "address" },
            ],
          },
        ],
        s = [
          ...o,
          {
            name: "reverse",
            type: "function",
            stateMutability: "view",
            inputs: [{ type: "bytes", name: "reverseName" }],
            outputs: [
              { type: "string", name: "resolvedName" },
              { type: "address", name: "resolvedAddress" },
              { type: "address", name: "reverseResolver" },
              { type: "address", name: "resolver" },
            ],
          },
          {
            name: "reverse",
            type: "function",
            stateMutability: "view",
            inputs: [
              { type: "bytes", name: "reverseName" },
              { type: "string[]", name: "gateways" },
            ],
            outputs: [
              { type: "string", name: "resolvedName" },
              { type: "address", name: "resolvedAddress" },
              { type: "address", name: "reverseResolver" },
              { type: "address", name: "resolver" },
            ],
          },
        ],
        l = [
          {
            name: "text",
            type: "function",
            stateMutability: "view",
            inputs: [
              { name: "name", type: "bytes32" },
              { name: "key", type: "string" },
            ],
            outputs: [{ name: "", type: "string" }],
          },
        ],
        u = [
          {
            name: "addr",
            type: "function",
            stateMutability: "view",
            inputs: [{ name: "name", type: "bytes32" }],
            outputs: [{ name: "", type: "address" }],
          },
          {
            name: "addr",
            type: "function",
            stateMutability: "view",
            inputs: [
              { name: "name", type: "bytes32" },
              { name: "coinType", type: "uint256" },
            ],
            outputs: [{ name: "", type: "bytes" }],
          },
        ],
        c = [
          {
            inputs: [
              { name: "_signer", type: "address" },
              { name: "_hash", type: "bytes32" },
              { name: "_signature", type: "bytes" },
            ],
            stateMutability: "nonpayable",
            type: "constructor",
          },
          {
            inputs: [
              { name: "_signer", type: "address" },
              { name: "_hash", type: "bytes32" },
              { name: "_signature", type: "bytes" },
            ],
            outputs: [{ type: "bool" }],
            stateMutability: "nonpayable",
            type: "function",
            name: "isValidSig",
          },
        ];
    },
    33726: (e, t, r) => {
      "use strict";
      r.d(t, { LX: () => n, WN: () => i, nP: () => o });
      let n =
          "0x608060405234801561001057600080fd5b5060405161018e38038061018e83398101604081905261002f91610124565b6000808351602085016000f59050803b61004857600080fd5b6000808351602085016000855af16040513d6000823e81610067573d81fd5b3d81f35b634e487b7160e01b600052604160045260246000fd5b600082601f83011261009257600080fd5b81516001600160401b038111156100ab576100ab61006b565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100d9576100d961006b565b6040528181528382016020018510156100f157600080fd5b60005b82811015610110576020818601810151838301820152016100f4565b506000918101602001919091529392505050565b6000806040838503121561013757600080fd5b82516001600160401b0381111561014d57600080fd5b61015985828601610081565b602085015190935090506001600160401b0381111561017757600080fd5b61018385828601610081565b915050925092905056fe",
        i =
          "0x608060405234801561001057600080fd5b506040516102c03803806102c083398101604081905261002f916101e6565b836001600160a01b03163b6000036100e457600080836001600160a01b03168360405161005c9190610270565b6000604051808303816000865af19150503d8060008114610099576040519150601f19603f3d011682016040523d82523d6000602084013e61009e565b606091505b50915091508115806100b857506001600160a01b0386163b155b156100e1578060405163101bb98d60e01b81526004016100d8919061028c565b60405180910390fd5b50505b6000808451602086016000885af16040513d6000823e81610103573d81fd5b3d81f35b80516001600160a01b038116811461011e57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561015457818101518382015260200161013c565b50506000910152565b600082601f83011261016e57600080fd5b81516001600160401b0381111561018757610187610123565b604051601f8201601f19908116603f011681016001600160401b03811182821017156101b5576101b5610123565b6040528181528382016020018510156101cd57600080fd5b6101de826020830160208701610139565b949350505050565b600080600080608085870312156101fc57600080fd5b61020585610107565b60208601519094506001600160401b0381111561022157600080fd5b61022d8782880161015d565b93505061023c60408601610107565b60608601519092506001600160401b0381111561025857600080fd5b6102648782880161015d565b91505092959194509250565b60008251610282818460208701610139565b9190910192915050565b60208152600082518060208401526102ab816040850160208701610139565b601f01601f1916919091016040019291505056fe",
        o =
          "0x608060405234801561001057600080fd5b5060405161069438038061069483398101604081905261002f9161051e565b600061003c848484610048565b9050806000526001601ff35b60007f64926492649264926492649264926492649264926492649264926492649264926100748361040c565b036101e7576000606080848060200190518101906100929190610577565b60405192955090935091506000906001600160a01b038516906100b69085906105dd565b6000604051808303816000865af19150503d80600081146100f3576040519150601f19603f3d011682016040523d82523d6000602084013e6100f8565b606091505b50509050876001600160a01b03163b60000361016057806101605760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90610190908b9087906004016105f9565b602060405180830381865afa1580156101ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d19190610633565b6001600160e01b03191614945050505050610405565b6001600160a01b0384163b1561027a57604051630b135d3f60e11b808252906001600160a01b03861690631626ba7e9061022790879087906004016105f9565b602060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102689190610633565b6001600160e01b031916149050610405565b81516041146102df5760405162461bcd60e51b815260206004820152603a602482015260008051602061067483398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e6774680000000000006064820152608401610157565b6102e7610425565b5060208201516040808401518451859392600091859190811061030c5761030c61065d565b016020015160f81c9050601b811480159061032b57508060ff16601c14155b1561038c5760405162461bcd60e51b815260206004820152603b602482015260008051602061067483398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c756500000000006064820152608401610157565b60408051600081526020810180835289905260ff83169181019190915260608101849052608081018390526001600160a01b0389169060019060a0016020604051602081039080840390855afa1580156103ea573d6000803e3d6000fd5b505050602060405103516001600160a01b0316149450505050505b9392505050565b600060208251101561041d57600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b038116811461045857600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561048c578181015183820152602001610474565b50506000910152565b600082601f8301126104a657600080fd5b81516001600160401b038111156104bf576104bf61045b565b604051601f8201601f19908116603f011681016001600160401b03811182821017156104ed576104ed61045b565b60405281815283820160200185101561050557600080fd5b610516826020830160208701610471565b949350505050565b60008060006060848603121561053357600080fd5b835161053e81610443565b6020850151604086015191945092506001600160401b0381111561056157600080fd5b61056d86828701610495565b9150509250925092565b60008060006060848603121561058c57600080fd5b835161059781610443565b60208501519093506001600160401b038111156105b357600080fd5b6105bf86828701610495565b604086015190935090506001600160401b0381111561056157600080fd5b600082516105ef818460208701610471565b9190910192915050565b828152604060208201526000825180604084015261061e816060850160208701610471565b601f01601f1916919091016060019392505050565b60006020828403121561064557600080fd5b81516001600160e01b03198116811461040557600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572";
    },
    6999: (e, t, r) => {
      "use strict";
      r.d(t, { E: () => n });
      let n = 1;
    },
    26542: (e, t, r) => {
      "use strict";
      r.d(t, { Ao: () => i, Au: () => n });
      let n = 2n ** 16n - 1n,
        i = 2n ** 256n - 1n;
    },
    4382: (e, t, r) => {
      "use strict";
      r.d(t, { J9: () => o, Mc: () => i, fD: () => n });
      let n = {
          1: "An `assert` condition failed.",
          17: "Arithmetic operation resulted in underflow or overflow.",
          18: "Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).",
          33: "Attempted to convert to an invalid type.",
          34: "Attempted to access a storage byte array that is incorrectly encoded.",
          49: "Performed `.pop()` on an empty array",
          50: "Array index is out of bounds.",
          65: "Allocated too much memory or created an array which is too large.",
          81: "Attempted to call a zero-initialized variable of internal function type.",
        },
        i = {
          inputs: [{ name: "message", type: "string" }],
          name: "Error",
          type: "error",
        },
        o = {
          inputs: [{ name: "reason", type: "uint256" }],
          name: "Panic",
          type: "error",
        };
    },
    57317: (e, t, r) => {
      "use strict";
      r.d(t, { eL: () => n, sz: () => i });
      let n = { gwei: 9, wei: 18 },
        i = { ether: -9, wei: 9 };
    },
    36991: (e, t, r) => {
      "use strict";
      r.d(t, {
        BI: () => E,
        EB: () => x,
        Iy: () => l,
        Iz: () => v,
        MR: () => w,
        M_: () => b,
        Nc: () => c,
        O: () => u,
        Wq: () => m,
        YE: () => f,
        YF: () => s,
        YW: () => a,
        ZP: () => h,
        _z: () => g,
        d_: () => C,
        dm: () => T,
        fo: () => k,
        gH: () => d,
        j: () => P,
        kE: () => y,
        l3: () => I,
        nK: () => S,
        nM: () => A,
        yy: () => p,
      });
      var n = r(57880),
        i = r(91149),
        o = r(80477);
      class a extends o.C {
        constructor({ docsPath: e }) {
          super(
            "A constructor was not found on the ABI.\nMake sure you are using the correct ABI and that the constructor exists on it.",
            { docsPath: e, name: "AbiConstructorNotFoundError" }
          );
        }
      }
      class s extends o.C {
        constructor({ docsPath: e }) {
          super(
            "Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.\nMake sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.",
            { docsPath: e, name: "AbiConstructorParamsNotFoundError" }
          );
        }
      }
      class l extends o.C {
        constructor({ data: e, params: t, size: r }) {
          super(`Data size of ${r} bytes is too small for given parameters.`, {
            metaMessages: [
              `Params: (${(0, n.A)(t, { includeName: !0 })})`,
              `Data:   ${e} (${r} bytes)`,
            ],
            name: "AbiDecodingDataSizeTooSmallError",
          }),
            Object.defineProperty(this, "data", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "params", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "size", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.data = e),
            (this.params = t),
            (this.size = r);
        }
      }
      class u extends o.C {
        constructor() {
          super('Cannot decode zero data ("0x") with ABI parameters.', {
            name: "AbiDecodingZeroDataError",
          });
        }
      }
      class c extends o.C {
        constructor({ expectedLength: e, givenLength: t, type: r }) {
          super(
            `ABI encoding array length mismatch for type ${r}.
Expected length: ${e}
Given length: ${t}`,
            { name: "AbiEncodingArrayLengthMismatchError" }
          );
        }
      }
      class d extends o.C {
        constructor({ expectedSize: e, value: t }) {
          super(
            `Size of bytes "${t}" (bytes${(0, i.E)(
              t
            )}) does not match expected size (bytes${e}).`,
            { name: "AbiEncodingBytesSizeMismatchError" }
          );
        }
      }
      class f extends o.C {
        constructor({ expectedLength: e, givenLength: t }) {
          super(
            `ABI encoding params/values length mismatch.
Expected length (params): ${e}
Given length (values): ${t}`,
            { name: "AbiEncodingLengthMismatchError" }
          );
        }
      }
      class h extends o.C {
        constructor(e, { docsPath: t }) {
          super(
            `Arguments (\`args\`) were provided to "${e}", but "${e}" on the ABI does not contain any parameters (\`inputs\`).
Cannot encode error result without knowing what the parameter types are.
Make sure you are using the correct ABI and that the inputs exist on it.`,
            { docsPath: t, name: "AbiErrorInputsNotFoundError" }
          );
        }
      }
      class p extends o.C {
        constructor(e, { docsPath: t } = {}) {
          super(
            `Error ${e ? `"${e}" ` : ""}not found on ABI.
Make sure you are using the correct ABI and that the error exists on it.`,
            { docsPath: t, name: "AbiErrorNotFoundError" }
          );
        }
      }
      class m extends o.C {
        constructor(e, { docsPath: t }) {
          super(
            `Encoded error signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the error exists on it.
You can look up the decoded signature here: https://openchain.xyz/signatures?query=${e}.`,
            { docsPath: t, name: "AbiErrorSignatureNotFoundError" }
          ),
            Object.defineProperty(this, "signature", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.signature = e);
        }
      }
      class g extends o.C {
        constructor({ docsPath: e }) {
          super("Cannot extract event signature from empty topics.", {
            docsPath: e,
            name: "AbiEventSignatureEmptyTopicsError",
          });
        }
      }
      class y extends o.C {
        constructor(e, { docsPath: t }) {
          super(
            `Encoded event signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the event exists on it.
You can look up the signature here: https://openchain.xyz/signatures?query=${e}.`,
            { docsPath: t, name: "AbiEventSignatureNotFoundError" }
          );
        }
      }
      class b extends o.C {
        constructor(e, { docsPath: t } = {}) {
          super(
            `Event ${e ? `"${e}" ` : ""}not found on ABI.
Make sure you are using the correct ABI and that the event exists on it.`,
            { docsPath: t, name: "AbiEventNotFoundError" }
          );
        }
      }
      class v extends o.C {
        constructor(e, { docsPath: t } = {}) {
          super(
            `Function ${e ? `"${e}" ` : ""}not found on ABI.
Make sure you are using the correct ABI and that the function exists on it.`,
            { docsPath: t, name: "AbiFunctionNotFoundError" }
          );
        }
      }
      class w extends o.C {
        constructor(e, { docsPath: t }) {
          super(
            `Function "${e}" does not contain any \`outputs\` on ABI.
Cannot decode function result without knowing what the parameter types are.
Make sure you are using the correct ABI and that the function exists on it.`,
            { docsPath: t, name: "AbiFunctionOutputsNotFoundError" }
          );
        }
      }
      class x extends o.C {
        constructor(e, { docsPath: t }) {
          super(
            `Encoded function signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the function exists on it.
You can look up the signature here: https://openchain.xyz/signatures?query=${e}.`,
            { docsPath: t, name: "AbiFunctionSignatureNotFoundError" }
          );
        }
      }
      class A extends o.C {
        constructor(e, t) {
          super("Found ambiguous types in overloaded ABI items.", {
            metaMessages: [
              `\`${e.type}\` in \`${(0, n.B)(e.abiItem)}\`, and`,
              `\`${t.type}\` in \`${(0, n.B)(t.abiItem)}\``,
              "",
              "These types encode differently and cannot be distinguished at runtime.",
              "Remove one of the ambiguous items in the ABI.",
            ],
            name: "AbiItemAmbiguityError",
          });
        }
      }
      class E extends o.C {
        constructor({ expectedSize: e, givenSize: t }) {
          super(`Expected bytes${e}, got bytes${t}.`, {
            name: "BytesSizeMismatchError",
          });
        }
      }
      class k extends o.C {
        constructor({ abiItem: e, data: t, params: r, size: i }) {
          super(
            `Data size of ${i} bytes is too small for non-indexed event parameters.`,
            {
              metaMessages: [
                `Params: (${(0, n.A)(r, { includeName: !0 })})`,
                `Data:   ${t} (${i} bytes)`,
              ],
              name: "DecodeLogDataMismatch",
            }
          ),
            Object.defineProperty(this, "abiItem", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "data", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "params", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "size", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.abiItem = e),
            (this.data = t),
            (this.params = r),
            (this.size = i);
        }
      }
      class I extends o.C {
        constructor({ abiItem: e, param: t }) {
          super(
            `Expected a topic for indexed event parameter${
              t.name ? ` "${t.name}"` : ""
            } on event "${(0, n.B)(e, { includeName: !0 })}".`,
            { name: "DecodeLogTopicsMismatch" }
          ),
            Object.defineProperty(this, "abiItem", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.abiItem = e);
        }
      }
      class S extends o.C {
        constructor(e, { docsPath: t }) {
          super(
            `Type "${e}" is not a valid encoding type.
Please provide a valid ABI type.`,
            { docsPath: t, name: "InvalidAbiEncodingType" }
          );
        }
      }
      class P extends o.C {
        constructor(e, { docsPath: t }) {
          super(
            `Type "${e}" is not a valid decoding type.
Please provide a valid ABI type.`,
            { docsPath: t, name: "InvalidAbiDecodingType" }
          );
        }
      }
      class T extends o.C {
        constructor(e) {
          super(`Value "${e}" is not a valid array.`, {
            name: "InvalidArrayError",
          });
        }
      }
      class C extends o.C {
        constructor(e) {
          super(
            `"${e}" is not a valid definition type.
Valid types: "function", "event", "error"`,
            { name: "InvalidDefinitionTypeError" }
          );
        }
      }
    },
    61117: (e, t, r) => {
      "use strict";
      r.d(t, { M: () => i });
      var n = r(80477);
      class i extends n.C {
        constructor({ address: e }) {
          super(`Address "${e}" is invalid.`, {
            metaMessages: [
              "- Address must be a hex value of 20 bytes (40 hex characters).",
              "- Address must match its checksum counterpart.",
            ],
            name: "InvalidAddressError",
          });
        }
      }
    },
    80477: (e, t, r) => {
      "use strict";
      r.d(t, { C: () => o });
      let n = "2.28.1",
        i = {
          getDocsUrl: ({ docsBaseUrl: e, docsPath: t = "", docsSlug: r }) =>
            t ? `${e ?? "https://viem.sh"}${t}${r ? `#${r}` : ""}` : void 0,
          version: `viem@${n}`,
        };
      class o extends Error {
        constructor(e, t = {}) {
          let r =
              t.cause instanceof o
                ? t.cause.details
                : t.cause?.message
                ? t.cause.message
                : t.details,
            a = (t.cause instanceof o && t.cause.docsPath) || t.docsPath,
            s = i.getDocsUrl?.({ ...t, docsPath: a });
          super(
            [
              e || "An error occurred.",
              "",
              ...(t.metaMessages ? [...t.metaMessages, ""] : []),
              ...(s ? [`Docs: ${s}`] : []),
              ...(r ? [`Details: ${r}`] : []),
              ...(i.version ? [`Version: ${i.version}`] : []),
            ].join("\n"),
            t.cause ? { cause: t.cause } : void 0
          ),
            Object.defineProperty(this, "details", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "docsPath", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "metaMessages", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "shortMessage", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "version", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "BaseError",
            }),
            (this.details = r),
            (this.docsPath = a),
            (this.metaMessages = t.metaMessages),
            (this.name = t.name ?? this.name),
            (this.shortMessage = e),
            (this.version = n);
        }
        walk(e) {
          return (function e(t, r) {
            return r?.(t)
              ? t
              : t && "object" == typeof t && "cause" in t && void 0 !== t.cause
              ? e(t.cause, r)
              : r
              ? null
              : t;
          })(this, e);
        }
      }
    },
    20624: (e, t, r) => {
      "use strict";
      r.d(t, { PK: () => l, iq: () => o, uP: () => s, zF: () => a });
      var n = r(6999),
        i = r(80477);
      class o extends i.C {
        constructor({ maxSize: e, size: t }) {
          super("Blob size is too large.", {
            metaMessages: [`Max: ${e} bytes`, `Given: ${t} bytes`],
            name: "BlobSizeTooLargeError",
          });
        }
      }
      class a extends i.C {
        constructor() {
          super("Blob data must not be empty.", { name: "EmptyBlobError" });
        }
      }
      class s extends i.C {
        constructor({ hash: e, size: t }) {
          super(`Versioned hash "${e}" size is invalid.`, {
            metaMessages: ["Expected: 32", `Received: ${t}`],
            name: "InvalidVersionedHashSizeError",
          });
        }
      }
      class l extends i.C {
        constructor({ hash: e, version: t }) {
          super(`Versioned hash "${e}" version is invalid.`, {
            metaMessages: [`Expected: ${n.E}`, `Received: ${t}`],
            name: "InvalidVersionedHashVersionError",
          });
        }
      }
    },
    62496: (e, t, r) => {
      "use strict";
      r.d(t, { l: () => i });
      var n = r(80477);
      class i extends n.C {
        constructor({ blockHash: e, blockNumber: t }) {
          let r = "Block";
          e && (r = `Block at hash "${e}"`),
            t && (r = `Block at number "${t}"`),
            super(`${r} could not be found.`, { name: "BlockNotFoundError" });
        }
      }
    },
    89780: (e, t, r) => {
      "use strict";
      r.d(t, {
        EH: () => o,
        YE: () => s,
        jF: () => a,
        qD: () => l,
        rj: () => i,
      });
      var n = r(80477);
      class i extends n.C {
        constructor({ blockNumber: e, chain: t, contract: r }) {
          super(`Chain "${t.name}" does not support contract "${r.name}".`, {
            metaMessages: [
              "This could be due to any of the following:",
              ...(e && r.blockCreated && r.blockCreated > e
                ? [
                    `- The contract "${r.name}" was not deployed until block ${r.blockCreated} (current block ${e}).`,
                  ]
                : [
                    `- The chain does not have the contract "${r.name}" configured.`,
                  ]),
            ],
            name: "ChainDoesNotSupportContract",
          });
        }
      }
      class o extends n.C {
        constructor({ chain: e, currentChainId: t }) {
          super(
            `The current chain of the wallet (id: ${t}) does not match the target chain for the transaction (id: ${e.id} – ${e.name}).`,
            {
              metaMessages: [
                `Current Chain ID:  ${t}`,
                `Expected Chain ID: ${e.id} – ${e.name}`,
              ],
              name: "ChainMismatchError",
            }
          );
        }
      }
      class a extends n.C {
        constructor() {
          super(
            "No chain was provided to the request.\nPlease provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.",
            { name: "ChainNotFoundError" }
          );
        }
      }
      class s extends n.C {
        constructor() {
          super("No chain was provided to the Client.", {
            name: "ClientChainNotConfiguredError",
          });
        }
      }
      class l extends n.C {
        constructor({ chainId: e }) {
          super(
            "number" == typeof e
              ? `Chain ID "${e}" is invalid.`
              : "Chain ID is invalid.",
            { name: "InvalidChainIdError" }
          );
        }
      }
    },
    88085: (e, t, r) => {
      "use strict";
      r.d(t, {
        zX: () => y,
        bG: () => b,
        M: () => v,
        rR: () => w,
        Po: () => x,
        $S: () => A,
      });
      var n = r(98722),
        i = r(4382),
        o = r(17169),
        a = r(57880),
        s = r(66692);
      function l({
        abiItem: e,
        args: t,
        includeFunctionName: r = !0,
        includeName: n = !1,
      }) {
        if ("name" in e && "inputs" in e && e.inputs)
          return `${r ? e.name : ""}(${e.inputs
            .map(
              (e, r) =>
                `${n && e.name ? `${e.name}: ` : ""}${
                  "object" == typeof t[r] ? (0, s.A)(t[r]) : t[r]
                }`
            )
            .join(", ")})`;
      }
      var u = r(4617),
        c = r(69595),
        d = r(18773),
        f = r(36991),
        h = r(80477),
        p = r(56044),
        m = r(45757),
        g = r(9740);
      class y extends h.C {
        constructor(
          e,
          {
            account: t,
            docsPath: r,
            chain: i,
            data: o,
            gas: a,
            gasPrice: s,
            maxFeePerGas: l,
            maxPriorityFeePerGas: u,
            nonce: f,
            to: h,
            value: g,
            stateOverride: y,
          }
        ) {
          let b = t ? (0, n.J)(t) : void 0,
            v = (0, m.aO)({
              from: b?.address,
              to: h,
              value:
                void 0 !== g &&
                `${(0, c.c)(g)} ${i?.nativeCurrency?.symbol || "ETH"}`,
              data: o,
              gas: a,
              gasPrice: void 0 !== s && `${(0, d.Q)(s)} gwei`,
              maxFeePerGas: void 0 !== l && `${(0, d.Q)(l)} gwei`,
              maxPriorityFeePerGas: void 0 !== u && `${(0, d.Q)(u)} gwei`,
              nonce: f,
            });
          y &&
            (v += `
${(0, p.uj)(y)}`),
            super(e.shortMessage, {
              cause: e,
              docsPath: r,
              metaMessages: [
                ...(e.metaMessages ? [...e.metaMessages, " "] : []),
                "Raw Call Arguments:",
                v,
              ].filter(Boolean),
              name: "CallExecutionError",
            }),
            Object.defineProperty(this, "cause", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.cause = e);
        }
      }
      class b extends h.C {
        constructor(
          e,
          {
            abi: t,
            args: r,
            contractAddress: n,
            docsPath: i,
            functionName: o,
            sender: s,
          }
        ) {
          let c = (0, u.iY)({ abi: t, args: r, name: o }),
            d = c
              ? l({
                  abiItem: c,
                  args: r,
                  includeFunctionName: !1,
                  includeName: !1,
                })
              : void 0,
            f = c ? (0, a.B)(c, { includeName: !0 }) : void 0,
            h = (0, m.aO)({
              address: n && (0, g.R)(n),
              function: f,
              args:
                d &&
                "()" !== d &&
                `${[...Array(o?.length ?? 0).keys()]
                  .map(() => " ")
                  .join("")}${d}`,
              sender: s,
            });
          super(
            e.shortMessage ||
              `An unknown error occurred while executing the contract function "${o}".`,
            {
              cause: e,
              docsPath: i,
              metaMessages: [
                ...(e.metaMessages ? [...e.metaMessages, " "] : []),
                h && "Contract Call:",
                h,
              ].filter(Boolean),
              name: "ContractFunctionExecutionError",
            }
          ),
            Object.defineProperty(this, "abi", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "args", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "cause", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "contractAddress", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "formattedArgs", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "functionName", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "sender", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.abi = t),
            (this.args = r),
            (this.cause = e),
            (this.contractAddress = n),
            (this.functionName = o),
            (this.sender = s);
        }
      }
      class v extends h.C {
        constructor({ abi: e, data: t, functionName: r, message: n }) {
          let s, u, c, d, h;
          if (t && "0x" !== t)
            try {
              let {
                abiItem: r,
                errorName: n,
                args: s,
              } = (h = (0, o.W)({ abi: e, data: t }));
              if ("Error" === n) c = s[0];
              else if ("Panic" === n) {
                let [e] = s;
                c = i.fD[e];
              } else {
                let e = r ? (0, a.B)(r, { includeName: !0 }) : void 0,
                  t =
                    r && s
                      ? l({
                          abiItem: r,
                          args: s,
                          includeFunctionName: !1,
                          includeName: !1,
                        })
                      : void 0;
                u = [
                  e ? `Error: ${e}` : "",
                  t && "()" !== t
                    ? `       ${[...Array(n?.length ?? 0).keys()]
                        .map(() => " ")
                        .join("")}${t}`
                    : "",
                ];
              }
            } catch (e) {
              s = e;
            }
          else n && (c = n);
          s instanceof f.Wq &&
            ((d = s.signature),
            (u = [
              `Unable to decode signature "${d}" as it was not found on the provided ABI.`,
              "Make sure you are using the correct ABI and that the error exists on it.",
              `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${d}.`,
            ])),
            super(
              (c && "execution reverted" !== c) || d
                ? [
                    `The contract function "${r}" reverted with the following ${
                      d ? "signature" : "reason"
                    }:`,
                    c || d,
                  ].join("\n")
                : `The contract function "${r}" reverted.`,
              {
                cause: s,
                metaMessages: u,
                name: "ContractFunctionRevertedError",
              }
            ),
            Object.defineProperty(this, "data", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "raw", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "reason", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "signature", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.data = h),
            (this.raw = t),
            (this.reason = c),
            (this.signature = d);
        }
      }
      class w extends h.C {
        constructor({ functionName: e }) {
          super(`The contract function "${e}" returned no data ("0x").`, {
            metaMessages: [
              "This could be due to any of the following:",
              `  - The contract does not have the function "${e}",`,
              "  - The parameters passed to the contract function may be invalid, or",
              "  - The address is not a contract.",
            ],
            name: "ContractFunctionZeroDataError",
          });
        }
      }
      class x extends h.C {
        constructor({ factory: e }) {
          super(
            `Deployment for counterfactual contract call failed${
              e ? ` for factory "${e}".` : ""
            }`,
            {
              metaMessages: [
                "Please ensure:",
                "- The `factory` is a valid contract deployment factory (ie. Create2 Factory, ERC-4337 Factory, etc).",
                "- The `factoryData` is a valid encoded function call for contract deployment function on the factory.",
              ],
              name: "CounterfactualDeploymentFailedError",
            }
          );
        }
      }
      class A extends h.C {
        constructor({ data: e, message: t }) {
          super(t || "", { name: "RawContractError" }),
            Object.defineProperty(this, "code", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: 3,
            }),
            Object.defineProperty(this, "data", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.data = e);
        }
      }
    },
    90305: (e, t, r) => {
      "use strict";
      r.d(t, { B4: () => i, SK: () => o, hX: () => a });
      var n = r(80477);
      class i extends n.C {
        constructor({ offset: e }) {
          super(`Offset \`${e}\` cannot be negative.`, {
            name: "NegativeOffsetError",
          });
        }
      }
      class o extends n.C {
        constructor({ length: e, position: t }) {
          super(
            `Position \`${t}\` is out of bounds (\`0 < position < ${e}\`).`,
            { name: "PositionOutOfBoundsError" }
          );
        }
      }
      class a extends n.C {
        constructor({ count: e, limit: t }) {
          super(
            `Recursive read limit of \`${t}\` exceeded (recursive read count: \`${e}\`).`,
            { name: "RecursiveReadLimitExceededError" }
          );
        }
      }
    },
    57643: (e, t, r) => {
      "use strict";
      r.d(t, { Fl: () => o, NV: () => a, ii: () => i });
      var n = r(80477);
      class i extends n.C {
        constructor({ offset: e, position: t, size: r }) {
          super(
            `Slice ${
              "start" === t ? "starting" : "ending"
            } at offset "${e}" is out-of-bounds (size: ${r}).`,
            { name: "SliceOffsetOutOfBoundsError" }
          );
        }
      }
      class o extends n.C {
        constructor({ size: e, targetSize: t, type: r }) {
          super(
            `${r.charAt(0).toUpperCase()}${r
              .slice(1)
              .toLowerCase()} size (${e}) exceeds padding size (${t}).`,
            { name: "SizeExceedsPaddingSizeError" }
          );
        }
      }
      class a extends n.C {
        constructor({ size: e, targetSize: t, type: r }) {
          super(
            `${r.charAt(0).toUpperCase()}${r
              .slice(1)
              .toLowerCase()} is expected to be ${t} ${r} long, but is ${e} ${r} long.`,
            { name: "InvalidBytesLengthError" }
          );
        }
      }
    },
    93970: (e, t, r) => {
      "use strict";
      r.d(t, { H2: () => a, Ty: () => i, u: () => s, xO: () => o });
      var n = r(80477);
      class i extends n.C {
        constructor({ max: e, min: t, signed: r, size: n, value: i }) {
          super(
            `Number "${i}" is not in safe ${
              n ? `${8 * n}-bit ${r ? "signed" : "unsigned"} ` : ""
            }integer range ${e ? `(${t} to ${e})` : `(above ${t})`}`,
            { name: "IntegerOutOfRangeError" }
          );
        }
      }
      class o extends n.C {
        constructor(e) {
          super(
            `Bytes value "${e}" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`,
            { name: "InvalidBytesBooleanError" }
          );
        }
      }
      class a extends n.C {
        constructor(e) {
          super(
            `Hex value "${e}" is not a valid boolean. The hex value must be "0x0" (false) or "0x1" (true).`,
            { name: "InvalidHexBooleanError" }
          );
        }
      }
      class s extends n.C {
        constructor({ givenSize: e, maxSize: t }) {
          super(`Size cannot exceed ${t} bytes. Given size: ${e} bytes.`, {
            name: "SizeOverflowError",
          });
        }
      }
    },
    62333: (e, t, r) => {
      "use strict";
      r.d(t, { RR: () => s, pw: () => a, sM: () => o });
      var n = r(18773),
        i = r(80477);
      class o extends i.C {
        constructor() {
          super("`baseFeeMultiplier` must be greater than 1.", {
            name: "BaseFeeScalarError",
          });
        }
      }
      class a extends i.C {
        constructor() {
          super("Chain does not support EIP-1559 fees.", {
            name: "Eip1559FeesNotSupportedError",
          });
        }
      }
      class s extends i.C {
        constructor({ maxPriorityFeePerGas: e }) {
          super(
            `\`maxFeePerGas\` cannot be less than the \`maxPriorityFeePerGas\` (${(0,
            n.Q)(e)} gwei).`,
            { name: "MaxFeePerGasTooLowError" }
          );
        }
      }
    },
    87939: (e, t, r) => {
      "use strict";
      r.d(t, {
        A7: () => o,
        BG: () => a,
        Fo: () => h,
        K0: () => l,
        Oh: () => u,
        RM: () => g,
        jj: () => s,
        k5: () => d,
        lN: () => m,
        lY: () => f,
        uC: () => p,
        vW: () => c,
      });
      var n = r(18773),
        i = r(80477);
      class o extends i.C {
        constructor({ cause: e, message: t } = {}) {
          let r = t
            ?.replace("execution reverted: ", "")
            ?.replace("execution reverted", "");
          super(
            `Execution reverted ${
              r ? `with reason: ${r}` : "for an unknown reason"
            }.`,
            { cause: e, name: "ExecutionRevertedError" }
          );
        }
      }
      Object.defineProperty(o, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: 3,
      }),
        Object.defineProperty(o, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /execution reverted/,
        });
      class a extends i.C {
        constructor({ cause: e, maxFeePerGas: t } = {}) {
          super(
            `The fee cap (\`maxFeePerGas\`${
              t ? ` = ${(0, n.Q)(t)} gwei` : ""
            }) cannot be higher than the maximum allowed value (2^256-1).`,
            { cause: e, name: "FeeCapTooHighError" }
          );
        }
      }
      Object.defineProperty(a, "nodeMessage", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value:
          /max fee per gas higher than 2\^256-1|fee cap higher than 2\^256-1/,
      });
      class s extends i.C {
        constructor({ cause: e, maxFeePerGas: t } = {}) {
          super(
            `The fee cap (\`maxFeePerGas\`${
              t ? ` = ${(0, n.Q)(t)}` : ""
            } gwei) cannot be lower than the block base fee.`,
            { cause: e, name: "FeeCapTooLowError" }
          );
        }
      }
      Object.defineProperty(s, "nodeMessage", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value:
          /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/,
      });
      class l extends i.C {
        constructor({ cause: e, nonce: t } = {}) {
          super(
            `Nonce provided for the transaction ${
              t ? `(${t}) ` : ""
            }is higher than the next one expected.`,
            { cause: e, name: "NonceTooHighError" }
          );
        }
      }
      Object.defineProperty(l, "nodeMessage", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: /nonce too high/,
      });
      class u extends i.C {
        constructor({ cause: e, nonce: t } = {}) {
          super(
            `Nonce provided for the transaction ${
              t ? `(${t}) ` : ""
            }is lower than the current nonce of the account.
Try increasing the nonce or find the latest nonce with \`getTransactionCount\`.`,
            { cause: e, name: "NonceTooLowError" }
          );
        }
      }
      Object.defineProperty(u, "nodeMessage", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: /nonce too low|transaction already imported|already known/,
      });
      class c extends i.C {
        constructor({ cause: e, nonce: t } = {}) {
          super(
            `Nonce provided for the transaction ${
              t ? `(${t}) ` : ""
            }exceeds the maximum allowed nonce.`,
            { cause: e, name: "NonceMaxValueError" }
          );
        }
      }
      Object.defineProperty(c, "nodeMessage", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: /nonce has max value/,
      });
      class d extends i.C {
        constructor({ cause: e } = {}) {
          super(
            "The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.",
            {
              cause: e,
              metaMessages: [
                "This error could arise when the account does not have enough funds to:",
                " - pay for the total gas fee,",
                " - pay for the value to send.",
                " ",
                "The cost of the transaction is calculated as `gas * gas fee + value`, where:",
                " - `gas` is the amount of gas needed for transaction to execute,",
                " - `gas fee` is the gas fee,",
                " - `value` is the amount of ether to send to the recipient.",
              ],
              name: "InsufficientFundsError",
            }
          );
        }
      }
      Object.defineProperty(d, "nodeMessage", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: /insufficient funds|exceeds transaction sender account balance/,
      });
      class f extends i.C {
        constructor({ cause: e, gas: t } = {}) {
          super(
            `The amount of gas ${
              t ? `(${t}) ` : ""
            }provided for the transaction exceeds the limit allowed for the block.`,
            { cause: e, name: "IntrinsicGasTooHighError" }
          );
        }
      }
      Object.defineProperty(f, "nodeMessage", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: /intrinsic gas too high|gas limit reached/,
      });
      class h extends i.C {
        constructor({ cause: e, gas: t } = {}) {
          super(
            `The amount of gas ${
              t ? `(${t}) ` : ""
            }provided for the transaction is too low.`,
            { cause: e, name: "IntrinsicGasTooLowError" }
          );
        }
      }
      Object.defineProperty(h, "nodeMessage", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: /intrinsic gas too low/,
      });
      class p extends i.C {
        constructor({ cause: e }) {
          super("The transaction type is not supported for this chain.", {
            cause: e,
            name: "TransactionTypeNotSupportedError",
          });
        }
      }
      Object.defineProperty(p, "nodeMessage", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: /transaction type not valid/,
      });
      class m extends i.C {
        constructor({
          cause: e,
          maxPriorityFeePerGas: t,
          maxFeePerGas: r,
        } = {}) {
          super(
            `The provided tip (\`maxPriorityFeePerGas\`${
              t ? ` = ${(0, n.Q)(t)} gwei` : ""
            }) cannot be higher than the fee cap (\`maxFeePerGas\`${
              r ? ` = ${(0, n.Q)(r)} gwei` : ""
            }).`,
            { cause: e, name: "TipAboveFeeCapError" }
          );
        }
      }
      Object.defineProperty(m, "nodeMessage", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value:
          /max priority fee per gas higher than max fee per gas|tip higher than fee cap/,
      });
      class g extends i.C {
        constructor({ cause: e }) {
          super(`An error occurred while executing: ${e?.shortMessage}`, {
            cause: e,
            name: "UnknownNodeError",
          });
        }
      }
    },
    40928: (e, t, r) => {
      "use strict";
      r.d(t, { Ci: () => a, J8: () => s, MU: () => l });
      var n = r(66692),
        i = r(80477),
        o = r(9740);
      class a extends i.C {
        constructor({
          body: e,
          cause: t,
          details: r,
          headers: i,
          status: a,
          url: s,
        }) {
          super("HTTP request failed.", {
            cause: t,
            details: r,
            metaMessages: [
              a && `Status: ${a}`,
              `URL: ${(0, o.I)(s)}`,
              e && `Request body: ${(0, n.A)(e)}`,
            ].filter(Boolean),
            name: "HttpRequestError",
          }),
            Object.defineProperty(this, "body", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "headers", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "status", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "url", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.body = e),
            (this.headers = i),
            (this.status = a),
            (this.url = s);
        }
      }
      class s extends i.C {
        constructor({ body: e, error: t, url: r }) {
          super("RPC Request failed.", {
            cause: t,
            details: t.message,
            metaMessages: [
              `URL: ${(0, o.I)(r)}`,
              `Request body: ${(0, n.A)(e)}`,
            ],
            name: "RpcRequestError",
          }),
            Object.defineProperty(this, "code", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "data", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.code = t.code),
            (this.data = t.data);
        }
      }
      class l extends i.C {
        constructor({ body: e, url: t }) {
          super("The request took too long to respond.", {
            details: "The request timed out.",
            metaMessages: [
              `URL: ${(0, o.I)(t)}`,
              `Request body: ${(0, n.A)(e)}`,
            ],
            name: "TimeoutError",
          });
        }
      }
    },
    76790: (e, t, r) => {
      "use strict";
      r.d(t, {
        CL: () => l,
        D5: () => c,
        Di: () => f,
        G1: () => O,
        Gi: () => u,
        L5: () => I,
        MI: () => B,
        RV: () => A,
        Sf: () => x,
        WT: () => S,
        XU: () => s,
        YW: () => m,
        ab: () => g,
        bq: () => d,
        cg: () => T,
        ch: () => k,
        hA: () => h,
        hl: () => P,
        jz: () => _,
        qZ: () => p,
        s0: () => y,
        sV: () => w,
        uL: () => C,
        vx: () => v,
        xQ: () => b,
        xq: () => E,
      });
      var n = r(80477),
        i = r(40928);
      class o extends n.C {
        constructor(
          e,
          { code: t, docsPath: r, metaMessages: n, name: o, shortMessage: a }
        ) {
          super(a, {
            cause: e,
            docsPath: r,
            metaMessages: n || e?.metaMessages,
            name: o || "RpcError",
          }),
            Object.defineProperty(this, "code", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.name = o || e.name),
            (this.code = e instanceof i.J8 ? e.code : t ?? -1);
        }
      }
      class a extends o {
        constructor(e, t) {
          super(e, t),
            Object.defineProperty(this, "data", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.data = t.data);
        }
      }
      class s extends o {
        constructor(e) {
          super(e, {
            code: s.code,
            name: "ParseRpcError",
            shortMessage:
              "Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.",
          });
        }
      }
      Object.defineProperty(s, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32700,
      });
      class l extends o {
        constructor(e) {
          super(e, {
            code: l.code,
            name: "InvalidRequestRpcError",
            shortMessage: "JSON is not a valid request object.",
          });
        }
      }
      Object.defineProperty(l, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32600,
      });
      class u extends o {
        constructor(e, { method: t } = {}) {
          super(e, {
            code: u.code,
            name: "MethodNotFoundRpcError",
            shortMessage: `The method${
              t ? ` "${t}"` : ""
            } does not exist / is not available.`,
          });
        }
      }
      Object.defineProperty(u, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32601,
      });
      class c extends o {
        constructor(e) {
          super(e, {
            code: c.code,
            name: "InvalidParamsRpcError",
            shortMessage:
              "Invalid parameters were provided to the RPC method.\nDouble check you have provided the correct parameters.",
          });
        }
      }
      Object.defineProperty(c, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32602,
      });
      class d extends o {
        constructor(e) {
          super(e, {
            code: d.code,
            name: "InternalRpcError",
            shortMessage: "An internal error was received.",
          });
        }
      }
      Object.defineProperty(d, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32603,
      });
      class f extends o {
        constructor(e) {
          super(e, {
            code: f.code,
            name: "InvalidInputRpcError",
            shortMessage:
              "Missing or invalid parameters.\nDouble check you have provided the correct parameters.",
          });
        }
      }
      Object.defineProperty(f, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32e3,
      });
      class h extends o {
        constructor(e) {
          super(e, {
            code: h.code,
            name: "ResourceNotFoundRpcError",
            shortMessage: "Requested resource not found.",
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "ResourceNotFoundRpcError",
            });
        }
      }
      Object.defineProperty(h, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32001,
      });
      class p extends o {
        constructor(e) {
          super(e, {
            code: p.code,
            name: "ResourceUnavailableRpcError",
            shortMessage: "Requested resource not available.",
          });
        }
      }
      Object.defineProperty(p, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32002,
      });
      class m extends o {
        constructor(e) {
          super(e, {
            code: m.code,
            name: "TransactionRejectedRpcError",
            shortMessage: "Transaction creation failed.",
          });
        }
      }
      Object.defineProperty(m, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32003,
      });
      class g extends o {
        constructor(e, { method: t } = {}) {
          super(e, {
            code: g.code,
            name: "MethodNotSupportedRpcError",
            shortMessage: `Method${t ? ` "${t}"` : ""} is not supported.`,
          });
        }
      }
      Object.defineProperty(g, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32004,
      });
      class y extends o {
        constructor(e) {
          super(e, {
            code: y.code,
            name: "LimitExceededRpcError",
            shortMessage: "Request exceeds defined limit.",
          });
        }
      }
      Object.defineProperty(y, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32005,
      });
      class b extends o {
        constructor(e) {
          super(e, {
            code: b.code,
            name: "JsonRpcVersionUnsupportedError",
            shortMessage: "Version of JSON-RPC protocol is not supported.",
          });
        }
      }
      Object.defineProperty(b, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32006,
      });
      class v extends a {
        constructor(e) {
          super(e, {
            code: v.code,
            name: "UserRejectedRequestError",
            shortMessage: "User rejected the request.",
          });
        }
      }
      Object.defineProperty(v, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: 4001,
      });
      class w extends a {
        constructor(e) {
          super(e, {
            code: w.code,
            name: "UnauthorizedProviderError",
            shortMessage:
              "The requested method and/or account has not been authorized by the user.",
          });
        }
      }
      Object.defineProperty(w, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: 4100,
      });
      class x extends a {
        constructor(e, { method: t } = {}) {
          super(e, {
            code: x.code,
            name: "UnsupportedProviderMethodError",
            shortMessage: `The Provider does not support the requested method${
              t ? ` " ${t}"` : ""
            }.`,
          });
        }
      }
      Object.defineProperty(x, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: 4200,
      });
      class A extends a {
        constructor(e) {
          super(e, {
            code: A.code,
            name: "ProviderDisconnectedError",
            shortMessage: "The Provider is disconnected from all chains.",
          });
        }
      }
      Object.defineProperty(A, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: 4900,
      });
      class E extends a {
        constructor(e) {
          super(e, {
            code: E.code,
            name: "ChainDisconnectedError",
            shortMessage:
              "The Provider is not connected to the requested chain.",
          });
        }
      }
      Object.defineProperty(E, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: 4901,
      });
      class k extends a {
        constructor(e) {
          super(e, {
            code: k.code,
            name: "SwitchChainError",
            shortMessage: "An error occurred when attempting to switch chain.",
          });
        }
      }
      Object.defineProperty(k, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: 4902,
      });
      class I extends a {
        constructor(e) {
          super(e, {
            code: I.code,
            name: "UnsupportedNonOptionalCapabilityError",
            shortMessage:
              "This Wallet does not support a capability that was not marked as optional.",
          });
        }
      }
      Object.defineProperty(I, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: 5700,
      });
      class S extends a {
        constructor(e) {
          super(e, {
            code: S.code,
            name: "UnsupportedChainIdError",
            shortMessage:
              "This Wallet does not support the requested chain ID.",
          });
        }
      }
      Object.defineProperty(S, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: 5710,
      });
      class P extends a {
        constructor(e) {
          super(e, {
            code: P.code,
            name: "DuplicateIdError",
            shortMessage: "There is already a bundle submitted with this ID.",
          });
        }
      }
      Object.defineProperty(P, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: 5720,
      });
      class T extends a {
        constructor(e) {
          super(e, {
            code: T.code,
            name: "UnknownBundleIdError",
            shortMessage: "This bundle id is unknown / has not been submitted",
          });
        }
      }
      Object.defineProperty(T, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: 5730,
      });
      class C extends a {
        constructor(e) {
          super(e, {
            code: C.code,
            name: "BundleTooLargeError",
            shortMessage:
              "The call bundle is too large for the Wallet to process.",
          });
        }
      }
      Object.defineProperty(C, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: 5740,
      });
      class O extends a {
        constructor(e) {
          super(e, {
            code: O.code,
            name: "AtomicReadyWalletRejectedUpgradeError",
            shortMessage:
              "The Wallet can support atomicity after an upgrade, but the user rejected the upgrade.",
          });
        }
      }
      Object.defineProperty(O, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: 5750,
      });
      class _ extends a {
        constructor(e) {
          super(e, {
            code: _.code,
            name: "AtomicityNotSupportedError",
            shortMessage:
              "The wallet does not support atomic execution but the request requires it.",
          });
        }
      }
      Object.defineProperty(_, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: 5760,
      });
      class B extends o {
        constructor(e) {
          super(e, {
            name: "UnknownRpcError",
            shortMessage: "An unknown RPC error occurred.",
          });
        }
      }
    },
    56044: (e, t, r) => {
      "use strict";
      r.d(t, { Hi: () => i, ft: () => o, uj: () => s });
      var n = r(80477);
      class i extends n.C {
        constructor({ address: e }) {
          super(`State for account "${e}" is set multiple times.`, {
            name: "AccountStateConflictError",
          });
        }
      }
      class o extends n.C {
        constructor() {
          super("state and stateDiff are set on the same account.", {
            name: "StateAssignmentConflictError",
          });
        }
      }
      function a(e) {
        return e.reduce(
          (e, { slot: t, value: r }) => `${e}        ${t}: ${r}
`,
          ""
        );
      }
      function s(e) {
        return e
          .reduce((e, { address: t, ...r }) => {
            let n = `${e}    ${t}:
`;
            return (
              r.nonce &&
                (n += `      nonce: ${r.nonce}
`),
              r.balance &&
                (n += `      balance: ${r.balance}
`),
              r.code &&
                (n += `      code: ${r.code}
`),
              r.state && ((n += "      state:\n"), (n += a(r.state))),
              r.stateDiff &&
                ((n += "      stateDiff:\n"), (n += a(r.stateDiff))),
              n
            );
          }, "  State Override:\n")
          .slice(0, -1);
      }
    },
    45757: (e, t, r) => {
      "use strict";
      r.d(t, {
        $s: () => d,
        Kc: () => h,
        Kz: () => f,
        Vg: () => u,
        WA: () => p,
        aO: () => a,
        fZ: () => c,
        n3: () => s,
        zW: () => l,
      });
      var n = r(69595),
        i = r(18773),
        o = r(80477);
      function a(e) {
        let t = Object.entries(e)
            .map(([e, t]) => (void 0 === t || !1 === t ? null : [e, t]))
            .filter(Boolean),
          r = t.reduce((e, [t]) => Math.max(e, t.length), 0);
        return t.map(([e, t]) => `  ${`${e}:`.padEnd(r + 1)}  ${t}`).join("\n");
      }
      class s extends o.C {
        constructor() {
          super(
            "Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.\nUse `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.",
            { name: "FeeConflictError" }
          );
        }
      }
      class l extends o.C {
        constructor({ v: e }) {
          super(`Invalid \`v\` value "${e}". Expected 27 or 28.`, {
            name: "InvalidLegacyVError",
          });
        }
      }
      class u extends o.C {
        constructor({ transaction: e }) {
          super("Cannot infer a transaction type from provided transaction.", {
            metaMessages: [
              "Provided Transaction:",
              "{",
              a(e),
              "}",
              "",
              "To infer the type, either provide:",
              "- a `type` to the Transaction, or",
              "- an EIP-1559 Transaction with `maxFeePerGas`, or",
              "- an EIP-2930 Transaction with `gasPrice` & `accessList`, or",
              "- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or",
              "- an EIP-7702 Transaction with `authorizationList`, or",
              "- a Legacy Transaction with `gasPrice`",
            ],
            name: "InvalidSerializableTransactionError",
          });
        }
      }
      class c extends o.C {
        constructor({ storageKey: e }) {
          super(
            `Size for storage key "${e}" is invalid. Expected 32 bytes. Got ${Math.floor(
              (e.length - 2) / 2
            )} bytes.`,
            { name: "InvalidStorageKeySizeError" }
          );
        }
      }
      class d extends o.C {
        constructor(
          e,
          {
            account: t,
            docsPath: r,
            chain: o,
            data: s,
            gas: l,
            gasPrice: u,
            maxFeePerGas: c,
            maxPriorityFeePerGas: d,
            nonce: f,
            to: h,
            value: p,
          }
        ) {
          super(e.shortMessage, {
            cause: e,
            docsPath: r,
            metaMessages: [
              ...(e.metaMessages ? [...e.metaMessages, " "] : []),
              "Request Arguments:",
              a({
                chain: o && `${o?.name} (id: ${o?.id})`,
                from: t?.address,
                to: h,
                value:
                  void 0 !== p &&
                  `${(0, n.c)(p)} ${o?.nativeCurrency?.symbol || "ETH"}`,
                data: s,
                gas: l,
                gasPrice: void 0 !== u && `${(0, i.Q)(u)} gwei`,
                maxFeePerGas: void 0 !== c && `${(0, i.Q)(c)} gwei`,
                maxPriorityFeePerGas: void 0 !== d && `${(0, i.Q)(d)} gwei`,
                nonce: f,
              }),
            ].filter(Boolean),
            name: "TransactionExecutionError",
          }),
            Object.defineProperty(this, "cause", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.cause = e);
        }
      }
      class f extends o.C {
        constructor({
          blockHash: e,
          blockNumber: t,
          blockTag: r,
          hash: n,
          index: i,
        }) {
          let o = "Transaction";
          r &&
            void 0 !== i &&
            (o = `Transaction at block time "${r}" at index "${i}"`),
            e &&
              void 0 !== i &&
              (o = `Transaction at block hash "${e}" at index "${i}"`),
            t &&
              void 0 !== i &&
              (o = `Transaction at block number "${t}" at index "${i}"`),
            n && (o = `Transaction with hash "${n}"`),
            super(`${o} could not be found.`, {
              name: "TransactionNotFoundError",
            });
        }
      }
      class h extends o.C {
        constructor({ hash: e }) {
          super(
            `Transaction receipt with hash "${e}" could not be found. The Transaction may not be processed on a block yet.`,
            { name: "TransactionReceiptNotFoundError" }
          );
        }
      }
      class p extends o.C {
        constructor({ hash: e }) {
          super(
            `Timed out while waiting for transaction with hash "${e}" to be confirmed.`,
            { name: "WaitForTransactionReceiptTimeoutError" }
          );
        }
      }
    },
    9740: (e, t, r) => {
      "use strict";
      r.d(t, { I: () => i, R: () => n });
      let n = (e) => e,
        i = (e) => e;
    },
    68424: (e, t, r) => {
      "use strict";
      r.d(t, { n: () => m });
      var n = r(36991),
        i = r(40814),
        o = r(95389),
        a = r(91149),
        s = r(22162),
        l = r(67368),
        u = r(93970),
        c = r(45732),
        d = r(98979);
      function f(e, t = {}) {
        void 0 !== t.size && (0, c.Sl)(e, { size: t.size });
        let r = (0, d.My)(e, t);
        return (0, c.ME)(r, t);
      }
      var h = r(76397),
        p = r(46304);
      function m(e, t) {
        let r = "string" == typeof t ? (0, h.aT)(t) : t,
          m = (0, o.l)(r);
        if (0 === (0, a.E)(r) && e.length > 0) throw new n.O();
        if ((0, a.E)(t) && 32 > (0, a.E)(t))
          throw new n.Iy({
            data: "string" == typeof t ? t : (0, d.My)(t),
            params: e,
            size: (0, a.E)(t),
          });
        let y = 0,
          b = [];
        for (let t = 0; t < e.length; ++t) {
          let r = e[t];
          m.setPosition(y);
          let [o, a] = (function e(t, r, { staticPosition: o }) {
            let a = (0, p.k)(r.type);
            if (a) {
              let [n, i] = a;
              return (function (t, r, { length: n, staticPosition: i }) {
                if (!n) {
                  let n = i + f(t.readBytes(32)),
                    o = n + 32;
                  t.setPosition(n);
                  let a = f(t.readBytes(32)),
                    s = g(r),
                    l = 0,
                    u = [];
                  for (let n = 0; n < a; ++n) {
                    t.setPosition(o + (s ? 32 * n : l));
                    let [i, a] = e(t, r, { staticPosition: o });
                    (l += a), u.push(i);
                  }
                  return t.setPosition(i + 32), [u, 32];
                }
                if (g(r)) {
                  let o = i + f(t.readBytes(32)),
                    a = [];
                  for (let i = 0; i < n; ++i) {
                    t.setPosition(o + 32 * i);
                    let [n] = e(t, r, { staticPosition: o });
                    a.push(n);
                  }
                  return t.setPosition(i + 32), [a, 32];
                }
                let o = 0,
                  a = [];
                for (let s = 0; s < n; ++s) {
                  let [n, s] = e(t, r, { staticPosition: i + o });
                  (o += s), a.push(n);
                }
                return [a, o];
              })(t, { ...r, type: i }, { length: n, staticPosition: o });
            }
            if ("tuple" === r.type)
              return (function (t, r, { staticPosition: n }) {
                let i =
                    0 === r.components.length ||
                    r.components.some(({ name: e }) => !e),
                  o = i ? [] : {},
                  a = 0;
                if (g(r)) {
                  let s = n + f(t.readBytes(32));
                  for (let n = 0; n < r.components.length; ++n) {
                    let l = r.components[n];
                    t.setPosition(s + a);
                    let [u, c] = e(t, l, { staticPosition: s });
                    (a += c), (o[i ? n : l?.name] = u);
                  }
                  return t.setPosition(n + 32), [o, 32];
                }
                for (let s = 0; s < r.components.length; ++s) {
                  let l = r.components[s],
                    [u, c] = e(t, l, { staticPosition: n });
                  (o[i ? s : l?.name] = u), (a += c);
                }
                return [o, a];
              })(t, r, { staticPosition: o });
            if ("address" === r.type)
              return (function (e) {
                let t = e.readBytes(32);
                return [(0, i.o)((0, d.My)((0, s.A1)(t, -20))), 32];
              })(t);
            if ("bool" === r.type)
              return [
                (function (e, t = {}) {
                  let r = e;
                  if (
                    (void 0 !== t.size &&
                      ((0, c.Sl)(r, { size: t.size }), (r = (0, l.B)(r))),
                    r.length > 1 || r[0] > 1)
                  )
                    throw new u.xO(r);
                  return !!r[0];
                })(t.readBytes(32), { size: 32 }),
                32,
              ];
            if (r.type.startsWith("bytes"))
              return (function (e, t, { staticPosition: r }) {
                let [n, i] = t.type.split("bytes");
                if (!i) {
                  let t = f(e.readBytes(32));
                  e.setPosition(r + t);
                  let n = f(e.readBytes(32));
                  if (0 === n) return e.setPosition(r + 32), ["0x", 32];
                  let i = e.readBytes(n);
                  return e.setPosition(r + 32), [(0, d.My)(i), 32];
                }
                return [(0, d.My)(e.readBytes(Number.parseInt(i), 32)), 32];
              })(t, r, { staticPosition: o });
            if (r.type.startsWith("uint") || r.type.startsWith("int"))
              return (function (e, t) {
                let r = t.type.startsWith("int"),
                  n = Number.parseInt(t.type.split("int")[1] || "256"),
                  i = e.readBytes(32);
                return [
                  n > 48
                    ? (function (e, t = {}) {
                        void 0 !== t.size && (0, c.Sl)(e, { size: t.size });
                        let r = (0, d.My)(e, t);
                        return (0, c.uU)(r, t);
                      })(i, { signed: r })
                    : f(i, { signed: r }),
                  32,
                ];
              })(t, r);
            if ("string" === r.type)
              return (function (e, { staticPosition: t }) {
                let r = f(e.readBytes(32));
                e.setPosition(t + r);
                let n = f(e.readBytes(32));
                if (0 === n) return e.setPosition(t + 32), ["", 32];
                let i = e.readBytes(n, 32),
                  o = (function (e, t = {}) {
                    let r = e;
                    return (
                      void 0 !== t.size &&
                        ((0, c.Sl)(r, { size: t.size }),
                        (r = (0, l.B)(r, { dir: "right" }))),
                      new TextDecoder().decode(r)
                    );
                  })((0, l.B)(i));
                return e.setPosition(t + 32), [o, 32];
              })(t, { staticPosition: o });
            throw new n.j(r.type, {
              docsPath: "/docs/contract/decodeAbiParameters",
            });
          })(m, r, { staticPosition: 0 });
          (y += a), b.push(o);
        }
        return b;
      }
      function g(e) {
        let { type: t } = e;
        if ("string" === t || "bytes" === t || t.endsWith("[]")) return !0;
        if ("tuple" === t) return e.components?.some(g);
        let r = (0, p.k)(e.type);
        return !!(r && g({ ...e, type: r[1] }));
      }
    },
    17169: (e, t, r) => {
      "use strict";
      r.d(t, { W: () => u });
      var n = r(4382),
        i = r(36991),
        o = r(22162),
        a = r(44720),
        s = r(68424),
        l = r(57880);
      function u(e) {
        let { abi: t, data: r } = e,
          u = (0, o.di)(r, 0, 4);
        if ("0x" === u) throw new i.O();
        let c = [...(t || []), n.Mc, n.J9].find(
          (e) => "error" === e.type && u === (0, a.V)((0, l.B)(e))
        );
        if (!c)
          throw new i.Wq(u, { docsPath: "/docs/contract/decodeErrorResult" });
        return {
          abiItem: c,
          args:
            "inputs" in c && c.inputs && c.inputs.length > 0
              ? (0, s.n)(c.inputs, (0, o.di)(r, 4))
              : void 0,
          errorName: c.name,
        };
      }
    },
    59719: (e, t, r) => {
      "use strict";
      r.d(t, { e: () => s });
      var n = r(36991),
        i = r(68424),
        o = r(4617);
      let a = "/docs/contract/decodeFunctionResult";
      function s(e) {
        let { abi: t, args: r, functionName: s, data: l } = e,
          u = t[0];
        if (s) {
          let e = (0, o.iY)({ abi: t, args: r, name: s });
          if (!e) throw new n.Iz(s, { docsPath: a });
          u = e;
        }
        if ("function" !== u.type) throw new n.Iz(void 0, { docsPath: a });
        if (!u.outputs) throw new n.MR(u.name, { docsPath: a });
        let c = (0, i.n)(u.outputs, l);
        return c && c.length > 1 ? c : c && 1 === c.length ? c[0] : void 0;
      }
    },
    46304: (e, t, r) => {
      "use strict";
      r.d(t, { h: () => p, k: () => g });
      var n = r(36991),
        i = r(61117),
        o = r(80477),
        a = r(93970),
        s = r(34354),
        l = r(16704),
        u = r(33085),
        c = r(91149),
        d = r(22162),
        f = r(98979),
        h = r(7702);
      function p(e, t) {
        if (e.length !== t.length)
          throw new n.YE({ expectedLength: e.length, givenLength: t.length });
        let r = m(
          (function ({ params: e, values: t }) {
            let r = [];
            for (let p = 0; p < e.length; p++)
              r.push(
                (function e({ param: t, value: r }) {
                  let p = g(t.type);
                  if (p) {
                    let [i, o] = p;
                    return (function (t, { length: r, param: i }) {
                      let o = null === r;
                      if (!Array.isArray(t)) throw new n.dm(t);
                      if (!o && t.length !== r)
                        throw new n.Nc({
                          expectedLength: r,
                          givenLength: t.length,
                          type: `${i.type}[${r}]`,
                        });
                      let a = !1,
                        s = [];
                      for (let r = 0; r < t.length; r++) {
                        let n = e({ param: i, value: t[r] });
                        n.dynamic && (a = !0), s.push(n);
                      }
                      if (o || a) {
                        let e = m(s);
                        if (o) {
                          let t = (0, f.cK)(s.length, { size: 32 });
                          return {
                            dynamic: !0,
                            encoded: s.length > 0 ? (0, l.xW)([t, e]) : t,
                          };
                        }
                        if (a) return { dynamic: !0, encoded: e };
                      }
                      return {
                        dynamic: !1,
                        encoded: (0, l.xW)(s.map(({ encoded: e }) => e)),
                      };
                    })(r, { length: i, param: { ...t, type: o } });
                  }
                  if ("tuple" === t.type)
                    return (function (t, { param: r }) {
                      let n = !1,
                        i = [];
                      for (let o = 0; o < r.components.length; o++) {
                        let a = r.components[o],
                          s = Array.isArray(t) ? o : a.name,
                          l = e({ param: a, value: t[s] });
                        i.push(l), l.dynamic && (n = !0);
                      }
                      return {
                        dynamic: n,
                        encoded: n
                          ? m(i)
                          : (0, l.xW)(i.map(({ encoded: e }) => e)),
                      };
                    })(r, { param: t });
                  if ("address" === t.type)
                    return (function (e) {
                      if (!(0, s.P)(e)) throw new i.M({ address: e });
                      return {
                        dynamic: !1,
                        encoded: (0, u.db)(e.toLowerCase()),
                      };
                    })(r);
                  if ("bool" === t.type)
                    return (function (e) {
                      if ("boolean" != typeof e)
                        throw new o.C(
                          `Invalid boolean value: "${e}" (type: ${typeof e}). Expected: \`true\` or \`false\`.`
                        );
                      return { dynamic: !1, encoded: (0, u.db)((0, f.$P)(e)) };
                    })(r);
                  if (t.type.startsWith("uint") || t.type.startsWith("int")) {
                    let e = t.type.startsWith("int"),
                      [, , n = "256"] = h.Ge.exec(t.type) ?? [];
                    return (function (e, { signed: t, size: r = 256 }) {
                      if ("number" == typeof r) {
                        let n = 2n ** (BigInt(r) - (t ? 1n : 0n)) - 1n,
                          i = t ? -n - 1n : 0n;
                        if (e > n || e < i)
                          throw new a.Ty({
                            max: n.toString(),
                            min: i.toString(),
                            signed: t,
                            size: r / 8,
                            value: e.toString(),
                          });
                      }
                      return {
                        dynamic: !1,
                        encoded: (0, f.cK)(e, { size: 32, signed: t }),
                      };
                    })(r, { signed: e, size: Number(n) });
                  }
                  if (t.type.startsWith("bytes"))
                    return (function (e, { param: t }) {
                      let [, r] = t.type.split("bytes"),
                        i = (0, c.E)(e);
                      if (!r) {
                        let t = e;
                        return (
                          i % 32 != 0 &&
                            (t = (0, u.db)(t, {
                              dir: "right",
                              size: 32 * Math.ceil((e.length - 2) / 2 / 32),
                            })),
                          {
                            dynamic: !0,
                            encoded: (0, l.xW)([
                              (0, u.db)((0, f.cK)(i, { size: 32 })),
                              t,
                            ]),
                          }
                        );
                      }
                      if (i !== Number.parseInt(r))
                        throw new n.gH({
                          expectedSize: Number.parseInt(r),
                          value: e,
                        });
                      return {
                        dynamic: !1,
                        encoded: (0, u.db)(e, { dir: "right" }),
                      };
                    })(r, { param: t });
                  if ("string" === t.type)
                    return (function (e) {
                      let t = (0, f.i3)(e),
                        r = Math.ceil((0, c.E)(t) / 32),
                        n = [];
                      for (let e = 0; e < r; e++)
                        n.push(
                          (0, u.db)((0, d.di)(t, 32 * e, (e + 1) * 32), {
                            dir: "right",
                          })
                        );
                      return {
                        dynamic: !0,
                        encoded: (0, l.xW)([
                          (0, u.db)((0, f.cK)((0, c.E)(t), { size: 32 })),
                          ...n,
                        ]),
                      };
                    })(r);
                  throw new n.nK(t.type, {
                    docsPath: "/docs/contract/encodeAbiParameters",
                  });
                })({ param: e[p], value: t[p] })
              );
            return r;
          })({ params: e, values: t })
        );
        return 0 === r.length ? "0x" : r;
      }
      function m(e) {
        let t = 0;
        for (let r = 0; r < e.length; r++) {
          let { dynamic: n, encoded: i } = e[r];
          n ? (t += 32) : (t += (0, c.E)(i));
        }
        let r = [],
          n = [],
          i = 0;
        for (let o = 0; o < e.length; o++) {
          let { dynamic: a, encoded: s } = e[o];
          a
            ? (r.push((0, f.cK)(t + i, { size: 32 })),
              n.push(s),
              (i += (0, c.E)(s)))
            : r.push(s);
        }
        return (0, l.xW)([...r, ...n]);
      }
      function g(e) {
        let t = e.match(/^(.*)\[(\d+)?\]$/);
        return t ? [t[2] ? Number(t[2]) : null, t[1]] : void 0;
      }
    },
    62937: (e, t, r) => {
      "use strict";
      r.d(t, { m: () => s });
      var n = r(36991),
        i = r(16704),
        o = r(46304);
      let a = "/docs/contract/encodeDeployData";
      function s(e) {
        let { abi: t, args: r, bytecode: s } = e;
        if (!r || 0 === r.length) return s;
        let l = t.find((e) => "type" in e && "constructor" === e.type);
        if (!l) throw new n.YW({ docsPath: a });
        if (!("inputs" in l) || !l.inputs || 0 === l.inputs.length)
          throw new n.YF({ docsPath: a });
        let u = (0, o.h)(l.inputs, r);
        return (0, i.aP)([s, u]);
      }
    },
    74046: (e, t, r) => {
      "use strict";
      r.d(t, { p: () => c });
      var n = r(16704),
        i = r(46304),
        o = r(36991),
        a = r(44720),
        s = r(57880),
        l = r(4617);
      let u = "/docs/contract/encodeFunctionData";
      function c(e) {
        let { args: t } = e,
          { abi: r, functionName: c } =
            1 === e.abi.length && e.functionName?.startsWith("0x")
              ? e
              : (function (e) {
                  let { abi: t, args: r, functionName: n } = e,
                    i = t[0];
                  if (n) {
                    let e = (0, l.iY)({ abi: t, args: r, name: n });
                    if (!e) throw new o.Iz(n, { docsPath: u });
                    i = e;
                  }
                  if ("function" !== i.type)
                    throw new o.Iz(void 0, { docsPath: u });
                  return { abi: [i], functionName: (0, a.V)((0, s.B)(i)) };
                })(e),
          d = r[0],
          f = "inputs" in d && d.inputs ? (0, i.h)(d.inputs, t ?? []) : void 0;
        return (0, n.aP)([c, f ?? "0x"]);
      }
    },
    57880: (e, t, r) => {
      "use strict";
      r.d(t, { A: () => o, B: () => i });
      var n = r(36991);
      function i(e, { includeName: t = !1 } = {}) {
        if ("function" !== e.type && "event" !== e.type && "error" !== e.type)
          throw new n.d_(e.type);
        return `${e.name}(${o(e.inputs, { includeName: t })})`;
      }
      function o(e, { includeName: t = !1 } = {}) {
        return e
          ? e
              .map((e) =>
                (function (e, { includeName: t }) {
                  return e.type.startsWith("tuple")
                    ? `(${o(e.components, { includeName: t })})${e.type.slice(
                        5
                      )}`
                    : e.type + (t && e.name ? ` ${e.name}` : "");
                })(e, { includeName: t })
              )
              .join(t ? ", " : ",")
          : "";
      }
    },
    4617: (e, t, r) => {
      "use strict";
      r.d(t, { iY: () => l });
      var n = r(36991),
        i = r(11601),
        o = r(34354),
        a = r(94490),
        s = r(44720);
      function l(e) {
        let t;
        let { abi: r, args: l = [], name: u } = e,
          c = (0, i.q)(u, { strict: !1 }),
          d = r.filter((e) =>
            c
              ? "function" === e.type
                ? (0, s.V)(e) === u
                : "event" === e.type && (0, a.h)(e) === u
              : "name" in e && e.name === u
          );
        if (0 !== d.length) {
          if (1 === d.length) return d[0];
          for (let e of d)
            if ("inputs" in e) {
              if (!l || 0 === l.length) {
                if (!e.inputs || 0 === e.inputs.length) return e;
                continue;
              }
              if (
                e.inputs &&
                0 !== e.inputs.length &&
                e.inputs.length === l.length &&
                l.every((t, r) => {
                  let n = "inputs" in e && e.inputs[r];
                  return (
                    !!n &&
                    (function e(t, r) {
                      let n = typeof t,
                        i = r.type;
                      switch (i) {
                        case "address":
                          return (0, o.P)(t, { strict: !1 });
                        case "bool":
                          return "boolean" === n;
                        case "function":
                        case "string":
                          return "string" === n;
                        default:
                          if ("tuple" === i && "components" in r)
                            return Object.values(r.components).every((r, n) =>
                              e(Object.values(t)[n], r)
                            );
                          if (
                            /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(
                              i
                            )
                          )
                            return "number" === n || "bigint" === n;
                          if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(i))
                            return "string" === n || t instanceof Uint8Array;
                          if (/[a-z]+[1-9]{0,3}(\[[0-9]{0,}\])+$/.test(i))
                            return (
                              Array.isArray(t) &&
                              t.every((t) =>
                                e(t, {
                                  ...r,
                                  type: i.replace(/(\[[0-9]{0,}\])$/, ""),
                                })
                              )
                            );
                          return !1;
                      }
                    })(t, n)
                  );
                })
              ) {
                if (t && "inputs" in t && t.inputs) {
                  let r = (function e(t, r, n) {
                    for (let i in t) {
                      let a = t[i],
                        s = r[i];
                      if (
                        "tuple" === a.type &&
                        "tuple" === s.type &&
                        "components" in a &&
                        "components" in s
                      )
                        return e(a.components, s.components, n[i]);
                      let l = [a.type, s.type];
                      if (
                        (l.includes("address") && l.includes("bytes20")) ||
                        (((l.includes("address") && l.includes("string")) ||
                          (l.includes("address") && l.includes("bytes"))) &&
                          (0, o.P)(n[i], { strict: !1 }))
                      )
                        return l;
                    }
                  })(e.inputs, t.inputs, l);
                  if (r)
                    throw new n.nM(
                      { abiItem: e, type: r[0] },
                      { abiItem: t, type: r[1] }
                    );
                }
                t = e;
              }
            }
          return t || d[0];
        }
      }
    },
    40814: (e, t, r) => {
      "use strict";
      r.d(t, { b: () => c, o: () => u });
      var n = r(61117),
        i = r(76397),
        o = r(65978),
        a = r(46140),
        s = r(34354);
      let l = new a.A(8192);
      function u(e, t) {
        if (l.has(`${e}.${t}`)) return l.get(`${e}.${t}`);
        let r = t ? `${t}${e.toLowerCase()}` : e.substring(2).toLowerCase(),
          n = (0, o.S)((0, i.Af)(r), "bytes"),
          a = (t ? r.substring(`${t}0x`.length) : r).split("");
        for (let e = 0; e < 40; e += 2)
          n[e >> 1] >> 4 >= 8 && a[e] && (a[e] = a[e].toUpperCase()),
            (15 & n[e >> 1]) >= 8 &&
              a[e + 1] &&
              (a[e + 1] = a[e + 1].toUpperCase());
        let s = `0x${a.join("")}`;
        return l.set(`${e}.${t}`, s), s;
      }
      function c(e, t) {
        if (!(0, s.P)(e, { strict: !1 })) throw new n.M({ address: e });
        return u(e, t);
      }
    },
    34354: (e, t, r) => {
      "use strict";
      r.d(t, { P: () => s });
      var n = r(46140),
        i = r(40814);
      let o = /^0x[a-fA-F0-9]{40}$/,
        a = new n.A(8192);
      function s(e, t) {
        let { strict: r = !0 } = t ?? {},
          n = `${e}.${r}`;
        if (a.has(n)) return a.get(n);
        let s =
          !!o.test(e) && (e.toLowerCase() === e || !r || (0, i.o)(e) === e);
        return a.set(n, s), s;
      }
    },
    81770: (e, t, r) => {
      "use strict";
      r.d(t, { h: () => o });
      var n = r(61117),
        i = r(34354);
      function o(e, t) {
        if (!(0, i.P)(e, { strict: !1 })) throw new n.M({ address: e });
        if (!(0, i.P)(t, { strict: !1 })) throw new n.M({ address: t });
        return e.toLowerCase() === t.toLowerCase();
      }
    },
    11007: (e, t, r) => {
      "use strict";
      r.d(t, { g: () => u });
      var n = r(29157),
        i = r(16704),
        o = r(76397),
        a = r(98979),
        s = r(15456),
        l = r(65978);
      async function u(e) {
        let { authorization: t, signature: r } = e;
        return (0, n.x)({
          hash: (function (e) {
            let { chainId: t, nonce: r, to: n } = e,
              u = e.contractAddress ?? e.address,
              c = (0, l.S)(
                (0, i.aP)([
                  "0x05",
                  (0, s.EQ)([
                    t ? (0, a.cK)(t) : "0x",
                    u,
                    r ? (0, a.cK)(r) : "0x",
                  ]),
                ])
              );
            return "bytes" === n ? (0, o.aT)(c) : c;
          })(t),
          signature: r ?? t,
        });
      }
    },
    73492: (e, t, r) => {
      "use strict";
      r.d(t, { S: () => o });
      var n = r(76397),
        i = r(98979);
      function o(e) {
        let { kzg: t } = e,
          r = e.to ?? ("string" == typeof e.blobs[0] ? "hex" : "bytes"),
          o =
            "string" == typeof e.blobs[0]
              ? e.blobs.map((e) => (0, n.aT)(e))
              : e.blobs,
          a = [];
        for (let e of o) a.push(Uint8Array.from(t.blobToKzgCommitment(e)));
        return "bytes" === r ? a : a.map((e) => (0, i.My)(e));
      }
    },
    94949: (e, t, r) => {
      "use strict";
      r.d(t, { t: () => o });
      var n = r(76397),
        i = r(98979);
      function o(e) {
        let { kzg: t } = e,
          r = e.to ?? ("string" == typeof e.blobs[0] ? "hex" : "bytes"),
          o =
            "string" == typeof e.blobs[0]
              ? e.blobs.map((e) => (0, n.aT)(e))
              : e.blobs,
          a =
            "string" == typeof e.commitments[0]
              ? e.commitments.map((e) => (0, n.aT)(e))
              : e.commitments,
          s = [];
        for (let e = 0; e < o.length; e++) {
          let r = o[e],
            n = a[e];
          s.push(Uint8Array.from(t.computeBlobKzgProof(r, n)));
        }
        return "bytes" === r ? s : s.map((e) => (0, i.My)(e));
      }
    },
    53502: (e, t, r) => {
      "use strict";
      r.d(t, { d: () => o });
      var n = r(98979),
        i = r(65479);
      function o(e) {
        let { commitments: t, version: r } = e,
          o = e.to ?? ("string" == typeof t[0] ? "hex" : "bytes"),
          a = [];
        for (let e of t)
          a.push(
            (function (e) {
              let { commitment: t, version: r = 1 } = e,
                o = e.to ?? ("string" == typeof t ? "hex" : "bytes"),
                a = (0, i.s)(t, "bytes");
              return a.set([r], 0), "bytes" === o ? a : (0, n.My)(a);
            })({ commitment: e, to: o, version: r })
          );
        return a;
      }
    },
    43279: (e, t, r) => {
      "use strict";
      r.d(t, { T: () => c });
      var n = r(73492),
        i = r(94949),
        o = r(20624),
        a = r(95389),
        s = r(91149),
        l = r(76397),
        u = r(98979);
      function c(e) {
        let { data: t, kzg: r, to: c } = e,
          d =
            e.blobs ??
            (function (e) {
              let t = e.to ?? ("string" == typeof e.data ? "hex" : "bytes"),
                r = "string" == typeof e.data ? (0, l.aT)(e.data) : e.data,
                n = (0, s.E)(r);
              if (!n) throw new o.zF();
              if (n > 761855) throw new o.iq({ maxSize: 761855, size: n });
              let i = [],
                c = !0,
                d = 0;
              for (; c; ) {
                let e = (0, a.l)(new Uint8Array(131072)),
                  t = 0;
                for (; t < 4096; ) {
                  let n = r.slice(d, d + 31);
                  if ((e.pushByte(0), e.pushBytes(n), n.length < 31)) {
                    e.pushByte(128), (c = !1);
                    break;
                  }
                  t++, (d += 31);
                }
                i.push(e);
              }
              return "bytes" === t
                ? i.map((e) => e.bytes)
                : i.map((e) => (0, u.My)(e.bytes));
            })({ data: t, to: c }),
          f = e.commitments ?? (0, n.S)({ blobs: d, kzg: r, to: c }),
          h = e.proofs ?? (0, i.t)({ blobs: d, commitments: f, kzg: r, to: c }),
          p = [];
        for (let e = 0; e < d.length; e++)
          p.push({ blob: d[e], commitment: f[e], proof: h[e] });
        return p;
      }
    },
    68275: (e, t, r) => {
      "use strict";
      function n(e) {
        return { formatters: void 0, fees: void 0, serializers: void 0, ...e };
      }
      r.d(t, { x: () => n });
    },
    40874: (e, t, r) => {
      "use strict";
      r.d(t, { M: () => i });
      var n = r(89780);
      function i({ blockNumber: e, chain: t, contract: r }) {
        let i = t?.contracts?.[r];
        if (!i) throw new n.rj({ chain: t, contract: { name: r } });
        if (e && i.blockCreated && i.blockCreated > e)
          throw new n.rj({
            blockNumber: e,
            chain: t,
            contract: { name: r, blockCreated: i.blockCreated },
          });
        return i.address;
      }
    },
    95389: (e, t, r) => {
      "use strict";
      r.d(t, { l: () => o });
      var n = r(90305);
      let i = {
        bytes: new Uint8Array(),
        dataView: new DataView(new ArrayBuffer(0)),
        position: 0,
        positionReadCount: new Map(),
        recursiveReadCount: 0,
        recursiveReadLimit: Number.POSITIVE_INFINITY,
        assertReadLimit() {
          if (this.recursiveReadCount >= this.recursiveReadLimit)
            throw new n.hX({
              count: this.recursiveReadCount + 1,
              limit: this.recursiveReadLimit,
            });
        },
        assertPosition(e) {
          if (e < 0 || e > this.bytes.length - 1)
            throw new n.SK({ length: this.bytes.length, position: e });
        },
        decrementPosition(e) {
          if (e < 0) throw new n.B4({ offset: e });
          let t = this.position - e;
          this.assertPosition(t), (this.position = t);
        },
        getReadCount(e) {
          return this.positionReadCount.get(e || this.position) || 0;
        },
        incrementPosition(e) {
          if (e < 0) throw new n.B4({ offset: e });
          let t = this.position + e;
          this.assertPosition(t), (this.position = t);
        },
        inspectByte(e) {
          let t = e ?? this.position;
          return this.assertPosition(t), this.bytes[t];
        },
        inspectBytes(e, t) {
          let r = t ?? this.position;
          return this.assertPosition(r + e - 1), this.bytes.subarray(r, r + e);
        },
        inspectUint8(e) {
          let t = e ?? this.position;
          return this.assertPosition(t), this.bytes[t];
        },
        inspectUint16(e) {
          let t = e ?? this.position;
          return this.assertPosition(t + 1), this.dataView.getUint16(t);
        },
        inspectUint24(e) {
          let t = e ?? this.position;
          return (
            this.assertPosition(t + 2),
            (this.dataView.getUint16(t) << 8) + this.dataView.getUint8(t + 2)
          );
        },
        inspectUint32(e) {
          let t = e ?? this.position;
          return this.assertPosition(t + 3), this.dataView.getUint32(t);
        },
        pushByte(e) {
          this.assertPosition(this.position),
            (this.bytes[this.position] = e),
            this.position++;
        },
        pushBytes(e) {
          this.assertPosition(this.position + e.length - 1),
            this.bytes.set(e, this.position),
            (this.position += e.length);
        },
        pushUint8(e) {
          this.assertPosition(this.position),
            (this.bytes[this.position] = e),
            this.position++;
        },
        pushUint16(e) {
          this.assertPosition(this.position + 1),
            this.dataView.setUint16(this.position, e),
            (this.position += 2);
        },
        pushUint24(e) {
          this.assertPosition(this.position + 2),
            this.dataView.setUint16(this.position, e >> 8),
            this.dataView.setUint8(this.position + 2, 255 & e),
            (this.position += 3);
        },
        pushUint32(e) {
          this.assertPosition(this.position + 3),
            this.dataView.setUint32(this.position, e),
            (this.position += 4);
        },
        readByte() {
          this.assertReadLimit(), this._touch();
          let e = this.inspectByte();
          return this.position++, e;
        },
        readBytes(e, t) {
          this.assertReadLimit(), this._touch();
          let r = this.inspectBytes(e);
          return (this.position += t ?? e), r;
        },
        readUint8() {
          this.assertReadLimit(), this._touch();
          let e = this.inspectUint8();
          return (this.position += 1), e;
        },
        readUint16() {
          this.assertReadLimit(), this._touch();
          let e = this.inspectUint16();
          return (this.position += 2), e;
        },
        readUint24() {
          this.assertReadLimit(), this._touch();
          let e = this.inspectUint24();
          return (this.position += 3), e;
        },
        readUint32() {
          this.assertReadLimit(), this._touch();
          let e = this.inspectUint32();
          return (this.position += 4), e;
        },
        get remaining() {
          return this.bytes.length - this.position;
        },
        setPosition(e) {
          let t = this.position;
          return (
            this.assertPosition(e),
            (this.position = e),
            () => (this.position = t)
          );
        },
        _touch() {
          if (this.recursiveReadLimit === Number.POSITIVE_INFINITY) return;
          let e = this.getReadCount();
          this.positionReadCount.set(this.position, e + 1),
            e > 0 && this.recursiveReadCount++;
        },
      };
      function o(e, { recursiveReadLimit: t = 8192 } = {}) {
        let r = Object.create(i);
        return (
          (r.bytes = e),
          (r.dataView = new DataView(e.buffer, e.byteOffset, e.byteLength)),
          (r.positionReadCount = new Map()),
          (r.recursiveReadLimit = t),
          r
        );
      }
    },
    16704: (e, t, r) => {
      "use strict";
      function n(e) {
        return "string" == typeof e[0]
          ? i(e)
          : (function (e) {
              let t = 0;
              for (let r of e) t += r.length;
              let r = new Uint8Array(t),
                n = 0;
              for (let t of e) r.set(t, n), (n += t.length);
              return r;
            })(e);
      }
      function i(e) {
        return `0x${e.reduce((e, t) => e + t.replace("0x", ""), "")}`;
      }
      r.d(t, { aP: () => i, xW: () => n });
    },
    11601: (e, t, r) => {
      "use strict";
      function n(e, { strict: t = !0 } = {}) {
        return (
          !!e &&
          "string" == typeof e &&
          (t ? /^0x[0-9a-fA-F]*$/.test(e) : e.startsWith("0x"))
        );
      }
      r.d(t, { q: () => n });
    },
    33085: (e, t, r) => {
      "use strict";
      r.d(t, { db: () => o, eV: () => i });
      var n = r(57643);
      function i(e, { dir: t, size: r = 32 } = {}) {
        return "string" == typeof e
          ? o(e, { dir: t, size: r })
          : (function (e, { dir: t, size: r = 32 } = {}) {
              if (null === r) return e;
              if (e.length > r)
                throw new n.Fl({
                  size: e.length,
                  targetSize: r,
                  type: "bytes",
                });
              let i = new Uint8Array(r);
              for (let n = 0; n < r; n++) {
                let o = "right" === t;
                i[o ? n : r - n - 1] = e[o ? n : e.length - n - 1];
              }
              return i;
            })(e, { dir: t, size: r });
      }
      function o(e, { dir: t, size: r = 32 } = {}) {
        if (null === r) return e;
        let i = e.replace("0x", "");
        if (i.length > 2 * r)
          throw new n.Fl({
            size: Math.ceil(i.length / 2),
            targetSize: r,
            type: "hex",
          });
        return `0x${i["right" === t ? "padEnd" : "padStart"](2 * r, "0")}`;
      }
    },
    91149: (e, t, r) => {
      "use strict";
      r.d(t, { E: () => i });
      var n = r(11601);
      function i(e) {
        return (0, n.q)(e, { strict: !1 })
          ? Math.ceil((e.length - 2) / 2)
          : e.length;
      }
    },
    22162: (e, t, r) => {
      "use strict";
      r.d(t, { A1: () => u, di: () => a, iN: () => c });
      var n = r(57643),
        i = r(11601),
        o = r(91149);
      function a(e, t, r, { strict: n } = {}) {
        return (0, i.q)(e, { strict: !1 })
          ? c(e, t, r, { strict: n })
          : u(e, t, r, { strict: n });
      }
      function s(e, t) {
        if ("number" == typeof t && t > 0 && t > (0, o.E)(e) - 1)
          throw new n.ii({ offset: t, position: "start", size: (0, o.E)(e) });
      }
      function l(e, t, r) {
        if (
          "number" == typeof t &&
          "number" == typeof r &&
          (0, o.E)(e) !== r - t
        )
          throw new n.ii({ offset: r, position: "end", size: (0, o.E)(e) });
      }
      function u(e, t, r, { strict: n } = {}) {
        s(e, t);
        let i = e.slice(t, r);
        return n && l(i, t, r), i;
      }
      function c(e, t, r, { strict: n } = {}) {
        s(e, t);
        let i = `0x${e
          .replace("0x", "")
          .slice((t ?? 0) * 2, (r ?? e.length) * 2)}`;
        return n && l(i, t, r), i;
      }
    },
    67368: (e, t, r) => {
      "use strict";
      function n(e, { dir: t = "left" } = {}) {
        let r = "string" == typeof e ? e.replace("0x", "") : e,
          i = 0;
        for (
          let e = 0;
          e < r.length - 1 &&
          "0" === r["left" === t ? e : r.length - e - 1].toString();
          e++
        )
          i++;
        return ((r = "left" === t ? r.slice(i) : r.slice(0, r.length - i)),
        "string" == typeof e)
          ? (1 === r.length && "right" === t && (r = `${r}0`),
            `0x${r.length % 2 == 1 ? `0${r}` : r}`)
          : r;
      }
      r.d(t, { B: () => n });
    },
    45732: (e, t, r) => {
      "use strict";
      r.d(t, { ME: () => u, Nx: () => l, Sl: () => a, uU: () => s });
      var n = r(93970),
        i = r(91149),
        o = r(67368);
      function a(e, { size: t }) {
        if ((0, i.E)(e) > t)
          throw new n.u({ givenSize: (0, i.E)(e), maxSize: t });
      }
      function s(e, t = {}) {
        let { signed: r } = t;
        t.size && a(e, { size: t.size });
        let n = BigInt(e);
        if (!r) return n;
        let i = (e.length - 2) / 2;
        return n <= (1n << (8n * BigInt(i) - 1n)) - 1n
          ? n
          : n - BigInt(`0x${"f".padStart(2 * i, "f")}`) - 1n;
      }
      function l(e, t = {}) {
        let r = e;
        if (
          (t.size && (a(r, { size: t.size }), (r = (0, o.B)(r))),
          "0x00" === (0, o.B)(r))
        )
          return !1;
        if ("0x01" === (0, o.B)(r)) return !0;
        throw new n.H2(r);
      }
      function u(e, t = {}) {
        return Number(s(e, t));
      }
    },
    76397: (e, t, r) => {
      "use strict";
      r.d(t, { Af: () => h, ZJ: () => u, aT: () => f });
      var n = r(80477),
        i = r(11601),
        o = r(33085),
        a = r(45732),
        s = r(98979);
      let l = new TextEncoder();
      function u(e, t = {}) {
        return "number" == typeof e || "bigint" == typeof e
          ? f((0, s.cK)(e, t))
          : "boolean" == typeof e
          ? (function (e, t = {}) {
              let r = new Uint8Array(1);
              return ((r[0] = Number(e)), "number" == typeof t.size)
                ? ((0, a.Sl)(r, { size: t.size }),
                  (0, o.eV)(r, { size: t.size }))
                : r;
            })(e, t)
          : (0, i.q)(e)
          ? f(e, t)
          : h(e, t);
      }
      let c = { zero: 48, nine: 57, A: 65, F: 70, a: 97, f: 102 };
      function d(e) {
        return e >= c.zero && e <= c.nine
          ? e - c.zero
          : e >= c.A && e <= c.F
          ? e - (c.A - 10)
          : e >= c.a && e <= c.f
          ? e - (c.a - 10)
          : void 0;
      }
      function f(e, t = {}) {
        let r = e;
        t.size &&
          ((0, a.Sl)(r, { size: t.size }),
          (r = (0, o.eV)(r, { dir: "right", size: t.size })));
        let i = r.slice(2);
        i.length % 2 && (i = `0${i}`);
        let s = i.length / 2,
          l = new Uint8Array(s);
        for (let e = 0, t = 0; e < s; e++) {
          let r = d(i.charCodeAt(t++)),
            o = d(i.charCodeAt(t++));
          if (void 0 === r || void 0 === o)
            throw new n.C(
              `Invalid byte sequence ("${i[t - 2]}${i[t - 1]}" in "${i}").`
            );
          l[e] = 16 * r + o;
        }
        return l;
      }
      function h(e, t = {}) {
        let r = l.encode(e);
        return "number" == typeof t.size
          ? ((0, a.Sl)(r, { size: t.size }),
            (0, o.eV)(r, { dir: "right", size: t.size }))
          : r;
      }
    },
    98979: (e, t, r) => {
      "use strict";
      r.d(t, {
        $P: () => l,
        My: () => u,
        cK: () => c,
        i3: () => f,
        nj: () => s,
      });
      var n = r(93970),
        i = r(33085),
        o = r(45732);
      let a = Array.from({ length: 256 }, (e, t) =>
        t.toString(16).padStart(2, "0")
      );
      function s(e, t = {}) {
        return "number" == typeof e || "bigint" == typeof e
          ? c(e, t)
          : "string" == typeof e
          ? f(e, t)
          : "boolean" == typeof e
          ? l(e, t)
          : u(e, t);
      }
      function l(e, t = {}) {
        let r = `0x${Number(e)}`;
        return "number" == typeof t.size
          ? ((0, o.Sl)(r, { size: t.size }), (0, i.eV)(r, { size: t.size }))
          : r;
      }
      function u(e, t = {}) {
        let r = "";
        for (let t = 0; t < e.length; t++) r += a[e[t]];
        let n = `0x${r}`;
        return "number" == typeof t.size
          ? ((0, o.Sl)(n, { size: t.size }),
            (0, i.eV)(n, { dir: "right", size: t.size }))
          : n;
      }
      function c(e, t = {}) {
        let r;
        let { signed: o, size: a } = t,
          s = BigInt(e);
        a
          ? (r = o
              ? (1n << (8n * BigInt(a) - 1n)) - 1n
              : 2n ** (8n * BigInt(a)) - 1n)
          : "number" == typeof e && (r = BigInt(Number.MAX_SAFE_INTEGER));
        let l = "bigint" == typeof r && o ? -r - 1n : 0;
        if ((r && s > r) || s < l) {
          let t = "bigint" == typeof e ? "n" : "";
          throw new n.Ty({
            max: r ? `${r}${t}` : void 0,
            min: `${l}${t}`,
            signed: o,
            size: a,
            value: `${e}${t}`,
          });
        }
        let u = `0x${(o && s < 0
          ? (1n << BigInt(8 * a)) + BigInt(s)
          : s
        ).toString(16)}`;
        return a ? (0, i.eV)(u, { size: a }) : u;
      }
      let d = new TextEncoder();
      function f(e, t = {}) {
        return u(d.encode(e), t);
      }
    },
    15456: (e, t, r) => {
      "use strict";
      r.d(t, { EQ: () => s });
      var n = r(80477),
        i = r(95389),
        o = r(76397),
        a = r(98979);
      function s(e, t = "hex") {
        let r = (function e(t) {
            return Array.isArray(t)
              ? (function (e) {
                  let t = e.reduce((e, t) => e + t.length, 0),
                    r = l(t);
                  return {
                    length: t <= 55 ? 1 + t : 1 + r + t,
                    encode(n) {
                      for (let { encode: i } of (t <= 55
                        ? n.pushByte(192 + t)
                        : (n.pushByte(247 + r),
                          1 === r
                            ? n.pushUint8(t)
                            : 2 === r
                            ? n.pushUint16(t)
                            : 3 === r
                            ? n.pushUint24(t)
                            : n.pushUint32(t)),
                      e))
                        i(n);
                    },
                  };
                })(t.map((t) => e(t)))
              : (function (e) {
                  let t = "string" == typeof e ? (0, o.aT)(e) : e,
                    r = l(t.length);
                  return {
                    length:
                      1 === t.length && t[0] < 128
                        ? 1
                        : t.length <= 55
                        ? 1 + t.length
                        : 1 + r + t.length,
                    encode(e) {
                      (1 === t.length && t[0] < 128) ||
                        (t.length <= 55
                          ? e.pushByte(128 + t.length)
                          : (e.pushByte(183 + r),
                            1 === r
                              ? e.pushUint8(t.length)
                              : 2 === r
                              ? e.pushUint16(t.length)
                              : 3 === r
                              ? e.pushUint24(t.length)
                              : e.pushUint32(t.length))),
                        e.pushBytes(t);
                    },
                  };
                })(t);
          })(e),
          n = (0, i.l)(new Uint8Array(r.length));
        return (r.encode(n), "hex" === t) ? (0, a.My)(n.bytes) : n.bytes;
      }
      function l(e) {
        if (e < 256) return 1;
        if (e < 65536) return 2;
        if (e < 0x1000000) return 3;
        if (e < 0x100000000) return 4;
        throw new n.C("Length is too large.");
      }
    },
    52857: (e, t, r) => {
      "use strict";
      r.d(t, { X: () => y, J: () => g });
      var n = r(38472),
        i = r(4382),
        o = r(36991),
        a = r(22162),
        s = r(44720),
        l = r(68424),
        u = r(57880),
        c = r(16704),
        d = r(46304),
        f = r(4617);
      let h = "/docs/contract/encodeErrorResult";
      function p(e) {
        let { abi: t, errorName: r, args: n } = e,
          i = t[0];
        if (r) {
          let e = (0, f.iY)({ abi: t, args: n, name: r });
          if (!e) throw new o.yy(r, { docsPath: h });
          i = e;
        }
        if ("error" !== i.type) throw new o.yy(void 0, { docsPath: h });
        let a = (0, u.B)(i),
          l = (0, s.V)(a),
          p = "0x";
        if (n && n.length > 0) {
          if (!i.inputs) throw new o.ZP(i.name, { docsPath: h });
          p = (0, d.h)(i.inputs, n);
        }
        return (0, c.aP)([l, p]);
      }
      let m = "/docs/contract/encodeFunctionResult",
        g = "x-batch-gateway:true";
      async function y(e) {
        let { data: t, ccipRequest: r } = e,
          {
            args: [c],
          } = (function (e) {
            let { abi: t, data: r } = e,
              n = (0, a.di)(r, 0, 4),
              i = t.find(
                (e) => "function" === e.type && n === (0, s.V)((0, u.B)(e))
              );
            if (!i)
              throw new o.EB(n, {
                docsPath: "/docs/contract/decodeFunctionData",
              });
            return {
              functionName: i.name,
              args:
                "inputs" in i && i.inputs && i.inputs.length > 0
                  ? (0, l.n)(i.inputs, (0, a.di)(r, 4))
                  : void 0,
            };
          })({ abi: n.b2, data: t }),
          h = [],
          g = [];
        return (
          await Promise.all(
            c.map(async (e, t) => {
              try {
                (g[t] = await r(e)), (h[t] = !1);
              } catch (e) {
                (h[t] = !0),
                  (g[t] =
                    "HttpRequestError" === e.name && e.status
                      ? p({
                          abi: n.b2,
                          errorName: "HttpError",
                          args: [e.status, e.shortMessage],
                        })
                      : p({
                          abi: [i.Mc],
                          errorName: "Error",
                          args: [
                            "shortMessage" in e ? e.shortMessage : e.message,
                          ],
                        }));
              }
            })
          ),
          (function (e) {
            let { abi: t, functionName: r, result: n } = e,
              i = t[0];
            if (r) {
              let e = (0, f.iY)({ abi: t, name: r });
              if (!e) throw new o.Iz(r, { docsPath: m });
              i = e;
            }
            if ("function" !== i.type) throw new o.Iz(void 0, { docsPath: m });
            if (!i.outputs) throw new o.MR(i.name, { docsPath: m });
            let a = (() => {
              if (0 === i.outputs.length) return [];
              if (1 === i.outputs.length) return [n];
              if (Array.isArray(n)) return n;
              throw new o.dm(n);
            })();
            return (0, d.h)(i.outputs, a);
          })({ abi: n.b2, functionName: "query", result: [h, g] })
        );
      }
    },
    14303: (e, t, r) => {
      "use strict";
      r.d(t, { d: () => a });
      var n = r(88085),
        i = r(87939),
        o = r(90563);
      function a(e, { docsPath: t, ...r }) {
        let a = (() => {
          let t = (0, o.l)(e, r);
          return t instanceof i.RM ? e : t;
        })();
        return new n.zX(a, { docsPath: t, ...r });
      }
    },
    80305: (e, t, r) => {
      "use strict";
      r.d(t, { j: () => l });
      var n = r(36991),
        i = r(80477),
        o = r(88085),
        a = r(40928),
        s = r(76790);
      function l(
        e,
        { abi: t, address: r, args: l, docsPath: u, functionName: c, sender: d }
      ) {
        let f =
            e instanceof o.$S
              ? e
              : e instanceof i.C
              ? e.walk((e) => "data" in e) || e.walk()
              : {},
          { code: h, data: p, details: m, message: g, shortMessage: y } = f,
          b =
            e instanceof n.O
              ? new o.rR({ functionName: c })
              : [3, s.bq.code].includes(h) && (p || m || g || y)
              ? new o.M({
                  abi: t,
                  data: "object" == typeof p ? p.data : p,
                  functionName: c,
                  message: f instanceof a.J8 ? m : y ?? g,
                })
              : e;
        return new o.bG(b, {
          abi: t,
          args: l,
          contractAddress: r,
          docsPath: u,
          functionName: c,
          sender: d,
        });
      }
    },
    90563: (e, t, r) => {
      "use strict";
      r.d(t, { l: () => o });
      var n = r(80477),
        i = r(87939);
      function o(e, t) {
        let r = (e.details || "").toLowerCase(),
          o = e instanceof n.C ? e.walk((e) => e?.code === i.A7.code) : e;
        return o instanceof n.C
          ? new i.A7({ cause: e, message: o.details })
          : i.A7.nodeMessage.test(r)
          ? new i.A7({ cause: e, message: e.details })
          : i.BG.nodeMessage.test(r)
          ? new i.BG({ cause: e, maxFeePerGas: t?.maxFeePerGas })
          : i.jj.nodeMessage.test(r)
          ? new i.jj({ cause: e, maxFeePerGas: t?.maxFeePerGas })
          : i.K0.nodeMessage.test(r)
          ? new i.K0({ cause: e, nonce: t?.nonce })
          : i.Oh.nodeMessage.test(r)
          ? new i.Oh({ cause: e, nonce: t?.nonce })
          : i.vW.nodeMessage.test(r)
          ? new i.vW({ cause: e, nonce: t?.nonce })
          : i.k5.nodeMessage.test(r)
          ? new i.k5({ cause: e })
          : i.lY.nodeMessage.test(r)
          ? new i.lY({ cause: e, gas: t?.gas })
          : i.Fo.nodeMessage.test(r)
          ? new i.Fo({ cause: e, gas: t?.gas })
          : i.uC.nodeMessage.test(r)
          ? new i.uC({ cause: e })
          : i.lN.nodeMessage.test(r)
          ? new i.lN({
              cause: e,
              maxFeePerGas: t?.maxFeePerGas,
              maxPriorityFeePerGas: t?.maxPriorityFeePerGas,
            })
          : new i.RM({ cause: e });
      }
    },
    55878: (e, t, r) => {
      "use strict";
      r.d(t, { $: () => o, R: () => a });
      var n = r(34897),
        i = r(6035);
      function o(e) {
        let t = (e.transactions ?? []).map((e) =>
          "string" == typeof e ? e : (0, i.uP)(e)
        );
        return {
          ...e,
          baseFeePerGas: e.baseFeePerGas ? BigInt(e.baseFeePerGas) : null,
          blobGasUsed: e.blobGasUsed ? BigInt(e.blobGasUsed) : void 0,
          difficulty: e.difficulty ? BigInt(e.difficulty) : void 0,
          excessBlobGas: e.excessBlobGas ? BigInt(e.excessBlobGas) : void 0,
          gasLimit: e.gasLimit ? BigInt(e.gasLimit) : void 0,
          gasUsed: e.gasUsed ? BigInt(e.gasUsed) : void 0,
          hash: e.hash ? e.hash : null,
          logsBloom: e.logsBloom ? e.logsBloom : null,
          nonce: e.nonce ? e.nonce : null,
          number: e.number ? BigInt(e.number) : null,
          size: e.size ? BigInt(e.size) : void 0,
          timestamp: e.timestamp ? BigInt(e.timestamp) : void 0,
          transactions: t,
          totalDifficulty: e.totalDifficulty ? BigInt(e.totalDifficulty) : null,
        };
      }
      let a = (0, n.q)("block", o);
    },
    24058: (e, t, r) => {
      "use strict";
      function n(e, { format: t }) {
        if (!t) return {};
        let r = {};
        return (
          !(function t(n) {
            for (let i of Object.keys(n))
              i in e && (r[i] = e[i]),
                n[i] &&
                  "object" == typeof n[i] &&
                  !Array.isArray(n[i]) &&
                  t(n[i]);
          })(t(e || {})),
          r
        );
      }
      r.d(t, { o: () => n });
    },
    34897: (e, t, r) => {
      "use strict";
      function n(e, t) {
        return ({ exclude: r, format: n }) => ({
          exclude: r,
          format: (e) => {
            let i = t(e);
            if (r) for (let e of r) delete i[e];
            return { ...i, ...n(e) };
          },
          type: e,
        });
      }
      r.d(t, { q: () => n });
    },
    58981: (e, t, r) => {
      "use strict";
      function n(e, { args: t, eventName: r } = {}) {
        return {
          ...e,
          blockHash: e.blockHash ? e.blockHash : null,
          blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
          logIndex: e.logIndex ? Number(e.logIndex) : null,
          transactionHash: e.transactionHash ? e.transactionHash : null,
          transactionIndex: e.transactionIndex
            ? Number(e.transactionIndex)
            : null,
          ...(r ? { args: t, eventName: r } : {}),
        };
      }
      r.d(t, { e: () => n });
    },
    6035: (e, t, r) => {
      "use strict";
      r.d(t, { b4: () => o, gU: () => s, uP: () => a });
      var n = r(45732),
        i = r(34897);
      let o = {
        "0x0": "legacy",
        "0x1": "eip2930",
        "0x2": "eip1559",
        "0x3": "eip4844",
        "0x4": "eip7702",
      };
      function a(e) {
        let t = {
          ...e,
          blockHash: e.blockHash ? e.blockHash : null,
          blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
          chainId: e.chainId ? (0, n.ME)(e.chainId) : void 0,
          gas: e.gas ? BigInt(e.gas) : void 0,
          gasPrice: e.gasPrice ? BigInt(e.gasPrice) : void 0,
          maxFeePerBlobGas: e.maxFeePerBlobGas
            ? BigInt(e.maxFeePerBlobGas)
            : void 0,
          maxFeePerGas: e.maxFeePerGas ? BigInt(e.maxFeePerGas) : void 0,
          maxPriorityFeePerGas: e.maxPriorityFeePerGas
            ? BigInt(e.maxPriorityFeePerGas)
            : void 0,
          nonce: e.nonce ? (0, n.ME)(e.nonce) : void 0,
          to: e.to ? e.to : null,
          transactionIndex: e.transactionIndex
            ? Number(e.transactionIndex)
            : null,
          type: e.type ? o[e.type] : void 0,
          typeHex: e.type ? e.type : void 0,
          value: e.value ? BigInt(e.value) : void 0,
          v: e.v ? BigInt(e.v) : void 0,
        };
        return (
          e.authorizationList &&
            (t.authorizationList = e.authorizationList.map((e) => ({
              address: e.address,
              chainId: Number(e.chainId),
              nonce: Number(e.nonce),
              r: e.r,
              s: e.s,
              yParity: Number(e.yParity),
            }))),
          (t.yParity = (() => {
            if (e.yParity) return Number(e.yParity);
            if ("bigint" == typeof t.v) {
              if (0n === t.v || 27n === t.v) return 0;
              if (1n === t.v || 28n === t.v) return 1;
              if (t.v >= 35n) return t.v % 2n === 0n ? 1 : 0;
            }
          })()),
          "legacy" === t.type &&
            (delete t.accessList,
            delete t.maxFeePerBlobGas,
            delete t.maxFeePerGas,
            delete t.maxPriorityFeePerGas,
            delete t.yParity),
          "eip2930" === t.type &&
            (delete t.maxFeePerBlobGas,
            delete t.maxFeePerGas,
            delete t.maxPriorityFeePerGas),
          "eip1559" === t.type && delete t.maxFeePerBlobGas,
          t
        );
      }
      let s = (0, i.q)("transaction", a);
    },
    68613: (e, t, r) => {
      "use strict";
      r.d(t, { Lj: () => s, WB: () => u, uL: () => l });
      var n = r(45732),
        i = r(34897),
        o = r(58981),
        a = r(6035);
      let s = { "0x0": "reverted", "0x1": "success" };
      function l(e) {
        let t = {
          ...e,
          blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
          contractAddress: e.contractAddress ? e.contractAddress : null,
          cumulativeGasUsed: e.cumulativeGasUsed
            ? BigInt(e.cumulativeGasUsed)
            : null,
          effectiveGasPrice: e.effectiveGasPrice
            ? BigInt(e.effectiveGasPrice)
            : null,
          gasUsed: e.gasUsed ? BigInt(e.gasUsed) : null,
          logs: e.logs ? e.logs.map((e) => (0, o.e)(e)) : null,
          to: e.to ? e.to : null,
          transactionIndex: e.transactionIndex
            ? (0, n.ME)(e.transactionIndex)
            : null,
          status: e.status ? s[e.status] : null,
          type: e.type ? a.b4[e.type] || e.type : null,
        };
        return (
          e.blobGasPrice && (t.blobGasPrice = BigInt(e.blobGasPrice)),
          e.blobGasUsed && (t.blobGasUsed = BigInt(e.blobGasUsed)),
          t
        );
      }
      let u = (0, i.q)("transactionReceipt", l);
    },
    53864: (e, t, r) => {
      "use strict";
      r.d(t, { Bv: () => a, bm: () => s });
      var n = r(98979),
        i = r(34897);
      let o = {
        legacy: "0x0",
        eip2930: "0x1",
        eip1559: "0x2",
        eip4844: "0x3",
        eip7702: "0x4",
      };
      function a(e) {
        let t = {};
        return (
          void 0 !== e.authorizationList &&
            (t.authorizationList = e.authorizationList.map((e) => ({
              address: e.address,
              r: e.r ? (0, n.cK)(BigInt(e.r)) : e.r,
              s: e.s ? (0, n.cK)(BigInt(e.s)) : e.s,
              chainId: (0, n.cK)(e.chainId),
              nonce: (0, n.cK)(e.nonce),
              ...(void 0 !== e.yParity
                ? { yParity: (0, n.cK)(e.yParity) }
                : {}),
              ...(void 0 !== e.v && void 0 === e.yParity
                ? { v: (0, n.cK)(e.v) }
                : {}),
            }))),
          void 0 !== e.accessList && (t.accessList = e.accessList),
          void 0 !== e.blobVersionedHashes &&
            (t.blobVersionedHashes = e.blobVersionedHashes),
          void 0 !== e.blobs &&
            ("string" != typeof e.blobs[0]
              ? (t.blobs = e.blobs.map((e) => (0, n.My)(e)))
              : (t.blobs = e.blobs)),
          void 0 !== e.data && (t.data = e.data),
          void 0 !== e.from && (t.from = e.from),
          void 0 !== e.gas && (t.gas = (0, n.cK)(e.gas)),
          void 0 !== e.gasPrice && (t.gasPrice = (0, n.cK)(e.gasPrice)),
          void 0 !== e.maxFeePerBlobGas &&
            (t.maxFeePerBlobGas = (0, n.cK)(e.maxFeePerBlobGas)),
          void 0 !== e.maxFeePerGas &&
            (t.maxFeePerGas = (0, n.cK)(e.maxFeePerGas)),
          void 0 !== e.maxPriorityFeePerGas &&
            (t.maxPriorityFeePerGas = (0, n.cK)(e.maxPriorityFeePerGas)),
          void 0 !== e.nonce && (t.nonce = (0, n.cK)(e.nonce)),
          void 0 !== e.to && (t.to = e.to),
          void 0 !== e.type && (t.type = o[e.type]),
          void 0 !== e.value && (t.value = (0, n.cK)(e.value)),
          t
        );
      }
      let s = (0, i.q)("transactionRequest", a);
    },
    72447: (e, t, r) => {
      "use strict";
      function n(e, t, r) {
        let n = e[t.name];
        if ("function" == typeof n) return n;
        let i = e[r];
        return "function" == typeof i ? i : (r) => t(e, r);
      }
      r.d(t, { T: () => n });
    },
    65978: (e, t, r) => {
      "use strict";
      r.d(t, { S: () => C });
      var n = r(50048);
      let i = BigInt(0x100000000 - 1),
        o = BigInt(32),
        a = (e, t, r) => (e << r) | (t >>> (32 - r)),
        s = (e, t, r) => (t << r) | (e >>> (32 - r)),
        l = (e, t, r) => (t << (r - 32)) | (e >>> (64 - r)),
        u = (e, t, r) => (e << (r - 32)) | (t >>> (64 - r));
      var c = r(22868);
      let d = [],
        f = [],
        h = [],
        p = BigInt(0),
        m = BigInt(1),
        g = BigInt(2),
        y = BigInt(7),
        b = BigInt(256),
        v = BigInt(113);
      for (let e = 0, t = m, r = 1, n = 0; e < 24; e++) {
        ([r, n] = [n, (2 * r + 3 * n) % 5]),
          d.push(2 * (5 * n + r)),
          f.push((((e + 1) * (e + 2)) / 2) % 64);
        let i = p;
        for (let e = 0; e < 7; e++)
          (t = ((t << m) ^ ((t >> y) * v)) % b) & g &&
            (i ^= m << ((m << BigInt(e)) - m));
        h.push(i);
      }
      let [w, x] = (function (e, t = !1) {
          let r = new Uint32Array(e.length),
            n = new Uint32Array(e.length);
          for (let a = 0; a < e.length; a++) {
            let { h: s, l } = (function (e, t = !1) {
              return t
                ? { h: Number(e & i), l: Number((e >> o) & i) }
                : { h: 0 | Number((e >> o) & i), l: 0 | Number(e & i) };
            })(e[a], t);
            [r[a], n[a]] = [s, l];
          }
          return [r, n];
        })(h, !0),
        A = (e, t, r) => (r > 32 ? l(e, t, r) : a(e, t, r)),
        E = (e, t, r) => (r > 32 ? u(e, t, r) : s(e, t, r));
      class k extends c.Vw {
        constructor(e, t, r, i = !1, o = 24) {
          if (
            (super(),
            (this.pos = 0),
            (this.posOut = 0),
            (this.finished = !1),
            (this.destroyed = !1),
            (this.enableXOF = !1),
            (this.blockLen = e),
            (this.suffix = t),
            (this.outputLen = r),
            (this.enableXOF = i),
            (this.rounds = o),
            (0, n.Fe)(r),
            0 >= this.blockLen || this.blockLen >= 200)
          )
            throw Error("Sha3 supports only keccak-f1600 function");
          (this.state = new Uint8Array(200)),
            (this.state32 = (0, c.DH)(this.state));
        }
        keccak() {
          c.qv || (0, c.Fc)(this.state32),
            (function (e, t = 24) {
              let r = new Uint32Array(10);
              for (let n = 24 - t; n < 24; n++) {
                for (let t = 0; t < 10; t++)
                  r[t] = e[t] ^ e[t + 10] ^ e[t + 20] ^ e[t + 30] ^ e[t + 40];
                for (let t = 0; t < 10; t += 2) {
                  let n = (t + 8) % 10,
                    i = (t + 2) % 10,
                    o = r[i],
                    a = r[i + 1],
                    s = A(o, a, 1) ^ r[n],
                    l = E(o, a, 1) ^ r[n + 1];
                  for (let r = 0; r < 50; r += 10)
                    (e[t + r] ^= s), (e[t + r + 1] ^= l);
                }
                let t = e[2],
                  i = e[3];
                for (let r = 0; r < 24; r++) {
                  let n = f[r],
                    o = A(t, i, n),
                    a = E(t, i, n),
                    s = d[r];
                  (t = e[s]), (i = e[s + 1]), (e[s] = o), (e[s + 1] = a);
                }
                for (let t = 0; t < 50; t += 10) {
                  for (let n = 0; n < 10; n++) r[n] = e[t + n];
                  for (let n = 0; n < 10; n++)
                    e[t + n] ^= ~r[(n + 2) % 10] & r[(n + 4) % 10];
                }
                (e[0] ^= w[n]), (e[1] ^= x[n]);
              }
              r.fill(0);
            })(this.state32, this.rounds),
            c.qv || (0, c.Fc)(this.state32),
            (this.posOut = 0),
            (this.pos = 0);
        }
        update(e) {
          (0, n.CC)(this);
          let { blockLen: t, state: r } = this,
            i = (e = (0, c.ZJ)(e)).length;
          for (let n = 0; n < i; ) {
            let o = Math.min(t - this.pos, i - n);
            for (let t = 0; t < o; t++) r[this.pos++] ^= e[n++];
            this.pos === t && this.keccak();
          }
          return this;
        }
        finish() {
          if (this.finished) return;
          this.finished = !0;
          let { state: e, suffix: t, pos: r, blockLen: n } = this;
          (e[r] ^= t),
            (128 & t) != 0 && r === n - 1 && this.keccak(),
            (e[n - 1] ^= 128),
            this.keccak();
        }
        writeInto(e) {
          (0, n.CC)(this, !1), (0, n.DO)(e), this.finish();
          let t = this.state,
            { blockLen: r } = this;
          for (let n = 0, i = e.length; n < i; ) {
            this.posOut >= r && this.keccak();
            let o = Math.min(r - this.posOut, i - n);
            e.set(t.subarray(this.posOut, this.posOut + o), n),
              (this.posOut += o),
              (n += o);
          }
          return e;
        }
        xofInto(e) {
          if (!this.enableXOF)
            throw Error("XOF is not possible for this instance");
          return this.writeInto(e);
        }
        xof(e) {
          return (0, n.Fe)(e), this.xofInto(new Uint8Array(e));
        }
        digestInto(e) {
          if (((0, n.Ht)(e, this), this.finished))
            throw Error("digest() was already called");
          return this.writeInto(e), this.destroy(), e;
        }
        digest() {
          return this.digestInto(new Uint8Array(this.outputLen));
        }
        destroy() {
          (this.destroyed = !0), this.state.fill(0);
        }
        _cloneInto(e) {
          let {
            blockLen: t,
            suffix: r,
            outputLen: n,
            rounds: i,
            enableXOF: o,
          } = this;
          return (
            e || (e = new k(t, r, n, o, i)),
            e.state32.set(this.state32),
            (e.pos = this.pos),
            (e.posOut = this.posOut),
            (e.finished = this.finished),
            (e.rounds = i),
            (e.suffix = r),
            (e.outputLen = n),
            (e.enableXOF = o),
            (e.destroyed = this.destroyed),
            e
          );
        }
      }
      let I = (0, c.ld)(() => new k(136, 1, 32));
      var S = r(11601),
        P = r(76397),
        T = r(98979);
      function C(e, t) {
        let r = I((0, S.q)(e, { strict: !1 }) ? (0, P.ZJ)(e) : e);
        return "bytes" === (t || "hex") ? r : (0, T.nj)(r);
      }
    },
    65479: (e, t, r) => {
      "use strict";
      r.d(t, { s: () => s });
      var n = r(40762),
        i = r(11601),
        o = r(76397),
        a = r(98979);
      function s(e, t) {
        let r = (0, n.sc)((0, i.q)(e, { strict: !1 }) ? (0, o.ZJ)(e) : e);
        return "bytes" === (t || "hex") ? r : (0, a.nj)(r);
      }
    },
    94490: (e, t, r) => {
      "use strict";
      r.d(t, { h: () => n });
      let n = r(82018).k;
    },
    44720: (e, t, r) => {
      "use strict";
      r.d(t, { V: () => o });
      var n = r(22162),
        i = r(82018);
      let o = (e) => (0, n.di)((0, i.k)(e), 0, 4);
    },
    82018: (e, t, r) => {
      "use strict";
      r.d(t, { k: () => d });
      var n = r(76397),
        i = r(65978);
      let o = (e) => (0, i.S)((0, n.ZJ)(e));
      var a = r(6463);
      let s = /^tuple(?<array>(\[(\d*)\])*)$/;
      function l(e) {
        let t = "",
          r = e.length;
        for (let n = 0; n < r; n++)
          (t += (function e(t) {
            let r = t.type;
            if (s.test(t.type) && "components" in t) {
              r = "(";
              let n = t.components.length;
              for (let i = 0; i < n; i++)
                (r += e(t.components[i])), i < n - 1 && (r += ", ");
              let i = (0, a.Yv)(s, t.type);
              return (r += `)${i?.array ?? ""}`), e({ ...t, type: r });
            }
            return ("indexed" in t && t.indexed && (r = `${r} indexed`), t.name)
              ? `${r} ${t.name}`
              : r;
          })(e[n])),
            n !== r - 1 && (t += ", ");
        return t;
      }
      var u = r(80477);
      let c = (e) =>
        (function (e) {
          let t = !0,
            r = "",
            n = 0,
            i = "",
            o = !1;
          for (let a = 0; a < e.length; a++) {
            let s = e[a];
            if (
              (["(", ")", ","].includes(s) && (t = !0),
              "(" === s && n++,
              ")" === s && n--,
              t)
            ) {
              if (0 === n) {
                if (" " === s && ["event", "function", ""].includes(i)) i = "";
                else if (((i += s), ")" === s)) {
                  o = !0;
                  break;
                }
                continue;
              }
              if (" " === s) {
                "," !== e[a - 1] &&
                  "," !== r &&
                  ",(" !== r &&
                  ((r = ""), (t = !1));
                continue;
              }
              (i += s), (r += s);
            }
          }
          if (!o) throw new u.C("Unable to normalize signature.");
          return i;
        })(
          "string" == typeof e
            ? e
            : (function (e) {
                return "function" === e.type
                  ? `function ${e.name}(${l(e.inputs)})${
                      e.stateMutability && "nonpayable" !== e.stateMutability
                        ? ` ${e.stateMutability}`
                        : ""
                    }${e.outputs?.length ? ` returns (${l(e.outputs)})` : ""}`
                  : "event" === e.type
                  ? `event ${e.name}(${l(e.inputs)})`
                  : "error" === e.type
                  ? `error ${e.name}(${l(e.inputs)})`
                  : "constructor" === e.type
                  ? `constructor(${l(e.inputs)})${
                      "payable" === e.stateMutability ? " payable" : ""
                    }`
                  : "fallback" === e.type
                  ? `fallback() external${
                      "payable" === e.stateMutability ? " payable" : ""
                    }`
                  : "receive() external payable";
              })(e)
        );
      function d(e) {
        return o(c(e));
      }
    },
    46140: (e, t, r) => {
      "use strict";
      r.d(t, { A: () => n });
      class n extends Map {
        constructor(e) {
          super(),
            Object.defineProperty(this, "maxSize", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.maxSize = e);
        }
        get(e) {
          let t = super.get(e);
          return (
            super.has(e) && void 0 !== t && (this.delete(e), super.set(e, t)), t
          );
        }
        set(e, t) {
          if ((super.set(e, t), this.maxSize && this.size > this.maxSize)) {
            let e = this.keys().next().value;
            e && this.delete(e);
          }
          return this;
        }
      }
    },
    88429: (e, t, r) => {
      "use strict";
      r.d(t, { lB: () => a });
      let n = new Map(),
        i = new Map(),
        o = 0;
      function a(e, t, r) {
        let a = ++o,
          s = () => n.get(e) || [],
          l = () => {
            let t = s();
            n.set(
              e,
              t.filter((e) => e.id !== a)
            );
          },
          u = () => {
            let t = s();
            if (!t.some((e) => e.id === a)) return;
            let r = i.get(e);
            1 === t.length && r && r(), l();
          },
          c = s();
        if ((n.set(e, [...c, { id: a, fns: t }]), c && c.length > 0)) return u;
        let d = {};
        for (let e in t)
          d[e] = (...t) => {
            let r = s();
            if (0 !== r.length) for (let n of r) n.fns[e]?.(...t);
          };
        let f = r(d);
        return "function" == typeof f && i.set(e, f), u;
      }
    },
    92342: (e, t, r) => {
      "use strict";
      r.d(t, { w: () => i });
      var n = r(23646);
      function i(e, { emitOnBegin: t, initialWaitTime: r, interval: i }) {
        let o = !0,
          a = () => (o = !1);
        return (
          (async () => {
            let s;
            t && (s = await e({ unpoll: a }));
            let l = (await r?.(s)) ?? i;
            await (0, n.u)(l);
            let u = async () => {
              o && (await e({ unpoll: a }), await (0, n.u)(i), u());
            };
            u();
          })(),
          a
        );
      }
    },
    40304: (e, t, r) => {
      "use strict";
      r.d(t, { u: () => o });
      var n = r(30400);
      let i = new Map();
      function o({ fn: e, id: t, shouldSplitBatch: r, wait: o = 0, sort: a }) {
        let s = async () => {
            let t = c();
            l();
            let r = t.map(({ args: e }) => e);
            0 !== r.length &&
              e(r)
                .then((e) => {
                  a && Array.isArray(e) && e.sort(a);
                  for (let r = 0; r < t.length; r++) {
                    let { resolve: n } = t[r];
                    n?.([e[r], e]);
                  }
                })
                .catch((e) => {
                  for (let r = 0; r < t.length; r++) {
                    let { reject: n } = t[r];
                    n?.(e);
                  }
                });
          },
          l = () => i.delete(t),
          u = () => c().map(({ args: e }) => e),
          c = () => i.get(t) || [],
          d = (e) => i.set(t, [...c(), e]);
        return {
          flush: l,
          async schedule(e) {
            let { promise: t, resolve: i, reject: a } = (0, n.Y)();
            return (
              (r?.([...u(), e]) && s(), c().length > 0)
                ? d({ args: e, resolve: i, reject: a })
                : (d({ args: e, resolve: i, reject: a }), setTimeout(s, o)),
              t
            );
          },
        };
      }
    },
    30400: (e, t, r) => {
      "use strict";
      function n() {
        let e = () => void 0,
          t = () => void 0;
        return {
          promise: new Promise((r, n) => {
            (e = r), (t = n);
          }),
          resolve: e,
          reject: t,
        };
      }
      r.d(t, { Y: () => n });
    },
    9869: (e, t, r) => {
      "use strict";
      r.d(t, { b: () => i });
      var n = r(23646);
      function i(
        e,
        { delay: t = 100, retryCount: r = 2, shouldRetry: o = () => !0 } = {}
      ) {
        return new Promise((i, a) => {
          let s = async ({ count: l = 0 } = {}) => {
            let u = async ({ error: e }) => {
              let r = "function" == typeof t ? t({ count: l, error: e }) : t;
              r && (await (0, n.u)(r)), s({ count: l + 1 });
            };
            try {
              let t = await e();
              i(t);
            } catch (e) {
              if (l < r && (await o({ count: l, error: e })))
                return u({ error: e });
              a(e);
            }
          };
          s();
        });
      }
    },
    7702: (e, t, r) => {
      "use strict";
      r.d(t, { BD: () => n, Ge: () => i });
      let n = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/,
        i =
          /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;
    },
    29157: (e, t, r) => {
      "use strict";
      r.d(t, { x: () => d });
      var n = r(40814),
        i = r(65978),
        o = r(11601),
        a = r(91149),
        s = r(45732),
        l = r(98979);
      async function u({ hash: e, signature: t }) {
        let n = (0, o.q)(e) ? e : (0, l.nj)(e),
          { secp256k1: i } = await Promise.resolve().then(r.bind(r, 60102)),
          u = (() => {
            if ("object" == typeof t && "r" in t && "s" in t) {
              let { r: e, s: r, v: n, yParity: o } = t,
                a = c(Number(o ?? n));
              return new i.Signature((0, s.uU)(e), (0, s.uU)(r)).addRecoveryBit(
                a
              );
            }
            let e = (0, o.q)(t) ? t : (0, l.nj)(t);
            if (65 !== (0, a.E)(e)) throw Error("invalid signature length");
            let r = c((0, s.ME)(`0x${e.slice(130)}`));
            return i.Signature.fromCompact(e.substring(2, 130)).addRecoveryBit(
              r
            );
          })()
            .recoverPublicKey(n.substring(2))
            .toHex(!1);
        return `0x${u}`;
      }
      function c(e) {
        if (0 === e || 1 === e) return e;
        if (27 === e) return 0;
        if (28 === e) return 1;
        throw Error("Invalid yParityOrV value");
      }
      async function d({ hash: e, signature: t }) {
        return (function (e) {
          let t = (0, i.S)(`0x${e.substring(4)}`).substring(26);
          return (0, n.o)(`0x${t}`);
        })(await u({ hash: e, signature: t }));
      }
    },
    52368: (e, t, r) => {
      "use strict";
      r.d(t, { yH: () => u });
      var n = r(61117),
        i = r(57643),
        o = r(56044),
        a = r(34354),
        s = r(98979);
      function l(e) {
        if (e && 0 !== e.length)
          return e.reduce((e, { slot: t, value: r }) => {
            if (66 !== t.length)
              throw new i.NV({ size: t.length, targetSize: 66, type: "hex" });
            if (66 !== r.length)
              throw new i.NV({ size: r.length, targetSize: 66, type: "hex" });
            return (e[t] = r), e;
          }, {});
      }
      function u(e) {
        if (!e) return;
        let t = {};
        for (let { address: r, ...i } of e) {
          if (!(0, a.P)(r, { strict: !1 })) throw new n.M({ address: r });
          if (t[r]) throw new o.Hi({ address: r });
          t[r] = (function (e) {
            let { balance: t, nonce: r, state: n, stateDiff: i, code: a } = e,
              u = {};
            if (
              (void 0 !== a && (u.code = a),
              void 0 !== t && (u.balance = (0, s.cK)(t)),
              void 0 !== r && (u.nonce = (0, s.cK)(r)),
              void 0 !== n && (u.state = l(n)),
              void 0 !== i)
            ) {
              if (u.state) throw new o.ft();
              u.stateDiff = l(i);
            }
            return u;
          })(i);
        }
        return t;
      }
    },
    66692: (e, t, r) => {
      "use strict";
      r.d(t, { A: () => n });
      let n = (e, t, r) =>
        JSON.stringify(
          e,
          (e, r) => {
            let n = "bigint" == typeof r ? r.toString() : r;
            return "function" == typeof t ? t(e, n) : n;
          },
          r
        );
    },
    41953: (e, t, r) => {
      "use strict";
      r.d(t, { c: () => u });
      var n = r(98722),
        i = r(26542),
        o = r(61117),
        a = r(87939),
        s = r(45757),
        l = r(34354);
      function u(e) {
        let {
            account: t,
            gasPrice: r,
            maxFeePerGas: u,
            maxPriorityFeePerGas: c,
            to: d,
          } = e,
          f = t ? (0, n.J)(t) : void 0;
        if (f && !(0, l.P)(f.address)) throw new o.M({ address: f.address });
        if (d && !(0, l.P)(d)) throw new o.M({ address: d });
        if (void 0 !== r && (void 0 !== u || void 0 !== c)) throw new s.n3();
        if (u && u > i.Ao) throw new a.BG({ maxFeePerGas: u });
        if (c && u && c > u)
          throw new a.lN({ maxFeePerGas: u, maxPriorityFeePerGas: c });
      }
    },
    75086: (e, t, r) => {
      "use strict";
      r.d(t, { L: () => i });
      var n = r(45757);
      function i(e) {
        if (e.type) return e.type;
        if (void 0 !== e.authorizationList) return "eip7702";
        if (
          void 0 !== e.blobs ||
          void 0 !== e.blobVersionedHashes ||
          void 0 !== e.maxFeePerBlobGas ||
          void 0 !== e.sidecars
        )
          return "eip4844";
        if (void 0 !== e.maxFeePerGas || void 0 !== e.maxPriorityFeePerGas)
          return "eip1559";
        if (void 0 !== e.gasPrice)
          return void 0 !== e.accessList ? "eip2930" : "legacy";
        throw new n.Vg({ transaction: e });
      }
    },
    37939: (e, t, r) => {
      "use strict";
      r.d(t, { H4: () => g, v8: () => p, $$: () => m });
      var n = r(36991),
        i = r(61117),
        o = r(66692),
        a = r(80477);
      class s extends a.C {
        constructor({ domain: e }) {
          super(`Invalid domain "${(0, o.A)(e)}".`, {
            metaMessages: ["Must be a valid EIP-712 domain."],
          });
        }
      }
      class l extends a.C {
        constructor({ primaryType: e, types: t }) {
          super(
            `Invalid primary type \`${e}\` must be one of \`${JSON.stringify(
              Object.keys(t)
            )}\`.`,
            {
              docsPath: "/api/glossary/Errors#typeddatainvalidprimarytypeerror",
              metaMessages: [
                "Check that the primary type is a key in `types`.",
              ],
            }
          );
        }
      }
      class u extends a.C {
        constructor({ type: e }) {
          super(`Struct type "${e}" is invalid.`, {
            metaMessages: ["Struct type must not be a Solidity type."],
            name: "InvalidStructTypeError",
          });
        }
      }
      var c = r(34354),
        d = r(91149),
        f = r(98979),
        h = r(7702);
      function p(e) {
        let { domain: t, message: r, primaryType: n, types: i } = e,
          a = (e, t) => {
            let r = { ...t };
            for (let t of e) {
              let { name: e, type: n } = t;
              "address" === n && (r[e] = r[e].toLowerCase());
            }
            return r;
          },
          s = i.EIP712Domain && t ? a(i.EIP712Domain, t) : {},
          l = (() => {
            if ("EIP712Domain" !== n) return a(i[n], r);
          })();
        return (0, o.A)({ domain: s, message: l, primaryType: n, types: i });
      }
      function m(e) {
        let { domain: t, message: r, primaryType: o, types: a } = e,
          p = (e, t) => {
            for (let r of e) {
              let { name: e, type: o } = r,
                s = t[e],
                l = o.match(h.Ge);
              if (l && ("number" == typeof s || "bigint" == typeof s)) {
                let [e, t, r] = l;
                (0, f.cK)(s, {
                  signed: "int" === t,
                  size: Number.parseInt(r) / 8,
                });
              }
              if ("address" === o && "string" == typeof s && !(0, c.P)(s))
                throw new i.M({ address: s });
              let m = o.match(h.BD);
              if (m) {
                let [e, t] = m;
                if (t && (0, d.E)(s) !== Number.parseInt(t))
                  throw new n.BI({
                    expectedSize: Number.parseInt(t),
                    givenSize: (0, d.E)(s),
                  });
              }
              let g = a[o];
              g &&
                ((function (e) {
                  if (
                    "address" === e ||
                    "bool" === e ||
                    "string" === e ||
                    e.startsWith("bytes") ||
                    e.startsWith("uint") ||
                    e.startsWith("int")
                  )
                    throw new u({ type: e });
                })(o),
                p(g, s));
            }
          };
        if (a.EIP712Domain && t) {
          if ("object" != typeof t) throw new s({ domain: t });
          p(a.EIP712Domain, t);
        }
        if ("EIP712Domain" !== o) {
          if (a[o]) p(a[o], r);
          else throw new l({ primaryType: o, types: a });
        }
      }
      function g({ domain: e }) {
        return [
          "string" == typeof e?.name && { name: "name", type: "string" },
          e?.version && { name: "version", type: "string" },
          ("number" == typeof e?.chainId || "bigint" == typeof e?.chainId) && {
            name: "chainId",
            type: "uint256",
          },
          e?.verifyingContract && {
            name: "verifyingContract",
            type: "address",
          },
          e?.salt && { name: "salt", type: "bytes32" },
        ].filter(Boolean);
      }
    },
    43071: (e, t, r) => {
      "use strict";
      let n;
      r.d(t, { L: () => o });
      let i = 256;
      function o(e = 11) {
        if (!n || i + e > 512) {
          (n = ""), (i = 0);
          for (let e = 0; e < 256; e++)
            n += ((256 + 256 * Math.random()) | 0).toString(16).substring(1);
        }
        return n.substring(i, i++ + e);
      }
    },
    69595: (e, t, r) => {
      "use strict";
      r.d(t, { c: () => o });
      var n = r(57317),
        i = r(89888);
      function o(e, t = "wei") {
        return (0, i.J)(e, n.eL[t]);
      }
    },
    18773: (e, t, r) => {
      "use strict";
      r.d(t, { Q: () => o });
      var n = r(57317),
        i = r(89888);
      function o(e, t = "wei") {
        return (0, i.J)(e, n.sz[t]);
      }
    },
    89888: (e, t, r) => {
      "use strict";
      function n(e, t) {
        let r = e.toString(),
          n = r.startsWith("-");
        n && (r = r.slice(1));
        let [i, o] = [
          (r = r.padStart(t, "0")).slice(0, r.length - t),
          r.slice(r.length - t),
        ];
        return (
          (o = o.replace(/(0+)$/, "")),
          `${n ? "-" : ""}${i || "0"}${o ? `.${o}` : ""}`
        );
      }
      r.d(t, { J: () => n });
    },
    64293: (e, t, r) => {
      "use strict";
      r.d(t, { g: () => a });
      var n = r(57317),
        i = r(80477);
      class o extends i.C {
        constructor({ value: e }) {
          super(`Number \`${e}\` is not a valid decimal number.`, {
            name: "InvalidDecimalNumberError",
          });
        }
      }
      function a(e, t = "wei") {
        return (function (e, t) {
          if (!/^(-?)([0-9]*)\.?([0-9]*)$/.test(e)) throw new o({ value: e });
          let [r, n = "0"] = e.split("."),
            i = r.startsWith("-");
          if ((i && (r = r.slice(1)), (n = n.replace(/(0+)$/, "")), 0 === t))
            1 === Math.round(Number(`.${n}`)) && (r = `${BigInt(r) + 1n}`),
              (n = "");
          else if (n.length > t) {
            let [e, i, o] = [n.slice(0, t - 1), n.slice(t - 1, t), n.slice(t)],
              a = Math.round(Number(`${i}.${o}`));
            (n =
              a > 9
                ? `${BigInt(e) + BigInt(1)}0`.padStart(e.length + 1, "0")
                : `${e}${a}`).length > t &&
              ((n = n.slice(1)), (r = `${BigInt(r) + 1n}`)),
              (n = n.slice(0, t));
          } else n = n.padEnd(t, "0");
          return BigInt(`${i ? "-" : ""}${r}${n}`);
        })(e, n.eL[t]);
      }
    },
    23646: (e, t, r) => {
      "use strict";
      async function n(e) {
        return new Promise((t) => setTimeout(t, e));
      }
      r.d(t, { u: () => n });
    },
    60102: (e, t, r) => {
      "use strict";
      r.d(t, { secp256k1: () => ev });
      var n = r(40762),
        i = r(50048),
        o = r(22868);
      class a extends o.Vw {
        constructor(e, t) {
          super(), (this.finished = !1), (this.destroyed = !1), (0, i.sd)(e);
          let r = (0, o.ZJ)(t);
          if (
            ((this.iHash = e.create()), "function" != typeof this.iHash.update)
          )
            throw Error("Expected instance of class which extends utils.Hash");
          (this.blockLen = this.iHash.blockLen),
            (this.outputLen = this.iHash.outputLen);
          let n = this.blockLen,
            a = new Uint8Array(n);
          a.set(r.length > n ? e.create().update(r).digest() : r);
          for (let e = 0; e < a.length; e++) a[e] ^= 54;
          this.iHash.update(a), (this.oHash = e.create());
          for (let e = 0; e < a.length; e++) a[e] ^= 106;
          this.oHash.update(a), a.fill(0);
        }
        update(e) {
          return (0, i.CC)(this), this.iHash.update(e), this;
        }
        digestInto(e) {
          (0, i.CC)(this),
            (0, i.DO)(e, this.outputLen),
            (this.finished = !0),
            this.iHash.digestInto(e),
            this.oHash.update(e),
            this.oHash.digestInto(e),
            this.destroy();
        }
        digest() {
          let e = new Uint8Array(this.oHash.outputLen);
          return this.digestInto(e), e;
        }
        _cloneInto(e) {
          e || (e = Object.create(Object.getPrototypeOf(this), {}));
          let {
            oHash: t,
            iHash: r,
            finished: n,
            destroyed: i,
            blockLen: o,
            outputLen: a,
          } = this;
          return (
            (e.finished = n),
            (e.destroyed = i),
            (e.blockLen = o),
            (e.outputLen = a),
            (e.oHash = t._cloneInto(e.oHash)),
            (e.iHash = r._cloneInto(e.iHash)),
            e
          );
        }
        destroy() {
          (this.destroyed = !0), this.oHash.destroy(), this.iHash.destroy();
        }
      }
      let s = (e, t, r) => new a(e, t).update(r).digest();
      s.create = (e, t) => new a(e, t);
      let l = BigInt(0),
        u = BigInt(1);
      function c(e) {
        return (
          e instanceof Uint8Array ||
          (ArrayBuffer.isView(e) && "Uint8Array" === e.constructor.name)
        );
      }
      function d(e) {
        if (!c(e)) throw Error("Uint8Array expected");
      }
      function f(e, t) {
        if ("boolean" != typeof t)
          throw Error(e + " boolean expected, got " + t);
      }
      function h(e) {
        let t = e.toString(16);
        return 1 & t.length ? "0" + t : t;
      }
      function p(e) {
        if ("string" != typeof e)
          throw Error("hex string expected, got " + typeof e);
        return "" === e ? l : BigInt("0x" + e);
      }
      let m =
          "function" == typeof Uint8Array.from([]).toHex &&
          "function" == typeof Uint8Array.fromHex,
        g = Array.from({ length: 256 }, (e, t) =>
          t.toString(16).padStart(2, "0")
        );
      function y(e) {
        if ((d(e), m)) return e.toHex();
        let t = "";
        for (let r = 0; r < e.length; r++) t += g[e[r]];
        return t;
      }
      let b = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
      function v(e) {
        return e >= b._0 && e <= b._9
          ? e - b._0
          : e >= b.A && e <= b.F
          ? e - (b.A - 10)
          : e >= b.a && e <= b.f
          ? e - (b.a - 10)
          : void 0;
      }
      function w(e) {
        if ("string" != typeof e)
          throw Error("hex string expected, got " + typeof e);
        if (m) return Uint8Array.fromHex(e);
        let t = e.length,
          r = t / 2;
        if (t % 2)
          throw Error("hex string expected, got unpadded hex of length " + t);
        let n = new Uint8Array(r);
        for (let t = 0, i = 0; t < r; t++, i += 2) {
          let r = v(e.charCodeAt(i)),
            o = v(e.charCodeAt(i + 1));
          if (void 0 === r || void 0 === o)
            throw Error(
              'hex string expected, got non-hex character "' +
                (e[i] + e[i + 1]) +
                '" at index ' +
                i
            );
          n[t] = 16 * r + o;
        }
        return n;
      }
      function x(e) {
        return p(y(e));
      }
      function A(e) {
        return d(e), p(y(Uint8Array.from(e).reverse()));
      }
      function E(e, t) {
        return w(e.toString(16).padStart(2 * t, "0"));
      }
      function k(e, t) {
        return E(e, t).reverse();
      }
      function I(e, t, r) {
        let n;
        if ("string" == typeof t)
          try {
            n = w(t);
          } catch (t) {
            throw Error(e + " must be hex string or Uint8Array, cause: " + t);
          }
        else if (c(t)) n = Uint8Array.from(t);
        else throw Error(e + " must be hex string or Uint8Array");
        let i = n.length;
        if ("number" == typeof r && i !== r)
          throw Error(e + " of length " + r + " expected, got " + i);
        return n;
      }
      function S(...e) {
        let t = 0;
        for (let r = 0; r < e.length; r++) {
          let n = e[r];
          d(n), (t += n.length);
        }
        let r = new Uint8Array(t);
        for (let t = 0, n = 0; t < e.length; t++) {
          let i = e[t];
          r.set(i, n), (n += i.length);
        }
        return r;
      }
      let P = (e) => "bigint" == typeof e && l <= e;
      function T(e, t, r) {
        return P(e) && P(t) && P(r) && t <= e && e < r;
      }
      function C(e, t, r, n) {
        if (!T(t, r, n))
          throw Error(
            "expected valid " + e + ": " + r + " <= n < " + n + ", got " + t
          );
      }
      let O = (e) => (u << BigInt(e)) - u,
        _ = (e) => new Uint8Array(e),
        B = (e) => Uint8Array.from(e),
        R = {
          bigint: (e) => "bigint" == typeof e,
          function: (e) => "function" == typeof e,
          boolean: (e) => "boolean" == typeof e,
          string: (e) => "string" == typeof e,
          stringOrUint8Array: (e) => "string" == typeof e || c(e),
          isSafeInteger: (e) => Number.isSafeInteger(e),
          array: (e) => Array.isArray(e),
          field: (e, t) => t.Fp.isValid(e),
          hash: (e) =>
            "function" == typeof e && Number.isSafeInteger(e.outputLen),
        };
      function N(e, t, r = {}) {
        let n = (t, r, n) => {
          let i = R[r];
          if ("function" != typeof i) throw Error("invalid validator function");
          let o = e[t];
          if ((!n || void 0 !== o) && !i(o, e))
            throw Error(
              "param " + String(t) + " is invalid. Expected " + r + ", got " + o
            );
        };
        for (let [e, r] of Object.entries(t)) n(e, r, !1);
        for (let [e, t] of Object.entries(r)) n(e, t, !0);
        return e;
      }
      function M(e) {
        let t = new WeakMap();
        return (r, ...n) => {
          let i = t.get(r);
          if (void 0 !== i) return i;
          let o = e(r, ...n);
          return t.set(r, o), o;
        };
      }
      let j = BigInt(0),
        F = BigInt(1),
        L = BigInt(2),
        D = BigInt(3),
        U = BigInt(4),
        H = BigInt(5),
        $ = BigInt(8);
      function z(e, t) {
        let r = e % t;
        return r >= j ? r : t + r;
      }
      function G(e, t, r) {
        let n = e;
        for (; t-- > j; ) (n *= n), (n %= r);
        return n;
      }
      function q(e, t) {
        if (e === j) throw Error("invert: expected non-zero number");
        if (t <= j) throw Error("invert: expected positive modulus, got " + t);
        let r = z(e, t),
          n = t,
          i = j,
          o = F,
          a = F,
          s = j;
        for (; r !== j; ) {
          let e = n / r,
            t = n % r,
            l = i - a * e,
            u = o - s * e;
          (n = r), (r = t), (i = a), (o = s), (a = l), (s = u);
        }
        if (n !== F) throw Error("invert: does not exist");
        return z(i, t);
      }
      let W = [
        "create",
        "isValid",
        "is0",
        "neg",
        "inv",
        "sqrt",
        "sqr",
        "eql",
        "add",
        "sub",
        "mul",
        "pow",
        "div",
        "addN",
        "subN",
        "mulN",
        "sqrN",
      ];
      function V(e, t) {
        let r = void 0 !== t ? t : e.toString(2).length,
          n = Math.ceil(r / 8);
        return { nBitLength: r, nByteLength: n };
      }
      function Z(e, t, r = !1, n = {}) {
        let i;
        if (e <= j) throw Error("invalid field: expected ORDER > 0, got " + e);
        let { nBitLength: o, nByteLength: a } = V(e, t);
        if (a > 2048)
          throw Error("invalid field: expected ORDER of <= 2048 bytes");
        let s = Object.freeze({
          ORDER: e,
          isLE: r,
          BITS: o,
          BYTES: a,
          MASK: O(o),
          ZERO: j,
          ONE: F,
          create: (t) => z(t, e),
          isValid: (t) => {
            if ("bigint" != typeof t)
              throw Error(
                "invalid field element: expected bigint, got " + typeof t
              );
            return j <= t && t < e;
          },
          is0: (e) => e === j,
          isOdd: (e) => (e & F) === F,
          neg: (t) => z(-t, e),
          eql: (e, t) => e === t,
          sqr: (t) => z(t * t, e),
          add: (t, r) => z(t + r, e),
          sub: (t, r) => z(t - r, e),
          mul: (t, r) => z(t * r, e),
          pow: (e, t) =>
            (function (e, t, r) {
              if (r < j) throw Error("invalid exponent, negatives unsupported");
              if (r === j) return e.ONE;
              if (r === F) return t;
              let n = e.ONE,
                i = t;
              for (; r > j; )
                r & F && (n = e.mul(n, i)), (i = e.sqr(i)), (r >>= F);
              return n;
            })(s, e, t),
          div: (t, r) => z(t * q(r, e), e),
          sqrN: (e) => e * e,
          addN: (e, t) => e + t,
          subN: (e, t) => e - t,
          mulN: (e, t) => e * t,
          inv: (t) => q(t, e),
          sqrt:
            n.sqrt ||
            ((t) => (
              i ||
                (i = (function (e) {
                  if (e % U === D) {
                    let t = (e + F) / U;
                    return function (e, r) {
                      let n = e.pow(r, t);
                      if (!e.eql(e.sqr(n), r))
                        throw Error("Cannot find square root");
                      return n;
                    };
                  }
                  if (e % $ === H) {
                    let t = (e - H) / $;
                    return function (e, r) {
                      let n = e.mul(r, L),
                        i = e.pow(n, t),
                        o = e.mul(r, i),
                        a = e.mul(e.mul(o, L), i),
                        s = e.mul(o, e.sub(a, e.ONE));
                      if (!e.eql(e.sqr(s), r))
                        throw Error("Cannot find square root");
                      return s;
                    };
                  }
                  return (function (e) {
                    let t, r, n;
                    let i = (e - F) / L;
                    for (t = e - F, r = 0; t % L === j; t /= L, r++);
                    for (
                      n = L;
                      n < e &&
                      (function (e, t, r) {
                        if (t < j)
                          throw Error(
                            "invalid exponent, negatives unsupported"
                          );
                        if (r <= j) throw Error("invalid modulus");
                        if (r === F) return j;
                        let n = F;
                        for (; t > j; )
                          t & F && (n = (n * e) % r),
                            (e = (e * e) % r),
                            (t >>= F);
                        return n;
                      })(n, i, e) !==
                        e - F;
                      n++
                    )
                      if (n > 1e3)
                        throw Error(
                          "Cannot find square root: likely non-prime P"
                        );
                    if (1 === r) {
                      let t = (e + F) / U;
                      return function (e, r) {
                        let n = e.pow(r, t);
                        if (!e.eql(e.sqr(n), r))
                          throw Error("Cannot find square root");
                        return n;
                      };
                    }
                    let o = (t + F) / L;
                    return function (e, a) {
                      if (e.pow(a, i) === e.neg(e.ONE))
                        throw Error("Cannot find square root");
                      let s = r,
                        l = e.pow(e.mul(e.ONE, n), t),
                        u = e.pow(a, o),
                        c = e.pow(a, t);
                      for (; !e.eql(c, e.ONE); ) {
                        if (e.eql(c, e.ZERO)) return e.ZERO;
                        let t = 1;
                        for (let r = e.sqr(c); t < s && !e.eql(r, e.ONE); t++)
                          r = e.sqr(r);
                        let r = e.pow(l, F << BigInt(s - t - 1));
                        (l = e.sqr(r)),
                          (u = e.mul(u, r)),
                          (c = e.mul(c, l)),
                          (s = t);
                      }
                      return u;
                    };
                  })(e);
                })(e)),
              i(s, t)
            )),
          invertBatch: (e) =>
            (function (e, t) {
              let r = Array(t.length),
                n = t.reduce(
                  (t, n, i) => (e.is0(n) ? t : ((r[i] = t), e.mul(t, n))),
                  e.ONE
                ),
                i = e.inv(n);
              return (
                t.reduceRight(
                  (t, n, i) =>
                    e.is0(n) ? t : ((r[i] = e.mul(t, r[i])), e.mul(t, n)),
                  i
                ),
                r
              );
            })(s, e),
          cmov: (e, t, r) => (r ? t : e),
          toBytes: (e) => (r ? k(e, a) : E(e, a)),
          fromBytes: (e) => {
            if (e.length !== a)
              throw Error(
                "Field.fromBytes: expected " + a + " bytes, got " + e.length
              );
            return r ? A(e) : x(e);
          },
        });
        return Object.freeze(s);
      }
      function K(e) {
        if ("bigint" != typeof e) throw Error("field order must be bigint");
        return Math.ceil(e.toString(2).length / 8);
      }
      function Q(e) {
        let t = K(e);
        return t + Math.ceil(t / 2);
      }
      let J = BigInt(0),
        Y = BigInt(1);
      function X(e, t) {
        let r = t.negate();
        return e ? r : t;
      }
      function ee(e, t) {
        if (!Number.isSafeInteger(e) || e <= 0 || e > t)
          throw Error(
            "invalid window size, expected [1.." + t + "], got W=" + e
          );
      }
      function et(e, t) {
        ee(e, t);
        let r = Math.ceil(t / e) + 1,
          n = 2 ** (e - 1),
          i = 2 ** e;
        return {
          windows: r,
          windowSize: n,
          mask: O(e),
          maxNumber: i,
          shiftBy: BigInt(e),
        };
      }
      function er(e, t, r) {
        let { windowSize: n, mask: i, maxNumber: o, shiftBy: a } = r,
          s = Number(e & i),
          l = e >> a;
        s > n && ((s -= o), (l += Y));
        let u = t * n,
          c = u + Math.abs(s) - 1;
        return {
          nextN: l,
          offset: c,
          isZero: 0 === s,
          isNeg: s < 0,
          isNegF: t % 2 != 0,
          offsetF: u,
        };
      }
      let en = new WeakMap(),
        ei = new WeakMap();
      function eo(e) {
        return ei.get(e) || 1;
      }
      function ea(e) {
        return (
          N(
            e.Fp,
            W.reduce((e, t) => ((e[t] = "function"), e), {
              ORDER: "bigint",
              MASK: "bigint",
              BYTES: "isSafeInteger",
              BITS: "isSafeInteger",
            })
          ),
          N(
            e,
            { n: "bigint", h: "bigint", Gx: "field", Gy: "field" },
            { nBitLength: "isSafeInteger", nByteLength: "isSafeInteger" }
          ),
          Object.freeze({ ...V(e.n, e.nBitLength), ...e, p: e.Fp.ORDER })
        );
      }
      function es(e) {
        void 0 !== e.lowS && f("lowS", e.lowS),
          void 0 !== e.prehash && f("prehash", e.prehash);
      }
      class el extends Error {
        constructor(e = "") {
          super(e);
        }
      }
      let eu = {
          Err: el,
          _tlv: {
            encode: (e, t) => {
              let { Err: r } = eu;
              if (e < 0 || e > 256) throw new r("tlv.encode: wrong tag");
              if (1 & t.length) throw new r("tlv.encode: unpadded data");
              let n = t.length / 2,
                i = h(n);
              if ((i.length / 2) & 128)
                throw new r("tlv.encode: long form length too big");
              let o = n > 127 ? h((i.length / 2) | 128) : "";
              return h(e) + o + i + t;
            },
            decode(e, t) {
              let { Err: r } = eu,
                n = 0;
              if (e < 0 || e > 256) throw new r("tlv.encode: wrong tag");
              if (t.length < 2 || t[n++] !== e)
                throw new r("tlv.decode: wrong tlv");
              let i = t[n++],
                o = 0;
              if (128 & i) {
                let e = 127 & i;
                if (!e)
                  throw new r(
                    "tlv.decode(long): indefinite length not supported"
                  );
                if (e > 4)
                  throw new r("tlv.decode(long): byte length is too big");
                let a = t.subarray(n, n + e);
                if (a.length !== e)
                  throw new r("tlv.decode: length bytes not complete");
                if (0 === a[0])
                  throw new r("tlv.decode(long): zero leftmost byte");
                for (let e of a) o = (o << 8) | e;
                if (((n += e), o < 128))
                  throw new r("tlv.decode(long): not minimal encoding");
              } else o = i;
              let a = t.subarray(n, n + o);
              if (a.length !== o) throw new r("tlv.decode: wrong value length");
              return { v: a, l: t.subarray(n + o) };
            },
          },
          _int: {
            encode(e) {
              let { Err: t } = eu;
              if (e < ec)
                throw new t("integer: negative integers are not allowed");
              let r = h(e);
              if (
                (8 & Number.parseInt(r[0], 16) && (r = "00" + r), 1 & r.length)
              )
                throw new t("unexpected DER parsing assertion: unpadded hex");
              return r;
            },
            decode(e) {
              let { Err: t } = eu;
              if (128 & e[0])
                throw new t("invalid signature integer: negative");
              if (0 === e[0] && !(128 & e[1]))
                throw new t(
                  "invalid signature integer: unnecessary leading zero"
                );
              return x(e);
            },
          },
          toSig(e) {
            let { Err: t, _int: r, _tlv: n } = eu,
              i = I("signature", e),
              { v: o, l: a } = n.decode(48, i);
            if (a.length)
              throw new t("invalid signature: left bytes after parsing");
            let { v: s, l: l } = n.decode(2, o),
              { v: u, l: c } = n.decode(2, l);
            if (c.length)
              throw new t("invalid signature: left bytes after parsing");
            return { r: r.decode(s), s: r.decode(u) };
          },
          hexFromSig(e) {
            let { _tlv: t, _int: r } = eu,
              n = t.encode(2, r.encode(e.r)),
              i = t.encode(2, r.encode(e.s));
            return t.encode(48, n + i);
          },
        },
        ec = BigInt(0),
        ed = BigInt(1),
        ef = (BigInt(2), BigInt(3)),
        eh =
          (BigInt(4),
          BigInt(
            "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"
          )),
        ep = BigInt(
          "0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"
        ),
        em = BigInt(1),
        eg = BigInt(2),
        ey = (e, t) => (e + t / eg) / t,
        eb = Z(eh, void 0, void 0, {
          sqrt: function (e) {
            let t = BigInt(3),
              r = BigInt(6),
              n = BigInt(11),
              i = BigInt(22),
              o = BigInt(23),
              a = BigInt(44),
              s = BigInt(88),
              l = (e * e * e) % eh,
              u = (l * l * e) % eh,
              c = (G(u, t, eh) * u) % eh,
              d = (G(c, t, eh) * u) % eh,
              f = (G(d, eg, eh) * l) % eh,
              h = (G(f, n, eh) * f) % eh,
              p = (G(h, i, eh) * h) % eh,
              m = (G(p, a, eh) * p) % eh,
              g = (G(m, s, eh) * m) % eh,
              y = (G(g, a, eh) * p) % eh,
              b = (G(y, t, eh) * u) % eh,
              v = (G(b, o, eh) * h) % eh,
              w = (G(v, r, eh) * l) % eh,
              x = G(w, eg, eh);
            if (!eb.eql(eb.sqr(x), e)) throw Error("Cannot find square root");
            return x;
          },
        }),
        ev = (function (e, t) {
          let r = (t) =>
            (function (e) {
              let t = (function (e) {
                  let t = ea(e);
                  return (
                    N(
                      t,
                      {
                        hash: "hash",
                        hmac: "function",
                        randomBytes: "function",
                      },
                      {
                        bits2int: "function",
                        bits2int_modN: "function",
                        lowS: "boolean",
                      }
                    ),
                    Object.freeze({ lowS: !0, ...t })
                  );
                })(e),
                { Fp: r, n: n } = t,
                i = r.BYTES + 1,
                o = 2 * r.BYTES + 1;
              function a(e) {
                return z(e, n);
              }
              let {
                  ProjectivePoint: s,
                  normPrivateKeyToScalar: d,
                  weierstrassEquation: h,
                  isWithinCurveOrder: p,
                } = (function (e) {
                  var t;
                  let r = (function (e) {
                      let t = ea(e);
                      N(
                        t,
                        { a: "field", b: "field" },
                        {
                          allowedPrivateKeyLengths: "array",
                          wrapPrivateKey: "boolean",
                          isTorsionFree: "function",
                          clearCofactor: "function",
                          allowInfinityPoint: "boolean",
                          fromBytes: "function",
                          toBytes: "function",
                        }
                      );
                      let { endo: r, Fp: n, a: i } = t;
                      if (r) {
                        if (!n.eql(i, n.ZERO))
                          throw Error(
                            "invalid endomorphism, can only be defined for Koblitz curves that have a=0"
                          );
                        if (
                          "object" != typeof r ||
                          "bigint" != typeof r.beta ||
                          "function" != typeof r.splitScalar
                        )
                          throw Error(
                            "invalid endomorphism, expected beta: bigint and splitScalar: function"
                          );
                      }
                      return Object.freeze({ ...t });
                    })(e),
                    { Fp: n } = r,
                    i = Z(r.n, r.nBitLength),
                    o =
                      r.toBytes ||
                      ((e, t, r) => {
                        let i = t.toAffine();
                        return S(
                          Uint8Array.from([4]),
                          n.toBytes(i.x),
                          n.toBytes(i.y)
                        );
                      }),
                    a =
                      r.fromBytes ||
                      ((e) => {
                        let t = e.subarray(1);
                        return {
                          x: n.fromBytes(t.subarray(0, n.BYTES)),
                          y: n.fromBytes(t.subarray(n.BYTES, 2 * n.BYTES)),
                        };
                      });
                  function s(e) {
                    let { a: t, b: i } = r,
                      o = n.sqr(e),
                      a = n.mul(o, e);
                    return n.add(n.add(a, n.mul(e, t)), i);
                  }
                  if (!n.eql(n.sqr(r.Gy), s(r.Gx)))
                    throw Error("bad generator point: equation left != right");
                  function d(e) {
                    let t;
                    let {
                      allowedPrivateKeyLengths: n,
                      nByteLength: i,
                      wrapPrivateKey: o,
                      n: a,
                    } = r;
                    if (n && "bigint" != typeof e) {
                      if (
                        (c(e) && (e = y(e)),
                        "string" != typeof e || !n.includes(e.length))
                      )
                        throw Error("invalid private key");
                      e = e.padStart(2 * i, "0");
                    }
                    try {
                      t = "bigint" == typeof e ? e : x(I("private key", e, i));
                    } catch (t) {
                      throw Error(
                        "invalid private key, expected hex or " +
                          i +
                          " bytes, got " +
                          typeof e
                      );
                    }
                    return o && (t = z(t, a)), C("private key", t, ed, a), t;
                  }
                  function h(e) {
                    if (!(e instanceof g))
                      throw Error("ProjectivePoint expected");
                  }
                  let p = M((e, t) => {
                      let { px: r, py: i, pz: o } = e;
                      if (n.eql(o, n.ONE)) return { x: r, y: i };
                      let a = e.is0();
                      null == t && (t = a ? n.ONE : n.inv(o));
                      let s = n.mul(r, t),
                        l = n.mul(i, t),
                        u = n.mul(o, t);
                      if (a) return { x: n.ZERO, y: n.ZERO };
                      if (!n.eql(u, n.ONE)) throw Error("invZ was invalid");
                      return { x: s, y: l };
                    }),
                    m = M((e) => {
                      if (e.is0()) {
                        if (r.allowInfinityPoint && !n.is0(e.py)) return;
                        throw Error("bad point: ZERO");
                      }
                      let { x: t, y: i } = e.toAffine();
                      if (!n.isValid(t) || !n.isValid(i))
                        throw Error("bad point: x or y not FE");
                      let o = n.sqr(i),
                        a = s(t);
                      if (!n.eql(o, a))
                        throw Error("bad point: equation left != right");
                      if (!e.isTorsionFree())
                        throw Error("bad point: not in prime-order subgroup");
                      return !0;
                    });
                  class g {
                    constructor(e, t, r) {
                      if (null == e || !n.isValid(e)) throw Error("x required");
                      if (null == t || !n.isValid(t)) throw Error("y required");
                      if (null == r || !n.isValid(r)) throw Error("z required");
                      (this.px = e),
                        (this.py = t),
                        (this.pz = r),
                        Object.freeze(this);
                    }
                    static fromAffine(e) {
                      let { x: t, y: r } = e || {};
                      if (!e || !n.isValid(t) || !n.isValid(r))
                        throw Error("invalid affine point");
                      if (e instanceof g)
                        throw Error("projective point not allowed");
                      let i = (e) => n.eql(e, n.ZERO);
                      return i(t) && i(r) ? g.ZERO : new g(t, r, n.ONE);
                    }
                    get x() {
                      return this.toAffine().x;
                    }
                    get y() {
                      return this.toAffine().y;
                    }
                    static normalizeZ(e) {
                      let t = n.invertBatch(e.map((e) => e.pz));
                      return e
                        .map((e, r) => e.toAffine(t[r]))
                        .map(g.fromAffine);
                    }
                    static fromHex(e) {
                      let t = g.fromAffine(a(I("pointHex", e)));
                      return t.assertValidity(), t;
                    }
                    static fromPrivateKey(e) {
                      return g.BASE.multiply(d(e));
                    }
                    static msm(e, t) {
                      return (function (e, t, r, n) {
                        if (
                          ((function (e, t) {
                            if (!Array.isArray(e))
                              throw Error("array expected");
                            e.forEach((e, r) => {
                              if (!(e instanceof t))
                                throw Error("invalid point at index " + r);
                            });
                          })(r, e),
                          (function (e, t) {
                            if (!Array.isArray(e))
                              throw Error("array of scalars expected");
                            e.forEach((e, r) => {
                              if (!t.isValid(e))
                                throw Error("invalid scalar at index " + r);
                            });
                          })(n, t),
                          r.length !== n.length)
                        )
                          throw Error(
                            "arrays of points and scalars must have equal length"
                          );
                        let i = e.ZERO,
                          o = (function (e) {
                            let t;
                            for (t = 0; e > l; e >>= u, t += 1);
                            return t;
                          })(BigInt(r.length)),
                          a = o > 12 ? o - 3 : o > 4 ? o - 2 : o ? 2 : 1,
                          s = O(a),
                          c = Array(Number(s) + 1).fill(i),
                          d = Math.floor((t.BITS - 1) / a) * a,
                          f = i;
                        for (let e = d; e >= 0; e -= a) {
                          c.fill(i);
                          for (let t = 0; t < n.length; t++) {
                            let i = Number((n[t] >> BigInt(e)) & s);
                            c[i] = c[i].add(r[t]);
                          }
                          let t = i;
                          for (let e = c.length - 1, r = i; e > 0; e--)
                            (r = r.add(c[e])), (t = t.add(r));
                          if (((f = f.add(t)), 0 !== e))
                            for (let e = 0; e < a; e++) f = f.double();
                        }
                        return f;
                      })(g, i, e, t);
                    }
                    _setWindowSize(e) {
                      v.setWindowSize(this, e);
                    }
                    assertValidity() {
                      m(this);
                    }
                    hasEvenY() {
                      let { y: e } = this.toAffine();
                      if (n.isOdd) return !n.isOdd(e);
                      throw Error("Field doesn't support isOdd");
                    }
                    equals(e) {
                      h(e);
                      let { px: t, py: r, pz: i } = this,
                        { px: o, py: a, pz: s } = e,
                        l = n.eql(n.mul(t, s), n.mul(o, i)),
                        u = n.eql(n.mul(r, s), n.mul(a, i));
                      return l && u;
                    }
                    negate() {
                      return new g(this.px, n.neg(this.py), this.pz);
                    }
                    double() {
                      let { a: e, b: t } = r,
                        i = n.mul(t, ef),
                        { px: o, py: a, pz: s } = this,
                        l = n.ZERO,
                        u = n.ZERO,
                        c = n.ZERO,
                        d = n.mul(o, o),
                        f = n.mul(a, a),
                        h = n.mul(s, s),
                        p = n.mul(o, a);
                      return (
                        (p = n.add(p, p)),
                        (c = n.mul(o, s)),
                        (c = n.add(c, c)),
                        (l = n.mul(e, c)),
                        (u = n.mul(i, h)),
                        (u = n.add(l, u)),
                        (l = n.sub(f, u)),
                        (u = n.add(f, u)),
                        (u = n.mul(l, u)),
                        (l = n.mul(p, l)),
                        (c = n.mul(i, c)),
                        (h = n.mul(e, h)),
                        (p = n.sub(d, h)),
                        (p = n.mul(e, p)),
                        (p = n.add(p, c)),
                        (c = n.add(d, d)),
                        (d = n.add(c, d)),
                        (d = n.add(d, h)),
                        (d = n.mul(d, p)),
                        (u = n.add(u, d)),
                        (h = n.mul(a, s)),
                        (h = n.add(h, h)),
                        (d = n.mul(h, p)),
                        (l = n.sub(l, d)),
                        (c = n.mul(h, f)),
                        (c = n.add(c, c)),
                        new g(l, u, (c = n.add(c, c)))
                      );
                    }
                    add(e) {
                      h(e);
                      let { px: t, py: i, pz: o } = this,
                        { px: a, py: s, pz: l } = e,
                        u = n.ZERO,
                        c = n.ZERO,
                        d = n.ZERO,
                        f = r.a,
                        p = n.mul(r.b, ef),
                        m = n.mul(t, a),
                        y = n.mul(i, s),
                        b = n.mul(o, l),
                        v = n.add(t, i),
                        w = n.add(a, s);
                      (v = n.mul(v, w)),
                        (w = n.add(m, y)),
                        (v = n.sub(v, w)),
                        (w = n.add(t, o));
                      let x = n.add(a, l);
                      return (
                        (w = n.mul(w, x)),
                        (x = n.add(m, b)),
                        (w = n.sub(w, x)),
                        (x = n.add(i, o)),
                        (u = n.add(s, l)),
                        (x = n.mul(x, u)),
                        (u = n.add(y, b)),
                        (x = n.sub(x, u)),
                        (d = n.mul(f, w)),
                        (u = n.mul(p, b)),
                        (d = n.add(u, d)),
                        (u = n.sub(y, d)),
                        (d = n.add(y, d)),
                        (c = n.mul(u, d)),
                        (y = n.add(m, m)),
                        (y = n.add(y, m)),
                        (b = n.mul(f, b)),
                        (w = n.mul(p, w)),
                        (y = n.add(y, b)),
                        (b = n.sub(m, b)),
                        (b = n.mul(f, b)),
                        (w = n.add(w, b)),
                        (m = n.mul(y, w)),
                        (c = n.add(c, m)),
                        (m = n.mul(x, w)),
                        (u = n.mul(v, u)),
                        (u = n.sub(u, m)),
                        (m = n.mul(v, y)),
                        (d = n.mul(x, d)),
                        new g(u, c, (d = n.add(d, m)))
                      );
                    }
                    subtract(e) {
                      return this.add(e.negate());
                    }
                    is0() {
                      return this.equals(g.ZERO);
                    }
                    wNAF(e) {
                      return v.wNAFCached(this, e, g.normalizeZ);
                    }
                    multiplyUnsafe(e) {
                      let { endo: t, n: i } = r;
                      C("scalar", e, ec, i);
                      let o = g.ZERO;
                      if (e === ec) return o;
                      if (this.is0() || e === ed) return this;
                      if (!t || v.hasPrecomputes(this))
                        return v.wNAFCachedUnsafe(this, e, g.normalizeZ);
                      let {
                          k1neg: a,
                          k1: s,
                          k2neg: l,
                          k2: u,
                        } = t.splitScalar(e),
                        c = o,
                        d = o,
                        f = this;
                      for (; s > ec || u > ec; )
                        s & ed && (c = c.add(f)),
                          u & ed && (d = d.add(f)),
                          (f = f.double()),
                          (s >>= ed),
                          (u >>= ed);
                      return (
                        a && (c = c.negate()),
                        l && (d = d.negate()),
                        (d = new g(n.mul(d.px, t.beta), d.py, d.pz)),
                        c.add(d)
                      );
                    }
                    multiply(e) {
                      let t, i;
                      let { endo: o, n: a } = r;
                      if ((C("scalar", e, ed, a), o)) {
                        let {
                            k1neg: r,
                            k1: a,
                            k2neg: s,
                            k2: l,
                          } = o.splitScalar(e),
                          { p: u, f: c } = this.wNAF(a),
                          { p: d, f: f } = this.wNAF(l);
                        (u = v.constTimeNegate(r, u)),
                          (d = v.constTimeNegate(s, d)),
                          (d = new g(n.mul(d.px, o.beta), d.py, d.pz)),
                          (t = u.add(d)),
                          (i = c.add(f));
                      } else {
                        let { p: r, f: n } = this.wNAF(e);
                        (t = r), (i = n);
                      }
                      return g.normalizeZ([t, i])[0];
                    }
                    multiplyAndAddUnsafe(e, t, r) {
                      let n = g.BASE,
                        i = (e, t) =>
                          t !== ec && t !== ed && e.equals(n)
                            ? e.multiply(t)
                            : e.multiplyUnsafe(t),
                        o = i(this, t).add(i(e, r));
                      return o.is0() ? void 0 : o;
                    }
                    toAffine(e) {
                      return p(this, e);
                    }
                    isTorsionFree() {
                      let { h: e, isTorsionFree: t } = r;
                      if (e === ed) return !0;
                      if (t) return t(g, this);
                      throw Error(
                        "isTorsionFree() has not been declared for the elliptic curve"
                      );
                    }
                    clearCofactor() {
                      let { h: e, clearCofactor: t } = r;
                      return e === ed
                        ? this
                        : t
                        ? t(g, this)
                        : this.multiplyUnsafe(r.h);
                    }
                    toRawBytes(e = !0) {
                      return (
                        f("isCompressed", e),
                        this.assertValidity(),
                        o(g, this, e)
                      );
                    }
                    toHex(e = !0) {
                      return f("isCompressed", e), y(this.toRawBytes(e));
                    }
                  }
                  (g.BASE = new g(r.Gx, r.Gy, n.ONE)),
                    (g.ZERO = new g(n.ZERO, n.ONE, n.ZERO));
                  let b = r.nBitLength,
                    v =
                      ((t = r.endo ? Math.ceil(b / 2) : b),
                      {
                        constTimeNegate: X,
                        hasPrecomputes: (e) => 1 !== eo(e),
                        unsafeLadder(e, t, r = g.ZERO) {
                          let n = e;
                          for (; t > J; )
                            t & Y && (r = r.add(n)),
                              (n = n.double()),
                              (t >>= Y);
                          return r;
                        },
                        precomputeWindow(e, r) {
                          let { windows: n, windowSize: i } = et(r, t),
                            o = [],
                            a = e,
                            s = a;
                          for (let e = 0; e < n; e++) {
                            (s = a), o.push(s);
                            for (let e = 1; e < i; e++)
                              (s = s.add(a)), o.push(s);
                            a = s.double();
                          }
                          return o;
                        },
                        wNAF(e, r, n) {
                          let i = g.ZERO,
                            o = g.BASE,
                            a = et(e, t);
                          for (let e = 0; e < a.windows; e++) {
                            let {
                              nextN: t,
                              offset: s,
                              isZero: l,
                              isNeg: u,
                              isNegF: c,
                              offsetF: d,
                            } = er(n, e, a);
                            (n = t),
                              l
                                ? (o = o.add(X(c, r[d])))
                                : (i = i.add(X(u, r[s])));
                          }
                          return { p: i, f: o };
                        },
                        wNAFUnsafe(e, r, n, i = g.ZERO) {
                          let o = et(e, t);
                          for (let e = 0; e < o.windows && n !== J; e++) {
                            let {
                              nextN: t,
                              offset: a,
                              isZero: s,
                              isNeg: l,
                            } = er(n, e, o);
                            if (((n = t), !s)) {
                              let e = r[a];
                              i = i.add(l ? e.negate() : e);
                            }
                          }
                          return i;
                        },
                        getPrecomputes(e, t, r) {
                          let n = en.get(t);
                          return (
                            n ||
                              ((n = this.precomputeWindow(t, e)),
                              1 !== e && en.set(t, r(n))),
                            n
                          );
                        },
                        wNAFCached(e, t, r) {
                          let n = eo(e);
                          return this.wNAF(n, this.getPrecomputes(n, e, r), t);
                        },
                        wNAFCachedUnsafe(e, t, r, n) {
                          let i = eo(e);
                          return 1 === i
                            ? this.unsafeLadder(e, t, n)
                            : this.wNAFUnsafe(
                                i,
                                this.getPrecomputes(i, e, r),
                                t,
                                n
                              );
                        },
                        setWindowSize(e, r) {
                          ee(r, t), ei.set(e, r), en.delete(e);
                        },
                      });
                  return {
                    CURVE: r,
                    ProjectivePoint: g,
                    normPrivateKeyToScalar: d,
                    weierstrassEquation: s,
                    isWithinCurveOrder: function (e) {
                      return T(e, ed, r.n);
                    },
                  };
                })({
                  ...t,
                  toBytes(e, t, n) {
                    let i = t.toAffine(),
                      o = r.toBytes(i.x);
                    return (f("isCompressed", n), n)
                      ? S(Uint8Array.from([t.hasEvenY() ? 2 : 3]), o)
                      : S(Uint8Array.from([4]), o, r.toBytes(i.y));
                  },
                  fromBytes(e) {
                    let t = e.length,
                      n = e[0],
                      a = e.subarray(1);
                    if (t === i && (2 === n || 3 === n)) {
                      let e;
                      let t = x(a);
                      if (!T(t, ed, r.ORDER))
                        throw Error("Point is not on curve");
                      let i = h(t);
                      try {
                        e = r.sqrt(i);
                      } catch (e) {
                        throw Error(
                          "Point is not on curve" +
                            (e instanceof Error ? ": " + e.message : "")
                        );
                      }
                      return (
                        ((1 & n) == 1) != ((e & ed) === ed) && (e = r.neg(e)),
                        { x: t, y: e }
                      );
                    }
                    if (t === o && 4 === n)
                      return {
                        x: r.fromBytes(a.subarray(0, r.BYTES)),
                        y: r.fromBytes(a.subarray(r.BYTES, 2 * r.BYTES)),
                      };
                    throw Error(
                      "invalid Point, expected length of " +
                        i +
                        ", or uncompressed " +
                        o +
                        ", got " +
                        t
                    );
                  },
                }),
                m = (e) => y(E(e, t.nByteLength)),
                g = (e, t, r) => x(e.slice(t, r));
              class b {
                constructor(e, t, r) {
                  C("r", e, ed, n),
                    C("s", t, ed, n),
                    (this.r = e),
                    (this.s = t),
                    null != r && (this.recovery = r),
                    Object.freeze(this);
                }
                static fromCompact(e) {
                  let r = t.nByteLength;
                  return new b(
                    g((e = I("compactSignature", e, 2 * r)), 0, r),
                    g(e, r, 2 * r)
                  );
                }
                static fromDER(e) {
                  let { r: t, s: r } = eu.toSig(I("DER", e));
                  return new b(t, r);
                }
                assertValidity() {}
                addRecoveryBit(e) {
                  return new b(this.r, this.s, e);
                }
                recoverPublicKey(e) {
                  let { r: i, s: o, recovery: l } = this,
                    u = R(I("msgHash", e));
                  if (null == l || ![0, 1, 2, 3].includes(l))
                    throw Error("recovery id invalid");
                  let c = 2 === l || 3 === l ? i + t.n : i;
                  if (c >= r.ORDER) throw Error("recovery id 2 or 3 invalid");
                  let d = (1 & l) == 0 ? "02" : "03",
                    f = s.fromHex(d + m(c)),
                    h = q(c, n),
                    p = a(-u * h),
                    g = a(o * h),
                    y = s.BASE.multiplyAndAddUnsafe(f, p, g);
                  if (!y) throw Error("point at infinify");
                  return y.assertValidity(), y;
                }
                hasHighS() {
                  return this.s > n >> ed;
                }
                normalizeS() {
                  return this.hasHighS()
                    ? new b(this.r, a(-this.s), this.recovery)
                    : this;
                }
                toDERRawBytes() {
                  return w(this.toDERHex());
                }
                toDERHex() {
                  return eu.hexFromSig({ r: this.r, s: this.s });
                }
                toCompactRawBytes() {
                  return w(this.toCompactHex());
                }
                toCompactHex() {
                  return m(this.r) + m(this.s);
                }
              }
              function v(e) {
                let t = c(e),
                  r = "string" == typeof e,
                  n = (t || r) && e.length;
                return t
                  ? n === i || n === o
                  : r
                  ? n === 2 * i || n === 2 * o
                  : e instanceof s;
              }
              let P =
                  t.bits2int ||
                  function (e) {
                    if (e.length > 8192) throw Error("input is too large");
                    let r = x(e),
                      n = 8 * e.length - t.nBitLength;
                    return n > 0 ? r >> BigInt(n) : r;
                  },
                R =
                  t.bits2int_modN ||
                  function (e) {
                    return a(P(e));
                  },
                j = O(t.nBitLength);
              function L(e) {
                return (
                  C("num < 2^" + t.nBitLength, e, ec, j), E(e, t.nByteLength)
                );
              }
              let D = { lowS: t.lowS, prehash: !1 },
                U = { lowS: t.lowS, prehash: !1 };
              return (
                s.BASE._setWindowSize(8),
                {
                  CURVE: t,
                  getPublicKey: function (e, t = !0) {
                    return s.fromPrivateKey(e).toRawBytes(t);
                  },
                  getSharedSecret: function (e, t, r = !0) {
                    if (v(e)) throw Error("first arg must be private key");
                    if (!v(t)) throw Error("second arg must be public key");
                    return s.fromHex(t).multiply(d(e)).toRawBytes(r);
                  },
                  sign: function (e, i, o = D) {
                    let { seed: l, k2sig: u } = (function (e, i, o = D) {
                      if (["recovered", "canonical"].some((e) => e in o))
                        throw Error("sign() legacy options not supported");
                      let { hash: l, randomBytes: u } = t,
                        { lowS: c, prehash: f, extraEntropy: h } = o;
                      null == c && (c = !0),
                        (e = I("msgHash", e)),
                        es(o),
                        f && (e = I("prehashed msgHash", l(e)));
                      let m = R(e),
                        g = d(i),
                        y = [L(g), L(m)];
                      if (null != h && !1 !== h) {
                        let e = !0 === h ? u(r.BYTES) : h;
                        y.push(I("extraEntropy", e));
                      }
                      return {
                        seed: S(...y),
                        k2sig: function (e) {
                          let t = P(e);
                          if (!p(t)) return;
                          let r = q(t, n),
                            i = s.BASE.multiply(t).toAffine(),
                            o = a(i.x);
                          if (o === ec) return;
                          let l = a(r * a(m + o * g));
                          if (l === ec) return;
                          let u = (i.x === o ? 0 : 2) | Number(i.y & ed),
                            d = l;
                          if (c && l > n >> ed)
                            (d = l > n >> ed ? a(-l) : l), (u ^= 1);
                          return new b(o, d, u);
                        },
                      };
                    })(e, i, o);
                    return (function (e, t, r) {
                      if ("number" != typeof e || e < 2)
                        throw Error("hashLen must be a number");
                      if ("number" != typeof t || t < 2)
                        throw Error("qByteLen must be a number");
                      if ("function" != typeof r)
                        throw Error("hmacFn must be a function");
                      let n = _(e),
                        i = _(e),
                        o = 0,
                        a = () => {
                          n.fill(1), i.fill(0), (o = 0);
                        },
                        s = (...e) => r(i, n, ...e),
                        l = (e = _(0)) => {
                          (i = s(B([0]), e)),
                            (n = s()),
                            0 !== e.length && ((i = s(B([1]), e)), (n = s()));
                        },
                        u = () => {
                          if (o++ >= 1e3)
                            throw Error("drbg: tried 1000 values");
                          let e = 0,
                            r = [];
                          for (; e < t; ) {
                            let t = (n = s()).slice();
                            r.push(t), (e += n.length);
                          }
                          return S(...r);
                        };
                      return (e, t) => {
                        let r;
                        for (a(), l(e); !(r = t(u())); ) l();
                        return a(), r;
                      };
                    })(
                      t.hash.outputLen,
                      t.nByteLength,
                      t.hmac
                    )(l, u);
                  },
                  verify: function (e, r, i, o = U) {
                    let l, u;
                    (r = I("msgHash", r)), (i = I("publicKey", i));
                    let { lowS: d, prehash: f, format: h } = o;
                    if ((es(o), "strict" in o))
                      throw Error("options.strict was renamed to lowS");
                    if (void 0 !== h && "compact" !== h && "der" !== h)
                      throw Error("format must be compact or der");
                    let p = "string" == typeof e || c(e),
                      m =
                        !p &&
                        !h &&
                        "object" == typeof e &&
                        null !== e &&
                        "bigint" == typeof e.r &&
                        "bigint" == typeof e.s;
                    if (!p && !m)
                      throw Error(
                        "invalid signature, expected Uint8Array, hex string or Signature instance"
                      );
                    try {
                      if ((m && (u = new b(e.r, e.s)), p)) {
                        try {
                          "compact" !== h && (u = b.fromDER(e));
                        } catch (e) {
                          if (!(e instanceof eu.Err)) throw e;
                        }
                        u || "der" === h || (u = b.fromCompact(e));
                      }
                      l = s.fromHex(i);
                    } catch (e) {
                      return !1;
                    }
                    if (!u || (d && u.hasHighS())) return !1;
                    f && (r = t.hash(r));
                    let { r: g, s: y } = u,
                      v = R(r),
                      w = q(y, n),
                      x = a(v * w),
                      A = a(g * w),
                      E = s.BASE.multiplyAndAddUnsafe(l, x, A)?.toAffine();
                    return !!E && a(E.x) === g;
                  },
                  ProjectivePoint: s,
                  Signature: b,
                  utils: {
                    isValidPrivateKey(e) {
                      try {
                        return d(e), !0;
                      } catch (e) {
                        return !1;
                      }
                    },
                    normPrivateKeyToScalar: d,
                    randomPrivateKey: () => {
                      let e = Q(t.n);
                      return (function (e, t, r = !1) {
                        let n = e.length,
                          i = K(t),
                          o = Q(t);
                        if (n < 16 || n < o || n > 1024)
                          throw Error(
                            "expected " + o + "-1024 bytes of input, got " + n
                          );
                        let a = z(r ? A(e) : x(e), t - F) + F;
                        return r ? k(a, i) : E(a, i);
                      })(t.randomBytes(e), t.n);
                    },
                    precompute: (e = 8, t = s.BASE) => (
                      t._setWindowSize(e), t.multiply(BigInt(3)), t
                    ),
                  },
                }
              );
            })({
              ...e,
              hash: t,
              hmac: (e, ...r) => s(t, e, (0, o.Id)(...r)),
              randomBytes: o.po,
            });
          return { ...r(t), create: r };
        })(
          {
            a: BigInt(0),
            b: BigInt(7),
            Fp: eb,
            n: ep,
            Gx: BigInt(
              "55066263022277343669578718895168534326250603453777594175500187360389116729240"
            ),
            Gy: BigInt(
              "32670510020758816978083085130507043184471273380659243275938904335757337482424"
            ),
            h: BigInt(1),
            lowS: !0,
            endo: {
              beta: BigInt(
                "0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"
              ),
              splitScalar: (e) => {
                let t = BigInt("0x3086d221a7d46bcde86c90e49284eb15"),
                  r = -em * BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),
                  n = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),
                  i = BigInt("0x100000000000000000000000000000000"),
                  o = ey(t * e, ep),
                  a = ey(-r * e, ep),
                  s = z(e - o * t - a * n, ep),
                  l = z(-o * r - a * t, ep),
                  u = s > i,
                  c = l > i;
                if ((u && (s = ep - s), c && (l = ep - l), s > i || l > i))
                  throw Error("splitScalar: Endomorphism failed, k=" + e);
                return { k1neg: u, k1: s, k2neg: c, k2: l };
              },
            },
          },
          n.sc
        );
      BigInt(0), ev.ProjectivePoint;
    },
    50048: (e, t, r) => {
      "use strict";
      function n(e) {
        if (!Number.isSafeInteger(e) || e < 0)
          throw Error("positive integer expected, got " + e);
      }
      function i(e, ...t) {
        if (
          !(
            e instanceof Uint8Array ||
            (ArrayBuffer.isView(e) && "Uint8Array" === e.constructor.name)
          )
        )
          throw Error("Uint8Array expected");
        if (t.length > 0 && !t.includes(e.length))
          throw Error(
            "Uint8Array expected of length " + t + ", got length=" + e.length
          );
      }
      function o(e) {
        if ("function" != typeof e || "function" != typeof e.create)
          throw Error("Hash should be wrapped by utils.wrapConstructor");
        n(e.outputLen), n(e.blockLen);
      }
      function a(e, t = !0) {
        if (e.destroyed) throw Error("Hash instance has been destroyed");
        if (t && e.finished)
          throw Error("Hash#digest() has already been called");
      }
      function s(e, t) {
        i(e);
        let r = t.outputLen;
        if (e.length < r)
          throw Error(
            "digestInto() expects output buffer of length at least " + r
          );
      }
      r.d(t, {
        CC: () => a,
        DO: () => i,
        Fe: () => n,
        Ht: () => s,
        sd: () => o,
      });
    },
    40762: (e, t, r) => {
      "use strict";
      r.d(t, { sc: () => c });
      var n = r(50048),
        i = r(22868);
      class o extends i.Vw {
        constructor(e, t, r, n) {
          super(),
            (this.finished = !1),
            (this.length = 0),
            (this.pos = 0),
            (this.destroyed = !1),
            (this.blockLen = e),
            (this.outputLen = t),
            (this.padOffset = r),
            (this.isLE = n),
            (this.buffer = new Uint8Array(e)),
            (this.view = (0, i.O8)(this.buffer));
        }
        update(e) {
          (0, n.CC)(this);
          let { view: t, buffer: r, blockLen: o } = this,
            a = (e = (0, i.ZJ)(e)).length;
          for (let n = 0; n < a; ) {
            let s = Math.min(o - this.pos, a - n);
            if (s === o) {
              let t = (0, i.O8)(e);
              for (; o <= a - n; n += o) this.process(t, n);
              continue;
            }
            r.set(e.subarray(n, n + s), this.pos),
              (this.pos += s),
              (n += s),
              this.pos === o && (this.process(t, 0), (this.pos = 0));
          }
          return (this.length += e.length), this.roundClean(), this;
        }
        digestInto(e) {
          (0, n.CC)(this), (0, n.Ht)(e, this), (this.finished = !0);
          let { buffer: t, view: r, blockLen: o, isLE: a } = this,
            { pos: s } = this;
          (t[s++] = 128),
            this.buffer.subarray(s).fill(0),
            this.padOffset > o - s && (this.process(r, 0), (s = 0));
          for (let e = s; e < o; e++) t[e] = 0;
          !(function (e, t, r, n) {
            if ("function" == typeof e.setBigUint64)
              return e.setBigUint64(t, r, n);
            let i = BigInt(32),
              o = BigInt(0xffffffff),
              a = Number((r >> i) & o),
              s = Number(r & o),
              l = n ? 4 : 0,
              u = n ? 0 : 4;
            e.setUint32(t + l, a, n), e.setUint32(t + u, s, n);
          })(r, o - 8, BigInt(8 * this.length), a),
            this.process(r, 0);
          let l = (0, i.O8)(e),
            u = this.outputLen;
          if (u % 4) throw Error("_sha2: outputLen should be aligned to 32bit");
          let c = u / 4,
            d = this.get();
          if (c > d.length) throw Error("_sha2: outputLen bigger than state");
          for (let e = 0; e < c; e++) l.setUint32(4 * e, d[e], a);
        }
        digest() {
          let { buffer: e, outputLen: t } = this;
          this.digestInto(e);
          let r = e.slice(0, t);
          return this.destroy(), r;
        }
        _cloneInto(e) {
          e || (e = new this.constructor()), e.set(...this.get());
          let {
            blockLen: t,
            buffer: r,
            length: n,
            finished: i,
            destroyed: o,
            pos: a,
          } = this;
          return (
            (e.length = n),
            (e.pos = a),
            (e.finished = i),
            (e.destroyed = o),
            n % t && e.buffer.set(r),
            e
          );
        }
      }
      let a = new Uint32Array([
          0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,
          0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,
          0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,
          0xc19bf174, 0xe49b69c1, 0xefbe4786, 0xfc19dc6, 0x240ca1cc, 0x2de92c6f,
          0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d,
          0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x6ca6351, 0x14292967,
          0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354,
          0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,
          0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585,
          0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
          0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee,
          0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb,
          0xbef9a3f7, 0xc67178f2,
        ]),
        s = new Uint32Array([
          0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f,
          0x9b05688c, 0x1f83d9ab, 0x5be0cd19,
        ]),
        l = new Uint32Array(64);
      class u extends o {
        constructor(e = 32) {
          super(64, e, 8, !1),
            (this.A = 0 | s[0]),
            (this.B = 0 | s[1]),
            (this.C = 0 | s[2]),
            (this.D = 0 | s[3]),
            (this.E = 0 | s[4]),
            (this.F = 0 | s[5]),
            (this.G = 0 | s[6]),
            (this.H = 0 | s[7]);
        }
        get() {
          let { A: e, B: t, C: r, D: n, E: i, F: o, G: a, H: s } = this;
          return [e, t, r, n, i, o, a, s];
        }
        set(e, t, r, n, i, o, a, s) {
          (this.A = 0 | e),
            (this.B = 0 | t),
            (this.C = 0 | r),
            (this.D = 0 | n),
            (this.E = 0 | i),
            (this.F = 0 | o),
            (this.G = 0 | a),
            (this.H = 0 | s);
        }
        process(e, t) {
          for (let r = 0; r < 16; r++, t += 4) l[r] = e.getUint32(t, !1);
          for (let e = 16; e < 64; e++) {
            let t = l[e - 15],
              r = l[e - 2],
              n = (0, i.Ow)(t, 7) ^ (0, i.Ow)(t, 18) ^ (t >>> 3),
              o = (0, i.Ow)(r, 17) ^ (0, i.Ow)(r, 19) ^ (r >>> 10);
            l[e] = (o + l[e - 7] + n + l[e - 16]) | 0;
          }
          let { A: r, B: n, C: o, D: s, E: u, F: c, G: d, H: f } = this;
          for (let e = 0; e < 64; e++) {
            var h, p, m, g;
            let t =
                (f +
                  ((0, i.Ow)(u, 6) ^ (0, i.Ow)(u, 11) ^ (0, i.Ow)(u, 25)) +
                  (((h = u) & c) ^ (~h & d)) +
                  a[e] +
                  l[e]) |
                0,
              y =
                (((0, i.Ow)(r, 2) ^ (0, i.Ow)(r, 13) ^ (0, i.Ow)(r, 22)) +
                  (((p = r) & (m = n)) ^ (p & (g = o)) ^ (m & g))) |
                0;
            (f = d),
              (d = c),
              (c = u),
              (u = (s + t) | 0),
              (s = o),
              (o = n),
              (n = r),
              (r = (t + y) | 0);
          }
          (r = (r + this.A) | 0),
            (n = (n + this.B) | 0),
            (o = (o + this.C) | 0),
            (s = (s + this.D) | 0),
            (u = (u + this.E) | 0),
            (c = (c + this.F) | 0),
            (d = (d + this.G) | 0),
            (f = (f + this.H) | 0),
            this.set(r, n, o, s, u, c, d, f);
        }
        roundClean() {
          l.fill(0);
        }
        destroy() {
          this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
        }
      }
      let c = (0, i.ld)(() => new u());
    },
    22868: (e, t, r) => {
      "use strict";
      r.d(t, {
        Vw: () => f,
        Fc: () => u,
        Id: () => d,
        O8: () => a,
        qv: () => l,
        po: () => p,
        Ow: () => s,
        ZJ: () => c,
        DH: () => o,
        ld: () => h,
      });
      let n =
        "object" == typeof globalThis && "crypto" in globalThis
          ? globalThis.crypto
          : void 0;
      var i = r(50048);
      function o(e) {
        return new Uint32Array(
          e.buffer,
          e.byteOffset,
          Math.floor(e.byteLength / 4)
        );
      }
      function a(e) {
        return new DataView(e.buffer, e.byteOffset, e.byteLength);
      }
      function s(e, t) {
        return (e << (32 - t)) | (e >>> t);
      }
      let l = 68 === new Uint8Array(new Uint32Array([0x11223344]).buffer)[0];
      function u(e) {
        for (let r = 0; r < e.length; r++) {
          var t;
          e[r] =
            (((t = e[r]) << 24) & 0xff000000) |
            ((t << 8) & 0xff0000) |
            ((t >>> 8) & 65280) |
            ((t >>> 24) & 255);
        }
      }
      "function" == typeof Uint8Array.from([]).toHex && Uint8Array.fromHex,
        (e, t) => t.toString(16).padStart(2, "0");
      function c(e) {
        return (
          "string" == typeof e &&
            (e = (function (e) {
              if ("string" != typeof e)
                throw Error("utf8ToBytes expected string, got " + typeof e);
              return new Uint8Array(new TextEncoder().encode(e));
            })(e)),
          (0, i.DO)(e),
          e
        );
      }
      function d(...e) {
        let t = 0;
        for (let r = 0; r < e.length; r++) {
          let n = e[r];
          (0, i.DO)(n), (t += n.length);
        }
        let r = new Uint8Array(t);
        for (let t = 0, n = 0; t < e.length; t++) {
          let i = e[t];
          r.set(i, n), (n += i.length);
        }
        return r;
      }
      class f {
        clone() {
          return this._cloneInto();
        }
      }
      function h(e) {
        let t = (t) => e().update(c(t)).digest(),
          r = e();
        return (
          (t.outputLen = r.outputLen),
          (t.blockLen = r.blockLen),
          (t.create = () => e()),
          t
        );
      }
      function p(e = 32) {
        if (n && "function" == typeof n.getRandomValues)
          return n.getRandomValues(new Uint8Array(e));
        if (n && "function" == typeof n.randomBytes)
          return Uint8Array.from(n.randomBytes(e));
        throw Error("crypto.getRandomValues must be defined");
      }
    },
    77999: (e, t, r) => {
      "use strict";
      let n, i, o, a, s, l, u, c, d, f, h, p, m, g, y, b, v, w;
      r.d(t, { ufN: () => fZ });
      var x,
        A,
        E,
        k,
        I,
        S,
        P,
        T,
        C,
        O,
        _,
        B,
        R,
        N,
        M,
        j,
        F,
        L,
        D,
        U,
        H,
        $,
        z = {};
      r.r(z),
        r.d(z, {
          BRAND: () => ne,
          DIRTY: () => rt,
          EMPTY_PATH: () => t4,
          INVALID: () => re,
          NEVER: () => nW,
          OK: () => rr,
          ParseStatus: () => t7,
          Schema: () => rc,
          ZodAny: () => rF,
          ZodArray: () => rH,
          ZodBigInt: () => r_,
          ZodBoolean: () => rB,
          ZodBranded: () => nt,
          ZodCatch: () => r9,
          ZodDate: () => rR,
          ZodDefault: () => r4,
          ZodDiscriminatedUnion: () => rq,
          ZodEffects: () => r5,
          ZodEnum: () => r1,
          ZodError: () => t1,
          ZodFirstPartyTypeKind: () => T,
          ZodFunction: () => rJ,
          ZodIntersection: () => rW,
          ZodIssueCode: () => tX,
          ZodLazy: () => rY,
          ZodLiteral: () => rX,
          ZodMap: () => rK,
          ZodNaN: () => r7,
          ZodNativeEnum: () => r2,
          ZodNever: () => rD,
          ZodNull: () => rj,
          ZodNullable: () => r8,
          ZodNumber: () => rO,
          ZodObject: () => r$,
          ZodOptional: () => r3,
          ZodParsedType: () => tJ,
          ZodPipeline: () => nr,
          ZodPromise: () => r6,
          ZodReadonly: () => nn,
          ZodRecord: () => rZ,
          ZodSchema: () => rc,
          ZodSet: () => rQ,
          ZodString: () => rC,
          ZodSymbol: () => rN,
          ZodTransformer: () => r5,
          ZodTuple: () => rV,
          ZodType: () => rc,
          ZodUndefined: () => rM,
          ZodUnion: () => rz,
          ZodUnknown: () => rL,
          ZodVoid: () => rU,
          addIssueToContext: () => t9,
          any: () => ny,
          array: () => nx,
          bigint: () => nd,
          boolean: () => nf,
          coerce: () => nq,
          custom: () => no,
          date: () => nh,
          datetimeRegex: () => rT,
          defaultErrorMap: () => t2,
          discriminatedUnion: () => nI,
          effect: () => nF,
          enum: () => nN,
          function: () => n_,
          getErrorMap: () => t3,
          getParsedType: () => tY,
          instanceof: () => ns,
          intersection: () => nS,
          isAborted: () => rn,
          isAsync: () => ra,
          isDirty: () => ri,
          isValid: () => ro,
          late: () => na,
          lazy: () => nB,
          literal: () => nR,
          makeIssue: () => t8,
          map: () => nC,
          nan: () => nc,
          nativeEnum: () => nM,
          never: () => nv,
          null: () => ng,
          nullable: () => nD,
          number: () => nu,
          object: () => nA,
          objectUtil: () => S,
          oboolean: () => nG,
          onumber: () => nz,
          optional: () => nL,
          ostring: () => n$,
          pipeline: () => nH,
          preprocess: () => nU,
          promise: () => nj,
          quotelessJson: () => t0,
          record: () => nT,
          set: () => nO,
          setErrorMap: () => t5,
          strictObject: () => nE,
          string: () => nl,
          symbol: () => np,
          transformer: () => nF,
          tuple: () => nP,
          undefined: () => nm,
          union: () => nk,
          unknown: () => nb,
          util: () => I,
          void: () => nw,
        });
      var G = {};
      r.r(G),
        r.d(G, {
          abiSchemaToJsonSchema: () => n8,
          codePointToInt: () => ie,
          ensureIfUint8Array: () => iu,
          ethAbiToJsonSchema: () => n4,
          fetchArrayElement: () => n9,
          hexToNumber: () => it,
          hexToUint8Array: () => il,
          numberToHex: () => ir,
          padLeft: () => ii,
          parseBaseType: () => n5,
          transformJsonDataToAbiFormat: () => n7,
          uint8ArrayToHexString: () => io,
        });
      var q = {};
      r.r(q),
        r.d(q, {
          isBatchRequest: () => ai,
          isBatchResponse: () => ae,
          isResponseRpcError: () => o6,
          isResponseWithError: () => o3,
          isResponseWithNotification: () => o8,
          isResponseWithResult: () => o5,
          isSubscriptionResult: () => o4,
          isValidResponse: () => o7,
          setRequestIdStart: () => at,
          toBatchPayload: () => an,
          toPayload: () => ar,
          validateResponse: () => o9,
        });
      var W = {};
      r.r(W),
        r.d(W, {
          ChunkResponseParser: () => as,
          Eip1193Provider: () => au,
          EventEmitter: () => on,
          SocketProvider: () => af,
          Web3DeferredPromise: () => aa,
          asciiToHex: () => i1,
          bytesToHex: () => iH,
          bytesToUint8Array: () => iD,
          checkAddressCheckSum: () => oa,
          compareBlockNumbers: () => op,
          convert: () => oO,
          convertScalarValue: () => oT,
          encodePacked: () => o$,
          ethUnitMap: () => iF,
          format: () => o_,
          fromAscii: () => i2,
          fromDecimal: () => iW,
          fromTwosComplement: () => ok,
          fromUtf8: () => iK,
          fromWei: () => i9,
          getStorageSlotNumForLongString: () => oq,
          hexToAscii: () => i6,
          hexToBytes: () => i$,
          hexToNumber: () => iz,
          hexToNumberString: () => iV,
          hexToString: () => i0,
          hexToUtf8: () => iJ,
          isAddress: () => os,
          isBatchRequest: () => ai,
          isBatchResponse: () => ae,
          isBloom: () => ol,
          isContractAddressInBloom: () => od,
          isContractInitOptions: () => om,
          isDataFormat: () => oS,
          isHex: () => oo,
          isHexStrict: () => oi,
          isInBloom: () => ou,
          isNullish: () => og,
          isPromise: () => oQ,
          isResponseRpcError: () => o6,
          isResponseWithError: () => o3,
          isResponseWithNotification: () => o8,
          isResponseWithResult: () => o5,
          isSubscriptionResult: () => o4,
          isTopic: () => of,
          isTopicInBloom: () => oh,
          isUint8Array: () => iN,
          isUserEthereumAddressInBloom: () => oc,
          isValidResponse: () => o7,
          jsonRpc: () => q,
          keccak256: () => oR,
          keccak256Wrapper: () => oR,
          leftPad: () => oA,
          mergeDeep: () => ob,
          numberToHex: () => iq,
          padLeft: () => ov,
          padRight: () => ow,
          pollTillDefined: () => oX,
          pollTillDefinedAndReturnIntervalId: () => oY,
          processSolidityEncodePackedArgs: () => oH,
          randomBytes: () => oV,
          randomHex: () => oZ,
          rejectIfConditionAtInterval: () => o1,
          rejectIfTimeout: () => o0,
          rightPad: () => ox,
          setRequestIdStart: () => at,
          sha3: () => oN,
          sha3Raw: () => oM,
          soliditySha3: () => oz,
          soliditySha3Raw: () => oG,
          stringToHex: () => iQ,
          toAscii: () => i5,
          toBatchPayload: () => an,
          toBigInt: () => i4,
          toBool: () => ot,
          toChecksumAddress: () => oe,
          toDecimal: () => iG,
          toHex: () => i3,
          toNumber: () => i8,
          toPayload: () => ar,
          toTwosComplement: () => oE,
          toUtf8: () => iY,
          toWei: () => i7,
          uint8ArrayConcat: () => iM,
          uint8ArrayEquals: () => ij,
          utf8ToBytes: () => iX,
          utf8ToHex: () => iZ,
          uuidV4: () => o2,
          validateResponse: () => o9,
          waitWithTimeout: () => oJ,
        });
      var V = {};
      r.r(V),
        r.d(V, {
          DO: () => si,
          OG: () => sy,
          My: () => sa,
          Ph: () => sd,
          lX: () => sf,
          Id: () => sg,
          fg: () => sw,
          qj: () => sm,
          aT: () => sc,
          aY: () => sn,
          lq: () => sh,
          z: () => sp,
          Q5: () => sA,
        });
      var Z = {};
      r.r(Z),
        r.d(Z, { secp256k1: () => sY }),
        (function (e) {
          (e.NUMBER = "NUMBER_NUMBER"),
            (e.HEX = "NUMBER_HEX"),
            (e.STR = "NUMBER_STR"),
            (e.BIGINT = "NUMBER_BIGINT");
        })(x || (x = {})),
        (function (e) {
          (e.HEX = "BYTES_HEX"), (e.UINT8ARRAY = "BYTES_UINT8ARRAY");
        })(A || (A = {}));
      let K = { number: x.BIGINT, bytes: A.HEX },
        Q = { number: x.HEX, bytes: A.HEX };
      !(function (e) {
        (e.EARLIEST = "earliest"),
          (e.LATEST = "latest"),
          (e.PENDING = "pending"),
          (e.SAFE = "safe"),
          (e.FINALIZED = "finalized"),
          (e.COMMITTED = "committed");
      })(E || (E = {})),
        (function (e) {
          (e.chainstart = "chainstart"),
            (e.frontier = "frontier"),
            (e.homestead = "homestead"),
            (e.dao = "dao"),
            (e.tangerineWhistle = "tangerineWhistle"),
            (e.spuriousDragon = "spuriousDragon"),
            (e.byzantium = "byzantium"),
            (e.constantinople = "constantinople"),
            (e.petersburg = "petersburg"),
            (e.istanbul = "istanbul"),
            (e.muirGlacier = "muirGlacier"),
            (e.berlin = "berlin"),
            (e.london = "london"),
            (e.altair = "altair"),
            (e.arrowGlacier = "arrowGlacier"),
            (e.grayGlacier = "grayGlacier"),
            (e.bellatrix = "bellatrix"),
            (e.merge = "merge"),
            (e.capella = "capella"),
            (e.shanghai = "shanghai");
        })(k || (k = {}));
      let J = Object.getPrototypeOf(Uint8Array);
      var Y = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      let X = Symbol.for("web3/base-provider");
      class ee {
        static isWeb3Provider(e) {
          return e instanceof ee || !!(e && e[X]);
        }
        get [X]() {
          return !0;
        }
        send(e, t) {
          this.request(e)
            .then((e) => {
              t(null, e);
            })
            .catch((e) => {
              t(e);
            });
        }
        sendAsync(e) {
          return Y(this, void 0, void 0, function* () {
            return this.request(e);
          });
        }
        asEIP1193Provider() {
          let e = Object.create(this),
            t = e.request;
          return (
            (e.request = function (e) {
              return Y(this, void 0, void 0, function* () {
                return (yield t(e)).result;
              });
            }),
            (e.asEIP1193Provider = void 0),
            e
          );
        }
      }
      class et extends Array {
        constructor(e) {
          super(), (this._accountProvider = e);
        }
      }
      class er extends Error {
        get innerError() {
          return this.cause instanceof en ? this.cause.errors : this.cause;
        }
        set innerError(e) {
          Array.isArray(e) ? (this.cause = new en(e)) : (this.cause = e);
        }
        constructor(e, t) {
          super(e),
            Array.isArray(t) ? (this.cause = new en(t)) : (this.cause = t),
            (this.name = this.constructor.name),
            "function" == typeof Error.captureStackTrace
              ? Error.captureStackTrace(new.target.constructor)
              : (this.stack = Error().stack);
        }
        static convertToString(e, t = !1) {
          if (null == e) return "undefined";
          let r = JSON.stringify(e, (e, t) =>
            "bigint" == typeof t ? t.toString() : t
          );
          return t && ["bigint", "string"].includes(typeof e)
            ? r.replace(/['\\"]+/g, "")
            : r;
        }
        toJSON() {
          return {
            name: this.name,
            code: this.code,
            message: this.message,
            cause: this.cause,
            innerError: this.cause,
          };
        }
      }
      class en extends er {
        constructor(e) {
          super(
            `Multiple errors occurred: [${e
              .map((e) => e.message)
              .join("], [")}]`
          ),
            (this.code = 208),
            (this.errors = e);
        }
      }
      class ei extends er {
        constructor(e, t) {
          super(
            `Invalid value given "${er.convertToString(e, !0)}". Error: ${t}.`
          ),
            (this.name = this.constructor.name);
        }
      }
      class eo extends er {
        constructor() {
          super("Private key must be 32 bytes."), (this.code = 701);
        }
      }
      class ea extends er {
        constructor() {
          super("Invalid Private Key, Not a valid string or uint8Array"),
            (this.code = 702);
        }
      }
      class es extends er {
        constructor(e) {
          super(`"${e}"`), (this.code = 802);
        }
      }
      class el extends er {
        constructor() {
          super("Invalid key derivation function"), (this.code = 703);
        }
      }
      class eu extends er {
        constructor() {
          super("Key derivation failed - possibly wrong password"),
            (this.code = 704);
        }
      }
      class ec extends er {
        constructor() {
          super("Unsupported key store version"), (this.code = 705);
        }
      }
      class ed extends er {
        constructor() {
          super("Password cannot be empty"), (this.code = 706);
        }
      }
      class ef extends er {
        constructor() {
          super("Initialization vector must be 16 bytes"), (this.code = 707);
        }
      }
      class eh extends er {
        constructor() {
          super("c > 1000, pbkdf2 is less secure with less iterations"),
            (this.code = 709);
        }
      }
      class ep extends er {
        constructor(e, t) {
          super(e),
            (this.code = 500),
            t && ((this.errorCode = t.code), (this.errorReason = t.reason));
        }
        toJSON() {
          return Object.assign(Object.assign({}, super.toJSON()), {
            errorCode: this.errorCode,
            errorReason: this.errorReason,
          });
        }
      }
      class em extends ep {
        constructor(e) {
          super("Connection not open", e), (this.code = 503);
        }
      }
      class eg extends ep {
        constructor(e) {
          super(`Maximum number of reconnect attempts reached! (${e})`),
            (this.code = 505);
        }
      }
      class ey extends ep {
        constructor() {
          super(
            "CONNECTION ERROR: Provider started to reconnect before the response got received!"
          ),
            (this.code = 506);
        }
      }
      class eb extends ep {
        constructor(e) {
          super(`Request already sent with following id: ${e}`),
            (this.code = 507);
        }
      }
      class ev extends er {
        constructor(e, t) {
          super(e), (this.code = 300), (this.receipt = t);
        }
      }
      class ew extends er {
        constructor(e, t) {
          super(
            `The resolver at ${e} does not implement requested method: "${t}".`
          ),
            (this.address = e),
            (this.name = t),
            (this.code = 301);
        }
        toJSON() {
          return Object.assign(Object.assign({}, super.toJSON()), {
            address: this.address,
            name: this.name,
          });
        }
      }
      class ex extends ev {
        constructor(e) {
          if (
            (super(e.message || "Error"),
            (this.name = ("name" in e && e.name) || this.constructor.name),
            (this.stack = ("stack" in e && e.stack) || void 0),
            (this.code = e.code),
            "object" == typeof e.data)
          ) {
            let t;
            (t =
              e.data && "originalError" in e.data
                ? e.data.originalError
                : e.data),
              (this.data = t.data),
              (this.cause = new ex(t));
          } else this.data = e.data;
        }
        setDecodedProperties(e, t, r) {
          (this.errorName = e), (this.errorSignature = t), (this.errorArgs = r);
        }
        toJSON() {
          let e = Object.assign(Object.assign({}, super.toJSON()), {
            data: this.data,
          });
          return (
            this.errorName &&
              (e = Object.assign(Object.assign({}, e), {
                errorName: this.errorName,
                errorSignature: this.errorSignature,
                errorArgs: this.errorArgs,
              })),
            e
          );
        }
      }
      class eA extends ev {
        constructor(e) {
          super(
            "Error happened while trying to execute a function inside a smart contract"
          ),
            (this.code = 310),
            (this.cause = new ex(e));
        }
      }
      class eE extends ei {
        constructor(e) {
          var t, r;
          super(
            `data: ${
              null !== (t = e.data) && void 0 !== t ? t : "undefined"
            }, input: ${
              null !== (r = e.input) && void 0 !== r ? r : "undefined"
            }`,
            'You can\'t have "data" and "input" as properties of a contract at the same time, please use either "data" or "input" instead.'
          ),
            (this.code = 311);
        }
      }
      class ek extends er {
        constructor(e) {
          super(`ENS is not supported on network ${e}`), (this.code = 902);
        }
      }
      class eI extends er {
        constructor() {
          super("Network not synced"), (this.code = 903);
        }
      }
      class eS extends er {
        constructor(e) {
          super(`Invalid parameters passed. "${void 0 !== e ? e : ""}"`),
            (this.hint = e),
            (this.code = 207);
        }
        toJSON() {
          return Object.assign(Object.assign({}, super.toJSON()), {
            hint: this.hint,
          });
        }
      }
      class eP extends er {
        constructor() {
          super(...arguments), (this.code = 201);
        }
      }
      class eT extends er {
        constructor() {
          super("The method you're trying to call is not implemented."),
            (this.code = 202);
        }
      }
      class eC extends er {
        constructor() {
          super(...arguments), (this.code = 203);
        }
      }
      class eO extends er {
        constructor() {
          super(...arguments), (this.code = 204);
        }
      }
      class e_ extends er {
        constructor(e, t) {
          super(e), (this.code = 205), (this.props = null != t ? t : {});
        }
      }
      class eB extends er {
        constructor(e) {
          super(
            `A plugin with the namespace: ${e} has already been registered.`
          ),
            (this.code = 206);
        }
      }
      class eR extends er {
        constructor() {
          super(...arguments), (this.code = 600);
        }
      }
      class eN extends er {
        constructor(e) {
          super(`Client URL "${e}" is invalid.`), (this.code = 602);
        }
      }
      class eM extends er {
        constructor() {
          super(...arguments), (this.code = 603);
        }
      }
      class ej extends er {
        constructor() {
          super(...arguments), (this.code = 604);
        }
      }
      class eF extends ei {
        constructor() {
          super(...arguments), (this.code = 801);
        }
      }
      class eL extends er {
        constructor(e, t) {
          super(e), (this.receipt = t), (this.code = 400);
        }
        toJSON() {
          return Object.assign(Object.assign({}, super.toJSON()), {
            receipt: this.receipt,
          });
        }
      }
      class eD extends er {
        constructor(e, t, r, n) {
          super(
            `Transaction has been reverted by the EVM${
              void 0 === r
                ? ""
                : `:
 ${er.convertToString(r)}`
            }`
          ),
            (this.reason = e),
            (this.signature = t),
            (this.receipt = r),
            (this.data = n),
            (this.code = 402);
        }
        toJSON() {
          return Object.assign(Object.assign({}, super.toJSON()), {
            reason: this.reason,
            signature: this.signature,
            receipt: this.receipt,
            data: this.data,
          });
        }
      }
      class eU extends eD {
        constructor(e, t, r, n, i, o, a) {
          super(e),
            (this.reason = e),
            (this.customErrorName = t),
            (this.customErrorDecodedSignature = r),
            (this.customErrorArguments = n),
            (this.signature = i),
            (this.receipt = o),
            (this.data = a),
            (this.code = 438);
        }
        toJSON() {
          return Object.assign(Object.assign({}, super.toJSON()), {
            reason: this.reason,
            customErrorName: this.customErrorName,
            customErrorDecodedSignature: this.customErrorDecodedSignature,
            customErrorArguments: this.customErrorArguments,
            signature: this.signature,
            receipt: this.receipt,
            data: this.data,
          });
        }
      }
      class eH extends eL {
        constructor(e) {
          super(
            `Transaction has been reverted by the EVM${
              void 0 === e
                ? ""
                : `:
 ${er.convertToString(e)}`
            }`,
            e
          ),
            (this.code = 405);
        }
      }
      class e$ extends eL {
        constructor() {
          super("Raw transaction undefined"), (this.code = 407);
        }
      }
      class ez extends eL {
        constructor() {
          super("Transaction not found"), (this.code = 430);
        }
      }
      class eG extends ei {
        constructor(e) {
          super(e, "invalid transaction with invalid sender"),
            (this.code = 408);
        }
      }
      class eq extends ei {
        constructor(e) {
          super(e, "invalid transaction with invalid receiver"),
            (this.code = 437);
        }
      }
      class eW extends ei {
        constructor() {
          super(
            "MissingCustomChainError",
            "If tx.common is provided it must have tx.common.customChain"
          ),
            (this.code = 410);
        }
      }
      class eV extends ei {
        constructor() {
          super(
            "MissingCustomChainIdError",
            "If tx.common is provided it must have tx.common.customChain and tx.common.customChain.chainId"
          ),
            (this.code = 411);
        }
      }
      class eZ extends ei {
        constructor(e) {
          super(
            JSON.stringify(e),
            "Chain Id doesnt match in tx.chainId tx.common.customChain.chainId"
          ),
            (this.code = 412);
        }
      }
      class eK extends ei {
        constructor(e) {
          super(
            JSON.stringify(e),
            "Chain doesnt match in tx.chain tx.common.basechain"
          ),
            (this.code = 435);
        }
      }
      class eQ extends ei {
        constructor(e) {
          super(
            JSON.stringify(e),
            "hardfork doesnt match in tx.hardfork tx.common.hardfork"
          ),
            (this.code = 436);
        }
      }
      class eJ extends ei {
        constructor() {
          super(
            "CommonOrChainAndHardforkError",
            "Please provide the common object or the chain and hardfork property but not all together."
          ),
            (this.code = 413);
        }
      }
      class eY extends ei {
        constructor(e) {
          var t, r;
          super(
            "MissingChainOrHardforkError",
            `When specifying chain and hardfork, both values must be defined. Received "chain": ${
              null !== (t = e.chain) && void 0 !== t ? t : "undefined"
            }, "hardfork": ${
              null !== (r = e.hardfork) && void 0 !== r ? r : "undefined"
            }`
          ),
            (this.code = 414);
        }
      }
      class eX extends er {
        constructor() {
          super(
            'Missing properties in transaction, either define "gas" and "gasPrice" for type 0 transactions or "gas", "maxPriorityFeePerGas" and "maxFeePerGas" for type 2 transactions'
          ),
            (this.code = 440);
        }
      }
      class e0 extends ei {
        constructor(e) {
          var t, r, n, i;
          super(
            `gas: ${
              null !== (t = e.gas) && void 0 !== t ? t : "undefined"
            }, gasPrice: ${
              null !== (r = e.gasPrice) && void 0 !== r ? r : "undefined"
            }, maxPriorityFeePerGas: ${
              null !== (n = e.maxPriorityFeePerGas) && void 0 !== n
                ? n
                : "undefined"
            }, maxFeePerGas: ${
              null !== (i = e.maxFeePerGas) && void 0 !== i ? i : "undefined"
            }`,
            '"gas" is missing'
          ),
            (this.code = 415),
            (this.cause = new eX());
        }
      }
      class e1 extends er {
        constructor() {
          super(
            'Missing properties in transaction, either define "gas" and "gasPrice" for type 0 transactions or "gas", "maxPriorityFeePerGas" and "maxFeePerGas" for type 2 transactions, not both'
          ),
            (this.code = 441);
        }
      }
      class e2 extends ei {
        constructor(e) {
          var t, r, n, i;
          super(
            `gas: ${
              null !== (t = e.gas) && void 0 !== t ? t : "undefined"
            }, gasPrice: ${
              null !== (r = e.gasPrice) && void 0 !== r ? r : "undefined"
            }, maxPriorityFeePerGas: ${
              null !== (n = e.maxPriorityFeePerGas) && void 0 !== n
                ? n
                : "undefined"
            }, maxFeePerGas: ${
              null !== (i = e.maxFeePerGas) && void 0 !== i ? i : "undefined"
            }`,
            "transaction must specify legacy or fee market gas properties, not both"
          ),
            (this.code = 434),
            (this.cause = new e1());
        }
      }
      class e6 extends ei {
        constructor(e) {
          var t, r;
          super(
            `gas: ${
              null !== (t = e.gas) && void 0 !== t ? t : "undefined"
            }, gasPrice: ${
              null !== (r = e.gasPrice) && void 0 !== r ? r : "undefined"
            }`,
            "Gas or gasPrice is lower than 0"
          ),
            (this.code = 416);
        }
      }
      class e5 extends ei {
        constructor(e) {
          var t, r;
          super(
            `maxPriorityFeePerGas: ${
              null !== (t = e.maxPriorityFeePerGas) && void 0 !== t
                ? t
                : "undefined"
            }, maxFeePerGas: ${
              null !== (r = e.maxFeePerGas) && void 0 !== r ? r : "undefined"
            }`,
            "maxPriorityFeePerGas or maxFeePerGas is lower than 0"
          ),
            (this.code = 417);
        }
      }
      class e3 extends ei {
        constructor(e) {
          super(e, "eip-1559 transactions don't support gasPrice"),
            (this.code = 418);
        }
      }
      class e8 extends ei {
        constructor(e) {
          var t, r;
          super(
            `maxPriorityFeePerGas: ${
              null !== (t = e.maxPriorityFeePerGas) && void 0 !== t
                ? t
                : "undefined"
            }, maxFeePerGas: ${
              null !== (r = e.maxFeePerGas) && void 0 !== r ? r : "undefined"
            }`,
            "pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas"
          ),
            (this.code = 419);
        }
      }
      class e4 extends ei {
        constructor(e) {
          super(e, "invalid transaction object"), (this.code = 420);
        }
      }
      class e9 extends ei {
        constructor(e) {
          var t, r;
          super(
            `nonce: ${
              null !== (t = e.nonce) && void 0 !== t ? t : "undefined"
            }, chainId: ${
              null !== (r = e.chainId) && void 0 !== r ? r : "undefined"
            }`,
            "Nonce or chainId is lower than 0"
          ),
            (this.code = 421);
        }
      }
      class e7 extends ei {
        constructor() {
          super(
            "UnableToPopulateNonceError",
            "unable to populate nonce, no from address available"
          ),
            (this.code = 422);
        }
      }
      class te extends ei {
        constructor() {
          super("Eip1559NotSupportedError", "Network doesn't support eip-1559"),
            (this.code = 423);
        }
      }
      class tt extends ei {
        constructor(e) {
          super(e, "unsupported transaction type"), (this.code = 424);
        }
      }
      class tr extends ei {
        constructor(e) {
          var t, r;
          super(
            `data: ${
              null !== (t = e.data) && void 0 !== t ? t : "undefined"
            }, input: ${
              null !== (r = e.input) && void 0 !== r ? r : "undefined"
            }`,
            'You can\'t have "data" and "input" as properties of transactions at the same time, please use either "data" or "input" instead.'
          ),
            (this.code = 425);
        }
      }
      class tn extends er {
        constructor(e) {
          super(`The connected Ethereum Node did not respond within ${
            e.numberOfSeconds
          } seconds, please make sure your transaction was properly sent and you are connected to a healthy Node. Be aware that transaction might still be pending or mined!
	Transaction Hash: ${
    e.transactionHash ? e.transactionHash.toString() : "not available"
  }`),
            (this.code = 431);
        }
      }
      function ti(e) {
        return `Please make sure your transaction was properly sent and there are no previous pending transaction for the same account. However, be aware that it might still be mined!
	Transaction Hash: ${e ? e.toString() : "not available"}`;
      }
      class to extends er {
        constructor(e) {
          super(
            `Transaction was not mined within ${
              e.numberOfSeconds
            } seconds. ${ti(e.transactionHash)}`
          ),
            (this.code = 426);
        }
      }
      class ta extends er {
        constructor(e) {
          super(
            `Transaction started at ${
              e.starterBlockNumber
            } but was not mined within ${e.numberOfBlocks} blocks. ${ti(
              e.transactionHash
            )}`
          ),
            (this.code = 432);
        }
      }
      class ts extends ei {
        constructor(e) {
          var t, r;
          super(
            `receipt: ${JSON.stringify(e.receipt)}, blockHash: ${
              null === (t = e.blockHash) || void 0 === t ? void 0 : t.toString()
            }, transactionHash: ${
              null === (r = e.transactionHash) || void 0 === r
                ? void 0
                : r.toString()
            }`,
            "Receipt missing or blockHash null"
          ),
            (this.code = 427);
        }
      }
      class tl extends ei {
        constructor(e) {
          super(
            `receipt: ${JSON.stringify(e.receipt)}`,
            "Receipt missing block number"
          ),
            (this.code = 428);
        }
      }
      class tu extends er {
        constructor(e) {
          super(`Invalid signature. "${e}"`), (this.code = 433);
        }
      }
      class tc extends ei {
        constructor() {
          super(
            "LocalWalletNotAvailableError",
            "Attempted to index account in local wallet, but no wallet is available"
          ),
            (this.code = 429);
        }
      }
      class td extends er {
        constructor(e, t) {
          let r = [];
          e.forEach((e) => r.push(e.keyword)),
            super(
              `The following properties are invalid for the transaction type ${t}: ${r.join(
                ", "
              )}`
            ),
            (this.code = 439);
        }
      }
      class tf extends ei {
        constructor(e) {
          super(e, "can not parse as byte data"), (this.code = 1002);
        }
      }
      class th extends ei {
        constructor(e) {
          super(e, "can not parse as number data"), (this.code = 1003);
        }
      }
      class tp extends ei {
        constructor(e) {
          super(e, "invalid ethereum address"), (this.code = 1005);
        }
      }
      class tm extends ei {
        constructor(e) {
          super(e, "not a valid string"), (this.code = 1001);
        }
      }
      class tg extends ei {
        constructor(e) {
          super(e, "invalid unit"), (this.code = 1004);
        }
      }
      class ty extends ei {
        constructor(e) {
          super(e, "not a valid unit. Must be a positive integer"),
            (this.code = 1015);
        }
      }
      class tb extends ei {
        constructor(e) {
          super(e, "can not be converted to hex"), (this.code = 1006);
        }
      }
      class tv extends ei {
        constructor(e) {
          super(e, "value greater than the nibble width"), (this.code = 1014);
        }
      }
      class tw extends ei {
        constructor(e) {
          super(e, "not a valid boolean."), (this.code = 1008);
        }
      }
      class tx extends ei {
        constructor(e) {
          super(e, "not a valid unsigned integer."), (this.code = 1009);
        }
      }
      class tA extends ei {
        constructor(e) {
          super(e, "invalid size given."), (this.code = 1010);
        }
      }
      class tE extends ei {
        constructor(e) {
          super(e, "value is larger than size."), (this.code = 1011);
        }
      }
      class tk extends ei {
        constructor(e) {
          super(e, "invalid string given"), (this.code = 1012);
        }
      }
      let tI = (e) =>
          !Array.isArray(e) &&
          "2.0" === e.jsonrpc &&
          !!e &&
          (void 0 === e.result || null === e.result) &&
          "error" in e &&
          ("number" == typeof e.id || "string" == typeof e.id),
        tS = (e) => (tI(e) ? e.error.message : "");
      class tP extends er {
        constructor(e, t, r, n) {
          var i;
          let o;
          super(
            null != t
              ? t
              : `Returned error: ${
                  Array.isArray(e) ? e.map((e) => tS(e)).join(",") : tS(e)
                }`
          ),
            (this.code = 100),
            t ||
              (this.data = Array.isArray(e)
                ? e.map((e) => {
                    var t;
                    return null === (t = e.error) || void 0 === t
                      ? void 0
                      : t.data;
                  })
                : null === (i = null == e ? void 0 : e.error) || void 0 === i
                ? void 0
                : i.data),
            (this.statusCode = n),
            (this.request = r),
            "error" in e
              ? (o = e.error)
              : e instanceof Array &&
                (o = e.filter((e) => e.error).map((e) => e.error)),
            Array.isArray(o) && o.length > 0
              ? (this.cause = new en(o))
              : (this.cause = o);
        }
        toJSON() {
          return Object.assign(Object.assign({}, super.toJSON()), {
            data: this.data,
            request: this.request,
            statusCode: this.statusCode,
          });
        }
      }
      class tT extends tP {
        constructor(e, t) {
          let r;
          super(e, void 0, t),
            (this.code = 101),
            "error" in e
              ? (r = e.error)
              : e instanceof Array && (r = e.map((e) => e.error)),
            Array.isArray(r) ? (this.cause = new en(r)) : (this.cause = r);
        }
      }
      class tC extends er {
        constructor(e, t) {
          super(
            `Web3Config hardfork doesnt match in defaultHardfork ${e} and common.hardfork ${t}`
          ),
            (this.code = 1101);
        }
      }
      class tO extends er {
        constructor(e, t) {
          super(
            `Web3Config chain doesnt match in defaultHardfork ${e} and common.hardfork ${t}`
          ),
            (this.code = 1101);
        }
      }
      let t_ = "An Rpc error has occured with a code of *code*",
        tB = {
          [-32700]: { message: "Parse error", description: "Invalid JSON" },
          [-32600]: {
            message: "Invalid request",
            description: "JSON is not a valid request object	",
          },
          [-32601]: {
            message: "Method not found",
            description: "Method does not exist	",
          },
          [-32602]: {
            message: "Invalid params",
            description: "Invalid method parameters",
          },
          [-32603]: {
            message: "Internal error",
            description: "Internal JSON-RPC error",
          },
          [-32e3]: {
            message: "Invalid input",
            description: "Missing or invalid parameters",
          },
          [-32001]: {
            message: "Resource not found",
            description: "Requested resource not found",
          },
          [-32002]: {
            message: "Resource unavailable",
            description: "Requested resource not available",
          },
          [-32003]: {
            message: "Transaction rejected",
            description: "Transaction creation failed",
          },
          [-32004]: {
            message: "Method not supported",
            description: "Method is not implemented",
          },
          [-32005]: {
            message: "Limit exceeded",
            description: "Request exceeds defined limit",
          },
          [-32006]: {
            message: "JSON-RPC version not supported",
            description: "Version of JSON-RPC protocol is not supported",
          },
          4001: {
            name: "User Rejected Request",
            message: "The user rejected the request.",
          },
          4100: {
            name: "Unauthorized",
            message:
              "The requested method and/or account has not been authorized by the user.",
          },
          4200: {
            name: "Unsupported Method",
            message: "The Provider does not support the requested method.",
          },
          4900: {
            name: "Disconnected",
            message: "The Provider is disconnected from all chains.",
          },
          4901: {
            name: "Chain Disconnected",
            message: "The Provider is not connected to the requested chain.",
          },
          "0-999": { name: "", message: "Not used." },
          1e3: {
            name: "Normal Closure",
            message:
              "The connection successfully completed the purpose for which it was created.",
          },
          1001: {
            name: "Going Away",
            message:
              "The endpoint is going away, either because of a server failure or because the browser is navigating away from the page that opened the connection.",
          },
          1002: {
            name: "Protocol error",
            message:
              "The endpoint is terminating the connection due to a protocol error.",
          },
          1003: {
            name: "Unsupported Data",
            message:
              "The connection is being terminated because the endpoint received data of a type it cannot accept. (For example, a text-only endpoint received binary data.)",
          },
          1004: {
            name: "Reserved",
            message: "Reserved. A meaning might be defined in the future.",
          },
          1005: {
            name: "No Status Rcvd",
            message:
              "Reserved. Indicates that no status code was provided even though one was expected.",
          },
          1006: {
            name: "Abnormal Closure",
            message:
              "Reserved. Indicates that a connection was closed abnormally (that is, with no close frame being sent) when a status code is expected.",
          },
          1007: {
            name: "Invalid frame payload data",
            message:
              "The endpoint is terminating the connection because a message was received that contained inconsistent data (e.g., non-UTF-8 data within a text message).",
          },
          1008: {
            name: "Policy Violation",
            message:
              "The endpoint is terminating the connection because it received a message that violates its policy. This is a generic status code, used when codes 1003 and 1009 are not suitable.",
          },
          1009: {
            name: "Message Too Big",
            message:
              "The endpoint is terminating the connection because a data frame was received that is too large.",
          },
          1010: {
            name: "Mandatory Ext.",
            message:
              "The client is terminating the connection because it expected the server to negotiate one or more extension, but the server didn't.",
          },
          1011: {
            name: "Internal Error",
            message:
              "The server is terminating the connection because it encountered an unexpected condition that prevented it from fulfilling the request.",
          },
          1012: {
            name: "Service Restart",
            message:
              "The server is terminating the connection because it is restarting.",
          },
          1013: {
            name: "Try Again Later",
            message:
              "The server is terminating the connection due to a temporary condition, e.g. it is overloaded and is casting off some of its clients.",
          },
          1014: {
            name: "Bad Gateway",
            message:
              "The server was acting as a gateway or proxy and received an invalid response from the upstream server. This is similar to 502 HTTP Status Code.",
          },
          1015: {
            name: "TLS handshake",
            message:
              "Reserved. Indicates that the connection was closed due to a failure to perform a TLS handshake (e.g., the server certificate can't be verified).",
          },
          "1016-2999": {
            name: "",
            message:
              "For definition by future revisions of the WebSocket Protocol specification, and for definition by extension specifications.",
          },
          "3000-3999": {
            name: "",
            message:
              "For use by libraries, frameworks, and applications. These status codes are registered directly with IANA. The interpretation of these codes is undefined by the WebSocket protocol.",
          },
          "4000-4999": {
            name: "",
            message:
              "For private use, and thus can't be registered. Such codes can be used by prior agreements between WebSocket applications. The interpretation of these codes is undefined by the WebSocket protocol.",
          },
        };
      class tR extends er {
        constructor(e, t) {
          super(null != t ? t : t_.replace("*code*", e.error.code.toString())),
            (this.code = e.error.code),
            (this.id = e.id),
            (this.jsonrpc = e.jsonrpc),
            (this.jsonRpcError = e.error);
        }
        toJSON() {
          return Object.assign(Object.assign({}, super.toJSON()), {
            error: this.jsonRpcError,
            id: this.id,
            jsonRpc: this.jsonrpc,
          });
        }
      }
      class tN extends er {
        constructor(e, t) {
          var r, n, i, o;
          if (e) {
            if (null === (r = tB[e]) || void 0 === r ? void 0 : r.message)
              super(tB[e].message);
            else {
              let t = Object.keys(tB).find(
                (t) =>
                  "string" == typeof t &&
                  e >= parseInt(t.split("-")[0], 10) &&
                  e <= parseInt(t.split("-")[1], 10)
              );
              super(
                null !==
                  (i =
                    null === (n = tB[null != t ? t : ""]) || void 0 === n
                      ? void 0
                      : n.message) && void 0 !== i
                  ? i
                  : t_.replace(
                      "*code*",
                      null !== (o = null == e ? void 0 : e.toString()) &&
                        void 0 !== o
                        ? o
                        : '""'
                    )
              );
            }
          } else super();
          (this.code = e), (this.data = t);
        }
      }
      class tM extends tR {
        constructor(e) {
          super(e, tB[-32700].message), (this.code = -32700);
        }
      }
      class tj extends tR {
        constructor(e) {
          super(e, tB[-32600].message), (this.code = -32600);
        }
      }
      class tF extends tR {
        constructor(e) {
          super(e, tB[-32601].message), (this.code = -32601);
        }
      }
      class tL extends tR {
        constructor(e) {
          super(e, tB[-32602].message), (this.code = -32602);
        }
      }
      class tD extends tR {
        constructor(e) {
          super(e, tB[-32603].message), (this.code = -32603);
        }
      }
      class tU extends tR {
        constructor(e) {
          super(e, tB[-32e3].message), (this.code = -32e3);
        }
      }
      class tH extends tR {
        constructor(e) {
          super(e, tB[-32004].message), (this.code = -32004);
        }
      }
      class t$ extends tR {
        constructor(e) {
          super(e, tB[-32002].message), (this.code = -32002);
        }
      }
      class tz extends tR {
        constructor(e) {
          super(e, tB[-32001].message), (this.code = -32001);
        }
      }
      class tG extends tR {
        constructor(e) {
          super(e, tB[-32006].message), (this.code = -32006);
        }
      }
      class tq extends tR {
        constructor(e) {
          super(e, tB[-32003].message), (this.code = -32003);
        }
      }
      class tW extends tR {
        constructor(e) {
          super(e, tB[-32005].message), (this.code = -32005);
        }
      }
      let tV = new Map();
      tV.set(-32700, { error: tM }),
        tV.set(-32600, { error: tj }),
        tV.set(-32601, { error: tF }),
        tV.set(-32602, { error: tL }),
        tV.set(-32603, { error: tD }),
        tV.set(-32e3, { error: tU }),
        tV.set(-32004, { error: tH }),
        tV.set(-32002, { error: t$ }),
        tV.set(-32003, { error: tq }),
        tV.set(-32001, { error: tz }),
        tV.set(-32006, { error: tG }),
        tV.set(-32005, { error: tW });
      class tZ extends er {
        constructor(e) {
          super(`Format for the type ${e} is unsupported`),
            (this.type = e),
            (this.code = 1200);
        }
        toJSON() {
          return Object.assign(Object.assign({}, super.toJSON()), {
            type: this.type,
          });
        }
      }
      var tK = r(40280),
        tQ = r(10896);
      !(function (e) {
        (e.assertEqual = (e) => {}),
          (e.assertIs = function (e) {}),
          (e.assertNever = function (e) {
            throw Error();
          }),
          (e.arrayToEnum = (e) => {
            let t = {};
            for (let r of e) t[r] = r;
            return t;
          }),
          (e.getValidEnumValues = (t) => {
            let r = e.objectKeys(t).filter((e) => "number" != typeof t[t[e]]),
              n = {};
            for (let e of r) n[e] = t[e];
            return e.objectValues(n);
          }),
          (e.objectValues = (t) =>
            e.objectKeys(t).map(function (e) {
              return t[e];
            })),
          (e.objectKeys =
            "function" == typeof Object.keys
              ? (e) => Object.keys(e)
              : (e) => {
                  let t = [];
                  for (let r in e)
                    Object.prototype.hasOwnProperty.call(e, r) && t.push(r);
                  return t;
                }),
          (e.find = (e, t) => {
            for (let r of e) if (t(r)) return r;
          }),
          (e.isInteger =
            "function" == typeof Number.isInteger
              ? (e) => Number.isInteger(e)
              : (e) =>
                  "number" == typeof e &&
                  Number.isFinite(e) &&
                  Math.floor(e) === e),
          (e.joinValues = function (e, t = " | ") {
            return e.map((e) => ("string" == typeof e ? `'${e}'` : e)).join(t);
          }),
          (e.jsonStringifyReplacer = (e, t) =>
            "bigint" == typeof t ? t.toString() : t);
      })(I || (I = {})),
        ((S || (S = {})).mergeShapes = (e, t) => ({ ...e, ...t }));
      let tJ = I.arrayToEnum([
          "string",
          "nan",
          "number",
          "integer",
          "float",
          "boolean",
          "date",
          "bigint",
          "symbol",
          "function",
          "undefined",
          "null",
          "array",
          "object",
          "unknown",
          "promise",
          "void",
          "never",
          "map",
          "set",
        ]),
        tY = (e) => {
          switch (typeof e) {
            case "undefined":
              return tJ.undefined;
            case "string":
              return tJ.string;
            case "number":
              return Number.isNaN(e) ? tJ.nan : tJ.number;
            case "boolean":
              return tJ.boolean;
            case "function":
              return tJ.function;
            case "bigint":
              return tJ.bigint;
            case "symbol":
              return tJ.symbol;
            case "object":
              if (Array.isArray(e)) return tJ.array;
              if (null === e) return tJ.null;
              if (
                e.then &&
                "function" == typeof e.then &&
                e.catch &&
                "function" == typeof e.catch
              )
                return tJ.promise;
              if ("undefined" != typeof Map && e instanceof Map) return tJ.map;
              if ("undefined" != typeof Set && e instanceof Set) return tJ.set;
              if ("undefined" != typeof Date && e instanceof Date)
                return tJ.date;
              return tJ.object;
            default:
              return tJ.unknown;
          }
        },
        tX = I.arrayToEnum([
          "invalid_type",
          "invalid_literal",
          "custom",
          "invalid_union",
          "invalid_union_discriminator",
          "invalid_enum_value",
          "unrecognized_keys",
          "invalid_arguments",
          "invalid_return_type",
          "invalid_date",
          "invalid_string",
          "too_small",
          "too_big",
          "invalid_intersection_types",
          "not_multiple_of",
          "not_finite",
        ]),
        t0 = (e) => JSON.stringify(e, null, 2).replace(/"([^"]+)":/g, "$1:");
      class t1 extends Error {
        get errors() {
          return this.issues;
        }
        constructor(e) {
          super(),
            (this.issues = []),
            (this.addIssue = (e) => {
              this.issues = [...this.issues, e];
            }),
            (this.addIssues = (e = []) => {
              this.issues = [...this.issues, ...e];
            });
          let t = new.target.prototype;
          Object.setPrototypeOf
            ? Object.setPrototypeOf(this, t)
            : (this.__proto__ = t),
            (this.name = "ZodError"),
            (this.issues = e);
        }
        format(e) {
          let t =
              e ||
              function (e) {
                return e.message;
              },
            r = { _errors: [] },
            n = (e) => {
              for (let i of e.issues)
                if ("invalid_union" === i.code) i.unionErrors.map(n);
                else if ("invalid_return_type" === i.code) n(i.returnTypeError);
                else if ("invalid_arguments" === i.code) n(i.argumentsError);
                else if (0 === i.path.length) r._errors.push(t(i));
                else {
                  let e = r,
                    n = 0;
                  for (; n < i.path.length; ) {
                    let r = i.path[n];
                    n === i.path.length - 1
                      ? ((e[r] = e[r] || { _errors: [] }),
                        e[r]._errors.push(t(i)))
                      : (e[r] = e[r] || { _errors: [] }),
                      (e = e[r]),
                      n++;
                  }
                }
            };
          return n(this), r;
        }
        static assert(e) {
          if (!(e instanceof t1)) throw Error(`Not a ZodError: ${e}`);
        }
        toString() {
          return this.message;
        }
        get message() {
          return JSON.stringify(this.issues, I.jsonStringifyReplacer, 2);
        }
        get isEmpty() {
          return 0 === this.issues.length;
        }
        flatten(e = (e) => e.message) {
          let t = {},
            r = [];
          for (let n of this.issues)
            if (n.path.length > 0) {
              let r = n.path[0];
              (t[r] = t[r] || []), t[r].push(e(n));
            } else r.push(e(n));
          return { formErrors: r, fieldErrors: t };
        }
        get formErrors() {
          return this.flatten();
        }
      }
      t1.create = (e) => new t1(e);
      let t2 = (e, t) => {
          let r;
          switch (e.code) {
            case tX.invalid_type:
              r =
                e.received === tJ.undefined
                  ? "Required"
                  : `Expected ${e.expected}, received ${e.received}`;
              break;
            case tX.invalid_literal:
              r = `Invalid literal value, expected ${JSON.stringify(
                e.expected,
                I.jsonStringifyReplacer
              )}`;
              break;
            case tX.unrecognized_keys:
              r = `Unrecognized key(s) in object: ${I.joinValues(
                e.keys,
                ", "
              )}`;
              break;
            case tX.invalid_union:
              r = "Invalid input";
              break;
            case tX.invalid_union_discriminator:
              r = `Invalid discriminator value. Expected ${I.joinValues(
                e.options
              )}`;
              break;
            case tX.invalid_enum_value:
              r = `Invalid enum value. Expected ${I.joinValues(
                e.options
              )}, received '${e.received}'`;
              break;
            case tX.invalid_arguments:
              r = "Invalid function arguments";
              break;
            case tX.invalid_return_type:
              r = "Invalid function return type";
              break;
            case tX.invalid_date:
              r = "Invalid date";
              break;
            case tX.invalid_string:
              "object" == typeof e.validation
                ? "includes" in e.validation
                  ? ((r = `Invalid input: must include "${e.validation.includes}"`),
                    "number" == typeof e.validation.position &&
                      (r = `${r} at one or more positions greater than or equal to ${e.validation.position}`))
                  : "startsWith" in e.validation
                  ? (r = `Invalid input: must start with "${e.validation.startsWith}"`)
                  : "endsWith" in e.validation
                  ? (r = `Invalid input: must end with "${e.validation.endsWith}"`)
                  : I.assertNever(e.validation)
                : (r =
                    "regex" !== e.validation
                      ? `Invalid ${e.validation}`
                      : "Invalid");
              break;
            case tX.too_small:
              r =
                "array" === e.type
                  ? `Array must contain ${
                      e.exact
                        ? "exactly"
                        : e.inclusive
                        ? "at least"
                        : "more than"
                    } ${e.minimum} element(s)`
                  : "string" === e.type
                  ? `String must contain ${
                      e.exact ? "exactly" : e.inclusive ? "at least" : "over"
                    } ${e.minimum} character(s)`
                  : "number" === e.type
                  ? `Number must be ${
                      e.exact
                        ? "exactly equal to "
                        : e.inclusive
                        ? "greater than or equal to "
                        : "greater than "
                    }${e.minimum}`
                  : "bigint" === e.type
                  ? `Number must be ${
                      e.exact
                        ? "exactly equal to "
                        : e.inclusive
                        ? "greater than or equal to "
                        : "greater than "
                    }${e.minimum}`
                  : "date" === e.type
                  ? `Date must be ${
                      e.exact
                        ? "exactly equal to "
                        : e.inclusive
                        ? "greater than or equal to "
                        : "greater than "
                    }${new Date(Number(e.minimum))}`
                  : "Invalid input";
              break;
            case tX.too_big:
              r =
                "array" === e.type
                  ? `Array must contain ${
                      e.exact
                        ? "exactly"
                        : e.inclusive
                        ? "at most"
                        : "less than"
                    } ${e.maximum} element(s)`
                  : "string" === e.type
                  ? `String must contain ${
                      e.exact ? "exactly" : e.inclusive ? "at most" : "under"
                    } ${e.maximum} character(s)`
                  : "number" === e.type
                  ? `Number must be ${
                      e.exact
                        ? "exactly"
                        : e.inclusive
                        ? "less than or equal to"
                        : "less than"
                    } ${e.maximum}`
                  : "bigint" === e.type
                  ? `BigInt must be ${
                      e.exact
                        ? "exactly"
                        : e.inclusive
                        ? "less than or equal to"
                        : "less than"
                    } ${e.maximum}`
                  : "date" === e.type
                  ? `Date must be ${
                      e.exact
                        ? "exactly"
                        : e.inclusive
                        ? "smaller than or equal to"
                        : "smaller than"
                    } ${new Date(Number(e.maximum))}`
                  : "Invalid input";
              break;
            case tX.custom:
              r = "Invalid input";
              break;
            case tX.invalid_intersection_types:
              r = "Intersection results could not be merged";
              break;
            case tX.not_multiple_of:
              r = `Number must be a multiple of ${e.multipleOf}`;
              break;
            case tX.not_finite:
              r = "Number must be finite";
              break;
            default:
              (r = t.defaultError), I.assertNever(e);
          }
          return { message: r };
        },
        t6 = t2;
      function t5(e) {
        t6 = e;
      }
      function t3() {
        return t6;
      }
      !(function (e) {
        (e.errToObj = (e) => ("string" == typeof e ? { message: e } : e || {})),
          (e.toString = (e) => ("string" == typeof e ? e : e?.message));
      })(P || (P = {}));
      let t8 = (e) => {
          let { data: t, path: r, errorMaps: n, issueData: i } = e,
            o = [...r, ...(i.path || [])],
            a = { ...i, path: o };
          if (void 0 !== i.message)
            return { ...i, path: o, message: i.message };
          let s = "";
          for (let e of n
            .filter((e) => !!e)
            .slice()
            .reverse())
            s = e(a, { data: t, defaultError: s }).message;
          return { ...i, path: o, message: s };
        },
        t4 = [];
      function t9(e, t) {
        let r = t6,
          n = t8({
            issueData: t,
            data: e.data,
            path: e.path,
            errorMaps: [
              e.common.contextualErrorMap,
              e.schemaErrorMap,
              r,
              r === t2 ? void 0 : t2,
            ].filter((e) => !!e),
          });
        e.common.issues.push(n);
      }
      class t7 {
        constructor() {
          this.value = "valid";
        }
        dirty() {
          "valid" === this.value && (this.value = "dirty");
        }
        abort() {
          "aborted" !== this.value && (this.value = "aborted");
        }
        static mergeArray(e, t) {
          let r = [];
          for (let n of t) {
            if ("aborted" === n.status) return re;
            "dirty" === n.status && e.dirty(), r.push(n.value);
          }
          return { status: e.value, value: r };
        }
        static async mergeObjectAsync(e, t) {
          let r = [];
          for (let e of t) {
            let t = await e.key,
              n = await e.value;
            r.push({ key: t, value: n });
          }
          return t7.mergeObjectSync(e, r);
        }
        static mergeObjectSync(e, t) {
          let r = {};
          for (let n of t) {
            let { key: t, value: i } = n;
            if ("aborted" === t.status || "aborted" === i.status) return re;
            "dirty" === t.status && e.dirty(),
              "dirty" === i.status && e.dirty(),
              "__proto__" !== t.value &&
                (void 0 !== i.value || n.alwaysSet) &&
                (r[t.value] = i.value);
          }
          return { status: e.value, value: r };
        }
      }
      let re = Object.freeze({ status: "aborted" }),
        rt = (e) => ({ status: "dirty", value: e }),
        rr = (e) => ({ status: "valid", value: e }),
        rn = (e) => "aborted" === e.status,
        ri = (e) => "dirty" === e.status,
        ro = (e) => "valid" === e.status,
        ra = (e) => "undefined" != typeof Promise && e instanceof Promise;
      class rs {
        constructor(e, t, r, n) {
          (this._cachedPath = []),
            (this.parent = e),
            (this.data = t),
            (this._path = r),
            (this._key = n);
        }
        get path() {
          return (
            this._cachedPath.length ||
              (Array.isArray(this._key)
                ? this._cachedPath.push(...this._path, ...this._key)
                : this._cachedPath.push(...this._path, this._key)),
            this._cachedPath
          );
        }
      }
      let rl = (e, t) => {
        if (ro(t)) return { success: !0, data: t.value };
        if (!e.common.issues.length)
          throw Error("Validation failed but no issues detected.");
        return {
          success: !1,
          get error() {
            if (this._error) return this._error;
            let t = new t1(e.common.issues);
            return (this._error = t), this._error;
          },
        };
      };
      function ru(e) {
        if (!e) return {};
        let {
          errorMap: t,
          invalid_type_error: r,
          required_error: n,
          description: i,
        } = e;
        if (t && (r || n))
          throw Error(
            'Can\'t use "invalid_type_error" or "required_error" in conjunction with custom error map.'
          );
        return t
          ? { errorMap: t, description: i }
          : {
              errorMap: (t, i) => {
                let { message: o } = e;
                return "invalid_enum_value" === t.code
                  ? { message: o ?? i.defaultError }
                  : void 0 === i.data
                  ? { message: o ?? n ?? i.defaultError }
                  : "invalid_type" !== t.code
                  ? { message: i.defaultError }
                  : { message: o ?? r ?? i.defaultError };
              },
              description: i,
            };
      }
      class rc {
        get description() {
          return this._def.description;
        }
        _getType(e) {
          return tY(e.data);
        }
        _getOrReturnCtx(e, t) {
          return (
            t || {
              common: e.parent.common,
              data: e.data,
              parsedType: tY(e.data),
              schemaErrorMap: this._def.errorMap,
              path: e.path,
              parent: e.parent,
            }
          );
        }
        _processInputParams(e) {
          return {
            status: new t7(),
            ctx: {
              common: e.parent.common,
              data: e.data,
              parsedType: tY(e.data),
              schemaErrorMap: this._def.errorMap,
              path: e.path,
              parent: e.parent,
            },
          };
        }
        _parseSync(e) {
          let t = this._parse(e);
          if (ra(t)) throw Error("Synchronous parse encountered promise.");
          return t;
        }
        _parseAsync(e) {
          return Promise.resolve(this._parse(e));
        }
        parse(e, t) {
          let r = this.safeParse(e, t);
          if (r.success) return r.data;
          throw r.error;
        }
        safeParse(e, t) {
          let r = {
              common: {
                issues: [],
                async: t?.async ?? !1,
                contextualErrorMap: t?.errorMap,
              },
              path: t?.path || [],
              schemaErrorMap: this._def.errorMap,
              parent: null,
              data: e,
              parsedType: tY(e),
            },
            n = this._parseSync({ data: e, path: r.path, parent: r });
          return rl(r, n);
        }
        "~validate"(e) {
          let t = {
            common: { issues: [], async: !!this["~standard"].async },
            path: [],
            schemaErrorMap: this._def.errorMap,
            parent: null,
            data: e,
            parsedType: tY(e),
          };
          if (!this["~standard"].async)
            try {
              let r = this._parseSync({ data: e, path: [], parent: t });
              return ro(r) ? { value: r.value } : { issues: t.common.issues };
            } catch (e) {
              e?.message?.toLowerCase()?.includes("encountered") &&
                (this["~standard"].async = !0),
                (t.common = { issues: [], async: !0 });
            }
          return this._parseAsync({ data: e, path: [], parent: t }).then((e) =>
            ro(e) ? { value: e.value } : { issues: t.common.issues }
          );
        }
        async parseAsync(e, t) {
          let r = await this.safeParseAsync(e, t);
          if (r.success) return r.data;
          throw r.error;
        }
        async safeParseAsync(e, t) {
          let r = {
              common: {
                issues: [],
                contextualErrorMap: t?.errorMap,
                async: !0,
              },
              path: t?.path || [],
              schemaErrorMap: this._def.errorMap,
              parent: null,
              data: e,
              parsedType: tY(e),
            },
            n = this._parse({ data: e, path: r.path, parent: r });
          return rl(r, await (ra(n) ? n : Promise.resolve(n)));
        }
        refine(e, t) {
          let r = (e) =>
            "string" == typeof t || void 0 === t
              ? { message: t }
              : "function" == typeof t
              ? t(e)
              : t;
          return this._refinement((t, n) => {
            let i = e(t),
              o = () => n.addIssue({ code: tX.custom, ...r(t) });
            return "undefined" != typeof Promise && i instanceof Promise
              ? i.then((e) => !!e || (o(), !1))
              : !!i || (o(), !1);
          });
        }
        refinement(e, t) {
          return this._refinement(
            (r, n) =>
              !!e(r) || (n.addIssue("function" == typeof t ? t(r, n) : t), !1)
          );
        }
        _refinement(e) {
          return new r5({
            schema: this,
            typeName: T.ZodEffects,
            effect: { type: "refinement", refinement: e },
          });
        }
        superRefine(e) {
          return this._refinement(e);
        }
        constructor(e) {
          (this.spa = this.safeParseAsync),
            (this._def = e),
            (this.parse = this.parse.bind(this)),
            (this.safeParse = this.safeParse.bind(this)),
            (this.parseAsync = this.parseAsync.bind(this)),
            (this.safeParseAsync = this.safeParseAsync.bind(this)),
            (this.spa = this.spa.bind(this)),
            (this.refine = this.refine.bind(this)),
            (this.refinement = this.refinement.bind(this)),
            (this.superRefine = this.superRefine.bind(this)),
            (this.optional = this.optional.bind(this)),
            (this.nullable = this.nullable.bind(this)),
            (this.nullish = this.nullish.bind(this)),
            (this.array = this.array.bind(this)),
            (this.promise = this.promise.bind(this)),
            (this.or = this.or.bind(this)),
            (this.and = this.and.bind(this)),
            (this.transform = this.transform.bind(this)),
            (this.brand = this.brand.bind(this)),
            (this.default = this.default.bind(this)),
            (this.catch = this.catch.bind(this)),
            (this.describe = this.describe.bind(this)),
            (this.pipe = this.pipe.bind(this)),
            (this.readonly = this.readonly.bind(this)),
            (this.isNullable = this.isNullable.bind(this)),
            (this.isOptional = this.isOptional.bind(this)),
            (this["~standard"] = {
              version: 1,
              vendor: "zod",
              validate: (e) => this["~validate"](e),
            });
        }
        optional() {
          return r3.create(this, this._def);
        }
        nullable() {
          return r8.create(this, this._def);
        }
        nullish() {
          return this.nullable().optional();
        }
        array() {
          return rH.create(this);
        }
        promise() {
          return r6.create(this, this._def);
        }
        or(e) {
          return rz.create([this, e], this._def);
        }
        and(e) {
          return rW.create(this, e, this._def);
        }
        transform(e) {
          return new r5({
            ...ru(this._def),
            schema: this,
            typeName: T.ZodEffects,
            effect: { type: "transform", transform: e },
          });
        }
        default(e) {
          return new r4({
            ...ru(this._def),
            innerType: this,
            defaultValue: "function" == typeof e ? e : () => e,
            typeName: T.ZodDefault,
          });
        }
        brand() {
          return new nt({
            typeName: T.ZodBranded,
            type: this,
            ...ru(this._def),
          });
        }
        catch(e) {
          return new r9({
            ...ru(this._def),
            innerType: this,
            catchValue: "function" == typeof e ? e : () => e,
            typeName: T.ZodCatch,
          });
        }
        describe(e) {
          return new this.constructor({ ...this._def, description: e });
        }
        pipe(e) {
          return nr.create(this, e);
        }
        readonly() {
          return nn.create(this);
        }
        isOptional() {
          return this.safeParse(void 0).success;
        }
        isNullable() {
          return this.safeParse(null).success;
        }
      }
      let rd = /^c[^\s-]{8,}$/i,
        rf = /^[0-9a-z]+$/,
        rh = /^[0-9A-HJKMNP-TV-Z]{26}$/i,
        rp =
          /^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,
        rm = /^[a-z0-9_-]{21}$/i,
        rg = /^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/,
        ry =
          /^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,
        rb =
          /^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,
        rv =
          /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,
        rw =
          /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/,
        rx =
          /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/,
        rA =
          /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,
        rE = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,
        rk =
          /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,
        rI =
          "((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",
        rS = RegExp(`^${rI}$`);
      function rP(e) {
        let t = "[0-5]\\d";
        e.precision
          ? (t = `${t}\\.\\d{${e.precision}}`)
          : null == e.precision && (t = `${t}(\\.\\d+)?`);
        let r = e.precision ? "+" : "?";
        return `([01]\\d|2[0-3]):[0-5]\\d(:${t})${r}`;
      }
      function rT(e) {
        let t = `${rI}T${rP(e)}`,
          r = [];
        return (
          r.push(e.local ? "Z?" : "Z"),
          e.offset && r.push("([+-]\\d{2}:?\\d{2})"),
          (t = `${t}(${r.join("|")})`),
          RegExp(`^${t}$`)
        );
      }
      class rC extends rc {
        _parse(e) {
          var t, r, i, o;
          let a;
          if (
            (this._def.coerce && (e.data = String(e.data)),
            this._getType(e) !== tJ.string)
          ) {
            let t = this._getOrReturnCtx(e);
            return (
              t9(t, {
                code: tX.invalid_type,
                expected: tJ.string,
                received: t.parsedType,
              }),
              re
            );
          }
          let s = new t7();
          for (let l of this._def.checks)
            if ("min" === l.kind)
              e.data.length < l.value &&
                (t9((a = this._getOrReturnCtx(e, a)), {
                  code: tX.too_small,
                  minimum: l.value,
                  type: "string",
                  inclusive: !0,
                  exact: !1,
                  message: l.message,
                }),
                s.dirty());
            else if ("max" === l.kind)
              e.data.length > l.value &&
                (t9((a = this._getOrReturnCtx(e, a)), {
                  code: tX.too_big,
                  maximum: l.value,
                  type: "string",
                  inclusive: !0,
                  exact: !1,
                  message: l.message,
                }),
                s.dirty());
            else if ("length" === l.kind) {
              let t = e.data.length > l.value,
                r = e.data.length < l.value;
              (t || r) &&
                ((a = this._getOrReturnCtx(e, a)),
                t
                  ? t9(a, {
                      code: tX.too_big,
                      maximum: l.value,
                      type: "string",
                      inclusive: !0,
                      exact: !0,
                      message: l.message,
                    })
                  : r &&
                    t9(a, {
                      code: tX.too_small,
                      minimum: l.value,
                      type: "string",
                      inclusive: !0,
                      exact: !0,
                      message: l.message,
                    }),
                s.dirty());
            } else if ("email" === l.kind)
              rb.test(e.data) ||
                (t9((a = this._getOrReturnCtx(e, a)), {
                  validation: "email",
                  code: tX.invalid_string,
                  message: l.message,
                }),
                s.dirty());
            else if ("emoji" === l.kind)
              n ||
                (n = RegExp(
                  "^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$",
                  "u"
                )),
                n.test(e.data) ||
                  (t9((a = this._getOrReturnCtx(e, a)), {
                    validation: "emoji",
                    code: tX.invalid_string,
                    message: l.message,
                  }),
                  s.dirty());
            else if ("uuid" === l.kind)
              rp.test(e.data) ||
                (t9((a = this._getOrReturnCtx(e, a)), {
                  validation: "uuid",
                  code: tX.invalid_string,
                  message: l.message,
                }),
                s.dirty());
            else if ("nanoid" === l.kind)
              rm.test(e.data) ||
                (t9((a = this._getOrReturnCtx(e, a)), {
                  validation: "nanoid",
                  code: tX.invalid_string,
                  message: l.message,
                }),
                s.dirty());
            else if ("cuid" === l.kind)
              rd.test(e.data) ||
                (t9((a = this._getOrReturnCtx(e, a)), {
                  validation: "cuid",
                  code: tX.invalid_string,
                  message: l.message,
                }),
                s.dirty());
            else if ("cuid2" === l.kind)
              rf.test(e.data) ||
                (t9((a = this._getOrReturnCtx(e, a)), {
                  validation: "cuid2",
                  code: tX.invalid_string,
                  message: l.message,
                }),
                s.dirty());
            else if ("ulid" === l.kind)
              rh.test(e.data) ||
                (t9((a = this._getOrReturnCtx(e, a)), {
                  validation: "ulid",
                  code: tX.invalid_string,
                  message: l.message,
                }),
                s.dirty());
            else if ("url" === l.kind)
              try {
                new URL(e.data);
              } catch {
                t9((a = this._getOrReturnCtx(e, a)), {
                  validation: "url",
                  code: tX.invalid_string,
                  message: l.message,
                }),
                  s.dirty();
              }
            else
              "regex" === l.kind
                ? ((l.regex.lastIndex = 0),
                  l.regex.test(e.data) ||
                    (t9((a = this._getOrReturnCtx(e, a)), {
                      validation: "regex",
                      code: tX.invalid_string,
                      message: l.message,
                    }),
                    s.dirty()))
                : "trim" === l.kind
                ? (e.data = e.data.trim())
                : "includes" === l.kind
                ? e.data.includes(l.value, l.position) ||
                  (t9((a = this._getOrReturnCtx(e, a)), {
                    code: tX.invalid_string,
                    validation: { includes: l.value, position: l.position },
                    message: l.message,
                  }),
                  s.dirty())
                : "toLowerCase" === l.kind
                ? (e.data = e.data.toLowerCase())
                : "toUpperCase" === l.kind
                ? (e.data = e.data.toUpperCase())
                : "startsWith" === l.kind
                ? e.data.startsWith(l.value) ||
                  (t9((a = this._getOrReturnCtx(e, a)), {
                    code: tX.invalid_string,
                    validation: { startsWith: l.value },
                    message: l.message,
                  }),
                  s.dirty())
                : "endsWith" === l.kind
                ? e.data.endsWith(l.value) ||
                  (t9((a = this._getOrReturnCtx(e, a)), {
                    code: tX.invalid_string,
                    validation: { endsWith: l.value },
                    message: l.message,
                  }),
                  s.dirty())
                : "datetime" === l.kind
                ? rT(l).test(e.data) ||
                  (t9((a = this._getOrReturnCtx(e, a)), {
                    code: tX.invalid_string,
                    validation: "datetime",
                    message: l.message,
                  }),
                  s.dirty())
                : "date" === l.kind
                ? rS.test(e.data) ||
                  (t9((a = this._getOrReturnCtx(e, a)), {
                    code: tX.invalid_string,
                    validation: "date",
                    message: l.message,
                  }),
                  s.dirty())
                : "time" === l.kind
                ? RegExp(`^${rP(l)}$`).test(e.data) ||
                  (t9((a = this._getOrReturnCtx(e, a)), {
                    code: tX.invalid_string,
                    validation: "time",
                    message: l.message,
                  }),
                  s.dirty())
                : "duration" === l.kind
                ? ry.test(e.data) ||
                  (t9((a = this._getOrReturnCtx(e, a)), {
                    validation: "duration",
                    code: tX.invalid_string,
                    message: l.message,
                  }),
                  s.dirty())
                : "ip" === l.kind
                ? ((t = e.data),
                  (("v4" === (r = l.version) || !r) && rv.test(t)) ||
                    (("v6" === r || !r) && rx.test(t)) ||
                    (t9((a = this._getOrReturnCtx(e, a)), {
                      validation: "ip",
                      code: tX.invalid_string,
                      message: l.message,
                    }),
                    s.dirty()))
                : "jwt" === l.kind
                ? !(function (e, t) {
                    if (!rg.test(e)) return !1;
                    try {
                      let [r] = e.split(".");
                      if (!r) return !1;
                      let n = r
                          .replace(/-/g, "+")
                          .replace(/_/g, "/")
                          .padEnd(r.length + ((4 - (r.length % 4)) % 4), "="),
                        i = JSON.parse(atob(n));
                      if (
                        "object" != typeof i ||
                        null === i ||
                        ("typ" in i && i?.typ !== "JWT") ||
                        !i.alg ||
                        (t && i.alg !== t)
                      )
                        return !1;
                      return !0;
                    } catch {
                      return !1;
                    }
                  })(e.data, l.alg) &&
                  (t9((a = this._getOrReturnCtx(e, a)), {
                    validation: "jwt",
                    code: tX.invalid_string,
                    message: l.message,
                  }),
                  s.dirty())
                : "cidr" === l.kind
                ? ((i = e.data),
                  (("v4" === (o = l.version) || !o) && rw.test(i)) ||
                    (("v6" === o || !o) && rA.test(i)) ||
                    (t9((a = this._getOrReturnCtx(e, a)), {
                      validation: "cidr",
                      code: tX.invalid_string,
                      message: l.message,
                    }),
                    s.dirty()))
                : "base64" === l.kind
                ? rE.test(e.data) ||
                  (t9((a = this._getOrReturnCtx(e, a)), {
                    validation: "base64",
                    code: tX.invalid_string,
                    message: l.message,
                  }),
                  s.dirty())
                : "base64url" === l.kind
                ? rk.test(e.data) ||
                  (t9((a = this._getOrReturnCtx(e, a)), {
                    validation: "base64url",
                    code: tX.invalid_string,
                    message: l.message,
                  }),
                  s.dirty())
                : I.assertNever(l);
          return { status: s.value, value: e.data };
        }
        _regex(e, t, r) {
          return this.refinement((t) => e.test(t), {
            validation: t,
            code: tX.invalid_string,
            ...P.errToObj(r),
          });
        }
        _addCheck(e) {
          return new rC({ ...this._def, checks: [...this._def.checks, e] });
        }
        email(e) {
          return this._addCheck({ kind: "email", ...P.errToObj(e) });
        }
        url(e) {
          return this._addCheck({ kind: "url", ...P.errToObj(e) });
        }
        emoji(e) {
          return this._addCheck({ kind: "emoji", ...P.errToObj(e) });
        }
        uuid(e) {
          return this._addCheck({ kind: "uuid", ...P.errToObj(e) });
        }
        nanoid(e) {
          return this._addCheck({ kind: "nanoid", ...P.errToObj(e) });
        }
        cuid(e) {
          return this._addCheck({ kind: "cuid", ...P.errToObj(e) });
        }
        cuid2(e) {
          return this._addCheck({ kind: "cuid2", ...P.errToObj(e) });
        }
        ulid(e) {
          return this._addCheck({ kind: "ulid", ...P.errToObj(e) });
        }
        base64(e) {
          return this._addCheck({ kind: "base64", ...P.errToObj(e) });
        }
        base64url(e) {
          return this._addCheck({ kind: "base64url", ...P.errToObj(e) });
        }
        jwt(e) {
          return this._addCheck({ kind: "jwt", ...P.errToObj(e) });
        }
        ip(e) {
          return this._addCheck({ kind: "ip", ...P.errToObj(e) });
        }
        cidr(e) {
          return this._addCheck({ kind: "cidr", ...P.errToObj(e) });
        }
        datetime(e) {
          return "string" == typeof e
            ? this._addCheck({
                kind: "datetime",
                precision: null,
                offset: !1,
                local: !1,
                message: e,
              })
            : this._addCheck({
                kind: "datetime",
                precision: void 0 === e?.precision ? null : e?.precision,
                offset: e?.offset ?? !1,
                local: e?.local ?? !1,
                ...P.errToObj(e?.message),
              });
        }
        date(e) {
          return this._addCheck({ kind: "date", message: e });
        }
        time(e) {
          return "string" == typeof e
            ? this._addCheck({ kind: "time", precision: null, message: e })
            : this._addCheck({
                kind: "time",
                precision: void 0 === e?.precision ? null : e?.precision,
                ...P.errToObj(e?.message),
              });
        }
        duration(e) {
          return this._addCheck({ kind: "duration", ...P.errToObj(e) });
        }
        regex(e, t) {
          return this._addCheck({ kind: "regex", regex: e, ...P.errToObj(t) });
        }
        includes(e, t) {
          return this._addCheck({
            kind: "includes",
            value: e,
            position: t?.position,
            ...P.errToObj(t?.message),
          });
        }
        startsWith(e, t) {
          return this._addCheck({
            kind: "startsWith",
            value: e,
            ...P.errToObj(t),
          });
        }
        endsWith(e, t) {
          return this._addCheck({
            kind: "endsWith",
            value: e,
            ...P.errToObj(t),
          });
        }
        min(e, t) {
          return this._addCheck({ kind: "min", value: e, ...P.errToObj(t) });
        }
        max(e, t) {
          return this._addCheck({ kind: "max", value: e, ...P.errToObj(t) });
        }
        length(e, t) {
          return this._addCheck({ kind: "length", value: e, ...P.errToObj(t) });
        }
        nonempty(e) {
          return this.min(1, P.errToObj(e));
        }
        trim() {
          return new rC({
            ...this._def,
            checks: [...this._def.checks, { kind: "trim" }],
          });
        }
        toLowerCase() {
          return new rC({
            ...this._def,
            checks: [...this._def.checks, { kind: "toLowerCase" }],
          });
        }
        toUpperCase() {
          return new rC({
            ...this._def,
            checks: [...this._def.checks, { kind: "toUpperCase" }],
          });
        }
        get isDatetime() {
          return !!this._def.checks.find((e) => "datetime" === e.kind);
        }
        get isDate() {
          return !!this._def.checks.find((e) => "date" === e.kind);
        }
        get isTime() {
          return !!this._def.checks.find((e) => "time" === e.kind);
        }
        get isDuration() {
          return !!this._def.checks.find((e) => "duration" === e.kind);
        }
        get isEmail() {
          return !!this._def.checks.find((e) => "email" === e.kind);
        }
        get isURL() {
          return !!this._def.checks.find((e) => "url" === e.kind);
        }
        get isEmoji() {
          return !!this._def.checks.find((e) => "emoji" === e.kind);
        }
        get isUUID() {
          return !!this._def.checks.find((e) => "uuid" === e.kind);
        }
        get isNANOID() {
          return !!this._def.checks.find((e) => "nanoid" === e.kind);
        }
        get isCUID() {
          return !!this._def.checks.find((e) => "cuid" === e.kind);
        }
        get isCUID2() {
          return !!this._def.checks.find((e) => "cuid2" === e.kind);
        }
        get isULID() {
          return !!this._def.checks.find((e) => "ulid" === e.kind);
        }
        get isIP() {
          return !!this._def.checks.find((e) => "ip" === e.kind);
        }
        get isCIDR() {
          return !!this._def.checks.find((e) => "cidr" === e.kind);
        }
        get isBase64() {
          return !!this._def.checks.find((e) => "base64" === e.kind);
        }
        get isBase64url() {
          return !!this._def.checks.find((e) => "base64url" === e.kind);
        }
        get minLength() {
          let e = null;
          for (let t of this._def.checks)
            "min" === t.kind && (null === e || t.value > e) && (e = t.value);
          return e;
        }
        get maxLength() {
          let e = null;
          for (let t of this._def.checks)
            "max" === t.kind && (null === e || t.value < e) && (e = t.value);
          return e;
        }
      }
      rC.create = (e) =>
        new rC({
          checks: [],
          typeName: T.ZodString,
          coerce: e?.coerce ?? !1,
          ...ru(e),
        });
      class rO extends rc {
        constructor() {
          super(...arguments),
            (this.min = this.gte),
            (this.max = this.lte),
            (this.step = this.multipleOf);
        }
        _parse(e) {
          let t;
          if (
            (this._def.coerce && (e.data = Number(e.data)),
            this._getType(e) !== tJ.number)
          ) {
            let t = this._getOrReturnCtx(e);
            return (
              t9(t, {
                code: tX.invalid_type,
                expected: tJ.number,
                received: t.parsedType,
              }),
              re
            );
          }
          let r = new t7();
          for (let n of this._def.checks)
            "int" === n.kind
              ? I.isInteger(e.data) ||
                (t9((t = this._getOrReturnCtx(e, t)), {
                  code: tX.invalid_type,
                  expected: "integer",
                  received: "float",
                  message: n.message,
                }),
                r.dirty())
              : "min" === n.kind
              ? (n.inclusive ? e.data < n.value : e.data <= n.value) &&
                (t9((t = this._getOrReturnCtx(e, t)), {
                  code: tX.too_small,
                  minimum: n.value,
                  type: "number",
                  inclusive: n.inclusive,
                  exact: !1,
                  message: n.message,
                }),
                r.dirty())
              : "max" === n.kind
              ? (n.inclusive ? e.data > n.value : e.data >= n.value) &&
                (t9((t = this._getOrReturnCtx(e, t)), {
                  code: tX.too_big,
                  maximum: n.value,
                  type: "number",
                  inclusive: n.inclusive,
                  exact: !1,
                  message: n.message,
                }),
                r.dirty())
              : "multipleOf" === n.kind
              ? 0 !==
                  (function (e, t) {
                    let r = (e.toString().split(".")[1] || "").length,
                      n = (t.toString().split(".")[1] || "").length,
                      i = r > n ? r : n;
                    return (
                      (Number.parseInt(e.toFixed(i).replace(".", "")) %
                        Number.parseInt(t.toFixed(i).replace(".", ""))) /
                      10 ** i
                    );
                  })(e.data, n.value) &&
                (t9((t = this._getOrReturnCtx(e, t)), {
                  code: tX.not_multiple_of,
                  multipleOf: n.value,
                  message: n.message,
                }),
                r.dirty())
              : "finite" === n.kind
              ? Number.isFinite(e.data) ||
                (t9((t = this._getOrReturnCtx(e, t)), {
                  code: tX.not_finite,
                  message: n.message,
                }),
                r.dirty())
              : I.assertNever(n);
          return { status: r.value, value: e.data };
        }
        gte(e, t) {
          return this.setLimit("min", e, !0, P.toString(t));
        }
        gt(e, t) {
          return this.setLimit("min", e, !1, P.toString(t));
        }
        lte(e, t) {
          return this.setLimit("max", e, !0, P.toString(t));
        }
        lt(e, t) {
          return this.setLimit("max", e, !1, P.toString(t));
        }
        setLimit(e, t, r, n) {
          return new rO({
            ...this._def,
            checks: [
              ...this._def.checks,
              { kind: e, value: t, inclusive: r, message: P.toString(n) },
            ],
          });
        }
        _addCheck(e) {
          return new rO({ ...this._def, checks: [...this._def.checks, e] });
        }
        int(e) {
          return this._addCheck({ kind: "int", message: P.toString(e) });
        }
        positive(e) {
          return this._addCheck({
            kind: "min",
            value: 0,
            inclusive: !1,
            message: P.toString(e),
          });
        }
        negative(e) {
          return this._addCheck({
            kind: "max",
            value: 0,
            inclusive: !1,
            message: P.toString(e),
          });
        }
        nonpositive(e) {
          return this._addCheck({
            kind: "max",
            value: 0,
            inclusive: !0,
            message: P.toString(e),
          });
        }
        nonnegative(e) {
          return this._addCheck({
            kind: "min",
            value: 0,
            inclusive: !0,
            message: P.toString(e),
          });
        }
        multipleOf(e, t) {
          return this._addCheck({
            kind: "multipleOf",
            value: e,
            message: P.toString(t),
          });
        }
        finite(e) {
          return this._addCheck({ kind: "finite", message: P.toString(e) });
        }
        safe(e) {
          return this._addCheck({
            kind: "min",
            inclusive: !0,
            value: Number.MIN_SAFE_INTEGER,
            message: P.toString(e),
          })._addCheck({
            kind: "max",
            inclusive: !0,
            value: Number.MAX_SAFE_INTEGER,
            message: P.toString(e),
          });
        }
        get minValue() {
          let e = null;
          for (let t of this._def.checks)
            "min" === t.kind && (null === e || t.value > e) && (e = t.value);
          return e;
        }
        get maxValue() {
          let e = null;
          for (let t of this._def.checks)
            "max" === t.kind && (null === e || t.value < e) && (e = t.value);
          return e;
        }
        get isInt() {
          return !!this._def.checks.find(
            (e) =>
              "int" === e.kind ||
              ("multipleOf" === e.kind && I.isInteger(e.value))
          );
        }
        get isFinite() {
          let e = null,
            t = null;
          for (let r of this._def.checks) {
            if (
              "finite" === r.kind ||
              "int" === r.kind ||
              "multipleOf" === r.kind
            )
              return !0;
            "min" === r.kind
              ? (null === t || r.value > t) && (t = r.value)
              : "max" === r.kind &&
                (null === e || r.value < e) &&
                (e = r.value);
          }
          return Number.isFinite(t) && Number.isFinite(e);
        }
      }
      rO.create = (e) =>
        new rO({
          checks: [],
          typeName: T.ZodNumber,
          coerce: e?.coerce || !1,
          ...ru(e),
        });
      class r_ extends rc {
        constructor() {
          super(...arguments), (this.min = this.gte), (this.max = this.lte);
        }
        _parse(e) {
          let t;
          if (this._def.coerce)
            try {
              e.data = BigInt(e.data);
            } catch {
              return this._getInvalidInput(e);
            }
          if (this._getType(e) !== tJ.bigint) return this._getInvalidInput(e);
          let r = new t7();
          for (let n of this._def.checks)
            "min" === n.kind
              ? (n.inclusive ? e.data < n.value : e.data <= n.value) &&
                (t9((t = this._getOrReturnCtx(e, t)), {
                  code: tX.too_small,
                  type: "bigint",
                  minimum: n.value,
                  inclusive: n.inclusive,
                  message: n.message,
                }),
                r.dirty())
              : "max" === n.kind
              ? (n.inclusive ? e.data > n.value : e.data >= n.value) &&
                (t9((t = this._getOrReturnCtx(e, t)), {
                  code: tX.too_big,
                  type: "bigint",
                  maximum: n.value,
                  inclusive: n.inclusive,
                  message: n.message,
                }),
                r.dirty())
              : "multipleOf" === n.kind
              ? e.data % n.value !== BigInt(0) &&
                (t9((t = this._getOrReturnCtx(e, t)), {
                  code: tX.not_multiple_of,
                  multipleOf: n.value,
                  message: n.message,
                }),
                r.dirty())
              : I.assertNever(n);
          return { status: r.value, value: e.data };
        }
        _getInvalidInput(e) {
          let t = this._getOrReturnCtx(e);
          return (
            t9(t, {
              code: tX.invalid_type,
              expected: tJ.bigint,
              received: t.parsedType,
            }),
            re
          );
        }
        gte(e, t) {
          return this.setLimit("min", e, !0, P.toString(t));
        }
        gt(e, t) {
          return this.setLimit("min", e, !1, P.toString(t));
        }
        lte(e, t) {
          return this.setLimit("max", e, !0, P.toString(t));
        }
        lt(e, t) {
          return this.setLimit("max", e, !1, P.toString(t));
        }
        setLimit(e, t, r, n) {
          return new r_({
            ...this._def,
            checks: [
              ...this._def.checks,
              { kind: e, value: t, inclusive: r, message: P.toString(n) },
            ],
          });
        }
        _addCheck(e) {
          return new r_({ ...this._def, checks: [...this._def.checks, e] });
        }
        positive(e) {
          return this._addCheck({
            kind: "min",
            value: BigInt(0),
            inclusive: !1,
            message: P.toString(e),
          });
        }
        negative(e) {
          return this._addCheck({
            kind: "max",
            value: BigInt(0),
            inclusive: !1,
            message: P.toString(e),
          });
        }
        nonpositive(e) {
          return this._addCheck({
            kind: "max",
            value: BigInt(0),
            inclusive: !0,
            message: P.toString(e),
          });
        }
        nonnegative(e) {
          return this._addCheck({
            kind: "min",
            value: BigInt(0),
            inclusive: !0,
            message: P.toString(e),
          });
        }
        multipleOf(e, t) {
          return this._addCheck({
            kind: "multipleOf",
            value: e,
            message: P.toString(t),
          });
        }
        get minValue() {
          let e = null;
          for (let t of this._def.checks)
            "min" === t.kind && (null === e || t.value > e) && (e = t.value);
          return e;
        }
        get maxValue() {
          let e = null;
          for (let t of this._def.checks)
            "max" === t.kind && (null === e || t.value < e) && (e = t.value);
          return e;
        }
      }
      r_.create = (e) =>
        new r_({
          checks: [],
          typeName: T.ZodBigInt,
          coerce: e?.coerce ?? !1,
          ...ru(e),
        });
      class rB extends rc {
        _parse(e) {
          if (
            (this._def.coerce && (e.data = !!e.data),
            this._getType(e) !== tJ.boolean)
          ) {
            let t = this._getOrReturnCtx(e);
            return (
              t9(t, {
                code: tX.invalid_type,
                expected: tJ.boolean,
                received: t.parsedType,
              }),
              re
            );
          }
          return rr(e.data);
        }
      }
      rB.create = (e) =>
        new rB({ typeName: T.ZodBoolean, coerce: e?.coerce || !1, ...ru(e) });
      class rR extends rc {
        _parse(e) {
          let t;
          if (
            (this._def.coerce && (e.data = new Date(e.data)),
            this._getType(e) !== tJ.date)
          ) {
            let t = this._getOrReturnCtx(e);
            return (
              t9(t, {
                code: tX.invalid_type,
                expected: tJ.date,
                received: t.parsedType,
              }),
              re
            );
          }
          if (Number.isNaN(e.data.getTime()))
            return t9(this._getOrReturnCtx(e), { code: tX.invalid_date }), re;
          let r = new t7();
          for (let n of this._def.checks)
            "min" === n.kind
              ? e.data.getTime() < n.value &&
                (t9((t = this._getOrReturnCtx(e, t)), {
                  code: tX.too_small,
                  message: n.message,
                  inclusive: !0,
                  exact: !1,
                  minimum: n.value,
                  type: "date",
                }),
                r.dirty())
              : "max" === n.kind
              ? e.data.getTime() > n.value &&
                (t9((t = this._getOrReturnCtx(e, t)), {
                  code: tX.too_big,
                  message: n.message,
                  inclusive: !0,
                  exact: !1,
                  maximum: n.value,
                  type: "date",
                }),
                r.dirty())
              : I.assertNever(n);
          return { status: r.value, value: new Date(e.data.getTime()) };
        }
        _addCheck(e) {
          return new rR({ ...this._def, checks: [...this._def.checks, e] });
        }
        min(e, t) {
          return this._addCheck({
            kind: "min",
            value: e.getTime(),
            message: P.toString(t),
          });
        }
        max(e, t) {
          return this._addCheck({
            kind: "max",
            value: e.getTime(),
            message: P.toString(t),
          });
        }
        get minDate() {
          let e = null;
          for (let t of this._def.checks)
            "min" === t.kind && (null === e || t.value > e) && (e = t.value);
          return null != e ? new Date(e) : null;
        }
        get maxDate() {
          let e = null;
          for (let t of this._def.checks)
            "max" === t.kind && (null === e || t.value < e) && (e = t.value);
          return null != e ? new Date(e) : null;
        }
      }
      rR.create = (e) =>
        new rR({
          checks: [],
          coerce: e?.coerce || !1,
          typeName: T.ZodDate,
          ...ru(e),
        });
      class rN extends rc {
        _parse(e) {
          if (this._getType(e) !== tJ.symbol) {
            let t = this._getOrReturnCtx(e);
            return (
              t9(t, {
                code: tX.invalid_type,
                expected: tJ.symbol,
                received: t.parsedType,
              }),
              re
            );
          }
          return rr(e.data);
        }
      }
      rN.create = (e) => new rN({ typeName: T.ZodSymbol, ...ru(e) });
      class rM extends rc {
        _parse(e) {
          if (this._getType(e) !== tJ.undefined) {
            let t = this._getOrReturnCtx(e);
            return (
              t9(t, {
                code: tX.invalid_type,
                expected: tJ.undefined,
                received: t.parsedType,
              }),
              re
            );
          }
          return rr(e.data);
        }
      }
      rM.create = (e) => new rM({ typeName: T.ZodUndefined, ...ru(e) });
      class rj extends rc {
        _parse(e) {
          if (this._getType(e) !== tJ.null) {
            let t = this._getOrReturnCtx(e);
            return (
              t9(t, {
                code: tX.invalid_type,
                expected: tJ.null,
                received: t.parsedType,
              }),
              re
            );
          }
          return rr(e.data);
        }
      }
      rj.create = (e) => new rj({ typeName: T.ZodNull, ...ru(e) });
      class rF extends rc {
        constructor() {
          super(...arguments), (this._any = !0);
        }
        _parse(e) {
          return rr(e.data);
        }
      }
      rF.create = (e) => new rF({ typeName: T.ZodAny, ...ru(e) });
      class rL extends rc {
        constructor() {
          super(...arguments), (this._unknown = !0);
        }
        _parse(e) {
          return rr(e.data);
        }
      }
      rL.create = (e) => new rL({ typeName: T.ZodUnknown, ...ru(e) });
      class rD extends rc {
        _parse(e) {
          let t = this._getOrReturnCtx(e);
          return (
            t9(t, {
              code: tX.invalid_type,
              expected: tJ.never,
              received: t.parsedType,
            }),
            re
          );
        }
      }
      rD.create = (e) => new rD({ typeName: T.ZodNever, ...ru(e) });
      class rU extends rc {
        _parse(e) {
          if (this._getType(e) !== tJ.undefined) {
            let t = this._getOrReturnCtx(e);
            return (
              t9(t, {
                code: tX.invalid_type,
                expected: tJ.void,
                received: t.parsedType,
              }),
              re
            );
          }
          return rr(e.data);
        }
      }
      rU.create = (e) => new rU({ typeName: T.ZodVoid, ...ru(e) });
      class rH extends rc {
        _parse(e) {
          let { ctx: t, status: r } = this._processInputParams(e),
            n = this._def;
          if (t.parsedType !== tJ.array)
            return (
              t9(t, {
                code: tX.invalid_type,
                expected: tJ.array,
                received: t.parsedType,
              }),
              re
            );
          if (null !== n.exactLength) {
            let e = t.data.length > n.exactLength.value,
              i = t.data.length < n.exactLength.value;
            (e || i) &&
              (t9(t, {
                code: e ? tX.too_big : tX.too_small,
                minimum: i ? n.exactLength.value : void 0,
                maximum: e ? n.exactLength.value : void 0,
                type: "array",
                inclusive: !0,
                exact: !0,
                message: n.exactLength.message,
              }),
              r.dirty());
          }
          if (
            (null !== n.minLength &&
              t.data.length < n.minLength.value &&
              (t9(t, {
                code: tX.too_small,
                minimum: n.minLength.value,
                type: "array",
                inclusive: !0,
                exact: !1,
                message: n.minLength.message,
              }),
              r.dirty()),
            null !== n.maxLength &&
              t.data.length > n.maxLength.value &&
              (t9(t, {
                code: tX.too_big,
                maximum: n.maxLength.value,
                type: "array",
                inclusive: !0,
                exact: !1,
                message: n.maxLength.message,
              }),
              r.dirty()),
            t.common.async)
          )
            return Promise.all(
              [...t.data].map((e, r) =>
                n.type._parseAsync(new rs(t, e, t.path, r))
              )
            ).then((e) => t7.mergeArray(r, e));
          let i = [...t.data].map((e, r) =>
            n.type._parseSync(new rs(t, e, t.path, r))
          );
          return t7.mergeArray(r, i);
        }
        get element() {
          return this._def.type;
        }
        min(e, t) {
          return new rH({
            ...this._def,
            minLength: { value: e, message: P.toString(t) },
          });
        }
        max(e, t) {
          return new rH({
            ...this._def,
            maxLength: { value: e, message: P.toString(t) },
          });
        }
        length(e, t) {
          return new rH({
            ...this._def,
            exactLength: { value: e, message: P.toString(t) },
          });
        }
        nonempty(e) {
          return this.min(1, e);
        }
      }
      rH.create = (e, t) =>
        new rH({
          type: e,
          minLength: null,
          maxLength: null,
          exactLength: null,
          typeName: T.ZodArray,
          ...ru(t),
        });
      class r$ extends rc {
        constructor() {
          super(...arguments),
            (this._cached = null),
            (this.nonstrict = this.passthrough),
            (this.augment = this.extend);
        }
        _getCached() {
          if (null !== this._cached) return this._cached;
          let e = this._def.shape(),
            t = I.objectKeys(e);
          return (this._cached = { shape: e, keys: t }), this._cached;
        }
        _parse(e) {
          if (this._getType(e) !== tJ.object) {
            let t = this._getOrReturnCtx(e);
            return (
              t9(t, {
                code: tX.invalid_type,
                expected: tJ.object,
                received: t.parsedType,
              }),
              re
            );
          }
          let { status: t, ctx: r } = this._processInputParams(e),
            { shape: n, keys: i } = this._getCached(),
            o = [];
          if (
            !(
              this._def.catchall instanceof rD &&
              "strip" === this._def.unknownKeys
            )
          )
            for (let e in r.data) i.includes(e) || o.push(e);
          let a = [];
          for (let e of i) {
            let t = n[e],
              i = r.data[e];
            a.push({
              key: { status: "valid", value: e },
              value: t._parse(new rs(r, i, r.path, e)),
              alwaysSet: e in r.data,
            });
          }
          if (this._def.catchall instanceof rD) {
            let e = this._def.unknownKeys;
            if ("passthrough" === e)
              for (let e of o)
                a.push({
                  key: { status: "valid", value: e },
                  value: { status: "valid", value: r.data[e] },
                });
            else if ("strict" === e)
              o.length > 0 &&
                (t9(r, { code: tX.unrecognized_keys, keys: o }), t.dirty());
            else if ("strip" === e);
            else
              throw Error(
                "Internal ZodObject error: invalid unknownKeys value."
              );
          } else {
            let e = this._def.catchall;
            for (let t of o) {
              let n = r.data[t];
              a.push({
                key: { status: "valid", value: t },
                value: e._parse(new rs(r, n, r.path, t)),
                alwaysSet: t in r.data,
              });
            }
          }
          return r.common.async
            ? Promise.resolve()
                .then(async () => {
                  let e = [];
                  for (let t of a) {
                    let r = await t.key,
                      n = await t.value;
                    e.push({ key: r, value: n, alwaysSet: t.alwaysSet });
                  }
                  return e;
                })
                .then((e) => t7.mergeObjectSync(t, e))
            : t7.mergeObjectSync(t, a);
        }
        get shape() {
          return this._def.shape();
        }
        strict(e) {
          return (
            P.errToObj,
            new r$({
              ...this._def,
              unknownKeys: "strict",
              ...(void 0 !== e
                ? {
                    errorMap: (t, r) => {
                      let n =
                        this._def.errorMap?.(t, r).message ?? r.defaultError;
                      return "unrecognized_keys" === t.code
                        ? { message: P.errToObj(e).message ?? n }
                        : { message: n };
                    },
                  }
                : {}),
            })
          );
        }
        strip() {
          return new r$({ ...this._def, unknownKeys: "strip" });
        }
        passthrough() {
          return new r$({ ...this._def, unknownKeys: "passthrough" });
        }
        extend(e) {
          return new r$({
            ...this._def,
            shape: () => ({ ...this._def.shape(), ...e }),
          });
        }
        merge(e) {
          return new r$({
            unknownKeys: e._def.unknownKeys,
            catchall: e._def.catchall,
            shape: () => ({ ...this._def.shape(), ...e._def.shape() }),
            typeName: T.ZodObject,
          });
        }
        setKey(e, t) {
          return this.augment({ [e]: t });
        }
        catchall(e) {
          return new r$({ ...this._def, catchall: e });
        }
        pick(e) {
          let t = {};
          for (let r of I.objectKeys(e))
            e[r] && this.shape[r] && (t[r] = this.shape[r]);
          return new r$({ ...this._def, shape: () => t });
        }
        omit(e) {
          let t = {};
          for (let r of I.objectKeys(this.shape))
            e[r] || (t[r] = this.shape[r]);
          return new r$({ ...this._def, shape: () => t });
        }
        deepPartial() {
          return (function e(t) {
            if (t instanceof r$) {
              let r = {};
              for (let n in t.shape) {
                let i = t.shape[n];
                r[n] = r3.create(e(i));
              }
              return new r$({ ...t._def, shape: () => r });
            }
            return t instanceof rH
              ? new rH({ ...t._def, type: e(t.element) })
              : t instanceof r3
              ? r3.create(e(t.unwrap()))
              : t instanceof r8
              ? r8.create(e(t.unwrap()))
              : t instanceof rV
              ? rV.create(t.items.map((t) => e(t)))
              : t;
          })(this);
        }
        partial(e) {
          let t = {};
          for (let r of I.objectKeys(this.shape)) {
            let n = this.shape[r];
            e && !e[r] ? (t[r] = n) : (t[r] = n.optional());
          }
          return new r$({ ...this._def, shape: () => t });
        }
        required(e) {
          let t = {};
          for (let r of I.objectKeys(this.shape))
            if (e && !e[r]) t[r] = this.shape[r];
            else {
              let e = this.shape[r];
              for (; e instanceof r3; ) e = e._def.innerType;
              t[r] = e;
            }
          return new r$({ ...this._def, shape: () => t });
        }
        keyof() {
          return r0(I.objectKeys(this.shape));
        }
      }
      (r$.create = (e, t) =>
        new r$({
          shape: () => e,
          unknownKeys: "strip",
          catchall: rD.create(),
          typeName: T.ZodObject,
          ...ru(t),
        })),
        (r$.strictCreate = (e, t) =>
          new r$({
            shape: () => e,
            unknownKeys: "strict",
            catchall: rD.create(),
            typeName: T.ZodObject,
            ...ru(t),
          })),
        (r$.lazycreate = (e, t) =>
          new r$({
            shape: e,
            unknownKeys: "strip",
            catchall: rD.create(),
            typeName: T.ZodObject,
            ...ru(t),
          }));
      class rz extends rc {
        _parse(e) {
          let { ctx: t } = this._processInputParams(e),
            r = this._def.options;
          if (t.common.async)
            return Promise.all(
              r.map(async (e) => {
                let r = {
                  ...t,
                  common: { ...t.common, issues: [] },
                  parent: null,
                };
                return {
                  result: await e._parseAsync({
                    data: t.data,
                    path: t.path,
                    parent: r,
                  }),
                  ctx: r,
                };
              })
            ).then(function (e) {
              for (let t of e) if ("valid" === t.result.status) return t.result;
              for (let r of e)
                if ("dirty" === r.result.status)
                  return t.common.issues.push(...r.ctx.common.issues), r.result;
              let r = e.map((e) => new t1(e.ctx.common.issues));
              return t9(t, { code: tX.invalid_union, unionErrors: r }), re;
            });
          {
            let e;
            let n = [];
            for (let i of r) {
              let r = {
                  ...t,
                  common: { ...t.common, issues: [] },
                  parent: null,
                },
                o = i._parseSync({ data: t.data, path: t.path, parent: r });
              if ("valid" === o.status) return o;
              "dirty" !== o.status || e || (e = { result: o, ctx: r }),
                r.common.issues.length && n.push(r.common.issues);
            }
            if (e)
              return t.common.issues.push(...e.ctx.common.issues), e.result;
            let i = n.map((e) => new t1(e));
            return t9(t, { code: tX.invalid_union, unionErrors: i }), re;
          }
        }
        get options() {
          return this._def.options;
        }
      }
      rz.create = (e, t) =>
        new rz({ options: e, typeName: T.ZodUnion, ...ru(t) });
      let rG = (e) => {
        if (e instanceof rY) return rG(e.schema);
        if (e instanceof r5) return rG(e.innerType());
        if (e instanceof rX) return [e.value];
        if (e instanceof r1) return e.options;
        if (e instanceof r2) return I.objectValues(e.enum);
        if (e instanceof r4) return rG(e._def.innerType);
        if (e instanceof rM) return [void 0];
        else if (e instanceof rj) return [null];
        else if (e instanceof r3) return [void 0, ...rG(e.unwrap())];
        else if (e instanceof r8) return [null, ...rG(e.unwrap())];
        else if (e instanceof nt) return rG(e.unwrap());
        else if (e instanceof nn) return rG(e.unwrap());
        else if (e instanceof r9) return rG(e._def.innerType);
        else return [];
      };
      class rq extends rc {
        _parse(e) {
          let { ctx: t } = this._processInputParams(e);
          if (t.parsedType !== tJ.object)
            return (
              t9(t, {
                code: tX.invalid_type,
                expected: tJ.object,
                received: t.parsedType,
              }),
              re
            );
          let r = this.discriminator,
            n = t.data[r],
            i = this.optionsMap.get(n);
          return i
            ? t.common.async
              ? i._parseAsync({ data: t.data, path: t.path, parent: t })
              : i._parseSync({ data: t.data, path: t.path, parent: t })
            : (t9(t, {
                code: tX.invalid_union_discriminator,
                options: Array.from(this.optionsMap.keys()),
                path: [r],
              }),
              re);
        }
        get discriminator() {
          return this._def.discriminator;
        }
        get options() {
          return this._def.options;
        }
        get optionsMap() {
          return this._def.optionsMap;
        }
        static create(e, t, r) {
          let n = new Map();
          for (let r of t) {
            let t = rG(r.shape[e]);
            if (!t.length)
              throw Error(
                `A discriminator value for key \`${e}\` could not be extracted from all schema options`
              );
            for (let i of t) {
              if (n.has(i))
                throw Error(
                  `Discriminator property ${String(
                    e
                  )} has duplicate value ${String(i)}`
                );
              n.set(i, r);
            }
          }
          return new rq({
            typeName: T.ZodDiscriminatedUnion,
            discriminator: e,
            options: t,
            optionsMap: n,
            ...ru(r),
          });
        }
      }
      class rW extends rc {
        _parse(e) {
          let { status: t, ctx: r } = this._processInputParams(e),
            n = (e, n) => {
              if (rn(e) || rn(n)) return re;
              let i = (function e(t, r) {
                let n = tY(t),
                  i = tY(r);
                if (t === r) return { valid: !0, data: t };
                if (n === tJ.object && i === tJ.object) {
                  let n = I.objectKeys(r),
                    i = I.objectKeys(t).filter((e) => -1 !== n.indexOf(e)),
                    o = { ...t, ...r };
                  for (let n of i) {
                    let i = e(t[n], r[n]);
                    if (!i.valid) return { valid: !1 };
                    o[n] = i.data;
                  }
                  return { valid: !0, data: o };
                }
                if (n === tJ.array && i === tJ.array) {
                  if (t.length !== r.length) return { valid: !1 };
                  let n = [];
                  for (let i = 0; i < t.length; i++) {
                    let o = e(t[i], r[i]);
                    if (!o.valid) return { valid: !1 };
                    n.push(o.data);
                  }
                  return { valid: !0, data: n };
                }
                return n === tJ.date && i === tJ.date && +t == +r
                  ? { valid: !0, data: t }
                  : { valid: !1 };
              })(e.value, n.value);
              return i.valid
                ? ((ri(e) || ri(n)) && t.dirty(),
                  { status: t.value, value: i.data })
                : (t9(r, { code: tX.invalid_intersection_types }), re);
            };
          return r.common.async
            ? Promise.all([
                this._def.left._parseAsync({
                  data: r.data,
                  path: r.path,
                  parent: r,
                }),
                this._def.right._parseAsync({
                  data: r.data,
                  path: r.path,
                  parent: r,
                }),
              ]).then(([e, t]) => n(e, t))
            : n(
                this._def.left._parseSync({
                  data: r.data,
                  path: r.path,
                  parent: r,
                }),
                this._def.right._parseSync({
                  data: r.data,
                  path: r.path,
                  parent: r,
                })
              );
        }
      }
      rW.create = (e, t, r) =>
        new rW({ left: e, right: t, typeName: T.ZodIntersection, ...ru(r) });
      class rV extends rc {
        _parse(e) {
          let { status: t, ctx: r } = this._processInputParams(e);
          if (r.parsedType !== tJ.array)
            return (
              t9(r, {
                code: tX.invalid_type,
                expected: tJ.array,
                received: r.parsedType,
              }),
              re
            );
          if (r.data.length < this._def.items.length)
            return (
              t9(r, {
                code: tX.too_small,
                minimum: this._def.items.length,
                inclusive: !0,
                exact: !1,
                type: "array",
              }),
              re
            );
          !this._def.rest &&
            r.data.length > this._def.items.length &&
            (t9(r, {
              code: tX.too_big,
              maximum: this._def.items.length,
              inclusive: !0,
              exact: !1,
              type: "array",
            }),
            t.dirty());
          let n = [...r.data]
            .map((e, t) => {
              let n = this._def.items[t] || this._def.rest;
              return n ? n._parse(new rs(r, e, r.path, t)) : null;
            })
            .filter((e) => !!e);
          return r.common.async
            ? Promise.all(n).then((e) => t7.mergeArray(t, e))
            : t7.mergeArray(t, n);
        }
        get items() {
          return this._def.items;
        }
        rest(e) {
          return new rV({ ...this._def, rest: e });
        }
      }
      rV.create = (e, t) => {
        if (!Array.isArray(e))
          throw Error("You must pass an array of schemas to z.tuple([ ... ])");
        return new rV({ items: e, typeName: T.ZodTuple, rest: null, ...ru(t) });
      };
      class rZ extends rc {
        get keySchema() {
          return this._def.keyType;
        }
        get valueSchema() {
          return this._def.valueType;
        }
        _parse(e) {
          let { status: t, ctx: r } = this._processInputParams(e);
          if (r.parsedType !== tJ.object)
            return (
              t9(r, {
                code: tX.invalid_type,
                expected: tJ.object,
                received: r.parsedType,
              }),
              re
            );
          let n = [],
            i = this._def.keyType,
            o = this._def.valueType;
          for (let e in r.data)
            n.push({
              key: i._parse(new rs(r, e, r.path, e)),
              value: o._parse(new rs(r, r.data[e], r.path, e)),
              alwaysSet: e in r.data,
            });
          return r.common.async
            ? t7.mergeObjectAsync(t, n)
            : t7.mergeObjectSync(t, n);
        }
        get element() {
          return this._def.valueType;
        }
        static create(e, t, r) {
          return new rZ(
            t instanceof rc
              ? { keyType: e, valueType: t, typeName: T.ZodRecord, ...ru(r) }
              : {
                  keyType: rC.create(),
                  valueType: e,
                  typeName: T.ZodRecord,
                  ...ru(t),
                }
          );
        }
      }
      class rK extends rc {
        get keySchema() {
          return this._def.keyType;
        }
        get valueSchema() {
          return this._def.valueType;
        }
        _parse(e) {
          let { status: t, ctx: r } = this._processInputParams(e);
          if (r.parsedType !== tJ.map)
            return (
              t9(r, {
                code: tX.invalid_type,
                expected: tJ.map,
                received: r.parsedType,
              }),
              re
            );
          let n = this._def.keyType,
            i = this._def.valueType,
            o = [...r.data.entries()].map(([e, t], o) => ({
              key: n._parse(new rs(r, e, r.path, [o, "key"])),
              value: i._parse(new rs(r, t, r.path, [o, "value"])),
            }));
          if (r.common.async) {
            let e = new Map();
            return Promise.resolve().then(async () => {
              for (let r of o) {
                let n = await r.key,
                  i = await r.value;
                if ("aborted" === n.status || "aborted" === i.status) return re;
                ("dirty" === n.status || "dirty" === i.status) && t.dirty(),
                  e.set(n.value, i.value);
              }
              return { status: t.value, value: e };
            });
          }
          {
            let e = new Map();
            for (let r of o) {
              let n = r.key,
                i = r.value;
              if ("aborted" === n.status || "aborted" === i.status) return re;
              ("dirty" === n.status || "dirty" === i.status) && t.dirty(),
                e.set(n.value, i.value);
            }
            return { status: t.value, value: e };
          }
        }
      }
      rK.create = (e, t, r) =>
        new rK({ valueType: t, keyType: e, typeName: T.ZodMap, ...ru(r) });
      class rQ extends rc {
        _parse(e) {
          let { status: t, ctx: r } = this._processInputParams(e);
          if (r.parsedType !== tJ.set)
            return (
              t9(r, {
                code: tX.invalid_type,
                expected: tJ.set,
                received: r.parsedType,
              }),
              re
            );
          let n = this._def;
          null !== n.minSize &&
            r.data.size < n.minSize.value &&
            (t9(r, {
              code: tX.too_small,
              minimum: n.minSize.value,
              type: "set",
              inclusive: !0,
              exact: !1,
              message: n.minSize.message,
            }),
            t.dirty()),
            null !== n.maxSize &&
              r.data.size > n.maxSize.value &&
              (t9(r, {
                code: tX.too_big,
                maximum: n.maxSize.value,
                type: "set",
                inclusive: !0,
                exact: !1,
                message: n.maxSize.message,
              }),
              t.dirty());
          let i = this._def.valueType;
          function o(e) {
            let r = new Set();
            for (let n of e) {
              if ("aborted" === n.status) return re;
              "dirty" === n.status && t.dirty(), r.add(n.value);
            }
            return { status: t.value, value: r };
          }
          let a = [...r.data.values()].map((e, t) =>
            i._parse(new rs(r, e, r.path, t))
          );
          return r.common.async ? Promise.all(a).then((e) => o(e)) : o(a);
        }
        min(e, t) {
          return new rQ({
            ...this._def,
            minSize: { value: e, message: P.toString(t) },
          });
        }
        max(e, t) {
          return new rQ({
            ...this._def,
            maxSize: { value: e, message: P.toString(t) },
          });
        }
        size(e, t) {
          return this.min(e, t).max(e, t);
        }
        nonempty(e) {
          return this.min(1, e);
        }
      }
      rQ.create = (e, t) =>
        new rQ({
          valueType: e,
          minSize: null,
          maxSize: null,
          typeName: T.ZodSet,
          ...ru(t),
        });
      class rJ extends rc {
        constructor() {
          super(...arguments), (this.validate = this.implement);
        }
        _parse(e) {
          let { ctx: t } = this._processInputParams(e);
          if (t.parsedType !== tJ.function)
            return (
              t9(t, {
                code: tX.invalid_type,
                expected: tJ.function,
                received: t.parsedType,
              }),
              re
            );
          function r(e, r) {
            return t8({
              data: e,
              path: t.path,
              errorMaps: [
                t.common.contextualErrorMap,
                t.schemaErrorMap,
                t6,
                t2,
              ].filter((e) => !!e),
              issueData: { code: tX.invalid_arguments, argumentsError: r },
            });
          }
          function n(e, r) {
            return t8({
              data: e,
              path: t.path,
              errorMaps: [
                t.common.contextualErrorMap,
                t.schemaErrorMap,
                t6,
                t2,
              ].filter((e) => !!e),
              issueData: { code: tX.invalid_return_type, returnTypeError: r },
            });
          }
          let i = { errorMap: t.common.contextualErrorMap },
            o = t.data;
          if (this._def.returns instanceof r6) {
            let e = this;
            return rr(async function (...t) {
              let a = new t1([]),
                s = await e._def.args.parseAsync(t, i).catch((e) => {
                  throw (a.addIssue(r(t, e)), a);
                }),
                l = await Reflect.apply(o, this, s);
              return await e._def.returns._def.type
                .parseAsync(l, i)
                .catch((e) => {
                  throw (a.addIssue(n(l, e)), a);
                });
            });
          }
          {
            let e = this;
            return rr(function (...t) {
              let a = e._def.args.safeParse(t, i);
              if (!a.success) throw new t1([r(t, a.error)]);
              let s = Reflect.apply(o, this, a.data),
                l = e._def.returns.safeParse(s, i);
              if (!l.success) throw new t1([n(s, l.error)]);
              return l.data;
            });
          }
        }
        parameters() {
          return this._def.args;
        }
        returnType() {
          return this._def.returns;
        }
        args(...e) {
          return new rJ({ ...this._def, args: rV.create(e).rest(rL.create()) });
        }
        returns(e) {
          return new rJ({ ...this._def, returns: e });
        }
        implement(e) {
          return this.parse(e);
        }
        strictImplement(e) {
          return this.parse(e);
        }
        static create(e, t, r) {
          return new rJ({
            args: e || rV.create([]).rest(rL.create()),
            returns: t || rL.create(),
            typeName: T.ZodFunction,
            ...ru(r),
          });
        }
      }
      class rY extends rc {
        get schema() {
          return this._def.getter();
        }
        _parse(e) {
          let { ctx: t } = this._processInputParams(e);
          return this._def
            .getter()
            ._parse({ data: t.data, path: t.path, parent: t });
        }
      }
      rY.create = (e, t) =>
        new rY({ getter: e, typeName: T.ZodLazy, ...ru(t) });
      class rX extends rc {
        _parse(e) {
          if (e.data !== this._def.value) {
            let t = this._getOrReturnCtx(e);
            return (
              t9(t, {
                received: t.data,
                code: tX.invalid_literal,
                expected: this._def.value,
              }),
              re
            );
          }
          return { status: "valid", value: e.data };
        }
        get value() {
          return this._def.value;
        }
      }
      function r0(e, t) {
        return new r1({ values: e, typeName: T.ZodEnum, ...ru(t) });
      }
      rX.create = (e, t) =>
        new rX({ value: e, typeName: T.ZodLiteral, ...ru(t) });
      class r1 extends rc {
        _parse(e) {
          if ("string" != typeof e.data) {
            let t = this._getOrReturnCtx(e),
              r = this._def.values;
            return (
              t9(t, {
                expected: I.joinValues(r),
                received: t.parsedType,
                code: tX.invalid_type,
              }),
              re
            );
          }
          if (
            (this._cache || (this._cache = new Set(this._def.values)),
            !this._cache.has(e.data))
          ) {
            let t = this._getOrReturnCtx(e),
              r = this._def.values;
            return (
              t9(t, {
                received: t.data,
                code: tX.invalid_enum_value,
                options: r,
              }),
              re
            );
          }
          return rr(e.data);
        }
        get options() {
          return this._def.values;
        }
        get enum() {
          let e = {};
          for (let t of this._def.values) e[t] = t;
          return e;
        }
        get Values() {
          let e = {};
          for (let t of this._def.values) e[t] = t;
          return e;
        }
        get Enum() {
          let e = {};
          for (let t of this._def.values) e[t] = t;
          return e;
        }
        extract(e, t = this._def) {
          return r1.create(e, { ...this._def, ...t });
        }
        exclude(e, t = this._def) {
          return r1.create(
            this.options.filter((t) => !e.includes(t)),
            { ...this._def, ...t }
          );
        }
      }
      r1.create = r0;
      class r2 extends rc {
        _parse(e) {
          let t = I.getValidEnumValues(this._def.values),
            r = this._getOrReturnCtx(e);
          if (r.parsedType !== tJ.string && r.parsedType !== tJ.number) {
            let e = I.objectValues(t);
            return (
              t9(r, {
                expected: I.joinValues(e),
                received: r.parsedType,
                code: tX.invalid_type,
              }),
              re
            );
          }
          if (
            (this._cache ||
              (this._cache = new Set(I.getValidEnumValues(this._def.values))),
            !this._cache.has(e.data))
          ) {
            let e = I.objectValues(t);
            return (
              t9(r, {
                received: r.data,
                code: tX.invalid_enum_value,
                options: e,
              }),
              re
            );
          }
          return rr(e.data);
        }
        get enum() {
          return this._def.values;
        }
      }
      r2.create = (e, t) =>
        new r2({ values: e, typeName: T.ZodNativeEnum, ...ru(t) });
      class r6 extends rc {
        unwrap() {
          return this._def.type;
        }
        _parse(e) {
          let { ctx: t } = this._processInputParams(e);
          return t.parsedType !== tJ.promise && !1 === t.common.async
            ? (t9(t, {
                code: tX.invalid_type,
                expected: tJ.promise,
                received: t.parsedType,
              }),
              re)
            : rr(
                (t.parsedType === tJ.promise
                  ? t.data
                  : Promise.resolve(t.data)
                ).then((e) =>
                  this._def.type.parseAsync(e, {
                    path: t.path,
                    errorMap: t.common.contextualErrorMap,
                  })
                )
              );
        }
      }
      r6.create = (e, t) =>
        new r6({ type: e, typeName: T.ZodPromise, ...ru(t) });
      class r5 extends rc {
        innerType() {
          return this._def.schema;
        }
        sourceType() {
          return this._def.schema._def.typeName === T.ZodEffects
            ? this._def.schema.sourceType()
            : this._def.schema;
        }
        _parse(e) {
          let { status: t, ctx: r } = this._processInputParams(e),
            n = this._def.effect || null,
            i = {
              addIssue: (e) => {
                t9(r, e), e.fatal ? t.abort() : t.dirty();
              },
              get path() {
                return r.path;
              },
            };
          if (((i.addIssue = i.addIssue.bind(i)), "preprocess" === n.type)) {
            let e = n.transform(r.data, i);
            if (r.common.async)
              return Promise.resolve(e).then(async (e) => {
                if ("aborted" === t.value) return re;
                let n = await this._def.schema._parseAsync({
                  data: e,
                  path: r.path,
                  parent: r,
                });
                return "aborted" === n.status
                  ? re
                  : "dirty" === n.status || "dirty" === t.value
                  ? rt(n.value)
                  : n;
              });
            {
              if ("aborted" === t.value) return re;
              let n = this._def.schema._parseSync({
                data: e,
                path: r.path,
                parent: r,
              });
              return "aborted" === n.status
                ? re
                : "dirty" === n.status || "dirty" === t.value
                ? rt(n.value)
                : n;
            }
          }
          if ("refinement" === n.type) {
            let e = (e) => {
              let t = n.refinement(e, i);
              if (r.common.async) return Promise.resolve(t);
              if (t instanceof Promise)
                throw Error(
                  "Async refinement encountered during synchronous parse operation. Use .parseAsync instead."
                );
              return e;
            };
            if (!1 !== r.common.async)
              return this._def.schema
                ._parseAsync({ data: r.data, path: r.path, parent: r })
                .then((r) =>
                  "aborted" === r.status
                    ? re
                    : ("dirty" === r.status && t.dirty(),
                      e(r.value).then(() => ({
                        status: t.value,
                        value: r.value,
                      })))
                );
            {
              let n = this._def.schema._parseSync({
                data: r.data,
                path: r.path,
                parent: r,
              });
              return "aborted" === n.status
                ? re
                : ("dirty" === n.status && t.dirty(),
                  e(n.value),
                  { status: t.value, value: n.value });
            }
          }
          if ("transform" === n.type) {
            if (!1 !== r.common.async)
              return this._def.schema
                ._parseAsync({ data: r.data, path: r.path, parent: r })
                .then((e) =>
                  ro(e)
                    ? Promise.resolve(n.transform(e.value, i)).then((e) => ({
                        status: t.value,
                        value: e,
                      }))
                    : re
                );
            {
              let e = this._def.schema._parseSync({
                data: r.data,
                path: r.path,
                parent: r,
              });
              if (!ro(e)) return re;
              let o = n.transform(e.value, i);
              if (o instanceof Promise)
                throw Error(
                  "Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead."
                );
              return { status: t.value, value: o };
            }
          }
          I.assertNever(n);
        }
      }
      (r5.create = (e, t, r) =>
        new r5({ schema: e, typeName: T.ZodEffects, effect: t, ...ru(r) })),
        (r5.createWithPreprocess = (e, t, r) =>
          new r5({
            schema: t,
            effect: { type: "preprocess", transform: e },
            typeName: T.ZodEffects,
            ...ru(r),
          }));
      class r3 extends rc {
        _parse(e) {
          return this._getType(e) === tJ.undefined
            ? rr(void 0)
            : this._def.innerType._parse(e);
        }
        unwrap() {
          return this._def.innerType;
        }
      }
      r3.create = (e, t) =>
        new r3({ innerType: e, typeName: T.ZodOptional, ...ru(t) });
      class r8 extends rc {
        _parse(e) {
          return this._getType(e) === tJ.null
            ? rr(null)
            : this._def.innerType._parse(e);
        }
        unwrap() {
          return this._def.innerType;
        }
      }
      r8.create = (e, t) =>
        new r8({ innerType: e, typeName: T.ZodNullable, ...ru(t) });
      class r4 extends rc {
        _parse(e) {
          let { ctx: t } = this._processInputParams(e),
            r = t.data;
          return (
            t.parsedType === tJ.undefined && (r = this._def.defaultValue()),
            this._def.innerType._parse({ data: r, path: t.path, parent: t })
          );
        }
        removeDefault() {
          return this._def.innerType;
        }
      }
      r4.create = (e, t) =>
        new r4({
          innerType: e,
          typeName: T.ZodDefault,
          defaultValue:
            "function" == typeof t.default ? t.default : () => t.default,
          ...ru(t),
        });
      class r9 extends rc {
        _parse(e) {
          let { ctx: t } = this._processInputParams(e),
            r = { ...t, common: { ...t.common, issues: [] } },
            n = this._def.innerType._parse({
              data: r.data,
              path: r.path,
              parent: { ...r },
            });
          return ra(n)
            ? n.then((e) => ({
                status: "valid",
                value:
                  "valid" === e.status
                    ? e.value
                    : this._def.catchValue({
                        get error() {
                          return new t1(r.common.issues);
                        },
                        input: r.data,
                      }),
              }))
            : {
                status: "valid",
                value:
                  "valid" === n.status
                    ? n.value
                    : this._def.catchValue({
                        get error() {
                          return new t1(r.common.issues);
                        },
                        input: r.data,
                      }),
              };
        }
        removeCatch() {
          return this._def.innerType;
        }
      }
      r9.create = (e, t) =>
        new r9({
          innerType: e,
          typeName: T.ZodCatch,
          catchValue: "function" == typeof t.catch ? t.catch : () => t.catch,
          ...ru(t),
        });
      class r7 extends rc {
        _parse(e) {
          if (this._getType(e) !== tJ.nan) {
            let t = this._getOrReturnCtx(e);
            return (
              t9(t, {
                code: tX.invalid_type,
                expected: tJ.nan,
                received: t.parsedType,
              }),
              re
            );
          }
          return { status: "valid", value: e.data };
        }
      }
      r7.create = (e) => new r7({ typeName: T.ZodNaN, ...ru(e) });
      let ne = Symbol("zod_brand");
      class nt extends rc {
        _parse(e) {
          let { ctx: t } = this._processInputParams(e),
            r = t.data;
          return this._def.type._parse({ data: r, path: t.path, parent: t });
        }
        unwrap() {
          return this._def.type;
        }
      }
      class nr extends rc {
        _parse(e) {
          let { status: t, ctx: r } = this._processInputParams(e);
          if (r.common.async)
            return (async () => {
              let e = await this._def.in._parseAsync({
                data: r.data,
                path: r.path,
                parent: r,
              });
              return "aborted" === e.status
                ? re
                : "dirty" === e.status
                ? (t.dirty(), rt(e.value))
                : this._def.out._parseAsync({
                    data: e.value,
                    path: r.path,
                    parent: r,
                  });
            })();
          {
            let e = this._def.in._parseSync({
              data: r.data,
              path: r.path,
              parent: r,
            });
            return "aborted" === e.status
              ? re
              : "dirty" === e.status
              ? (t.dirty(), { status: "dirty", value: e.value })
              : this._def.out._parseSync({
                  data: e.value,
                  path: r.path,
                  parent: r,
                });
          }
        }
        static create(e, t) {
          return new nr({ in: e, out: t, typeName: T.ZodPipeline });
        }
      }
      class nn extends rc {
        _parse(e) {
          let t = this._def.innerType._parse(e),
            r = (e) => (ro(e) && (e.value = Object.freeze(e.value)), e);
          return ra(t) ? t.then((e) => r(e)) : r(t);
        }
        unwrap() {
          return this._def.innerType;
        }
      }
      function ni(e, t) {
        let r =
          "function" == typeof e
            ? e(t)
            : "string" == typeof e
            ? { message: e }
            : e;
        return "string" == typeof r ? { message: r } : r;
      }
      function no(e, t = {}, r) {
        return e
          ? rF.create().superRefine((n, i) => {
              let o = e(n);
              if (o instanceof Promise)
                return o.then((e) => {
                  if (!e) {
                    let e = ni(t, n),
                      o = e.fatal ?? r ?? !0;
                    i.addIssue({ code: "custom", ...e, fatal: o });
                  }
                });
              if (!o) {
                let e = ni(t, n),
                  o = e.fatal ?? r ?? !0;
                i.addIssue({ code: "custom", ...e, fatal: o });
              }
            })
          : rF.create();
      }
      nn.create = (e, t) =>
        new nn({ innerType: e, typeName: T.ZodReadonly, ...ru(t) });
      let na = { object: r$.lazycreate };
      !(function (e) {
        (e.ZodString = "ZodString"),
          (e.ZodNumber = "ZodNumber"),
          (e.ZodNaN = "ZodNaN"),
          (e.ZodBigInt = "ZodBigInt"),
          (e.ZodBoolean = "ZodBoolean"),
          (e.ZodDate = "ZodDate"),
          (e.ZodSymbol = "ZodSymbol"),
          (e.ZodUndefined = "ZodUndefined"),
          (e.ZodNull = "ZodNull"),
          (e.ZodAny = "ZodAny"),
          (e.ZodUnknown = "ZodUnknown"),
          (e.ZodNever = "ZodNever"),
          (e.ZodVoid = "ZodVoid"),
          (e.ZodArray = "ZodArray"),
          (e.ZodObject = "ZodObject"),
          (e.ZodUnion = "ZodUnion"),
          (e.ZodDiscriminatedUnion = "ZodDiscriminatedUnion"),
          (e.ZodIntersection = "ZodIntersection"),
          (e.ZodTuple = "ZodTuple"),
          (e.ZodRecord = "ZodRecord"),
          (e.ZodMap = "ZodMap"),
          (e.ZodSet = "ZodSet"),
          (e.ZodFunction = "ZodFunction"),
          (e.ZodLazy = "ZodLazy"),
          (e.ZodLiteral = "ZodLiteral"),
          (e.ZodEnum = "ZodEnum"),
          (e.ZodEffects = "ZodEffects"),
          (e.ZodNativeEnum = "ZodNativeEnum"),
          (e.ZodOptional = "ZodOptional"),
          (e.ZodNullable = "ZodNullable"),
          (e.ZodDefault = "ZodDefault"),
          (e.ZodCatch = "ZodCatch"),
          (e.ZodPromise = "ZodPromise"),
          (e.ZodBranded = "ZodBranded"),
          (e.ZodPipeline = "ZodPipeline"),
          (e.ZodReadonly = "ZodReadonly");
      })(T || (T = {}));
      let ns = (e, t = { message: `Input not instance of ${e.name}` }) =>
          no((t) => t instanceof e, t),
        nl = rC.create,
        nu = rO.create,
        nc = r7.create,
        nd = r_.create,
        nf = rB.create,
        nh = rR.create,
        np = rN.create,
        nm = rM.create,
        ng = rj.create,
        ny = rF.create,
        nb = rL.create,
        nv = rD.create,
        nw = rU.create,
        nx = rH.create,
        nA = r$.create,
        nE = r$.strictCreate,
        nk = rz.create,
        nI = rq.create,
        nS = rW.create,
        nP = rV.create,
        nT = rZ.create,
        nC = rK.create,
        nO = rQ.create,
        n_ = rJ.create,
        nB = rY.create,
        nR = rX.create,
        nN = r1.create,
        nM = r2.create,
        nj = r6.create,
        nF = r5.create,
        nL = r3.create,
        nD = r8.create,
        nU = r5.createWithPreprocess,
        nH = nr.create,
        n$ = () => nl().optional(),
        nz = () => nu().optional(),
        nG = () => nf().optional(),
        nq = {
          string: (e) => rC.create({ ...e, coerce: !0 }),
          number: (e) => rO.create({ ...e, coerce: !0 }),
          boolean: (e) => rB.create({ ...e, coerce: !0 }),
          bigint: (e) => r_.create({ ...e, coerce: !0 }),
          date: (e) => rR.create({ ...e, coerce: !0 }),
        },
        nW = re,
        nV = (e) => (e.message ? e.message : "unspecified error");
      class nZ extends er {
        constructor(e) {
          super(),
            (this.code = 1100),
            (this.errors = e),
            (super.message = `Web3 validator found ${e.length} error[s]:
${this._compileErrors().join("\n")}`);
        }
        _compileErrors() {
          return this.errors.map(nV);
        }
      }
      let nK = ["bool", "int", "uint", "bytes", "string", "address", "tuple"],
        nQ = (e) => "object" == typeof e && "type" in e && "name" in e,
        nJ = (e) => "string" == typeof e,
        nY = (e) => "string" == typeof e && /^((-)?0x[0-9a-f]+|(0x))$/i.test(e);
      function nX(e, t) {
        return (
          "string" == typeof e &&
          !!e.match(/^0x[0-9A-Fa-f]*$/) &&
          (void 0 === t || !(t > 0) || e.length === 2 + 2 * t)
        );
      }
      let n0 = (e) =>
        "number" == typeof e ||
        "bigint" == typeof e ||
        ("string" == typeof e && /^((-0x|0x|-)?[0-9a-f]+|(0x))$/i.test(e));
      function n1(e) {
        if ("string" != typeof e)
          throw Error(
            `[isHexPrefixed] input must be type 'string', received type ${typeof e}`
          );
        return e.startsWith("0x");
      }
      let n2 = function (e) {
          for (let [t, r] of Object.entries(e))
            if (void 0 !== r && r.length > 0 && 0 === r[0])
              throw Error(
                `${t} cannot have leading zeroes, received: ${r.toString()}`
              );
        },
        n6 = [
          "hex",
          "number",
          "blockNumber",
          "blockNumberOrTag",
          "filter",
          "bloom",
        ],
        n5 = (e) => {
          let t,
            r = e.replace(/ /, ""),
            n = !1,
            i = [];
          if (
            (e.includes("[") &&
              ((r = r.slice(0, r.indexOf("["))),
              (n =
                (i = [...e.matchAll(/(?:\[(\d*)\])/g)]
                  .map((e) => parseInt(e[1], 10))
                  .map((e) => (Number.isNaN(e) ? -1 : e))).length > 0)),
            nK.includes(r))
          )
            return { baseType: r, isArray: n, baseTypeSize: t, arraySizes: i };
          if (r.startsWith("int"))
            (t = parseInt(r.substring(3), 10)), (r = "int");
          else if (r.startsWith("uint"))
            (t = parseInt(e.substring(4), 10)), (r = "uint");
          else {
            if (!r.startsWith("bytes"))
              return {
                baseType: void 0,
                isArray: !1,
                baseTypeSize: void 0,
                arraySizes: i,
              };
            (t = parseInt(r.substring(5), 10)), (r = "bytes");
          }
          return { baseType: r, isArray: n, baseTypeSize: t, arraySizes: i };
        },
        n3 = (e, t = {}) => {
          if (Object.keys(t).includes("type"))
            throw new nZ([
              {
                keyword: "eth",
                message: 'Either "eth" or "type" can be presented in schema',
                params: { eth: e },
                instancePath: "",
                schemaPath: "",
              },
            ]);
          let { baseType: r, baseTypeSize: n } = n5(e);
          if (!r && !n6.includes(e))
            throw new nZ([
              {
                keyword: "eth",
                message: `Eth data type "${e}" is not valid`,
                params: { eth: e },
                instancePath: "",
                schemaPath: "",
              },
            ]);
          if (r) {
            if ("tuple" === r)
              throw Error('"tuple" type is not implemented directly.');
            return { format: `${r}${null != n ? n : ""}`, required: !0 };
          }
          return e ? { format: e, required: !0 } : {};
        },
        n8 = (e, t = "/0") => {
          let r = {
            type: "array",
            items: [],
            maxItems: e.length,
            minItems: e.length,
          };
          for (let [n, i] of e.entries()) {
            let e, o, a;
            let s = [];
            nQ(i)
              ? ((e = i.type), (o = i.name || `${t}/${n}`), (s = i.components))
              : "string" == typeof i
              ? ((e = i), (o = `${t}/${n}`))
              : Array.isArray(i) &&
                (i[0] &&
                "string" == typeof i[0] &&
                i[0].startsWith("tuple") &&
                !Array.isArray(i[0]) &&
                i[1] &&
                Array.isArray(i[1])
                  ? ((e = i[0]), (o = `${t}/${n}`), (s = i[1]))
                  : ((e = "tuple"), (o = `${t}/${n}`), (s = i)));
            let { baseType: l, isArray: u, arraySizes: c } = n5(e),
              d = r;
            for (let e = c.length - 1; e > 0; e -= 1)
              (a = {
                type: "array",
                $id: o,
                items: [],
                maxItems: c[e],
                minItems: c[e],
              }),
                c[e] < 0 && (delete a.maxItems, delete a.minItems),
                Array.isArray(d.items)
                  ? 0 === d.items.length
                    ? (d.items = [a])
                    : d.items.push(a)
                  : (d.items = [d.items, a]),
                (d = a);
            if ("tuple" !== l || u) {
              if ("tuple" === l && u) {
                let e = c[0],
                  t = Object.assign(
                    { type: "array", $id: o, items: n8(s, o) },
                    e >= 0 && { minItems: e, maxItems: e }
                  );
                d.items.push(t);
              } else if (u) {
                let t = c[0],
                  r = Object.assign(
                    { type: "array", $id: o, items: n3(e) },
                    t >= 0 && { minItems: t, maxItems: t }
                  );
                d.items.push(r);
              } else
                Array.isArray(d.items),
                  d.items.push(Object.assign({ $id: o }, n3(e)));
            } else {
              let e = n8(s, o);
              (e.$id = o), d.items.push(e);
            }
            d = r;
          }
          return r;
        },
        n4 = (e) => n8(e),
        n9 = (e, t) => (1 === t ? e : n9(e[0], t - 1)),
        n7 = (e, t, r) => {
          let n = [];
          for (let [i, o] of e.entries()) {
            let e, a;
            let s = [];
            nQ(o)
              ? ((e = o.type), (a = o.name), (s = o.components))
              : "string" == typeof o
              ? (e = o)
              : Array.isArray(o) &&
                (o[1] && Array.isArray(o[1])
                  ? ((e = o[0]), (s = o[1]))
                  : ((e = "tuple"), (s = o)));
            let { baseType: l, isArray: u, arraySizes: c } = n5(e),
              d = Array.isArray(t) ? t[i] : t[a];
            if ("tuple" !== l || u) {
              if ("tuple" === l && u) {
                let e = [];
                for (let t of d)
                  if (c.length > 1) {
                    let n = n9(t, c.length - 1),
                      i = [];
                    for (let e of n) i.push(n7(s, e, r));
                    e.push(i);
                  } else e.push(n7(s, t, r));
                n.push(e);
              } else n.push(d);
            } else n.push(n7(s, d, r));
          }
          return (r = null != r ? r : []).push(...n), r;
        },
        ie = (e) => {
          if (e >= 48 && e <= 57) return e - 48;
          if (e >= 65 && e <= 70) return e - 55;
          if (e >= 97 && e <= 102) return e - 87;
          throw Error(`Invalid code point: ${e}`);
        },
        it = (e) => {
          if (!nY(e)) throw Error("Invalid hex string");
          let [t, r] = e.startsWith("-") ? [!0, e.slice(1)] : [!1, e],
            n = BigInt(r);
          return n > Number.MAX_SAFE_INTEGER
            ? t
              ? -n
              : n
            : n < Number.MIN_SAFE_INTEGER
            ? n
            : t
            ? -1 * Number(n)
            : Number(n);
        },
        ir = (e) => {
          if (("number" == typeof e || "bigint" == typeof e) && e < 0)
            return `-0x${e.toString(16).slice(1)}`;
          if (("number" == typeof e || "bigint" == typeof e) && e >= 0)
            return `0x${e.toString(16)}`;
          if ("string" == typeof e && nY(e)) {
            let [t, r] = e.startsWith("-") ? [!0, e.slice(1)] : [!1, e],
              n = r.split(/^(-)?0(x|X)/).slice(-1)[0];
            return `${t ? "-" : ""}0x${n.replace(/^0+/, "").toLowerCase()}`;
          }
          if ("string" == typeof e && !nY(e)) return ir(BigInt(e));
          throw new th(e);
        },
        ii = (e, t, r = "0") => {
          if ("string" == typeof e && !nY(e)) return e.padStart(t, r);
          let n = "string" == typeof e && nY(e) ? e : ir(e),
            [i, o] = n.startsWith("-")
              ? ["-0x", n.slice(3)]
              : ["0x", n.slice(2)];
          return `${i}${o.padStart(t, r)}`;
        };
      function io(e) {
        let t = "0x";
        for (let r of e) {
          let e = r.toString(16);
          t += 1 === e.length ? `0${e}` : e;
        }
        return t;
      }
      let ia = { zero: 48, nine: 57, A: 65, F: 70, a: 97, f: 102 };
      function is(e) {
        return e >= ia.zero && e <= ia.nine
          ? e - ia.zero
          : e >= ia.A && e <= ia.F
          ? e - (ia.A - 10)
          : e >= ia.a && e <= ia.f
          ? e - (ia.a - 10)
          : void 0;
      }
      function il(e) {
        let t = 0;
        if (
          (e.startsWith("0") && ("x" === e[1] || "X" === e[1]) && (t = 2),
          e.length % 2 != 0)
        )
          throw new tf(`hex string has odd length: ${e}`);
        let r = (e.length - t) / 2,
          n = new Uint8Array(r);
        for (let i = 0, o = t; i < r; i += 1) {
          let t = is(e.charCodeAt(o++)),
            r = is(e.charCodeAt(o++));
          if (void 0 === t || void 0 === r)
            throw new tf(
              `Invalid byte sequence ("${e[o - 2]}${e[o - 1]}" in "${e}").`
            );
          n[i] = 16 * t + r;
        }
        return n;
      }
      function iu(e) {
        var t;
        return e instanceof Uint8Array ||
          (null === (t = null == e ? void 0 : e.constructor) || void 0 === t
            ? void 0
            : t.name) !== "Uint8Array"
          ? e
          : Uint8Array.from(e);
      }
      let ic = (e) => {
          var t, r;
          return (
            e instanceof Uint8Array ||
            (null === (t = null == e ? void 0 : e.constructor) || void 0 === t
              ? void 0
              : t.name) === "Uint8Array" ||
            (null === (r = null == e ? void 0 : e.constructor) || void 0 === r
              ? void 0
              : r.name) === "Buffer"
          );
        },
        id = (e, t = { abiType: "bytes" }) => {
          let r;
          if (
            ("string" != typeof e && !Array.isArray(e) && !ic(e)) ||
            ("string" == typeof e && nY(e) && e.startsWith("-")) ||
            ("string" == typeof e && !nY(e))
          )
            return !1;
          if ("string" == typeof e) {
            if (e.length % 2 != 0) return !1;
            r = il(e);
          } else if (Array.isArray(e)) {
            if (e.some((e) => e < 0 || e > 255 || !Number.isInteger(e)))
              return !1;
            r = new Uint8Array(e);
          } else r = e;
          if (null == t ? void 0 : t.abiType) {
            let { baseTypeSize: e } = n5(t.abiType);
            return !e || r.length === e;
          }
          return (
            null == t || !t.size || r.length === (null == t ? void 0 : t.size)
          );
        },
        ih = (e) => {
          if (!/^(0x)?[0-9a-f]{40}$/i.test(e)) return !1;
          let t = e.slice(2),
            r = (0, tQ.AI)(t.toLowerCase()),
            n = io((0, tK.So)(iu(r))).slice(2);
          for (let e = 0; e < 40; e += 1)
            if (
              (parseInt(n[e], 16) > 7 && t[e].toUpperCase() !== t[e]) ||
              (7 >= parseInt(n[e], 16) && t[e].toLowerCase() !== t[e])
            )
              return !1;
          return !0;
        },
        ip = (e, t = !0) => {
          let r;
          return (
            !!("string" == typeof e || ic(e)) &&
            ((r = ic(e)
              ? io(e)
              : "string" != typeof e || nY(e)
              ? e
              : e.toLowerCase().startsWith("0x")
              ? e
              : `0x${e}`),
            !!/^(0x)?[0-9a-f]{40}$/i.test(r) &&
              (!!(
                /^(0x|0X)?[0-9a-f]{40}$/.test(r) ||
                /^(0x|0X)?[0-9A-F]{40}$/.test(r)
              ) ||
                !t ||
                ih(r)))
          );
        },
        im = (e, t) => {
          if (t === BigInt(0)) return BigInt(1);
          let r = e;
          for (let n = 1; n < t; n += 1) r *= e;
          return r;
        },
        ig = (e, t = { abiType: "uint" }) => {
          let r;
          if (
            !["number", "string", "bigint"].includes(typeof e) ||
            ("string" == typeof e && 0 === e.length)
          )
            return !1;
          if (null == t ? void 0 : t.abiType) {
            let { baseTypeSize: e } = n5(t.abiType);
            e && (r = e);
          } else t.bitSize && (r = t.bitSize);
          let n = im(BigInt(2), BigInt(null != r ? r : 256)) - BigInt(1);
          try {
            let t = "string" == typeof e && nY(e) ? BigInt(it(e)) : BigInt(e);
            return t >= 0 && t <= n;
          } catch (e) {
            return !1;
          }
        },
        iy = (e, t = { abiType: "int" }) => {
          let r;
          if (
            !["number", "string", "bigint"].includes(typeof e) ||
            ("number" == typeof e && e > Number.MAX_SAFE_INTEGER)
          )
            return !1;
          if (null == t ? void 0 : t.abiType) {
            let { baseTypeSize: e, baseType: n } = n5(t.abiType);
            if ("int" !== n) return !1;
            e && (r = e);
          } else t.bitSize && (r = t.bitSize);
          let n = im(BigInt(2), BigInt((null != r ? r : 256) - 1)),
            i = BigInt(-1) * im(BigInt(2), BigInt((null != r ? r : 256) - 1));
          try {
            let t = "string" == typeof e && nY(e) ? BigInt(it(e)) : BigInt(e);
            return t >= i && t <= n;
          } catch (e) {
            return !1;
          }
        },
        ib = (e) =>
          !!(
            iy(e) ||
            ("string" == typeof e &&
              /[0-9.]/.test(e) &&
              e.indexOf(".") === e.lastIndexOf("."))
          ) || "number" == typeof e,
        iv = (e) => ig(e),
        iw = (e) => Object.values(E).includes(e),
        ix = (e) => iw(e) || iv(e),
        iA = (e) =>
          !!("string" == typeof e && /^(0x)?[0-9a-f]{512}$/i.test(e)) &&
          !!(/^(0x)?[0-9a-f]{512}$/.test(e) || /^(0x)?[0-9A-F]{512}$/.test(e)),
        iE = (e, t) => {
          if (("string" == typeof t && !nY(t)) || !iA(e)) return !1;
          let r = "string" == typeof t ? il(t) : t,
            n = io((0, tK.So)(r)).slice(2);
          for (let t = 0; t < 12; t += 4) {
            let r =
                ((parseInt(n.slice(t, t + 2), 16) << 8) +
                  parseInt(n.slice(t + 2, t + 4), 16)) &
                2047,
              i = ie(e.charCodeAt(e.length - 1 - Math.floor(r / 4))),
              o = 1 << r % 4;
            if ((i & o) !== o) return !1;
          }
          return !0;
        },
        ik = (e) =>
          !!["number", "string", "boolean"].includes(typeof e) &&
          ("boolean" == typeof e ||
            ("string" != typeof e || nY(e)
              ? "string" == typeof e && nY(e)
                ? "0x1" === e || "0x0" === e
                : 1 === e || 0 === e
              : "1" === e || "0" === e)),
        iI = (e) => null == e,
        iS = (e) =>
          "object" == typeof e &&
          !iI(e) &&
          !Array.isArray(e) &&
          !(e instanceof J),
        iP = (e) =>
          !!("string" == typeof e && /^(0x)?[0-9a-f]{64}$/i.test(e)) &&
          !!(/^(0x)?[0-9a-f]{64}$/.test(e) || /^(0x)?[0-9A-F]{64}$/.test(e)),
        iT = (e) => {
          let t = ["fromBlock", "toBlock", "address", "topics", "blockHash"];
          if (
            iI(e) ||
            "object" != typeof e ||
            !Object.keys(e).every((e) => t.includes(e)) ||
            (!iI(e.fromBlock) && !ix(e.fromBlock)) ||
            (!iI(e.toBlock) && !ix(e.toBlock))
          )
            return !1;
          if (!iI(e.address)) {
            if (Array.isArray(e.address)) {
              if (!e.address.every((e) => ip(e))) return !1;
            } else if (!ip(e.address)) return !1;
          }
          return !!(
            iI(e.topics) ||
            e.topics.every(
              (e) =>
                !!iI(e) || (Array.isArray(e) ? e.every((e) => iP(e)) : !!iP(e))
            )
          );
        },
        iC = {
          address: (e) => ip(e),
          bloom: (e) => iA(e),
          blockNumber: (e) => iv(e),
          blockTag: (e) => iw(e),
          blockNumberOrTag: (e) => ix(e),
          bool: (e) => ik(e),
          bytes: (e) => id(e),
          filter: (e) => iT(e),
          hex: (e) => nY(e),
          uint: (e) => ig(e),
          int: (e) => iy(e),
          number: (e) => ib(e),
          string: (e) => nJ(e),
        };
      for (let e = 8; e <= 256; e += 8)
        (iC[`int${e}`] = (t) => iy(t, { bitSize: e })),
          (iC[`uint${e}`] = (t) => ig(t, { bitSize: e }));
      for (let e = 1; e <= 32; e += 1)
        iC[`bytes${e}`] = (t) => id(t, { size: e });
      iC.bytes256 = iC.bytes;
      let iO = (e) => {
        if (
          (!(null == e ? void 0 : e.type) ||
            (null == e ? void 0 : e.type) === "object") &&
          (null == e ? void 0 : e.properties)
        ) {
          let t = {};
          for (let r of Object.keys(e.properties)) {
            let n = iO(e.properties[r]);
            n && (t[r] = n);
          }
          return Array.isArray(e.required)
            ? nA(t)
                .partial()
                .required(
                  e.required.reduce(
                    (e, t) => Object.assign(Object.assign({}, e), { [t]: !0 }),
                    {}
                  )
                )
            : nA(t).partial();
        }
        if (
          (null == e ? void 0 : e.type) === "array" &&
          (null == e ? void 0 : e.items)
        ) {
          if (
            Array.isArray(e.items) &&
            e.items.length > 1 &&
            void 0 !== e.maxItems &&
            new Set(e.items.map((e) => e.$id)).size === e.items.length
          ) {
            let t = [];
            for (let r of e.items) {
              let e = iO(r);
              e && t.push(e);
            }
            return nP(t);
          }
          let t = nx(iO(Array.isArray(e.items) ? e.items[0] : e.items));
          return (
            (t = void 0 !== e.minItems ? t.min(e.minItems) : t),
            (t = void 0 !== e.maxItems ? t.max(e.maxItems) : t)
          );
        }
        if (e.oneOf && Array.isArray(e.oneOf))
          return nk(e.oneOf.map((e) => iO(e)));
        if (null == e ? void 0 : e.format) {
          if (!iC[e.format]) throw new tZ(e.format);
          return ny().refine(iC[e.format], (t) => ({
            params: { value: t, format: e.format },
          }));
        }
        return (null == e ? void 0 : e.type) &&
          (null == e ? void 0 : e.type) !== "object" &&
          "function" == typeof z[String(e.type)]
          ? z[String(e.type)]()
          : nA({ data: ny() }).partial();
      };
      class i_ {
        static factory() {
          return (
            i_.validatorInstance || (i_.validatorInstance = new i_()),
            i_.validatorInstance
          );
        }
        validate(e, t, r) {
          var n, i;
          let o = iO(e).safeParse(t);
          if (!o.success) {
            let e = this.convertErrors(
              null !==
                (i =
                  null === (n = o.error) || void 0 === n ? void 0 : n.issues) &&
                void 0 !== i
                ? i
                : []
            );
            if (e) {
              if (null == r ? void 0 : r.silent) return e;
              throw new nZ(e);
            }
          }
        }
        convertErrors(e) {
          if (e && Array.isArray(e) && e.length > 0)
            return e.map((e) => {
              var t;
              let r, n, i, o;
              o = e.path.join("/");
              let a = String(e.path[e.path.length - 1]),
                s = e.path.join("/");
              if (e.code === tX.too_big)
                (n = "maxItems"),
                  (o = `${s}/maxItems`),
                  (i = { limit: e.maximum }),
                  (r = `must NOT have more than ${e.maximum} items`);
              else if (e.code === tX.too_small)
                (n = "minItems"),
                  (o = `${s}/minItems`),
                  (i = { limit: e.minimum }),
                  (r = `must NOT have fewer than ${e.minimum} items`);
              else if (e.code === tX.custom) {
                let { value: n, format: a } =
                  null !== (t = e.params) && void 0 !== t ? t : {};
                (r =
                  void 0 === n
                    ? `value at "/${o}" is required`
                    : `value "${
                        "object" == typeof n ? JSON.stringify(n) : n
                      }" at "/${o}" must pass "${a}" validation`),
                  (i = { value: n });
              }
              return {
                keyword: null != n ? n : a,
                instancePath: s ? `/${s}` : "",
                schemaPath: o ? `#${o}` : "#",
                params: null != i ? i : { value: e.message },
                message: null != r ? r : e.message,
              };
            });
        }
      }
      class iB {
        constructor() {
          this._validator = i_.factory();
        }
        validateJSONSchema(e, t, r) {
          return this._validator.validate(e, t, r);
        }
        validate(e, t, r = { silent: !1 }) {
          var n, i;
          let o = n4(e);
          if (
            !Array.isArray(o.items) ||
            (null === (n = o.items) || void 0 === n ? void 0 : n.length) !==
              0 ||
            0 !== t.length
          ) {
            if (
              Array.isArray(o.items) &&
              (null === (i = o.items) || void 0 === i ? void 0 : i.length) ===
                0 &&
              0 !== t.length
            )
              throw new nZ([
                {
                  instancePath: "/0",
                  schemaPath: "/",
                  keyword: "required",
                  message: "empty schema against data can not be validated",
                  params: t,
                },
              ]);
            return this._validator.validate(o, t, r);
          }
        }
      }
      let iR = new iB();
      function iN(e) {
        var t, r;
        return (
          e instanceof Uint8Array ||
          (null === (t = null == e ? void 0 : e.constructor) || void 0 === t
            ? void 0
            : t.name) === "Uint8Array" ||
          (null === (r = null == e ? void 0 : e.constructor) || void 0 === r
            ? void 0
            : r.name) === "Buffer"
        );
      }
      function iM(...e) {
        let t = new Uint8Array(e.reduce((e, t) => e + t.length, 0)),
          r = 0;
        for (let n of e) t.set(n, r), (r += n.length);
        return t;
      }
      function ij(e, t) {
        if (e === t) return !0;
        if (e.byteLength !== t.byteLength) return !1;
        for (let r = 0; r < e.byteLength; r += 1) if (e[r] !== t[r]) return !1;
        return !0;
      }
      let iF = {
          noether: BigInt(0),
          wei: BigInt(1),
          kwei: BigInt(1e3),
          Kwei: BigInt(1e3),
          babbage: BigInt(1e3),
          femtoether: BigInt(1e3),
          mwei: BigInt(1e6),
          Mwei: BigInt(1e6),
          lovelace: BigInt(1e6),
          picoether: BigInt(1e6),
          gwei: BigInt(1e9),
          Gwei: BigInt(1e9),
          shannon: BigInt(1e9),
          nanoether: BigInt(1e9),
          nano: BigInt(1e9),
          szabo: BigInt(1e12),
          microether: BigInt(1e12),
          micro: BigInt(1e12),
          finney: BigInt(1e15),
          milliether: BigInt(1e15),
          milli: BigInt(1e15),
          ether: BigInt("1000000000000000000"),
          kether: BigInt("1000000000000000000000"),
          grand: BigInt("1000000000000000000000"),
          mether: BigInt("1000000000000000000000000"),
          gether: BigInt("1000000000000000000000000000"),
          tether: BigInt("1000000000000000000000000000000"),
        },
        iL =
          "Warning: Using type `number` with values that are large or contain many decimals may cause loss of precision, it is recommended to use type `string` or `BigInt` when using conversion methods",
        iD = (e) => {
          if ((iR.validate(["bytes"], [e]), iN(e))) return e;
          if (Array.isArray(e)) return new Uint8Array(e);
          if ("string" == typeof e) return il(e);
          throw new tf(e);
        },
        { uint8ArrayToHexString: iU } = G,
        iH = (e) => iU(iD(e)),
        i$ = (e) =>
          "string" == typeof e && "0x" !== e.slice(0, 2).toLowerCase()
            ? iD(`0x${e}`)
            : iD(e),
        iz = (e) => (iR.validate(["hex"], [e]), it(e)),
        iG = iz,
        iq = (e, t) => {
          "bigint" != typeof e && iR.validate(["int"], [e]);
          let r = ir(e);
          return (
            t &&
              (r.startsWith("-") || r.length % 2 != 1
                ? r.length % 2 == 0 &&
                  r.startsWith("-") &&
                  (r = "-0x0".concat(r.slice(3)))
                : (r = "0x0".concat(r.slice(2)))),
            r
          );
        },
        iW = iq,
        iV = (e) => iz(e).toString(),
        iZ = (e) => {
          iR.validate(["string"], [e]);
          let t = e.replace(/^(?:\u0000)/, "");
          return (
            (t = t.replace(/(?:\u0000)$/, "")), iH(new TextEncoder().encode(t))
          );
        },
        iK = iZ,
        iQ = iZ,
        iJ = (e) => (0, tQ.AE)(i$(e)),
        iY = (e) =>
          "string" == typeof e
            ? iJ(e)
            : (iR.validate(["bytes"], [e]), (0, tQ.AE)(e)),
        iX = tQ.AI,
        i0 = iJ,
        i1 = (e) => {
          iR.validate(["string"], [e]);
          let t = "";
          for (let r = 0; r < e.length; r += 1) {
            let n = e.charCodeAt(r).toString(16);
            t += n.length % 2 != 0 ? `0${n}` : n;
          }
          return `0x${t}`;
        },
        i2 = i1,
        i6 = (e) => new TextDecoder("ascii").decode(i$(e)),
        i5 = i6,
        i3 = (e, t) => {
          if ("string" == typeof e && ip(e))
            return t ? "address" : `0x${e.toLowerCase().replace(/^0x/i, "")}`;
          if ("boolean" == typeof e) return t ? "bool" : e ? "0x01" : "0x00";
          if ("number" == typeof e)
            return t ? (e < 0 ? "int256" : "uint256") : iq(e);
          if ("bigint" == typeof e) return t ? "bigint" : iq(e);
          if (iN(e)) return t ? "bytes" : iH(e);
          if ("object" == typeof e && e)
            return t ? "string" : iZ(JSON.stringify(e));
          if ("string" == typeof e) {
            if (e.startsWith("-0x") || e.startsWith("-0X"))
              return t ? "int256" : iq(e);
            if (nY(e)) return t ? "bytes" : e;
            if (n0(e) && !iy(e) && !ig(e)) return t ? "bytes" : `0x${e}`;
            if (n0(e) && !iy(e) && ig(e)) return t ? "uint" : iq(e);
            if (!Number.isFinite(e)) return t ? "string" : iZ(e);
          }
          throw new tb(e);
        },
        i8 = (e) => {
          if ("number" == typeof e)
            return e > 1e20 ? (console.warn(iL), BigInt(e)) : e;
          if ("bigint" == typeof e)
            return e >= Number.MIN_SAFE_INTEGER && e <= Number.MAX_SAFE_INTEGER
              ? Number(e)
              : e;
          if ("string" == typeof e && nY(e)) return iz(e);
          try {
            return i8(BigInt(e));
          } catch (t) {
            throw new th(e);
          }
        },
        i4 = (e) => {
          if ("number" == typeof e) return BigInt(e);
          if ("bigint" == typeof e) return e;
          if ("string" == typeof e && n0(e))
            return e.startsWith("-") ? -BigInt(e.substring(1)) : BigInt(e);
          throw new th(e);
        },
        i9 = (e, t) => {
          let r;
          if ("string" == typeof t) {
            if (!(r = iF[t])) throw new tg(t);
          } else {
            if (t < 0 || !Number.isInteger(t)) throw new ty(t);
            r = im(BigInt(10), BigInt(t));
          }
          let n = String(i8(e)),
            i = r.toString().length - 1;
          if (i <= 0) return n.toString();
          let o = n.padStart(i, "0"),
            a = o.slice(0, -i),
            s = o.slice(-i).replace(/\.?0+$/, "");
          return "" === a
            ? s
              ? `0.${s}`
              : "0"
            : "" === s
            ? a
            : `${a}.${s}`.slice(0, a.length + i + 1);
        },
        i7 = (e, t) => {
          let r;
          if ((iR.validate(["number"], [e]), "string" == typeof t)) {
            if (!(r = iF[t])) throw new tg(t);
          } else {
            if (t < 0 || !Number.isInteger(t)) throw new ty(t);
            r = im(BigInt(10), BigInt(t));
          }
          let n = e;
          "number" == typeof n &&
            (n < 1e-15 && console.warn(iL),
            n > 1e20
              ? (console.warn(iL), (n = BigInt(n)))
              : (n = n.toLocaleString("fullwide", {
                  useGrouping: !1,
                  maximumFractionDigits: 20,
                })));
          let [i, o] = String("string" != typeof n || nY(n) ? i8(n) : n)
              .split(".")
              .concat(""),
            a = BigInt(`${i}${o}`) * r,
            s = o.length;
          return 0 === s ? a.toString() : a.toString().slice(0, -s);
        },
        oe = (e) => {
          if (!ip(e, !1)) throw new tp(e);
          let t = e.toLowerCase().replace(/^0x/i, ""),
            r = io((0, tK.So)(iu(iX(t))));
          if (
            iI(r) ||
            "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470" ===
              r
          )
            return "";
          let n = "0x",
            i = r.replace(/^0x/i, "");
          for (let e = 0; e < t.length; e += 1)
            parseInt(i[e], 16) > 7 ? (n += t[e].toUpperCase()) : (n += t[e]);
          return n;
        },
        ot = (e) => {
          if ("boolean" == typeof e) return e;
          if (
            ("number" == typeof e && (0 === e || 1 === e)) ||
            ("bigint" == typeof e && (e === BigInt(0) || e === BigInt(1)))
          )
            return !!e;
          if (
            "string" == typeof e &&
            !nY(e) &&
            ("1" === e || "0" === e || "false" === e || "true" === e)
          )
            return "true" === e || ("false" !== e && !!Number(e));
          if ("string" == typeof e && nY(e) && ("0x1" === e || "0x0" === e))
            return !!i8(e);
          throw new tw(e);
        };
      var or = r(29761);
      class on extends or.A {
        constructor() {
          super(...arguments), (this.maxListeners = Number.MAX_SAFE_INTEGER);
        }
        setMaxListeners(e) {
          return (this.maxListeners = e), this;
        }
        getMaxListeners() {
          return this.maxListeners;
        }
      }
      let oi = nY,
        oo = n0,
        oa = ih,
        os = ip,
        ol = iA,
        ou = iE,
        oc = (e, t) => !!(iA(e) && ip(t)) && iE(e, ii(t, 64)),
        od = (e, t) => !!(iA(e) && ip(t)) && iE(e, t),
        of = iP,
        oh = (e, t) => !!(iA(e) && iP(t)) && iE(e, t),
        op = (e, t) => {
          let r = "string" == typeof e && iw(e),
            n = "string" == typeof t && iw(t);
          if (
            e === t ||
            (("earliest" === e || 0 === e) && ("earliest" === t || 0 === t))
          )
            return 0;
          if ("earliest" === e) return -1;
          if ("earliest" === t) return 1;
          if (r && n) {
            let r = {
              [E.EARLIEST]: 1,
              [E.FINALIZED]: 2,
              [E.SAFE]: 3,
              [E.LATEST]: 4,
              [E.PENDING]: 5,
            };
            return r[e] < r[t] ? -1 : 1;
          }
          if ((r && !n) || (!r && n))
            throw new tk(
              "Cannot compare blocktag with provided non-blocktag input."
            );
          let i = BigInt(e),
            o = BigInt(t);
          return i < o ? -1 : i === o ? 0 : 1;
        },
        om = (e) =>
          "object" == typeof e &&
          !iI(e) &&
          0 !== Object.keys(e).length &&
          [
            "input",
            "data",
            "from",
            "gas",
            "gasPrice",
            "gasLimit",
            "address",
            "jsonInterface",
            "syncWithContext",
            "dataInputFill",
          ].some((t) => t in e),
        og = iI,
        oy = (e) =>
          "object" == typeof e &&
          !iI(e) &&
          !Array.isArray(e) &&
          !(e instanceof J),
        ob = (e, ...t) => {
          if (!oy(e)) return e;
          let r = Object.assign({}, e);
          for (let e of t)
            for (let t in e)
              oy(e[t])
                ? (r[t] || (r[t] = {}), (r[t] = ob(r[t], e[t])))
                : !iI(e[t]) &&
                  Object.hasOwnProperty.call(e, t) &&
                  (Array.isArray(e[t]) || e[t] instanceof J
                    ? (r[t] = e[t].slice(0))
                    : (r[t] = e[t]));
          return r;
        },
        ov = (e, t, r = "0") =>
          "string" == typeof e
            ? nY(e)
              ? ii(e, t, r)
              : e.padStart(t, r)
            : (iR.validate(["int"], [e]), ii(e, t, r)),
        ow = (e, t, r = "0") => {
          if ("string" == typeof e && !nY(e)) return e.padEnd(t, r);
          let n = "string" == typeof e && nY(e) ? e : iq(e),
            i = n.startsWith("-") ? 3 : 2;
          return (
            iR.validate([n.startsWith("-") ? "int" : "uint"], [e]),
            n.padEnd(t + i, r)
          );
        },
        ox = ow,
        oA = ov,
        oE = (e, t = 64) => {
          iR.validate(["int"], [e]);
          let r = i8(e);
          if (r >= 0) return ov(i3(r), t);
          let n = im(BigInt(2), BigInt(4 * t));
          if (-r >= n) throw new tv(`value: ${e}, nibbleWidth: ${t}`);
          return ov(iq(BigInt(r) + n), t);
        },
        ok = (e, t = 64) => {
          iR.validate(["int"], [e]);
          let r = i8(e);
          if (r < 0) return r;
          let n = Math.ceil(Math.log(Number(r)) / Math.log(2));
          if (n > 4 * t) throw new tv(`value: "${e}", nibbleWidth: "${t}"`);
          if (4 * t !== n) return r;
          let i = im(BigInt(2), BigInt(t) * BigInt(4));
          return i8(BigInt(r) - i);
        },
        { parseBaseType: oI } = G,
        oS = (e) =>
          "object" == typeof e && !iI(e) && "number" in e && "bytes" in e,
        oP = (e, t, r = []) => {
          let n,
            i = Object.assign({}, e);
          for (let e of t) {
            if (i.oneOf && n) {
              let e = n,
                t = r.find(([t]) => t === e);
              t && t[0] === n && (i = i.oneOf[t[1]]);
            }
            if (!i.properties && !i.items) return;
            i.properties
              ? (i = i.properties[e])
              : i.items && i.items.properties
              ? (i = i.items.properties[e])
              : i.items && iS(i.items)
              ? (i = i.items)
              : i.items &&
                Array.isArray(i.items) &&
                (i = i.items[parseInt(e, 10)]),
              i && e && (n = e);
          }
          return i;
        },
        oT = (e, t, r) => {
          try {
            let { baseType: n, baseTypeSize: i } = oI(t);
            if ("int" === n || "uint" === n)
              switch (r.number) {
                case x.NUMBER:
                  return Number(i4(e));
                case x.HEX:
                  return iq(i4(e));
                case x.STR:
                  return i4(e).toString();
                case x.BIGINT:
                  return i4(e);
                default:
                  throw new eP(`Invalid format: ${String(r.number)}`);
              }
            if ("bytes" === n) {
              let t;
              switch (
                (i
                  ? "string" == typeof e
                    ? (t = ov(e, 2 * i))
                    : iN(e) && (t = iM(new Uint8Array(i - e.length), e))
                  : (t = e),
                r.bytes)
              ) {
                case A.HEX:
                  return iH(iD(t));
                case A.UINT8ARRAY:
                  return iD(t);
                default:
                  throw new eP(`Invalid format: ${String(r.bytes)}`);
              }
            }
            if ("string" === n) return String(e);
          } catch (e) {}
          return e;
        },
        oC = ({
          value: e,
          schemaProp: t,
          schema: r,
          object: n,
          key: i,
          dataPath: o,
          format: a,
          oneOfPath: s = [],
        }) => {
          var l, u;
          if (Array.isArray(e)) {
            let c = t;
            if (
              ((null == t ? void 0 : t.oneOf) !== void 0 &&
                t.oneOf.forEach((r, n) => {
                  var o, a;
                  Array.isArray(null == t ? void 0 : t.items) ||
                    (("object" != typeof e[0] ||
                      (null === (o = null == r ? void 0 : r.items) ||
                      void 0 === o
                        ? void 0
                        : o.type) !== "object") &&
                      ("string" != typeof e[0] ||
                        (null === (a = null == r ? void 0 : r.items) ||
                        void 0 === a
                          ? void 0
                          : a.type) === "object")) ||
                    ((c = r), s.push([i, n]));
                }),
              iI(null == c ? void 0 : c.items))
            )
              return delete n[i], o.pop(), !0;
            if (iS(c.items) && !iI(c.items.format)) {
              for (let t = 0; t < e.length; t += 1)
                n[i][t] = oT(
                  e[t],
                  null === (l = null == c ? void 0 : c.items) || void 0 === l
                    ? void 0
                    : l.format,
                  a
                );
              return o.pop(), !0;
            }
            if (
              !Array.isArray(null == c ? void 0 : c.items) &&
              (null === (u = null == c ? void 0 : c.items) || void 0 === u
                ? void 0
                : u.type) === "object"
            ) {
              for (let t of e) oO(t, r, o, a, s);
              return o.pop(), !0;
            }
            if (Array.isArray(null == c ? void 0 : c.items)) {
              for (let t = 0; t < e.length; t += 1)
                n[i][t] = oT(e[t], c.items[t].format, a);
              return o.pop(), !0;
            }
          }
          return !1;
        },
        oO = (e, t, r, n, i = []) => {
          var o;
          if (!iS(e) && !Array.isArray(e))
            return oT(e, null == t ? void 0 : t.format, n);
          if (
            Array.isArray(e) &&
            (null == t ? void 0 : t.type) === "array" &&
            (null === (o = null == t ? void 0 : t.items) || void 0 === o
              ? void 0
              : o.type) === "object"
          )
            oC({
              value: e,
              schemaProp: t,
              schema: t,
              object: e,
              key: "",
              dataPath: r,
              format: n,
              oneOfPath: i,
            });
          else
            for (let [o, a] of Object.entries(e)) {
              r.push(o);
              let s = oP(t, r, i);
              if (iI(s)) {
                delete e[o], r.pop();
                continue;
              }
              if (iS(a)) {
                oO(a, t, r, n, i), r.pop();
                continue;
              }
              if (
                !oC({
                  value: a,
                  schemaProp: s,
                  schema: t,
                  object: e,
                  key: o,
                  dataPath: r,
                  format: n,
                  oneOfPath: i,
                })
              ) {
                if (
                  (null == s ? void 0 : s.format) === void 0 &&
                  (null == s ? void 0 : s.oneOf) !== void 0
                ) {
                  for (let [e, t] of s.oneOf.entries())
                    if ((null == t ? void 0 : t.format) !== void 0) {
                      s = t;
                      break;
                    }
                }
                (e[o] = oT(a, s.format, n)), r.pop();
              }
            }
          return e;
        },
        o_ = (e, t, r = K) => {
          let n;
          n = iS(t) ? ob({}, t) : Array.isArray(t) ? [...t] : t;
          let i = iS(e) ? e : n4(e);
          if (!i.properties && !i.items && !i.format)
            throw new eP("Invalid json schema for formatting");
          return oO(n, i, [], r);
        },
        oB =
          "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
        oR = (e) => {
          let t;
          return (
            (t =
              "bigint" == typeof e || "number" == typeof e
                ? (0, tQ.AI)(e.toString())
                : Array.isArray(e)
                ? new Uint8Array(e)
                : "string" != typeof e || nY(e)
                ? iD(e)
                : (0, tQ.AI)(e)),
            iH((0, tK.So)(iu(t)))
          );
        },
        oN = (e) => {
          let t = oR(
            "string" == typeof e
              ? e.startsWith("0x") && nY(e)
                ? i$(e)
                : (0, tQ.AI)(e)
              : e
          );
          return t === oB ? void 0 : t;
        },
        oM = (e) => {
          let t = oN(e);
          return iI(t) ? oB : t;
        },
        oj = (e) => {
          let t, r;
          if (Array.isArray(e))
            throw Error("Autodetection of array types is not supported.");
          if (
            "object" == typeof e &&
            ("t" in e || "type" in e) &&
            ("v" in e || "value" in e)
          )
            (t = "t" in e ? e.t : e.type),
              (r = "v" in e ? e.v : e.value),
              (t = "bigint" === t.toLowerCase() ? "int" : t);
          else {
            if ("bigint" == typeof e) return ["int", e];
            (t = i3(e, !0)),
              (r = i3(e)),
              t.startsWith("int") || t.startsWith("uint") || (t = "bytes");
          }
          return (
            (t.startsWith("int") || t.startsWith("uint")) &&
              "string" == typeof r &&
              !/^(-)?0x/i.test(r) &&
              (r = i4(r)),
            [t, r]
          );
        },
        oF = (e) =>
          e.startsWith("int[")
            ? `int256${e.slice(3)}`
            : "int" === e
            ? "int256"
            : e.startsWith("uint[")
            ? `uint256'${e.slice(4)}`
            : "uint" === e
            ? "uint256"
            : e,
        oL = (e, t) => {
          let r = /^(\d+).*$/.exec(e.slice(t));
          return r ? parseInt(r[1], 10) : 0;
        },
        oD = (e) => e.toString(2).length,
        oU = (e, t) => {
          let r = t.toString();
          if ("string" === e) {
            if ("string" == typeof t) return iZ(t);
            throw new tm(t);
          }
          if ("bool" === e || "boolean" === e) {
            if ("boolean" == typeof t) return t ? "01" : "00";
            throw new tw(t);
          }
          if ("address" === e) {
            if (!ip(r)) throw new tp(r);
            return r;
          }
          let n = oF(e);
          if (e.startsWith("uint")) {
            let e = oL(n, 4);
            if (e % 8 || e < 8 || e > 256) throw new tA(r);
            let t = i8(r);
            if (oD(t) > e) throw new tE(r);
            if (t < BigInt(0)) throw new tx(r);
            return e ? oA(t.toString(16), (e / 8) * 2) : t.toString(16);
          }
          if (e.startsWith("int")) {
            let t = oL(n, 3);
            if (t % 8 || t < 8 || t > 256) throw new tA(e);
            let i = i8(r);
            if (oD(i) > t) throw new tE(r);
            return i < BigInt(0)
              ? oE(i.toString(), (t / 8) * 2)
              : t
              ? oA(i.toString(16), t / 4)
              : i.toString(16);
          }
          if ("bytes" === n) {
            if (r.replace(/^0x/i, "").length % 2 != 0) throw new tf(r);
            return r;
          }
          if (e.startsWith("bytes")) {
            if (r.replace(/^0x/i, "").length % 2 != 0) throw new tf(r);
            let t = oL(e, 5);
            if (!t || t < 1 || t > 64 || t < r.replace(/^0x/i, "").length / 2)
              throw new tf(r);
            return ox(r, 2 * t);
          }
          return "";
        },
        oH = (e) => {
          let [t, r] = oj(e);
          return Array.isArray(r)
            ? r.map((e) => oU(t, e).replace("0x", "")).join("")
            : oU(t, r).replace("0x", "");
        },
        o$ = (...e) => {
          let t = e.map(oH);
          return `0x${t.join("").toLowerCase()}`;
        },
        oz = (...e) => oN(o$(...e)),
        oG = (...e) => oM(o$(...e)),
        oq = (e) =>
          oN(
            `0x${("number" == typeof e ? e.toString() : e).padStart(64, "0")}`
          );
      var oW = r(86865);
      let oV = (e) => (0, oW.po)(e),
        oZ = (e) => iH(oV(e));
      var oK = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      function oQ(e) {
        return (
          ("object" == typeof e || "function" == typeof e) &&
          "function" == typeof e.then
        );
      }
      function oJ(e, t, r) {
        return oK(this, void 0, void 0, function* () {
          let n;
          let i = yield Promise.race([
            e instanceof Promise ? e : e(),
            new Promise((e, i) => {
              n = setTimeout(() => (r ? i(r) : e(void 0)), t);
            }),
          ]);
          if ((n && clearTimeout(n), i instanceof Error)) throw i;
          return i;
        });
      }
      function oY(e, t) {
        let r;
        return [
          new Promise((n, i) => {
            r = setInterval(
              (function o() {
                return (
                  oK(this, void 0, void 0, function* () {
                    try {
                      let i = yield oJ(e, t);
                      iI(i) || (clearInterval(r), n(i));
                    } catch (e) {
                      clearInterval(r), i(e);
                    }
                  }),
                  o
                );
              })(),
              t
            );
          }),
          r,
        ];
      }
      function oX(e, t) {
        return oK(this, void 0, void 0, function* () {
          return oY(e, t)[0];
        });
      }
      function o0(e, t) {
        let r;
        let n = new Promise((n, i) => {
          r = setTimeout(() => {
            i(t);
          }, e);
        });
        return [r, n];
      }
      function o1(e, t) {
        let r;
        let n = new Promise((n, i) => {
          r = setInterval(() => {
            oK(this, void 0, void 0, function* () {
              let t = yield e();
              t && (clearInterval(r), i(t));
            });
          }, t);
        });
        return [r, n];
      }
      let o2 = () => {
          let e = oV(16);
          (e[6] = (15 & e[6]) | 64), (e[8] = (63 & e[8]) | 128);
          let t = iH(e);
          return [
            t.substring(2, 10),
            t.substring(10, 14),
            t.substring(14, 18),
            t.substring(18, 22),
            t.substring(22, 34),
          ].join("-");
        },
        o6 = (e) => {
          let t = e.error.code;
          return tV.has(t) || (t >= -32099 && t <= -32e3);
        },
        o5 = (e) =>
          !Array.isArray(e) &&
          !!e &&
          "2.0" === e.jsonrpc &&
          "result" in e &&
          iI(e.error) &&
          ("number" == typeof e.id || "string" == typeof e.id),
        o3 = (e) =>
          !Array.isArray(e) &&
          "2.0" === e.jsonrpc &&
          !!e &&
          iI(e.result) &&
          "error" in e &&
          ("number" == typeof e.id || "string" == typeof e.id),
        o8 = (e) =>
          !Array.isArray(e) &&
          !!e &&
          "2.0" === e.jsonrpc &&
          !iI(e.params) &&
          !iI(e.method),
        o4 = (e) =>
          !Array.isArray(e) &&
          !!e &&
          "2.0" === e.jsonrpc &&
          "id" in e &&
          "result" in e,
        o9 = (e) => o5(e) || o3(e),
        o7 = (e) => (Array.isArray(e) ? e.every(o9) : o9(e)),
        ae = (e) => Array.isArray(e) && e.length > 0 && o7(e),
        at = (e) => {
          i = e;
        },
        ar = (e) => {
          var t, r, n, o;
          return (
            void 0 !== i && (i += 1),
            {
              jsonrpc: null !== (t = e.jsonrpc) && void 0 !== t ? t : "2.0",
              id:
                null !== (n = null !== (r = e.id) && void 0 !== r ? r : i) &&
                void 0 !== n
                  ? n
                  : o2(),
              method: e.method,
              params: null !== (o = e.params) && void 0 !== o ? o : void 0,
            }
          );
        },
        an = (e) => e.map((e) => ar(e)),
        ai = (e) => Array.isArray(e) && e.length > 0;
      var ao = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      class aa {
        constructor(
          { timeout: e, eagerStart: t, timeoutMessage: r } = {
            timeout: 0,
            eagerStart: !1,
            timeoutMessage: "DeferredPromise timed out",
          }
        ) {
          (this[C] = "Promise"),
            (this._state = "pending"),
            (this._promise = new Promise((e, t) => {
              (this._resolve = e), (this._reject = t);
            })),
            (this._timeoutMessage = r),
            (this._timeoutInterval = e),
            t && this.startTimer();
        }
        get state() {
          return this._state;
        }
        then(e, t) {
          return ao(this, void 0, void 0, function* () {
            return this._promise.then(e, t);
          });
        }
        catch(e) {
          return ao(this, void 0, void 0, function* () {
            return this._promise.catch(e);
          });
        }
        finally(e) {
          return ao(this, void 0, void 0, function* () {
            return this._promise.finally(e);
          });
        }
        resolve(e) {
          this._resolve(e), (this._state = "fulfilled"), this._clearTimeout();
        }
        reject(e) {
          this._reject(e), (this._state = "rejected"), this._clearTimeout();
        }
        startTimer() {
          this._timeoutInterval &&
            this._timeoutInterval > 0 &&
            (this._timeoutId = setTimeout(
              this._checkTimeout.bind(this),
              this._timeoutInterval
            ));
        }
        _checkTimeout() {
          "pending" === this._state &&
            this._timeoutId &&
            this.reject(new eC(this._timeoutMessage));
        }
        _clearTimeout() {
          this._timeoutId && clearTimeout(this._timeoutId);
        }
      }
      C = Symbol.toStringTag;
      class as {
        constructor(e, t) {
          (this.eventEmitter = e),
            (this.autoReconnect = t),
            (this.chunkTimeout = 15e3);
        }
        clearQueues() {
          "function" == typeof this._clearQueues && this._clearQueues();
        }
        onError(e) {
          this._clearQueues = e;
        }
        parseResponse(e) {
          let t = [];
          return (
            e
              .replace(/\}[\n\r]?\{/g, "}|--|{")
              .replace(/\}\][\n\r]?\[\{/g, "}]|--|[{")
              .replace(/\}[\n\r]?\[\{/g, "}|--|[{")
              .replace(/\}\][\n\r]?\{/g, "}]|--|{")
              .split("|--|")
              .forEach((e) => {
                let r,
                  n = e;
                this.lastChunk && (n = this.lastChunk + n);
                try {
                  r = JSON.parse(n);
                } catch (e) {
                  (this.lastChunk = n),
                    this.lastChunkTimeout &&
                      clearTimeout(this.lastChunkTimeout),
                    (this.lastChunkTimeout = setTimeout(() => {
                      this.autoReconnect ||
                        (this.clearQueues(),
                        this.eventEmitter.emit(
                          "error",
                          new tT({
                            id: 1,
                            jsonrpc: "2.0",
                            error: { code: 2, message: "Chunk timeout" },
                          })
                        ));
                    }, this.chunkTimeout));
                  return;
                }
                clearTimeout(this.lastChunkTimeout),
                  (this.lastChunk = void 0),
                  r && t.push(r);
              }),
            t
          );
        }
      }
      var al = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      class au extends ee {
        constructor() {
          super(...arguments),
            (this._eventEmitter = new or.b()),
            (this._chainId = ""),
            (this._accounts = []);
        }
        _getChainId() {
          return al(this, void 0, void 0, function* () {
            var e;
            let t = yield this.request(
              ar({ method: "eth_chainId", params: [] })
            );
            return null !== (e = null == t ? void 0 : t.result) && void 0 !== e
              ? e
              : "";
          });
        }
        _getAccounts() {
          return al(this, void 0, void 0, function* () {
            var e;
            let t = yield this.request(
              ar({ method: "eth_accounts", params: [] })
            );
            return null !== (e = null == t ? void 0 : t.result) && void 0 !== e
              ? e
              : [];
          });
        }
        _onConnect() {
          Promise.all([
            this._getChainId()
              .then((e) => {
                e !== this._chainId &&
                  ((this._chainId = e),
                  this._eventEmitter.emit("chainChanged", this._chainId));
              })
              .catch((e) => {
                console.error(e);
              }),
            this._getAccounts()
              .then((e) => {
                (this._accounts.length === e.length &&
                  e.every((t) => e.includes(t))) ||
                  ((this._accounts = e), this._onAccountsChanged());
              })
              .catch((e) => {
                console.error(e);
              }),
          ])
            .then(() =>
              this._eventEmitter.emit("connect", { chainId: this._chainId })
            )
            .catch((e) => {
              console.error(e);
            });
        }
        _onDisconnect(e, t) {
          this._eventEmitter.emit("disconnect", new tN(e, t));
        }
        _onAccountsChanged() {
          this._eventEmitter.emit("accountsChanged", this._accounts);
        }
      }
      var ac = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      let ad = { autoReconnect: !0, delay: 5e3, maxAttempts: 5 };
      class af extends au {
        get SocketConnection() {
          return this._socketConnection;
        }
        constructor(e, t, r) {
          if (
            (super(),
            (this._connectionStatus = "connecting"),
            (this._onMessageHandler = this._onMessage.bind(this)),
            (this._onOpenHandler = this._onConnect.bind(this)),
            (this._onCloseHandler = this._onCloseEvent.bind(this)),
            (this._onErrorHandler = this._onError.bind(this)),
            !this._validateProviderPath(e))
          )
            throw new eN(e);
          (this._socketPath = e),
            (this._socketOptions = t),
            (this._reconnectOptions = Object.assign(
              Object.assign({}, ad),
              null != r ? r : {}
            )),
            (this._pendingRequestsQueue = new Map()),
            (this._sentRequestsQueue = new Map()),
            this._init(),
            this.connect(),
            (this.chunkResponseParser = new as(
              this._eventEmitter,
              this._reconnectOptions.autoReconnect
            )),
            this.chunkResponseParser.onError(() => {
              this._clearQueues();
            }),
            (this.isReconnecting = !1);
        }
        _init() {
          this._reconnectAttempts = 0;
        }
        connect() {
          try {
            this._openSocketConnection(),
              (this._connectionStatus = "connecting"),
              this._addSocketListeners();
          } catch (e) {
            if (this.isReconnecting)
              setImmediate(() => {
                this._reconnect();
              });
            else {
              if (((this._connectionStatus = "disconnected"), e && e.message))
                throw new ep(
                  `Error while connecting to ${this._socketPath}. Reason: ${e.message}`
                );
              throw new eN(this._socketPath);
            }
          }
        }
        _validateProviderPath(e) {
          return !!e;
        }
        getPendingRequestQueueSize() {
          return this._pendingRequestsQueue.size;
        }
        getSentRequestsQueueSize() {
          return this._sentRequestsQueue.size;
        }
        supportsSubscriptions() {
          return !0;
        }
        on(e, t) {
          this._eventEmitter.on(e, t);
        }
        once(e, t) {
          this._eventEmitter.once(e, t);
        }
        removeListener(e, t) {
          this._eventEmitter.removeListener(e, t);
        }
        _onDisconnect(e, t) {
          (this._connectionStatus = "disconnected"), super._onDisconnect(e, t);
        }
        disconnect(e, t) {
          let r = null != e ? e : 1e3;
          this._removeSocketListeners(),
            "disconnected" !== this.getStatus() &&
              this._closeSocketConnection(r, t),
            this._onDisconnect(r, t);
        }
        safeDisconnect(e, t) {
          return ac(this, arguments, void 0, function* (e, t, r = !1, n = 1e3) {
            let i = 0;
            yield ac(this, void 0, void 0, function* () {
              return new Promise((e) => {
                let t = setInterval(() => {
                  r && i >= 5 && this.clearQueues(),
                    0 === this.getPendingRequestQueueSize() &&
                      0 === this.getSentRequestsQueueSize() &&
                      (clearInterval(t), e(!0)),
                    (i += 1);
                }, n);
              });
            }),
              this.disconnect(e, t);
          });
        }
        removeAllListeners(e) {
          this._eventEmitter.removeAllListeners(e);
        }
        _onError(e) {
          this.isReconnecting
            ? this._reconnect()
            : this._eventEmitter.emit("error", e);
        }
        reset() {
          this._sentRequestsQueue.clear(),
            this._pendingRequestsQueue.clear(),
            this._init(),
            this._removeSocketListeners(),
            this._addSocketListeners();
        }
        _reconnect() {
          this.isReconnecting ||
            ((this.isReconnecting = !0),
            this._sentRequestsQueue.size > 0 &&
              this._sentRequestsQueue.forEach((e, t) => {
                e.deferredPromise.reject(new ey()),
                  this._sentRequestsQueue.delete(t);
              }),
            this._reconnectAttempts < this._reconnectOptions.maxAttempts
              ? ((this._reconnectAttempts += 1),
                setTimeout(() => {
                  this._removeSocketListeners(),
                    this.connect(),
                    (this.isReconnecting = !1);
                }, this._reconnectOptions.delay))
              : ((this.isReconnecting = !1),
                this._clearQueues(),
                this._removeSocketListeners(),
                this._eventEmitter.emit(
                  "error",
                  new eg(this._reconnectOptions.maxAttempts)
                )));
        }
        request(e) {
          return ac(this, void 0, void 0, function* () {
            if (og(this._socketConnection))
              throw Error("Connection is undefined");
            "disconnected" === this.getStatus() && this.connect();
            let t = ai(e) ? e[0].id : e.id;
            if (!t) throw new ej("Request Id not defined");
            if (this._sentRequestsQueue.has(t)) throw new eb(t);
            let r = new aa();
            r.catch((e) => {
              this._eventEmitter.emit("error", e);
            });
            let n = { payload: e, deferredPromise: r };
            if ("connecting" === this.getStatus())
              return this._pendingRequestsQueue.set(t, n), n.deferredPromise;
            this._sentRequestsQueue.set(t, n);
            try {
              this._sendToSocket(n.payload);
            } catch (e) {
              this._sentRequestsQueue.delete(t),
                this._eventEmitter.emit("error", e);
            }
            return r;
          });
        }
        _onConnect() {
          (this._connectionStatus = "connected"),
            (this._reconnectAttempts = 0),
            super._onConnect(),
            this._sendPendingRequests();
        }
        _sendPendingRequests() {
          for (let [e, t] of this._pendingRequestsQueue.entries())
            try {
              this._sendToSocket(t.payload),
                this._pendingRequestsQueue.delete(e),
                this._sentRequestsQueue.set(e, t);
            } catch (t) {
              this._pendingRequestsQueue.delete(e),
                this._eventEmitter.emit("error", t);
            }
        }
        _onMessage(e) {
          let t = this._parseResponses(e);
          if (!og(t) && 0 !== t.length)
            for (let e of t) {
              if (o8(e) && e.method.endsWith("_subscription")) {
                this._eventEmitter.emit("message", e);
                return;
              }
              let t = ae(e) ? e[0].id : e.id,
                r = this._sentRequestsQueue.get(t);
              if (!r) return;
              (ae(e) || o5(e) || o3(e)) &&
                (this._eventEmitter.emit("message", e),
                r.deferredPromise.resolve(e)),
                this._sentRequestsQueue.delete(t);
            }
        }
        clearQueues(e) {
          this._clearQueues(e);
        }
        _clearQueues(e) {
          this._pendingRequestsQueue.size > 0 &&
            this._pendingRequestsQueue.forEach((t, r) => {
              t.deferredPromise.reject(new em(e)),
                this._pendingRequestsQueue.delete(r);
            }),
            this._sentRequestsQueue.size > 0 &&
              this._sentRequestsQueue.forEach((t, r) => {
                t.deferredPromise.reject(new em(e)),
                  this._sentRequestsQueue.delete(r);
              }),
            this._removeSocketListeners();
        }
      }
      class ah {
        constructor() {
          this._emitter = new on();
        }
        on(e, t) {
          this._emitter.on(e, t);
        }
        once(e, t) {
          this._emitter.once(e, t);
        }
        off(e, t) {
          this._emitter.off(e, t);
        }
        emit(e, t) {
          this._emitter.emit(e, t);
        }
        listenerCount(e) {
          return this._emitter.listenerCount(e);
        }
        listeners(e) {
          return this._emitter.listeners(e);
        }
        eventNames() {
          return this._emitter.eventNames();
        }
        removeAllListeners() {
          return this._emitter.removeAllListeners();
        }
        setMaxListenerWarningThreshold(e) {
          this._emitter.setMaxListeners(e);
        }
        getMaxListeners() {
          return this._emitter.getMaxListeners();
        }
      }
      (O || (O = {})).CONFIG_CHANGE = "CONFIG_CHANGE";
      class ap extends ah {
        constructor(e) {
          super(),
            (this.config = {
              handleRevert: !1,
              defaultAccount: void 0,
              defaultBlock: "latest",
              transactionBlockTimeout: 50,
              transactionConfirmationBlocks: 24,
              transactionPollingInterval: 1e3,
              transactionPollingTimeout: 75e4,
              transactionReceiptPollingInterval: void 0,
              transactionSendTimeout: 75e4,
              transactionConfirmationPollingInterval: void 0,
              blockHeaderTimeout: 10,
              maxListenersWarningThreshold: 100,
              contractDataInputFill: "data",
              defaultNetworkId: void 0,
              defaultChain: "mainnet",
              defaultHardfork: "london",
              defaultCommon: void 0,
              defaultTransactionType: "0x2",
              defaultMaxPriorityFeePerGas: i3(25e8),
              enableExperimentalFeatures: {
                useSubscriptionWhenCheckingBlockTimeout: !1,
                useRpcCallSpecification: !1,
              },
              transactionBuilder: void 0,
              transactionTypeParser: void 0,
              customTransactionSchema: void 0,
              defaultReturnFormat: K,
              ignoreGasPricing: !1,
            }),
            this.setConfig(null != e ? e : {});
        }
        setConfig(e) {
          for (let t of Object.keys(e))
            this._triggerConfigChange(t, e[t]),
              og(e[t]) ||
                "number" != typeof e[t] ||
                "maxListenersWarningThreshold" !== t ||
                this.setMaxListenerWarningThreshold(Number(e[t]));
          Object.assign(this.config, e);
        }
        get handleRevert() {
          return this.config.handleRevert;
        }
        set handleRevert(e) {
          this._triggerConfigChange("handleRevert", e),
            (this.config.handleRevert = e);
        }
        get contractDataInputFill() {
          return this.config.contractDataInputFill;
        }
        set contractDataInputFill(e) {
          this._triggerConfigChange("contractDataInputFill", e),
            (this.config.contractDataInputFill = e);
        }
        get defaultAccount() {
          return this.config.defaultAccount;
        }
        set defaultAccount(e) {
          this._triggerConfigChange("defaultAccount", e),
            (this.config.defaultAccount = e);
        }
        get defaultBlock() {
          return this.config.defaultBlock;
        }
        set defaultBlock(e) {
          this._triggerConfigChange("defaultBlock", e),
            (this.config.defaultBlock = e);
        }
        get transactionSendTimeout() {
          return this.config.transactionSendTimeout;
        }
        set transactionSendTimeout(e) {
          this._triggerConfigChange("transactionSendTimeout", e),
            (this.config.transactionSendTimeout = e);
        }
        get transactionBlockTimeout() {
          return this.config.transactionBlockTimeout;
        }
        set transactionBlockTimeout(e) {
          this._triggerConfigChange("transactionBlockTimeout", e),
            (this.config.transactionBlockTimeout = e);
        }
        get transactionConfirmationBlocks() {
          return this.config.transactionConfirmationBlocks;
        }
        set transactionConfirmationBlocks(e) {
          this._triggerConfigChange("transactionConfirmationBlocks", e),
            (this.config.transactionConfirmationBlocks = e);
        }
        get transactionPollingInterval() {
          return this.config.transactionPollingInterval;
        }
        set transactionPollingInterval(e) {
          this._triggerConfigChange("transactionPollingInterval", e),
            (this.config.transactionPollingInterval = e),
            (this.transactionReceiptPollingInterval = e),
            (this.transactionConfirmationPollingInterval = e);
        }
        get transactionPollingTimeout() {
          return this.config.transactionPollingTimeout;
        }
        set transactionPollingTimeout(e) {
          this._triggerConfigChange("transactionPollingTimeout", e),
            (this.config.transactionPollingTimeout = e);
        }
        get transactionReceiptPollingInterval() {
          return this.config.transactionReceiptPollingInterval;
        }
        set transactionReceiptPollingInterval(e) {
          this._triggerConfigChange("transactionReceiptPollingInterval", e),
            (this.config.transactionReceiptPollingInterval = e);
        }
        get transactionConfirmationPollingInterval() {
          return this.config.transactionConfirmationPollingInterval;
        }
        set transactionConfirmationPollingInterval(e) {
          this._triggerConfigChange(
            "transactionConfirmationPollingInterval",
            e
          ),
            (this.config.transactionConfirmationPollingInterval = e);
        }
        get blockHeaderTimeout() {
          return this.config.blockHeaderTimeout;
        }
        set blockHeaderTimeout(e) {
          this._triggerConfigChange("blockHeaderTimeout", e),
            (this.config.blockHeaderTimeout = e);
        }
        get enableExperimentalFeatures() {
          return this.config.enableExperimentalFeatures;
        }
        set enableExperimentalFeatures(e) {
          this._triggerConfigChange("enableExperimentalFeatures", e),
            (this.config.enableExperimentalFeatures = e);
        }
        get maxListenersWarningThreshold() {
          return this.config.maxListenersWarningThreshold;
        }
        set maxListenersWarningThreshold(e) {
          this._triggerConfigChange("maxListenersWarningThreshold", e),
            this.setMaxListenerWarningThreshold(e),
            (this.config.maxListenersWarningThreshold = e);
        }
        get defaultReturnFormat() {
          return this.config.defaultReturnFormat;
        }
        set defaultReturnFormat(e) {
          this._triggerConfigChange("defaultReturnFormat", e),
            (this.config.defaultReturnFormat = e);
        }
        get defaultNetworkId() {
          return this.config.defaultNetworkId;
        }
        set defaultNetworkId(e) {
          this._triggerConfigChange("defaultNetworkId", e),
            (this.config.defaultNetworkId = e);
        }
        get defaultChain() {
          return this.config.defaultChain;
        }
        set defaultChain(e) {
          if (
            !og(this.config.defaultCommon) &&
            !og(this.config.defaultCommon.baseChain) &&
            e !== this.config.defaultCommon.baseChain
          )
            throw new tO(this.config.defaultChain, e);
          this._triggerConfigChange("defaultChain", e),
            (this.config.defaultChain = e);
        }
        get defaultHardfork() {
          return this.config.defaultHardfork;
        }
        set defaultHardfork(e) {
          if (
            !og(this.config.defaultCommon) &&
            !og(this.config.defaultCommon.hardfork) &&
            e !== this.config.defaultCommon.hardfork
          )
            throw new tC(this.config.defaultCommon.hardfork, e);
          this._triggerConfigChange("defaultHardfork", e),
            (this.config.defaultHardfork = e);
        }
        get defaultCommon() {
          return this.config.defaultCommon;
        }
        set defaultCommon(e) {
          if (
            !og(this.config.defaultHardfork) &&
            !og(e) &&
            !og(e.hardfork) &&
            this.config.defaultHardfork !== e.hardfork
          )
            throw new tC(this.config.defaultHardfork, e.hardfork);
          if (
            !og(this.config.defaultChain) &&
            !og(e) &&
            !og(e.baseChain) &&
            this.config.defaultChain !== e.baseChain
          )
            throw new tO(this.config.defaultChain, e.baseChain);
          this._triggerConfigChange("defaultCommon", e),
            (this.config.defaultCommon = e);
        }
        get ignoreGasPricing() {
          return this.config.ignoreGasPricing;
        }
        set ignoreGasPricing(e) {
          this._triggerConfigChange("ignoreGasPricing", e),
            (this.config.ignoreGasPricing = e);
        }
        get defaultTransactionType() {
          return this.config.defaultTransactionType;
        }
        set defaultTransactionType(e) {
          this._triggerConfigChange("defaultTransactionType", e),
            (this.config.defaultTransactionType = e);
        }
        get defaultMaxPriorityFeePerGas() {
          return this.config.defaultMaxPriorityFeePerGas;
        }
        set defaultMaxPriorityFeePerGas(e) {
          this._triggerConfigChange("defaultMaxPriorityFeePerGas", e),
            (this.config.defaultMaxPriorityFeePerGas = e);
        }
        get transactionBuilder() {
          return this.config.transactionBuilder;
        }
        set transactionBuilder(e) {
          this._triggerConfigChange("transactionBuilder", e),
            (this.config.transactionBuilder = e);
        }
        get transactionTypeParser() {
          return this.config.transactionTypeParser;
        }
        set transactionTypeParser(e) {
          this._triggerConfigChange("transactionTypeParser", e),
            (this.config.transactionTypeParser = e);
        }
        get customTransactionSchema() {
          return this.config.customTransactionSchema;
        }
        set customTransactionSchema(e) {
          this._triggerConfigChange("customTransactionSchema", e),
            (this.config.customTransactionSchema = e);
        }
        _triggerConfigChange(e, t) {
          this.emit(O.CONFIG_CHANGE, {
            name: e,
            oldValue: this.config[e],
            newValue: t,
          });
        }
      }
      var am = r(95647);
      class ag extends ee {
        constructor(e, t) {
          if ((super(), !ag.validateClientUrl(e))) throw new eN(e);
          (this.clientUrl = e), (this.httpProviderOptions = t);
        }
        static validateClientUrl(e) {
          return "string" == typeof e && /^http(s)?:\/\//i.test(e);
        }
        getStatus() {
          throw new eT();
        }
        supportsSubscriptions() {
          return !1;
        }
        request(e, t) {
          var r, n, i, o, a;
          return (
            (n = this),
            (i = void 0),
            (o = void 0),
            (a = function* () {
              let n = Object.assign(
                  Object.assign(
                    {},
                    null === (r = this.httpProviderOptions) || void 0 === r
                      ? void 0
                      : r.providerOptions
                  ),
                  t
                ),
                i = yield am(
                  this.clientUrl,
                  Object.assign(Object.assign({}, n), {
                    method: "POST",
                    headers: Object.assign(Object.assign({}, n.headers), {
                      "Content-Type": "application/json",
                    }),
                    body: JSON.stringify(e),
                  })
                );
              if (!i.ok) throw new tP(yield i.json(), void 0, void 0, i.status);
              return yield i.json();
            }),
            new (o || (o = Promise))(function (e, t) {
              function r(e) {
                try {
                  l(a.next(e));
                } catch (e) {
                  t(e);
                }
              }
              function s(e) {
                try {
                  l(a.throw(e));
                } catch (e) {
                  t(e);
                }
              }
              function l(t) {
                var n;
                t.done
                  ? e(t.value)
                  : ((n = t.value) instanceof o
                      ? n
                      : new o(function (e) {
                          e(n);
                        })
                    ).then(r, s);
              }
              l((a = a.apply(n, i || [])).next());
            })
          );
        }
        on() {
          throw new eT();
        }
        removeListener() {
          throw new eT();
        }
        once() {
          throw new eT();
        }
        removeAllListeners() {
          throw new eT();
        }
        connect() {
          throw new eT();
        }
        disconnect() {
          throw new eT();
        }
        reset() {
          throw new eT();
        }
        reconnect() {
          throw new eT();
        }
      }
      var ay = null;
      "undefined" != typeof WebSocket
        ? (ay = WebSocket)
        : "undefined" != typeof MozWebSocket
        ? (ay = MozWebSocket)
        : void 0 !== r.g
        ? (ay = r.g.WebSocket || r.g.MozWebSocket)
        : "undefined" != typeof window
        ? (ay = window.WebSocket || window.MozWebSocket)
        : "undefined" != typeof self &&
          (ay = self.WebSocket || self.MozWebSocket);
      let ab = ay;
      class av extends af {
        constructor(e, t, r) {
          super(e, t, r);
        }
        _validateProviderPath(e) {
          return "string" == typeof e && /^ws(s)?:\/\//i.test(e);
        }
        getStatus() {
          if (this._socketConnection && !og(this._socketConnection))
            switch (this._socketConnection.readyState) {
              case this._socketConnection.CONNECTING:
                return "connecting";
              case this._socketConnection.OPEN:
                return "connected";
            }
          return "disconnected";
        }
        _openSocketConnection() {
          this._socketConnection = new ab(
            this._socketPath,
            void 0,
            this._socketOptions && 0 === Object.keys(this._socketOptions).length
              ? void 0
              : this._socketOptions
          );
        }
        _closeSocketConnection(e, t) {
          var r;
          null === (r = this._socketConnection) ||
            void 0 === r ||
            r.close(e, t);
        }
        _sendToSocket(e) {
          var t;
          if ("disconnected" === this.getStatus()) throw new em();
          null === (t = this._socketConnection) ||
            void 0 === t ||
            t.send(JSON.stringify(e));
        }
        _parseResponses(e) {
          return this.chunkResponseParser.parseResponse(e.data);
        }
        _addSocketListeners() {
          var e, t, r, n;
          null === (e = this._socketConnection) ||
            void 0 === e ||
            e.addEventListener("open", this._onOpenHandler),
            null === (t = this._socketConnection) ||
              void 0 === t ||
              t.addEventListener("message", this._onMessageHandler),
            null === (r = this._socketConnection) ||
              void 0 === r ||
              r.addEventListener("close", (e) => this._onCloseHandler(e)),
            null === (n = this._socketConnection) ||
              void 0 === n ||
              n.addEventListener("error", this._onErrorHandler);
        }
        _removeSocketListeners() {
          var e, t, r;
          null === (e = this._socketConnection) ||
            void 0 === e ||
            e.removeEventListener("message", this._onMessageHandler),
            null === (t = this._socketConnection) ||
              void 0 === t ||
              t.removeEventListener("open", this._onOpenHandler),
            null === (r = this._socketConnection) ||
              void 0 === r ||
              r.removeEventListener("close", this._onCloseHandler);
        }
        _onCloseEvent(e) {
          var t;
          if (
            this._reconnectOptions.autoReconnect &&
            (![1e3, 1001].includes(e.code) || !e.wasClean)
          ) {
            this._reconnect();
            return;
          }
          this._clearQueues(e),
            this._removeSocketListeners(),
            this._onDisconnect(e.code, e.reason),
            null === (t = this._socketConnection) ||
              void 0 === t ||
              t.removeEventListener("error", this._onErrorHandler);
        }
      }
      let aw = (e) => ee.isWeb3Provider(e),
        ax = (e) =>
          "string" != typeof e &&
          "request" in e &&
          "Function" === e.request.constructor.name,
        aA = (e) =>
          "string" != typeof e &&
          "request" in e &&
          "AsyncFunction" === e.request.constructor.name,
        aE = (e) => "string" != typeof e && "send" in e,
        ak = (e) => "string" != typeof e && "sendAsync" in e,
        aI = (e) => e && (aw(e) || aA(e) || ax(e) || ak(e) || aE(e)),
        aS = (e) =>
          e && "supportsSubscriptions" in e
            ? e.supportsSubscriptions()
            : !!e && "string" != typeof e && "on" in e;
      var aP = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      !(function (e) {
        (e.PROVIDER_CHANGED = "PROVIDER_CHANGED"),
          (e.BEFORE_PROVIDER_CHANGE = "BEFORE_PROVIDER_CHANGE");
      })(_ || (_ = {}));
      let aT = { HttpProvider: ag, WebsocketProvider: av };
      class aC extends ah {
        constructor(e, t, r) {
          super(),
            og(e) || this.setProvider(e),
            (this.useRpcCallSpecification = t),
            og(r) || (this.middleware = r);
        }
        static get providers() {
          return aT;
        }
        get provider() {
          return this._provider;
        }
        get providers() {
          return aT;
        }
        setProvider(e) {
          let t;
          if (e && "string" == typeof e && this.providers) {
            if (/^http(s)?:\/\//i.test(e))
              t = new this.providers.HttpProvider(e);
            else if (/^ws(s)?:\/\//i.test(e))
              t = new this.providers.WebsocketProvider(e);
            else throw new eR(`Can't autodetect provider for "${e}"`);
          } else t = og(e) ? void 0 : e;
          return (
            this.emit(_.BEFORE_PROVIDER_CHANGE, this._provider),
            (this._provider = t),
            this.emit(_.PROVIDER_CHANGED, this._provider),
            !0
          );
        }
        setMiddleware(e) {
          this.middleware = e;
        }
        send(e) {
          return aP(this, void 0, void 0, function* () {
            let t = Object.assign({}, e),
              r = yield this._sendRequest(t);
            if (
              (og(this.middleware) ||
                (r = yield this.middleware.processResponse(r)),
              o5(r))
            )
              return r.result;
            throw new tP(r);
          });
        }
        sendBatch(e) {
          return aP(this, void 0, void 0, function* () {
            return yield this._sendRequest(e);
          });
        }
        _sendRequest(e) {
          return aP(this, void 0, void 0, function* () {
            let { provider: t } = this;
            if (og(t))
              throw new eR(
                "Provider not available. Use `.setProvider` or `.provider=` to initialize the provider."
              );
            let r = ai(e) ? an(e) : ar(e);
            if (
              (og(this.middleware) ||
                (r = yield this.middleware.processRequest(r)),
              aw(t))
            ) {
              let e;
              try {
                e = yield t.request(r);
              } catch (t) {
                e = t;
              }
              return this._processJsonRpcResponse(r, e, {
                legacy: !1,
                error: !1,
              });
            }
            if (aA(t))
              return t
                .request(r)
                .then((e) =>
                  this._processJsonRpcResponse(r, e, { legacy: !0, error: !1 })
                )
                .catch((e) =>
                  this._processJsonRpcResponse(r, e, { legacy: !0, error: !0 })
                );
            if (ax(t))
              return new Promise((e, n) => {
                let i = (e) => {
                    n(
                      this._processJsonRpcResponse(r, e, {
                        legacy: !0,
                        error: !0,
                      })
                    );
                  },
                  o = (t) =>
                    e(
                      this._processJsonRpcResponse(r, t, {
                        legacy: !0,
                        error: !1,
                      })
                    ),
                  a = t.request(r, (e, t) => (e ? i(e) : o(t)));
                oQ(a) &&
                  a.then(o).catch((e) => {
                    try {
                      let t = this._processJsonRpcResponse(r, e, {
                        legacy: !0,
                        error: !0,
                      });
                      n(t);
                    } catch (e) {
                      n(e);
                    }
                  });
              });
            if (aE(t))
              return new Promise((e, n) => {
                t.send(r, (t, i) => {
                  if (t)
                    return n(
                      this._processJsonRpcResponse(r, t, {
                        legacy: !0,
                        error: !0,
                      })
                    );
                  if (og(i))
                    throw new tP({}, 'Got a "nullish" response from provider.');
                  return e(
                    this._processJsonRpcResponse(r, i, {
                      legacy: !0,
                      error: !1,
                    })
                  );
                });
              });
            if (ak(t))
              return t
                .sendAsync(r)
                .then((e) =>
                  this._processJsonRpcResponse(r, e, { legacy: !0, error: !1 })
                )
                .catch((e) =>
                  this._processJsonRpcResponse(r, e, { legacy: !0, error: !0 })
                );
            throw new eR(
              "Provider does not have a request or send method to use."
            );
          });
        }
        _processJsonRpcResponse(e, t, { legacy: r, error: n }) {
          if (og(t)) return this._buildResponse(e, null, n);
          if (o3(t)) {
            if (this.useRpcCallSpecification && o6(t)) {
              if (tV.get(t.error.code))
                throw new (tV.get(t.error.code).error)(t);
              throw new tR(t);
            }
            if (!aC._isReverted(t)) throw new tT(t, e);
          }
          if (o5(t)) return t;
          if (t instanceof Error) throw (aC._isReverted(t), t);
          if ((!r && ai(e) && ae(t)) || (r && !n && ai(e))) return t;
          if (r && n && ai(e)) throw t;
          if (r && !o3(t) && !o5(t)) return this._buildResponse(e, t, n);
          if (ai(e) && !Array.isArray(t))
            throw new tP(t, "Got normal response for a batch request.");
          if (!ai(e) && Array.isArray(t))
            throw new tP(t, "Got batch response for a normal request.");
          throw new tP(t, "Invalid response");
        }
        static _isReverted(e) {
          let t;
          if (
            (o3(e) ? (t = e.error) : e instanceof Error && (t = e),
            null == t ? void 0 : t.message.includes("revert"))
          )
            throw new eA(t);
          return !1;
        }
        _buildResponse(e, t, r) {
          let n = {
            jsonrpc: "2.0",
            id: ai(e) ? e[0].id : "id" in e ? e.id : null,
          };
          return r
            ? Object.assign(Object.assign({}, n), { error: t })
            : Object.assign(Object.assign({}, n), { result: t });
        }
      }
      var aO = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      class a_ {
        constructor(e, t, r = !1) {
          (this.requestManager = e),
            (this.registeredSubscriptions = t),
            (this.tolerateUnlinkedSubscription = r),
            (this._subscriptions = new Map()),
            this.requestManager.on(_.BEFORE_PROVIDER_CHANGE, () =>
              aO(this, void 0, void 0, function* () {
                yield this.unsubscribe();
              })
            ),
            this.requestManager.on(_.PROVIDER_CHANGED, () => {
              this.clear(), this.listenToProviderEvents();
            }),
            this.listenToProviderEvents();
        }
        listenToProviderEvents() {
          let e = this.requestManager.provider;
          this.requestManager.provider &&
            ("function" !=
              typeof (null == e ? void 0 : e.supportsSubscriptions) ||
              (null == e ? void 0 : e.supportsSubscriptions())) &&
            "function" == typeof this.requestManager.provider.on &&
            ("function" == typeof this.requestManager.provider.request
              ? this.requestManager.provider.on("message", (e) =>
                  this.messageListener(e)
                )
              : e.on("data", (e) => this.messageListener(e)));
        }
        messageListener(e) {
          var t, r, n;
          if (!e)
            throw new eM(
              "Should not call messageListener with no data. Type was"
            );
          let i =
            (null === (t = e.params) || void 0 === t
              ? void 0
              : t.subscription) ||
            (null === (r = e.data) || void 0 === r ? void 0 : r.subscription) ||
            (null === (n = e.id) || void 0 === n ? void 0 : n.toString(16));
          if (i) {
            let t = this._subscriptions.get(i);
            null == t || t.processSubscriptionData(e);
          }
        }
        subscribe(e, t) {
          return aO(this, arguments, void 0, function* (e, t, r = K) {
            let n = this.registeredSubscriptions[e];
            if (!n) throw new eM("Invalid subscription type");
            let i = new n(null != t ? t : void 0, {
              subscriptionManager: this,
              returnFormat: r,
            });
            return yield this.addSubscription(i), i;
          });
        }
        get subscriptions() {
          return this._subscriptions;
        }
        addSubscription(e) {
          return aO(this, void 0, void 0, function* () {
            if (!this.requestManager.provider)
              throw new eR("Provider not available");
            if (!this.supportsSubscriptions())
              throw new eM(
                "The current provider does not support subscriptions"
              );
            if (e.id && this._subscriptions.has(e.id))
              throw new eM(`Subscription with id "${e.id}" already exists`);
            if ((yield e.sendSubscriptionRequest(), og(e.id)))
              throw new eM("Subscription is not subscribed yet.");
            return this._subscriptions.set(e.id, e), e.id;
          });
        }
        removeSubscription(e) {
          return aO(this, void 0, void 0, function* () {
            let { id: t } = e;
            if (og(t))
              throw new eM(
                "Subscription is not subscribed yet. Or, had already been unsubscribed but not through the Subscription Manager."
              );
            if (
              !this._subscriptions.has(t) &&
              !this.tolerateUnlinkedSubscription
            )
              throw new eM(
                `Subscription with id "${t.toString()}" does not exists`
              );
            return (
              yield e.sendUnsubscribeRequest(), this._subscriptions.delete(t), t
            );
          });
        }
        unsubscribe(e) {
          return aO(this, void 0, void 0, function* () {
            let t = [];
            for (let [r, n] of this.subscriptions.entries())
              (!e || ("function" == typeof e && e({ id: r, sub: n }))) &&
                t.push(this.removeSubscription(n));
            return Promise.all(t);
          });
        }
        clear() {
          this._subscriptions.clear();
        }
        supportsSubscriptions() {
          return (
            !og(this.requestManager.provider) &&
            aS(this.requestManager.provider)
          );
        }
      }
      var aB = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      class aR extends ah {
        constructor(e, t) {
          var r;
          super(), (this.args = e);
          let { requestManager: n } = t,
            { subscriptionManager: i } = t;
          n
            ? (this._subscriptionManager = new a_(n, {}, !0))
            : (this._subscriptionManager = i),
            (this._returnFormat =
              null !== (r = null == t ? void 0 : t.returnFormat) && void 0 !== r
                ? r
                : K);
        }
        get id() {
          return this._id;
        }
        get lastBlock() {
          return this._lastBlock;
        }
        subscribe() {
          return aB(this, void 0, void 0, function* () {
            return this._subscriptionManager.addSubscription(this);
          });
        }
        processSubscriptionData(e) {
          var t, r;
          (null == e ? void 0 : e.data)
            ? this._processSubscriptionResult(
                null !==
                  (r =
                    null === (t = null == e ? void 0 : e.data) || void 0 === t
                      ? void 0
                      : t.result) && void 0 !== r
                  ? r
                  : null == e
                  ? void 0
                  : e.data
              )
            : e &&
              o8(e) &&
              this._processSubscriptionResult(
                null == e ? void 0 : e.params.result
              );
        }
        sendSubscriptionRequest() {
          return aB(this, void 0, void 0, function* () {
            return (
              (this._id = yield this._subscriptionManager.requestManager.send({
                method: "eth_subscribe",
                params: this._buildSubscriptionParams(),
              })),
              this.emit("connected", this._id),
              this._id
            );
          });
        }
        get returnFormat() {
          return this._returnFormat;
        }
        get subscriptionManager() {
          return this._subscriptionManager;
        }
        resubscribe() {
          return aB(this, void 0, void 0, function* () {
            yield this.unsubscribe(), yield this.subscribe();
          });
        }
        unsubscribe() {
          return aB(this, void 0, void 0, function* () {
            this.id &&
              (yield this._subscriptionManager.removeSubscription(this));
          });
        }
        sendUnsubscribeRequest() {
          return aB(this, void 0, void 0, function* () {
            yield this._subscriptionManager.requestManager.send({
              method: "eth_unsubscribe",
              params: [this.id],
            }),
              (this._id = void 0);
          });
        }
        formatSubscriptionResult(e) {
          return e;
        }
        _processSubscriptionResult(e) {
          this.emit("data", this.formatSubscriptionResult(e));
        }
        _processSubscriptionError(e) {
          this.emit("error", e);
        }
        _buildSubscriptionParams() {
          throw Error("Implement in the child class");
        }
      }
      var aN = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      class aM extends et {
        constructor() {
          super(...arguments),
            (this._addressMap = new Map()),
            (this._defaultKeyName = "web3js_wallet");
        }
        static getStorage() {
          let e;
          try {
            e = window.localStorage;
            let t = "__storage_test__";
            return e.setItem(t, t), e.removeItem(t), e;
          } catch (t) {
            return t &&
              (22 === t.code ||
                1014 === t.code ||
                "QuotaExceededError" === t.name ||
                "NS_ERROR_DOM_QUOTA_REACHED" === t.name) &&
              !iI(e) &&
              0 !== e.length
              ? e
              : void 0;
          }
        }
        create(e) {
          for (let t = 0; t < e; t += 1)
            this.add(this._accountProvider.create());
          return this;
        }
        add(e) {
          var t;
          if ("string" == typeof e)
            return this.add(this._accountProvider.privateKeyToAccount(e));
          let r = this.length;
          return (
            this.get(e.address) &&
              (console.warn(
                `Account ${e.address.toLowerCase()} already exists.`
              ),
              (r =
                null !== (t = this._addressMap.get(e.address.toLowerCase())) &&
                void 0 !== t
                  ? t
                  : r)),
            this._addressMap.set(e.address.toLowerCase(), r),
            (this[r] = e),
            this
          );
        }
        get(e) {
          if ("string" == typeof e) {
            let t = this._addressMap.get(e.toLowerCase());
            return iI(t) ? void 0 : this[t];
          }
          return this[e];
        }
        remove(e) {
          if ("string" == typeof e) {
            let t = this._addressMap.get(e.toLowerCase());
            return (
              !iI(t) &&
              (this._addressMap.delete(e.toLowerCase()), this.splice(t, 1), !0)
            );
          }
          return !!this[e] && (this.splice(e, 1), !0);
        }
        clear() {
          return this._addressMap.clear(), (this.length = 0), this;
        }
        encrypt(e, t) {
          return aN(this, void 0, void 0, function* () {
            return Promise.all(
              this.map((r) =>
                aN(this, void 0, void 0, function* () {
                  return r.encrypt(e, t);
                })
              )
            );
          });
        }
        decrypt(e, t, r) {
          return aN(this, void 0, void 0, function* () {
            for (let n of yield Promise.all(
              e.map((e) =>
                aN(this, void 0, void 0, function* () {
                  return this._accountProvider.decrypt(e, t, r);
                })
              )
            ))
              this.add(n);
            return this;
          });
        }
        save(e, t) {
          return aN(this, void 0, void 0, function* () {
            let r = aM.getStorage();
            if (!r) throw Error("Local storage not available.");
            return (
              r.setItem(
                null != t ? t : this._defaultKeyName,
                JSON.stringify(yield this.encrypt(e))
              ),
              !0
            );
          });
        }
        load(e, t) {
          return aN(this, void 0, void 0, function* () {
            let r = aM.getStorage();
            if (!r) throw Error("Local storage not available.");
            let n = r.getItem(null != t ? t : this._defaultKeyName);
            return n && (yield this.decrypt(JSON.parse(n) || [], e)), this;
          });
        }
      }
      let aj = { web: r(22945).E };
      function aF(e, t, r) {
        if (!r.startsWith("aes-"))
          throw Error(`AES submodule doesn't support mode ${r}`);
        if (16 !== t.length) throw Error("AES: wrong IV length");
        if (
          (r.startsWith("aes-128") && 16 !== e.length) ||
          (r.startsWith("aes-256") && 32 !== e.length)
        )
          throw Error("AES: wrong key length");
      }
      async function aL(e, t, r) {
        let n;
        if (!aj.web) throw Error("Browser crypto not available.");
        if (
          (["aes-128-cbc", "aes-256-cbc"].includes(e) && (n = "cbc"),
          ["aes-128-ctr", "aes-256-ctr"].includes(e) && (n = "ctr"),
          !n)
        )
          throw Error("AES: unsupported mode");
        return [
          await aj.web.subtle.importKey(
            "raw",
            t,
            { name: `AES-${n.toUpperCase()}`, length: 8 * t.length },
            !0,
            ["encrypt", "decrypt"]
          ),
          { name: `aes-${n}`, iv: r, counter: r, length: 128 },
        ];
      }
      async function aD(e, t, r, n = "aes-128-ctr", i = !0) {
        if ((aF(t, r, n), aj.web)) {
          let [o, a] = await aL(n, t, r),
            s = new Uint8Array(await aj.web.subtle.encrypt(a, o, e));
          return (
            i || "aes-cbc" !== a.name || e.length % 16 || (s = s.slice(0, -16)),
            s
          );
        }
        if (aj.node) {
          let o = aj.node.createCipheriv(n, t, r);
          return o.setAutoPadding(i), (0, tQ.Id)(o.update(e), o.final());
        }
        throw Error("The environment doesn't have AES module");
      }
      async function aU(e, t, r, n) {
        let i = e.slice(-16);
        for (let e = 0; e < 16; e++) i[e] ^= 16 ^ r[e];
        return (await aD(i, t, r, n)).slice(0, 16);
      }
      async function aH(e, t, r, n = "aes-128-ctr", i = !0) {
        if ((aF(t, r, n), aj.web)) {
          let [o, a] = await aL(n, t, r);
          if (!i && "aes-cbc" === a.name) {
            let i = await aU(e, t, r, n);
            e = (0, tQ.Id)(e, i);
          }
          let s = new Uint8Array(await aj.web.subtle.decrypt(a, o, e));
          if ("aes-cbc" === a.name) {
            let i = await aD(s, t, r, n);
            if (!(0, tQ.ND)(i, e)) throw Error("AES: wrong padding");
          }
          return s;
        }
        if (aj.node) {
          let o = aj.node.createDecipheriv(n, t, r);
          return o.setAutoPadding(i), (0, tQ.Id)(o.update(e), o.final());
        }
        throw Error("The environment doesn't have AES module");
      }
      var a$ = r(44871);
      class az extends oW.Vw {
        constructor(e, t) {
          super(), (this.finished = !1), (this.destroyed = !1), (0, a$.tW)(e);
          let r = (0, oW.ZJ)(t);
          if (
            ((this.iHash = e.create()), "function" != typeof this.iHash.update)
          )
            throw Error("Expected instance of class which extends utils.Hash");
          (this.blockLen = this.iHash.blockLen),
            (this.outputLen = this.iHash.outputLen);
          let n = this.blockLen,
            i = new Uint8Array(n);
          i.set(r.length > n ? e.create().update(r).digest() : r);
          for (let e = 0; e < i.length; e++) i[e] ^= 54;
          this.iHash.update(i), (this.oHash = e.create());
          for (let e = 0; e < i.length; e++) i[e] ^= 106;
          this.oHash.update(i), i.fill(0);
        }
        update(e) {
          return (0, a$.t2)(this), this.iHash.update(e), this;
        }
        digestInto(e) {
          (0, a$.t2)(this),
            (0, a$.ee)(e, this.outputLen),
            (this.finished = !0),
            this.iHash.digestInto(e),
            this.oHash.update(e),
            this.oHash.digestInto(e),
            this.destroy();
        }
        digest() {
          let e = new Uint8Array(this.oHash.outputLen);
          return this.digestInto(e), e;
        }
        _cloneInto(e) {
          e || (e = Object.create(Object.getPrototypeOf(this), {}));
          let {
            oHash: t,
            iHash: r,
            finished: n,
            destroyed: i,
            blockLen: o,
            outputLen: a,
          } = this;
          return (
            (e.finished = n),
            (e.destroyed = i),
            (e.blockLen = o),
            (e.outputLen = a),
            (e.oHash = t._cloneInto(e.oHash)),
            (e.iHash = r._cloneInto(e.iHash)),
            e
          );
        }
        destroy() {
          (this.destroyed = !0), this.oHash.destroy(), this.iHash.destroy();
        }
      }
      let aG = (e, t, r) => new az(e, t).update(r).digest();
      function aq(e, t, r, n) {
        var i;
        let o;
        let {
            c: a,
            dkLen: s,
            DK: l,
            PRF: u,
            PRFSalt: c,
          } = (function (e, t, r, n) {
            (0, a$.tW)(e);
            let {
              c: i,
              dkLen: o,
              asyncTick: a,
            } = (0, oW.tY)({ dkLen: 32, asyncTick: 10 }, n);
            if (((0, a$.ai)(i), (0, a$.ai)(o), (0, a$.ai)(a), i < 1))
              throw Error("PBKDF2: iterations (c) should be >= 1");
            let s = (0, oW.ZJ)(t),
              l = (0, oW.ZJ)(r),
              u = new Uint8Array(o),
              c = aG.create(e, s),
              d = c._cloneInto().update(l);
            return { c: i, dkLen: o, asyncTick: a, DK: u, PRF: c, PRFSalt: d };
          })(e, t, r, n),
          d = new Uint8Array(4),
          f = (0, oW.O8)(d),
          h = new Uint8Array(u.outputLen);
        for (let e = 1, t = 0; t < s; e++, t += u.outputLen) {
          let r = l.subarray(t, t + u.outputLen);
          f.setInt32(0, e, !1),
            (o = c._cloneInto(o)).update(d).digestInto(h),
            r.set(h.subarray(0, r.length));
          for (let e = 1; e < a; e++) {
            u._cloneInto(o).update(h).digestInto(h);
            for (let e = 0; e < r.length; e++) r[e] ^= h[e];
          }
        }
        return (
          (i = o), u.destroy(), c.destroy(), i && i.destroy(), h.fill(0), l
        );
      }
      aG.create = (e, t) => new az(e, t);
      let aW = (e, t, r) => (e & t) ^ (~e & r),
        aV = (e, t, r) => (e & t) ^ (e & r) ^ (t & r);
      class aZ extends oW.Vw {
        constructor(e, t, r, n) {
          super(),
            (this.blockLen = e),
            (this.outputLen = t),
            (this.padOffset = r),
            (this.isLE = n),
            (this.finished = !1),
            (this.length = 0),
            (this.pos = 0),
            (this.destroyed = !1),
            (this.buffer = new Uint8Array(e)),
            (this.view = (0, oW.O8)(this.buffer));
        }
        update(e) {
          (0, a$.t2)(this);
          let { view: t, buffer: r, blockLen: n } = this,
            i = (e = (0, oW.ZJ)(e)).length;
          for (let o = 0; o < i; ) {
            let a = Math.min(n - this.pos, i - o);
            if (a === n) {
              let t = (0, oW.O8)(e);
              for (; n <= i - o; o += n) this.process(t, o);
              continue;
            }
            r.set(e.subarray(o, o + a), this.pos),
              (this.pos += a),
              (o += a),
              this.pos === n && (this.process(t, 0), (this.pos = 0));
          }
          return (this.length += e.length), this.roundClean(), this;
        }
        digestInto(e) {
          (0, a$.t2)(this), (0, a$.CG)(e, this), (this.finished = !0);
          let { buffer: t, view: r, blockLen: n, isLE: i } = this,
            { pos: o } = this;
          (t[o++] = 128),
            this.buffer.subarray(o).fill(0),
            this.padOffset > n - o && (this.process(r, 0), (o = 0));
          for (let e = o; e < n; e++) t[e] = 0;
          !(function (e, t, r, n) {
            if ("function" == typeof e.setBigUint64)
              return e.setBigUint64(t, r, n);
            let i = BigInt(32),
              o = BigInt(0xffffffff),
              a = Number((r >> i) & o),
              s = Number(r & o),
              l = n ? 4 : 0,
              u = n ? 0 : 4;
            e.setUint32(t + l, a, n), e.setUint32(t + u, s, n);
          })(r, n - 8, BigInt(8 * this.length), i),
            this.process(r, 0);
          let a = (0, oW.O8)(e),
            s = this.outputLen;
          if (s % 4) throw Error("_sha2: outputLen should be aligned to 32bit");
          let l = s / 4,
            u = this.get();
          if (l > u.length) throw Error("_sha2: outputLen bigger than state");
          for (let e = 0; e < l; e++) a.setUint32(4 * e, u[e], i);
        }
        digest() {
          let { buffer: e, outputLen: t } = this;
          this.digestInto(e);
          let r = e.slice(0, t);
          return this.destroy(), r;
        }
        _cloneInto(e) {
          e || (e = new this.constructor()), e.set(...this.get());
          let {
            blockLen: t,
            buffer: r,
            length: n,
            finished: i,
            destroyed: o,
            pos: a,
          } = this;
          return (
            (e.length = n),
            (e.pos = a),
            (e.finished = i),
            (e.destroyed = o),
            n % t && e.buffer.set(r),
            e
          );
        }
      }
      let aK = new Uint32Array([
          0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,
          0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,
          0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,
          0xc19bf174, 0xe49b69c1, 0xefbe4786, 0xfc19dc6, 0x240ca1cc, 0x2de92c6f,
          0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d,
          0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x6ca6351, 0x14292967,
          0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354,
          0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,
          0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585,
          0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
          0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee,
          0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb,
          0xbef9a3f7, 0xc67178f2,
        ]),
        aQ = new Uint32Array([
          0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f,
          0x9b05688c, 0x1f83d9ab, 0x5be0cd19,
        ]),
        aJ = new Uint32Array(64);
      class aY extends aZ {
        constructor() {
          super(64, 32, 8, !1),
            (this.A = 0 | aQ[0]),
            (this.B = 0 | aQ[1]),
            (this.C = 0 | aQ[2]),
            (this.D = 0 | aQ[3]),
            (this.E = 0 | aQ[4]),
            (this.F = 0 | aQ[5]),
            (this.G = 0 | aQ[6]),
            (this.H = 0 | aQ[7]);
        }
        get() {
          let { A: e, B: t, C: r, D: n, E: i, F: o, G: a, H: s } = this;
          return [e, t, r, n, i, o, a, s];
        }
        set(e, t, r, n, i, o, a, s) {
          (this.A = 0 | e),
            (this.B = 0 | t),
            (this.C = 0 | r),
            (this.D = 0 | n),
            (this.E = 0 | i),
            (this.F = 0 | o),
            (this.G = 0 | a),
            (this.H = 0 | s);
        }
        process(e, t) {
          for (let r = 0; r < 16; r++, t += 4) aJ[r] = e.getUint32(t, !1);
          for (let e = 16; e < 64; e++) {
            let t = aJ[e - 15],
              r = aJ[e - 2],
              n = (0, oW.Ow)(t, 7) ^ (0, oW.Ow)(t, 18) ^ (t >>> 3),
              i = (0, oW.Ow)(r, 17) ^ (0, oW.Ow)(r, 19) ^ (r >>> 10);
            aJ[e] = (i + aJ[e - 7] + n + aJ[e - 16]) | 0;
          }
          let { A: r, B: n, C: i, D: o, E: a, F: s, G: l, H: u } = this;
          for (let e = 0; e < 64; e++) {
            let t =
                (u +
                  ((0, oW.Ow)(a, 6) ^ (0, oW.Ow)(a, 11) ^ (0, oW.Ow)(a, 25)) +
                  aW(a, s, l) +
                  aK[e] +
                  aJ[e]) |
                0,
              c =
                (((0, oW.Ow)(r, 2) ^ (0, oW.Ow)(r, 13) ^ (0, oW.Ow)(r, 22)) +
                  aV(r, n, i)) |
                0;
            (u = l),
              (l = s),
              (s = a),
              (a = (o + t) | 0),
              (o = i),
              (i = n),
              (n = r),
              (r = (t + c) | 0);
          }
          (r = (r + this.A) | 0),
            (n = (n + this.B) | 0),
            (i = (i + this.C) | 0),
            (o = (o + this.D) | 0),
            (a = (a + this.E) | 0),
            (s = (s + this.F) | 0),
            (l = (l + this.G) | 0),
            (u = (u + this.H) | 0),
            this.set(r, n, i, o, a, s, l, u);
        }
        roundClean() {
          aJ.fill(0);
        }
        destroy() {
          this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
        }
      }
      let aX = (0, oW.ld)(() => new aY());
      var a0 = r(96790);
      let [a1, a2] = a0.Ay.split(
          [
            "0x428a2f98d728ae22",
            "0x7137449123ef65cd",
            "0xb5c0fbcfec4d3b2f",
            "0xe9b5dba58189dbbc",
            "0x3956c25bf348b538",
            "0x59f111f1b605d019",
            "0x923f82a4af194f9b",
            "0xab1c5ed5da6d8118",
            "0xd807aa98a3030242",
            "0x12835b0145706fbe",
            "0x243185be4ee4b28c",
            "0x550c7dc3d5ffb4e2",
            "0x72be5d74f27b896f",
            "0x80deb1fe3b1696b1",
            "0x9bdc06a725c71235",
            "0xc19bf174cf692694",
            "0xe49b69c19ef14ad2",
            "0xefbe4786384f25e3",
            "0x0fc19dc68b8cd5b5",
            "0x240ca1cc77ac9c65",
            "0x2de92c6f592b0275",
            "0x4a7484aa6ea6e483",
            "0x5cb0a9dcbd41fbd4",
            "0x76f988da831153b5",
            "0x983e5152ee66dfab",
            "0xa831c66d2db43210",
            "0xb00327c898fb213f",
            "0xbf597fc7beef0ee4",
            "0xc6e00bf33da88fc2",
            "0xd5a79147930aa725",
            "0x06ca6351e003826f",
            "0x142929670a0e6e70",
            "0x27b70a8546d22ffc",
            "0x2e1b21385c26c926",
            "0x4d2c6dfc5ac42aed",
            "0x53380d139d95b3df",
            "0x650a73548baf63de",
            "0x766a0abb3c77b2a8",
            "0x81c2c92e47edaee6",
            "0x92722c851482353b",
            "0xa2bfe8a14cf10364",
            "0xa81a664bbc423001",
            "0xc24b8b70d0f89791",
            "0xc76c51a30654be30",
            "0xd192e819d6ef5218",
            "0xd69906245565a910",
            "0xf40e35855771202a",
            "0x106aa07032bbd1b8",
            "0x19a4c116b8d2d0c8",
            "0x1e376c085141ab53",
            "0x2748774cdf8eeb99",
            "0x34b0bcb5e19b48a8",
            "0x391c0cb3c5c95a63",
            "0x4ed8aa4ae3418acb",
            "0x5b9cca4f7763e373",
            "0x682e6ff3d6b2b8a3",
            "0x748f82ee5defb2fc",
            "0x78a5636f43172f60",
            "0x84c87814a1f0ab72",
            "0x8cc702081a6439ec",
            "0x90befffa23631e28",
            "0xa4506cebde82bde9",
            "0xbef9a3f7b2c67915",
            "0xc67178f2e372532b",
            "0xca273eceea26619c",
            "0xd186b8c721c0c207",
            "0xeada7dd6cde0eb1e",
            "0xf57d4f7fee6ed178",
            "0x06f067aa72176fba",
            "0x0a637dc5a2c898a6",
            "0x113f9804bef90dae",
            "0x1b710b35131c471b",
            "0x28db77f523047d84",
            "0x32caab7b40c72493",
            "0x3c9ebe0a15c9bebc",
            "0x431d67c49c100d4c",
            "0x4cc5d4becb3e42b6",
            "0x597f299cfc657e2a",
            "0x5fcb6fab3ad6faec",
            "0x6c44198c4a475817",
          ].map((e) => BigInt(e))
        ),
        a6 = new Uint32Array(80),
        a5 = new Uint32Array(80);
      class a3 extends aZ {
        constructor() {
          super(128, 64, 16, !1),
            (this.Ah = 0x6a09e667),
            (this.Al = -0xc4336f8),
            (this.Bh = -0x4498517b),
            (this.Bl = -0x7b3558c5),
            (this.Ch = 0x3c6ef372),
            (this.Cl = -0x16b07d5),
            (this.Dh = -0x5ab00ac6),
            (this.Dl = 0x5f1d36f1),
            (this.Eh = 0x510e527f),
            (this.El = -0x52197d2f),
            (this.Fh = -0x64fa9774),
            (this.Fl = 0x2b3e6c1f),
            (this.Gh = 0x1f83d9ab),
            (this.Gl = -0x4be4295),
            (this.Hh = 0x5be0cd19),
            (this.Hl = 0x137e2179);
        }
        get() {
          let {
            Ah: e,
            Al: t,
            Bh: r,
            Bl: n,
            Ch: i,
            Cl: o,
            Dh: a,
            Dl: s,
            Eh: l,
            El: u,
            Fh: c,
            Fl: d,
            Gh: f,
            Gl: h,
            Hh: p,
            Hl: m,
          } = this;
          return [e, t, r, n, i, o, a, s, l, u, c, d, f, h, p, m];
        }
        set(e, t, r, n, i, o, a, s, l, u, c, d, f, h, p, m) {
          (this.Ah = 0 | e),
            (this.Al = 0 | t),
            (this.Bh = 0 | r),
            (this.Bl = 0 | n),
            (this.Ch = 0 | i),
            (this.Cl = 0 | o),
            (this.Dh = 0 | a),
            (this.Dl = 0 | s),
            (this.Eh = 0 | l),
            (this.El = 0 | u),
            (this.Fh = 0 | c),
            (this.Fl = 0 | d),
            (this.Gh = 0 | f),
            (this.Gl = 0 | h),
            (this.Hh = 0 | p),
            (this.Hl = 0 | m);
        }
        process(e, t) {
          for (let r = 0; r < 16; r++, t += 4)
            (a6[r] = e.getUint32(t)), (a5[r] = e.getUint32((t += 4)));
          for (let e = 16; e < 80; e++) {
            let t = 0 | a6[e - 15],
              r = 0 | a5[e - 15],
              n =
                a0.Ay.rotrSH(t, r, 1) ^
                a0.Ay.rotrSH(t, r, 8) ^
                a0.Ay.shrSH(t, r, 7),
              i =
                a0.Ay.rotrSL(t, r, 1) ^
                a0.Ay.rotrSL(t, r, 8) ^
                a0.Ay.shrSL(t, r, 7),
              o = 0 | a6[e - 2],
              a = 0 | a5[e - 2],
              s =
                a0.Ay.rotrSH(o, a, 19) ^
                a0.Ay.rotrBH(o, a, 61) ^
                a0.Ay.shrSH(o, a, 6),
              l =
                a0.Ay.rotrSL(o, a, 19) ^
                a0.Ay.rotrBL(o, a, 61) ^
                a0.Ay.shrSL(o, a, 6),
              u = a0.Ay.add4L(i, l, a5[e - 7], a5[e - 16]),
              c = a0.Ay.add4H(u, n, s, a6[e - 7], a6[e - 16]);
            (a6[e] = 0 | c), (a5[e] = 0 | u);
          }
          let {
            Ah: r,
            Al: n,
            Bh: i,
            Bl: o,
            Ch: a,
            Cl: s,
            Dh: l,
            Dl: u,
            Eh: c,
            El: d,
            Fh: f,
            Fl: h,
            Gh: p,
            Gl: m,
            Hh: g,
            Hl: y,
          } = this;
          for (let e = 0; e < 80; e++) {
            let t =
                a0.Ay.rotrSH(c, d, 14) ^
                a0.Ay.rotrSH(c, d, 18) ^
                a0.Ay.rotrBH(c, d, 41),
              b =
                a0.Ay.rotrSL(c, d, 14) ^
                a0.Ay.rotrSL(c, d, 18) ^
                a0.Ay.rotrBL(c, d, 41),
              v = (c & f) ^ (~c & p),
              w = (d & h) ^ (~d & m),
              x = a0.Ay.add5L(y, b, w, a2[e], a5[e]),
              A = a0.Ay.add5H(x, g, t, v, a1[e], a6[e]),
              E = 0 | x,
              k =
                a0.Ay.rotrSH(r, n, 28) ^
                a0.Ay.rotrBH(r, n, 34) ^
                a0.Ay.rotrBH(r, n, 39),
              I =
                a0.Ay.rotrSL(r, n, 28) ^
                a0.Ay.rotrBL(r, n, 34) ^
                a0.Ay.rotrBL(r, n, 39),
              S = (r & i) ^ (r & a) ^ (i & a),
              P = (n & o) ^ (n & s) ^ (o & s);
            (g = 0 | p),
              (y = 0 | m),
              (p = 0 | f),
              (m = 0 | h),
              (f = 0 | c),
              (h = 0 | d),
              ({ h: c, l: d } = a0.Ay.add(0 | l, 0 | u, 0 | A, 0 | E)),
              (l = 0 | a),
              (u = 0 | s),
              (a = 0 | i),
              (s = 0 | o),
              (i = 0 | r),
              (o = 0 | n);
            let T = a0.Ay.add3L(E, I, P);
            (r = a0.Ay.add3H(T, A, k, S)), (n = 0 | T);
          }
          ({ h: r, l: n } = a0.Ay.add(0 | this.Ah, 0 | this.Al, 0 | r, 0 | n)),
            ({ h: i, l: o } = a0.Ay.add(
              0 | this.Bh,
              0 | this.Bl,
              0 | i,
              0 | o
            )),
            ({ h: a, l: s } = a0.Ay.add(
              0 | this.Ch,
              0 | this.Cl,
              0 | a,
              0 | s
            )),
            ({ h: l, l: u } = a0.Ay.add(
              0 | this.Dh,
              0 | this.Dl,
              0 | l,
              0 | u
            )),
            ({ h: c, l: d } = a0.Ay.add(
              0 | this.Eh,
              0 | this.El,
              0 | c,
              0 | d
            )),
            ({ h: f, l: h } = a0.Ay.add(
              0 | this.Fh,
              0 | this.Fl,
              0 | f,
              0 | h
            )),
            ({ h: p, l: m } = a0.Ay.add(
              0 | this.Gh,
              0 | this.Gl,
              0 | p,
              0 | m
            )),
            ({ h: g, l: y } = a0.Ay.add(
              0 | this.Hh,
              0 | this.Hl,
              0 | g,
              0 | y
            )),
            this.set(r, n, i, o, a, s, l, u, c, d, f, h, p, m, g, y);
        }
        roundClean() {
          a6.fill(0), a5.fill(0);
        }
        destroy() {
          this.buffer.fill(0),
            this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        }
      }
      let a8 = (0, oW.ld)(() => new a3());
      function a4(e, t, r, n, i) {
        if (!["sha256", "sha512"].includes(i))
          throw Error("Only sha256 and sha512 are supported");
        return (
          (0, tQ.UI)(e),
          (0, tQ.UI)(t),
          aq("sha256" === i ? aX : a8, e, t, { c: r, dkLen: n })
        );
      }
      function a9(e, t, r, n, i, o) {
        let a = e[t++] ^ r[n++],
          s = e[t++] ^ r[n++],
          l = e[t++] ^ r[n++],
          u = e[t++] ^ r[n++],
          c = e[t++] ^ r[n++],
          d = e[t++] ^ r[n++],
          f = e[t++] ^ r[n++],
          h = e[t++] ^ r[n++],
          p = e[t++] ^ r[n++],
          m = e[t++] ^ r[n++],
          g = e[t++] ^ r[n++],
          y = e[t++] ^ r[n++],
          b = e[t++] ^ r[n++],
          v = e[t++] ^ r[n++],
          w = e[t++] ^ r[n++],
          x = e[t++] ^ r[n++],
          A = a,
          E = s,
          k = l,
          I = u,
          S = c,
          P = d,
          T = f,
          C = h,
          O = p,
          _ = m,
          B = g,
          R = y,
          N = b,
          M = v,
          j = w,
          F = x;
        for (let e = 0; e < 8; e += 2)
          (S ^= (0, oW.aZ)((A + N) | 0, 7)),
            (O ^= (0, oW.aZ)((S + A) | 0, 9)),
            (N ^= (0, oW.aZ)((O + S) | 0, 13)),
            (A ^= (0, oW.aZ)((N + O) | 0, 18)),
            (_ ^= (0, oW.aZ)((P + E) | 0, 7)),
            (M ^= (0, oW.aZ)((_ + P) | 0, 9)),
            (E ^= (0, oW.aZ)((M + _) | 0, 13)),
            (P ^= (0, oW.aZ)((E + M) | 0, 18)),
            (j ^= (0, oW.aZ)((B + T) | 0, 7)),
            (k ^= (0, oW.aZ)((j + B) | 0, 9)),
            (T ^= (0, oW.aZ)((k + j) | 0, 13)),
            (B ^= (0, oW.aZ)((T + k) | 0, 18)),
            (I ^= (0, oW.aZ)((F + R) | 0, 7)),
            (C ^= (0, oW.aZ)((I + F) | 0, 9)),
            (R ^= (0, oW.aZ)((C + I) | 0, 13)),
            (F ^= (0, oW.aZ)((R + C) | 0, 18)),
            (E ^= (0, oW.aZ)((A + I) | 0, 7)),
            (k ^= (0, oW.aZ)((E + A) | 0, 9)),
            (I ^= (0, oW.aZ)((k + E) | 0, 13)),
            (A ^= (0, oW.aZ)((I + k) | 0, 18)),
            (T ^= (0, oW.aZ)((P + S) | 0, 7)),
            (C ^= (0, oW.aZ)((T + P) | 0, 9)),
            (S ^= (0, oW.aZ)((C + T) | 0, 13)),
            (P ^= (0, oW.aZ)((S + C) | 0, 18)),
            (R ^= (0, oW.aZ)((B + _) | 0, 7)),
            (O ^= (0, oW.aZ)((R + B) | 0, 9)),
            (_ ^= (0, oW.aZ)((O + R) | 0, 13)),
            (B ^= (0, oW.aZ)((_ + O) | 0, 18)),
            (N ^= (0, oW.aZ)((F + j) | 0, 7)),
            (M ^= (0, oW.aZ)((N + F) | 0, 9)),
            (j ^= (0, oW.aZ)((M + N) | 0, 13)),
            (F ^= (0, oW.aZ)((j + M) | 0, 18));
        (i[o++] = (a + A) | 0),
          (i[o++] = (s + E) | 0),
          (i[o++] = (l + k) | 0),
          (i[o++] = (u + I) | 0),
          (i[o++] = (c + S) | 0),
          (i[o++] = (d + P) | 0),
          (i[o++] = (f + T) | 0),
          (i[o++] = (h + C) | 0),
          (i[o++] = (p + O) | 0),
          (i[o++] = (m + _) | 0),
          (i[o++] = (g + B) | 0),
          (i[o++] = (y + R) | 0),
          (i[o++] = (b + N) | 0),
          (i[o++] = (v + M) | 0),
          (i[o++] = (w + j) | 0),
          (i[o++] = (x + F) | 0);
      }
      function a7(e, t, r, n, i) {
        let o = n + 0,
          a = n + 16 * i;
        for (let n = 0; n < 16; n++) r[a + n] = e[t + (2 * i - 1) * 16 + n];
        for (let n = 0; n < i; n++, o += 16, t += 16)
          a9(r, a, e, t, r, o),
            n > 0 && (a += 16),
            a9(r, o, e, (t += 16), r, a);
      }
      function se(e, t, r, n, i, o, a) {
        return (
          (0, tQ.UI)(e),
          (0, tQ.UI)(t),
          (function (e, t, r) {
            let {
              N: n,
              r: i,
              p: o,
              dkLen: a,
              blockSize32: s,
              V: l,
              B32: u,
              B: c,
              tmp: d,
              blockMixCb: f,
            } = (function (e, t, r) {
              let {
                N: n,
                r: i,
                p: o,
                dkLen: a,
                asyncTick: s,
                maxmem: l,
                onProgress: u,
              } = (0, oW.tY)(
                { dkLen: 32, asyncTick: 10, maxmem: 0x40000400 },
                r
              );
              if (
                ((0, a$.ai)(n),
                (0, a$.ai)(i),
                (0, a$.ai)(o),
                (0, a$.ai)(a),
                (0, a$.ai)(s),
                (0, a$.ai)(l),
                void 0 !== u && "function" != typeof u)
              )
                throw Error("progressCb should be function");
              let c = 128 * i,
                d = c / 4;
              if (
                n <= 1 ||
                (n & (n - 1)) != 0 ||
                n >= 2 ** (c / 8) ||
                n > 0x100000000
              )
                throw Error(
                  "Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32"
                );
              if (o < 0 || o > ((0x100000000 - 1) * 32) / c)
                throw Error(
                  "Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)"
                );
              if (a < 0 || a > (0x100000000 - 1) * 32)
                throw Error(
                  "Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32"
                );
              let f = c * (n + o);
              if (f > l)
                throw Error(
                  `Scrypt: parameters too large, ${f} (128 * r * (N + p)) > ${l} (maxmem)`
                );
              let h = aq(aX, e, t, { c: 1, dkLen: c * o }),
                p = (0, oW.DH)(h),
                m = (0, oW.DH)(new Uint8Array(c * n)),
                g = (0, oW.DH)(new Uint8Array(c)),
                y = () => {};
              if (u) {
                let e = 2 * n * o,
                  t = Math.max(Math.floor(e / 1e4), 1),
                  r = 0;
                y = () => {
                  r++, u && (!(r % t) || r === e) && u(r / e);
                };
              }
              return {
                N: n,
                r: i,
                p: o,
                dkLen: a,
                blockSize32: d,
                V: m,
                B32: p,
                B: h,
                tmp: g,
                blockMixCb: y,
                asyncTick: s,
              };
            })(e, t, r);
            oW.qv || (0, oW.Fc)(u);
            for (let e = 0; e < o; e++) {
              let t = s * e;
              for (let e = 0; e < s; e++) l[e] = u[t + e];
              for (let e = 0, t = 0; e < n - 1; e++)
                a7(l, t, l, (t += s), i), f();
              a7(l, (n - 1) * s, u, t, i), f();
              for (let e = 0; e < n; e++) {
                let e = u[t + s - 16] % n;
                for (let r = 0; r < s; r++) d[r] = u[t + r] ^ l[e * s + r];
                a7(d, 0, u, t, i), f();
              }
            }
            return (
              oW.qv || (0, oW.Fc)(u),
              (function (e, t, r, n, i) {
                let o = aq(aX, e, r, { c: 1, dkLen: t });
                return r.fill(0), n.fill(0), i.fill(0), o;
              })(e, a, c, l, d)
            );
          })(e, t, { N: r, r: i, p: n, dkLen: o, onProgress: a })
        );
      }
      let st = BigInt(1),
        sr = BigInt(2);
      function sn(e) {
        return (
          e instanceof Uint8Array ||
          (null != e &&
            "object" == typeof e &&
            "Uint8Array" === e.constructor.name)
        );
      }
      function si(e) {
        if (!sn(e)) throw Error("Uint8Array expected");
      }
      let so = Array.from({ length: 256 }, (e, t) =>
        t.toString(16).padStart(2, "0")
      );
      function sa(e) {
        si(e);
        let t = "";
        for (let r = 0; r < e.length; r++) t += so[e[r]];
        return t;
      }
      function ss(e) {
        if ("string" != typeof e)
          throw Error("hex string expected, got " + typeof e);
        return BigInt("" === e ? "0" : `0x${e}`);
      }
      let sl = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };
      function su(e) {
        return e >= sl._0 && e <= sl._9
          ? e - sl._0
          : e >= sl._A && e <= sl._F
          ? e - (sl._A - 10)
          : e >= sl._a && e <= sl._f
          ? e - (sl._a - 10)
          : void 0;
      }
      function sc(e) {
        if ("string" != typeof e)
          throw Error("hex string expected, got " + typeof e);
        let t = e.length,
          r = t / 2;
        if (t % 2)
          throw Error(
            "padded hex string expected, got unpadded hex of length " + t
          );
        let n = new Uint8Array(r);
        for (let t = 0, i = 0; t < r; t++, i += 2) {
          let r = su(e.charCodeAt(i)),
            o = su(e.charCodeAt(i + 1));
          if (void 0 === r || void 0 === o)
            throw Error(
              'hex string expected, got non-hex character "' +
                (e[i] + e[i + 1]) +
                '" at index ' +
                i
            );
          n[t] = 16 * r + o;
        }
        return n;
      }
      function sd(e) {
        return ss(sa(e));
      }
      function sf(e) {
        return si(e), ss(sa(Uint8Array.from(e).reverse()));
      }
      function sh(e, t) {
        return sc(e.toString(16).padStart(2 * t, "0"));
      }
      function sp(e, t) {
        return sh(e, t).reverse();
      }
      function sm(e, t, r) {
        let n;
        if ("string" == typeof t)
          try {
            n = sc(t);
          } catch (r) {
            throw Error(
              `${e} must be valid hex string, got "${t}". Cause: ${r}`
            );
          }
        else if (sn(t)) n = Uint8Array.from(t);
        else throw Error(`${e} must be hex string or Uint8Array`);
        let i = n.length;
        if ("number" == typeof r && i !== r)
          throw Error(`${e} expected ${r} bytes, got ${i}`);
        return n;
      }
      function sg(...e) {
        let t = 0;
        for (let r = 0; r < e.length; r++) {
          let n = e[r];
          si(n), (t += n.length);
        }
        let r = new Uint8Array(t);
        for (let t = 0, n = 0; t < e.length; t++) {
          let i = e[t];
          r.set(i, n), (n += i.length);
        }
        return r;
      }
      let sy = (e) => (sr << BigInt(e - 1)) - st,
        sb = (e) => new Uint8Array(e),
        sv = (e) => Uint8Array.from(e);
      function sw(e, t, r) {
        if ("number" != typeof e || e < 2)
          throw Error("hashLen must be a number");
        if ("number" != typeof t || t < 2)
          throw Error("qByteLen must be a number");
        if ("function" != typeof r) throw Error("hmacFn must be a function");
        let n = sb(e),
          i = sb(e),
          o = 0,
          a = () => {
            n.fill(1), i.fill(0), (o = 0);
          },
          s = (...e) => r(i, n, ...e),
          l = (e = sb()) => {
            (i = s(sv([0]), e)),
              (n = s()),
              0 !== e.length && ((i = s(sv([1]), e)), (n = s()));
          },
          u = () => {
            if (o++ >= 1e3) throw Error("drbg: tried 1000 values");
            let e = 0,
              r = [];
            for (; e < t; ) {
              let t = (n = s()).slice();
              r.push(t), (e += n.length);
            }
            return sg(...r);
          };
        return (e, t) => {
          let r;
          for (a(), l(e); !(r = t(u())); ) l();
          return a(), r;
        };
      }
      let sx = {
        bigint: (e) => "bigint" == typeof e,
        function: (e) => "function" == typeof e,
        boolean: (e) => "boolean" == typeof e,
        string: (e) => "string" == typeof e,
        stringOrUint8Array: (e) => "string" == typeof e || sn(e),
        isSafeInteger: (e) => Number.isSafeInteger(e),
        array: (e) => Array.isArray(e),
        field: (e, t) => t.Fp.isValid(e),
        hash: (e) =>
          "function" == typeof e && Number.isSafeInteger(e.outputLen),
      };
      function sA(e, t, r = {}) {
        let n = (t, r, n) => {
          let i = sx[r];
          if ("function" != typeof i)
            throw Error(`Invalid validator "${r}", expected function`);
          let o = e[t];
          if ((!n || void 0 !== o) && !i(o, e))
            throw Error(
              `Invalid param ${String(t)}=${o} (${typeof o}), expected ${r}`
            );
        };
        for (let [e, r] of Object.entries(t)) n(e, r, !1);
        for (let [e, t] of Object.entries(r)) n(e, t, !0);
        return e;
      }
      let sE = BigInt(0),
        sk = BigInt(1),
        sI = BigInt(2),
        sS = BigInt(3),
        sP = BigInt(4),
        sT = BigInt(5),
        sC = BigInt(8);
      function sO(e, t) {
        let r = e % t;
        return r >= sE ? r : t + r;
      }
      function s_(e, t, r) {
        let n = e;
        for (; t-- > sE; ) (n *= n), (n %= r);
        return n;
      }
      function sB(e, t) {
        if (e === sE || t <= sE)
          throw Error(
            `invert: expected positive integers, got n=${e} mod=${t}`
          );
        let r = sO(e, t),
          n = t,
          i = sE,
          o = sk,
          a = sk,
          s = sE;
        for (; r !== sE; ) {
          let e = n / r,
            t = n % r,
            l = i - a * e,
            u = o - s * e;
          (n = r), (r = t), (i = a), (o = s), (a = l), (s = u);
        }
        if (n !== sk) throw Error("invert: does not exist");
        return sO(i, t);
      }
      BigInt(9), BigInt(16);
      let sR = [
        "create",
        "isValid",
        "is0",
        "neg",
        "inv",
        "sqrt",
        "sqr",
        "eql",
        "add",
        "sub",
        "mul",
        "pow",
        "div",
        "addN",
        "subN",
        "mulN",
        "sqrN",
      ];
      function sN(e, t) {
        let r = void 0 !== t ? t : e.toString(2).length,
          n = Math.ceil(r / 8);
        return { nBitLength: r, nByteLength: n };
      }
      function sM(e) {
        if ("bigint" != typeof e) throw Error("field order must be bigint");
        return Math.ceil(e.toString(2).length / 8);
      }
      function sj(e) {
        let t = sM(e);
        return t + Math.ceil(t / 2);
      }
      let sF = BigInt(0),
        sL = BigInt(1);
      function sD(e) {
        return (
          sA(
            e.Fp,
            sR.reduce((e, t) => ((e[t] = "function"), e), {
              ORDER: "bigint",
              MASK: "bigint",
              BYTES: "isSafeInteger",
              BITS: "isSafeInteger",
            })
          ),
          sA(
            e,
            { n: "bigint", h: "bigint", Gx: "field", Gy: "field" },
            { nBitLength: "isSafeInteger", nByteLength: "isSafeInteger" }
          ),
          Object.freeze({ ...sN(e.n, e.nBitLength), ...e, p: e.Fp.ORDER })
        );
      }
      let { Ph: sU, aT: sH } = V,
        s$ = {
          Err: class extends Error {
            constructor(e = "") {
              super(e);
            }
          },
          _parseInt(e) {
            let { Err: t } = s$;
            if (e.length < 2 || 2 !== e[0])
              throw new t("Invalid signature integer tag");
            let r = e[1],
              n = e.subarray(2, r + 2);
            if (!r || n.length !== r)
              throw new t("Invalid signature integer: wrong length");
            if (128 & n[0]) throw new t("Invalid signature integer: negative");
            if (0 === n[0] && !(128 & n[1]))
              throw new t(
                "Invalid signature integer: unnecessary leading zero"
              );
            return { d: sU(n), l: e.subarray(r + 2) };
          },
          toSig(e) {
            let { Err: t } = s$,
              r = "string" == typeof e ? sH(e) : e;
            si(r);
            let n = r.length;
            if (n < 2 || 48 != r[0]) throw new t("Invalid signature tag");
            if (r[1] !== n - 2)
              throw new t("Invalid signature: incorrect length");
            let { d: i, l: o } = s$._parseInt(r.subarray(2)),
              { d: a, l: s } = s$._parseInt(o);
            if (s.length)
              throw new t("Invalid signature: left bytes after parsing");
            return { r: i, s: a };
          },
          hexFromSig(e) {
            let t = (e) => (8 & Number.parseInt(e[0], 16) ? "00" + e : e),
              r = (e) => {
                let t = e.toString(16);
                return 1 & t.length ? `0${t}` : t;
              },
              n = t(r(e.s)),
              i = t(r(e.r)),
              o = n.length / 2,
              a = i.length / 2,
              s = r(o),
              l = r(a);
            return `30${r(a + o + 4)}02${l}${i}02${s}${n}`;
          },
        },
        sz = BigInt(0),
        sG = BigInt(1),
        sq = (BigInt(2), BigInt(3)),
        sW =
          (BigInt(4),
          BigInt(
            "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"
          )),
        sV = BigInt(
          "0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"
        ),
        sZ = BigInt(1),
        sK = BigInt(2),
        sQ = (e, t) => (e + t / sK) / t,
        sJ = (function (e, t, r = !1, n = {}) {
          if (e <= sE) throw Error(`Expected Field ORDER > 0, got ${e}`);
          let { nBitLength: i, nByteLength: o } = sN(e, t);
          if (o > 2048)
            throw Error("Field lengths over 2048 bytes are not supported");
          let a = (function (e) {
              if (e % sP === sS) {
                let t = (e + sk) / sP;
                return function (e, r) {
                  let n = e.pow(r, t);
                  if (!e.eql(e.sqr(n), r))
                    throw Error("Cannot find square root");
                  return n;
                };
              }
              if (e % sC === sT) {
                let t = (e - sT) / sC;
                return function (e, r) {
                  let n = e.mul(r, sI),
                    i = e.pow(n, t),
                    o = e.mul(r, i),
                    a = e.mul(e.mul(o, sI), i),
                    s = e.mul(o, e.sub(a, e.ONE));
                  if (!e.eql(e.sqr(s), r))
                    throw Error("Cannot find square root");
                  return s;
                };
              }
              return (function (e) {
                let t, r, n;
                let i = (e - sk) / sI;
                for (t = e - sk, r = 0; t % sI === sE; t /= sI, r++);
                for (
                  n = sI;
                  n < e &&
                  (function (e, t, r) {
                    if (r <= sE || t < sE)
                      throw Error("Expected power/modulo > 0");
                    if (r === sk) return sE;
                    let n = sk;
                    for (; t > sE; )
                      t & sk && (n = (n * e) % r),
                        (e = (e * e) % r),
                        (t >>= sk);
                    return n;
                  })(n, i, e) !==
                    e - sk;
                  n++
                );
                if (1 === r) {
                  let t = (e + sk) / sP;
                  return function (e, r) {
                    let n = e.pow(r, t);
                    if (!e.eql(e.sqr(n), r))
                      throw Error("Cannot find square root");
                    return n;
                  };
                }
                let o = (t + sk) / sI;
                return function (e, a) {
                  if (e.pow(a, i) === e.neg(e.ONE))
                    throw Error("Cannot find square root");
                  let s = r,
                    l = e.pow(e.mul(e.ONE, n), t),
                    u = e.pow(a, o),
                    c = e.pow(a, t);
                  for (; !e.eql(c, e.ONE); ) {
                    if (e.eql(c, e.ZERO)) return e.ZERO;
                    let t = 1;
                    for (let r = e.sqr(c); t < s && !e.eql(r, e.ONE); t++)
                      r = e.sqr(r);
                    let r = e.pow(l, sk << BigInt(s - t - 1));
                    (l = e.sqr(r)),
                      (u = e.mul(u, r)),
                      (c = e.mul(c, l)),
                      (s = t);
                  }
                  return u;
                };
              })(e);
            })(e),
            s = Object.freeze({
              ORDER: e,
              BITS: i,
              BYTES: o,
              MASK: sy(i),
              ZERO: sE,
              ONE: sk,
              create: (t) => sO(t, e),
              isValid: (t) => {
                if ("bigint" != typeof t)
                  throw Error(
                    `Invalid field element: expected bigint, got ${typeof t}`
                  );
                return sE <= t && t < e;
              },
              is0: (e) => e === sE,
              isOdd: (e) => (e & sk) === sk,
              neg: (t) => sO(-t, e),
              eql: (e, t) => e === t,
              sqr: (t) => sO(t * t, e),
              add: (t, r) => sO(t + r, e),
              sub: (t, r) => sO(t - r, e),
              mul: (t, r) => sO(t * r, e),
              pow: (e, t) =>
                (function (e, t, r) {
                  if (r < sE) throw Error("Expected power > 0");
                  if (r === sE) return e.ONE;
                  if (r === sk) return t;
                  let n = e.ONE,
                    i = t;
                  for (; r > sE; )
                    r & sk && (n = e.mul(n, i)), (i = e.sqr(i)), (r >>= sk);
                  return n;
                })(s, e, t),
              div: (t, r) => sO(t * sB(r, e), e),
              sqrN: (e) => e * e,
              addN: (e, t) => e + t,
              subN: (e, t) => e - t,
              mulN: (e, t) => e * t,
              inv: (t) => sB(t, e),
              sqrt: n.sqrt || ((e) => a(s, e)),
              invertBatch: (e) =>
                (function (e, t) {
                  let r = Array(t.length),
                    n = t.reduce(
                      (t, n, i) => (e.is0(n) ? t : ((r[i] = t), e.mul(t, n))),
                      e.ONE
                    ),
                    i = e.inv(n);
                  return (
                    t.reduceRight(
                      (t, n, i) =>
                        e.is0(n) ? t : ((r[i] = e.mul(t, r[i])), e.mul(t, n)),
                      i
                    ),
                    r
                  );
                })(s, e),
              cmov: (e, t, r) => (r ? t : e),
              toBytes: (e) => (r ? sp(e, o) : sh(e, o)),
              fromBytes: (e) => {
                if (e.length !== o)
                  throw Error(`Fp.fromBytes: expected ${o}, got ${e.length}`);
                return r ? sf(e) : sd(e);
              },
            });
          return Object.freeze(s);
        })(sW, void 0, void 0, {
          sqrt: function (e) {
            let t = BigInt(3),
              r = BigInt(6),
              n = BigInt(11),
              i = BigInt(22),
              o = BigInt(23),
              a = BigInt(44),
              s = BigInt(88),
              l = (e * e * e) % sW,
              u = (l * l * e) % sW,
              c = (s_(u, t, sW) * u) % sW,
              d = (s_(c, t, sW) * u) % sW,
              f = (s_(d, sK, sW) * l) % sW,
              h = (s_(f, n, sW) * f) % sW,
              p = (s_(h, i, sW) * h) % sW,
              m = (s_(p, a, sW) * p) % sW,
              g = (s_(m, s, sW) * m) % sW,
              y = (s_(g, a, sW) * p) % sW,
              b = (s_(y, t, sW) * u) % sW,
              v = (s_(b, o, sW) * h) % sW,
              w = (s_(v, r, sW) * l) % sW,
              x = s_(w, sK, sW);
            if (!sJ.eql(sJ.sqr(x), e)) throw Error("Cannot find square root");
            return x;
          },
        }),
        sY = (function (e, t) {
          let r = (t) =>
            (function (e) {
              let t = (function (e) {
                  let t = sD(e);
                  return (
                    sA(
                      t,
                      {
                        hash: "hash",
                        hmac: "function",
                        randomBytes: "function",
                      },
                      {
                        bits2int: "function",
                        bits2int_modN: "function",
                        lowS: "boolean",
                      }
                    ),
                    Object.freeze({ lowS: !0, ...t })
                  );
                })(e),
                { Fp: r, n: n } = t,
                i = r.BYTES + 1,
                o = 2 * r.BYTES + 1;
              function a(e) {
                return sO(e, n);
              }
              let {
                  ProjectivePoint: s,
                  normPrivateKeyToScalar: l,
                  weierstrassEquation: u,
                  isWithinCurveOrder: c,
                } = (function (e) {
                  let t = (function (e) {
                      let t = sD(e);
                      sA(
                        t,
                        { a: "field", b: "field" },
                        {
                          allowedPrivateKeyLengths: "array",
                          wrapPrivateKey: "boolean",
                          isTorsionFree: "function",
                          clearCofactor: "function",
                          allowInfinityPoint: "boolean",
                          fromBytes: "function",
                          toBytes: "function",
                        }
                      );
                      let { endo: r, Fp: n, a: i } = t;
                      if (r) {
                        if (!n.eql(i, n.ZERO))
                          throw Error(
                            "Endomorphism can only be defined for Koblitz curves that have a=0"
                          );
                        if (
                          "object" != typeof r ||
                          "bigint" != typeof r.beta ||
                          "function" != typeof r.splitScalar
                        )
                          throw Error(
                            "Expected endomorphism with beta: bigint and splitScalar: function"
                          );
                      }
                      return Object.freeze({ ...t });
                    })(e),
                    { Fp: r } = t,
                    n =
                      t.toBytes ||
                      ((e, t, n) => {
                        let i = t.toAffine();
                        return sg(
                          Uint8Array.from([4]),
                          r.toBytes(i.x),
                          r.toBytes(i.y)
                        );
                      }),
                    i =
                      t.fromBytes ||
                      ((e) => {
                        let t = e.subarray(1);
                        return {
                          x: r.fromBytes(t.subarray(0, r.BYTES)),
                          y: r.fromBytes(t.subarray(r.BYTES, 2 * r.BYTES)),
                        };
                      });
                  function o(e) {
                    let { a: n, b: i } = t,
                      o = r.sqr(e),
                      a = r.mul(o, e);
                    return r.add(r.add(a, r.mul(e, n)), i);
                  }
                  if (!r.eql(r.sqr(t.Gy), o(t.Gx)))
                    throw Error("bad generator point: equation left != right");
                  function a(e) {
                    return "bigint" == typeof e && sz < e && e < t.n;
                  }
                  function s(e) {
                    if (!a(e))
                      throw Error(
                        "Expected valid bigint: 0 < bigint < curve.n"
                      );
                  }
                  function l(e) {
                    let r;
                    let {
                      allowedPrivateKeyLengths: n,
                      nByteLength: i,
                      wrapPrivateKey: o,
                      n: a,
                    } = t;
                    if (n && "bigint" != typeof e) {
                      if (
                        (sn(e) && (e = sa(e)),
                        "string" != typeof e || !n.includes(e.length))
                      )
                        throw Error("Invalid key");
                      e = e.padStart(2 * i, "0");
                    }
                    try {
                      r =
                        "bigint" == typeof e ? e : sd(sm("private key", e, i));
                    } catch (t) {
                      throw Error(
                        `private key must be ${i} bytes, hex or bigint, not ${typeof e}`
                      );
                    }
                    return o && (r = sO(r, a)), s(r), r;
                  }
                  let u = new Map();
                  function c(e) {
                    if (!(e instanceof d))
                      throw Error("ProjectivePoint expected");
                  }
                  class d {
                    constructor(e, t, n) {
                      if (
                        ((this.px = e),
                        (this.py = t),
                        (this.pz = n),
                        null == e || !r.isValid(e))
                      )
                        throw Error("x required");
                      if (null == t || !r.isValid(t)) throw Error("y required");
                      if (null == n || !r.isValid(n)) throw Error("z required");
                    }
                    static fromAffine(e) {
                      let { x: t, y: n } = e || {};
                      if (!e || !r.isValid(t) || !r.isValid(n))
                        throw Error("invalid affine point");
                      if (e instanceof d)
                        throw Error("projective point not allowed");
                      let i = (e) => r.eql(e, r.ZERO);
                      return i(t) && i(n) ? d.ZERO : new d(t, n, r.ONE);
                    }
                    get x() {
                      return this.toAffine().x;
                    }
                    get y() {
                      return this.toAffine().y;
                    }
                    static normalizeZ(e) {
                      let t = r.invertBatch(e.map((e) => e.pz));
                      return e
                        .map((e, r) => e.toAffine(t[r]))
                        .map(d.fromAffine);
                    }
                    static fromHex(e) {
                      let t = d.fromAffine(i(sm("pointHex", e)));
                      return t.assertValidity(), t;
                    }
                    static fromPrivateKey(e) {
                      return d.BASE.multiply(l(e));
                    }
                    _setWindowSize(e) {
                      (this._WINDOW_SIZE = e), u.delete(this);
                    }
                    assertValidity() {
                      if (this.is0()) {
                        if (t.allowInfinityPoint && !r.is0(this.py)) return;
                        throw Error("bad point: ZERO");
                      }
                      let { x: e, y: n } = this.toAffine();
                      if (!r.isValid(e) || !r.isValid(n))
                        throw Error("bad point: x or y not FE");
                      let i = r.sqr(n),
                        a = o(e);
                      if (!r.eql(i, a))
                        throw Error("bad point: equation left != right");
                      if (!this.isTorsionFree())
                        throw Error("bad point: not in prime-order subgroup");
                    }
                    hasEvenY() {
                      let { y: e } = this.toAffine();
                      if (r.isOdd) return !r.isOdd(e);
                      throw Error("Field doesn't support isOdd");
                    }
                    equals(e) {
                      c(e);
                      let { px: t, py: n, pz: i } = this,
                        { px: o, py: a, pz: s } = e,
                        l = r.eql(r.mul(t, s), r.mul(o, i)),
                        u = r.eql(r.mul(n, s), r.mul(a, i));
                      return l && u;
                    }
                    negate() {
                      return new d(this.px, r.neg(this.py), this.pz);
                    }
                    double() {
                      let { a: e, b: n } = t,
                        i = r.mul(n, sq),
                        { px: o, py: a, pz: s } = this,
                        l = r.ZERO,
                        u = r.ZERO,
                        c = r.ZERO,
                        f = r.mul(o, o),
                        h = r.mul(a, a),
                        p = r.mul(s, s),
                        m = r.mul(o, a);
                      return (
                        (m = r.add(m, m)),
                        (c = r.mul(o, s)),
                        (c = r.add(c, c)),
                        (l = r.mul(e, c)),
                        (u = r.mul(i, p)),
                        (u = r.add(l, u)),
                        (l = r.sub(h, u)),
                        (u = r.add(h, u)),
                        (u = r.mul(l, u)),
                        (l = r.mul(m, l)),
                        (c = r.mul(i, c)),
                        (p = r.mul(e, p)),
                        (m = r.sub(f, p)),
                        (m = r.mul(e, m)),
                        (m = r.add(m, c)),
                        (c = r.add(f, f)),
                        (f = r.add(c, f)),
                        (f = r.add(f, p)),
                        (f = r.mul(f, m)),
                        (u = r.add(u, f)),
                        (p = r.mul(a, s)),
                        (p = r.add(p, p)),
                        (f = r.mul(p, m)),
                        (l = r.sub(l, f)),
                        (c = r.mul(p, h)),
                        (c = r.add(c, c)),
                        new d(l, u, (c = r.add(c, c)))
                      );
                    }
                    add(e) {
                      c(e);
                      let { px: n, py: i, pz: o } = this,
                        { px: a, py: s, pz: l } = e,
                        u = r.ZERO,
                        f = r.ZERO,
                        h = r.ZERO,
                        p = t.a,
                        m = r.mul(t.b, sq),
                        g = r.mul(n, a),
                        y = r.mul(i, s),
                        b = r.mul(o, l),
                        v = r.add(n, i),
                        w = r.add(a, s);
                      (v = r.mul(v, w)),
                        (w = r.add(g, y)),
                        (v = r.sub(v, w)),
                        (w = r.add(n, o));
                      let x = r.add(a, l);
                      return (
                        (w = r.mul(w, x)),
                        (x = r.add(g, b)),
                        (w = r.sub(w, x)),
                        (x = r.add(i, o)),
                        (u = r.add(s, l)),
                        (x = r.mul(x, u)),
                        (u = r.add(y, b)),
                        (x = r.sub(x, u)),
                        (h = r.mul(p, w)),
                        (u = r.mul(m, b)),
                        (h = r.add(u, h)),
                        (u = r.sub(y, h)),
                        (h = r.add(y, h)),
                        (f = r.mul(u, h)),
                        (y = r.add(g, g)),
                        (y = r.add(y, g)),
                        (b = r.mul(p, b)),
                        (w = r.mul(m, w)),
                        (y = r.add(y, b)),
                        (b = r.sub(g, b)),
                        (b = r.mul(p, b)),
                        (w = r.add(w, b)),
                        (g = r.mul(y, w)),
                        (f = r.add(f, g)),
                        (g = r.mul(x, w)),
                        (u = r.mul(v, u)),
                        (u = r.sub(u, g)),
                        (g = r.mul(v, y)),
                        (h = r.mul(x, h)),
                        new d(u, f, (h = r.add(h, g)))
                      );
                    }
                    subtract(e) {
                      return this.add(e.negate());
                    }
                    is0() {
                      return this.equals(d.ZERO);
                    }
                    wNAF(e) {
                      return h.wNAFCached(this, u, e, (e) => {
                        let t = r.invertBatch(e.map((e) => e.pz));
                        return e
                          .map((e, r) => e.toAffine(t[r]))
                          .map(d.fromAffine);
                      });
                    }
                    multiplyUnsafe(e) {
                      let n = d.ZERO;
                      if (e === sz) return n;
                      if ((s(e), e === sG)) return this;
                      let { endo: i } = t;
                      if (!i) return h.unsafeLadder(this, e);
                      let {
                          k1neg: o,
                          k1: a,
                          k2neg: l,
                          k2: u,
                        } = i.splitScalar(e),
                        c = n,
                        f = n,
                        p = this;
                      for (; a > sz || u > sz; )
                        a & sG && (c = c.add(p)),
                          u & sG && (f = f.add(p)),
                          (p = p.double()),
                          (a >>= sG),
                          (u >>= sG);
                      return (
                        o && (c = c.negate()),
                        l && (f = f.negate()),
                        (f = new d(r.mul(f.px, i.beta), f.py, f.pz)),
                        c.add(f)
                      );
                    }
                    multiply(e) {
                      let n, i;
                      s(e);
                      let { endo: o } = t;
                      if (o) {
                        let {
                            k1neg: t,
                            k1: a,
                            k2neg: s,
                            k2: l,
                          } = o.splitScalar(e),
                          { p: u, f: c } = this.wNAF(a),
                          { p: f, f: p } = this.wNAF(l);
                        (u = h.constTimeNegate(t, u)),
                          (f = h.constTimeNegate(s, f)),
                          (f = new d(r.mul(f.px, o.beta), f.py, f.pz)),
                          (n = u.add(f)),
                          (i = c.add(p));
                      } else {
                        let { p: t, f: r } = this.wNAF(e);
                        (n = t), (i = r);
                      }
                      return d.normalizeZ([n, i])[0];
                    }
                    multiplyAndAddUnsafe(e, t, r) {
                      let n = d.BASE,
                        i = (e, t) =>
                          t !== sz && t !== sG && e.equals(n)
                            ? e.multiply(t)
                            : e.multiplyUnsafe(t),
                        o = i(this, t).add(i(e, r));
                      return o.is0() ? void 0 : o;
                    }
                    toAffine(e) {
                      let { px: t, py: n, pz: i } = this,
                        o = this.is0();
                      null == e && (e = o ? r.ONE : r.inv(i));
                      let a = r.mul(t, e),
                        s = r.mul(n, e),
                        l = r.mul(i, e);
                      if (o) return { x: r.ZERO, y: r.ZERO };
                      if (!r.eql(l, r.ONE)) throw Error("invZ was invalid");
                      return { x: a, y: s };
                    }
                    isTorsionFree() {
                      let { h: e, isTorsionFree: r } = t;
                      if (e === sG) return !0;
                      if (r) return r(d, this);
                      throw Error(
                        "isTorsionFree() has not been declared for the elliptic curve"
                      );
                    }
                    clearCofactor() {
                      let { h: e, clearCofactor: r } = t;
                      return e === sG
                        ? this
                        : r
                        ? r(d, this)
                        : this.multiplyUnsafe(t.h);
                    }
                    toRawBytes(e = !0) {
                      return this.assertValidity(), n(d, this, e);
                    }
                    toHex(e = !0) {
                      return sa(this.toRawBytes(e));
                    }
                  }
                  (d.BASE = new d(t.Gx, t.Gy, r.ONE)),
                    (d.ZERO = new d(r.ZERO, r.ONE, r.ZERO));
                  let f = t.nBitLength,
                    h = (function (e, t) {
                      let r = (e, t) => {
                          let r = t.negate();
                          return e ? r : t;
                        },
                        n = (e) => ({
                          windows: Math.ceil(t / e) + 1,
                          windowSize: 2 ** (e - 1),
                        });
                      return {
                        constTimeNegate: r,
                        unsafeLadder(t, r) {
                          let n = e.ZERO,
                            i = t;
                          for (; r > sF; )
                            r & sL && (n = n.add(i)),
                              (i = i.double()),
                              (r >>= sL);
                          return n;
                        },
                        precomputeWindow(e, t) {
                          let { windows: r, windowSize: i } = n(t),
                            o = [],
                            a = e,
                            s = a;
                          for (let e = 0; e < r; e++) {
                            (s = a), o.push(s);
                            for (let e = 1; e < i; e++)
                              (s = s.add(a)), o.push(s);
                            a = s.double();
                          }
                          return o;
                        },
                        wNAF(t, i, o) {
                          let { windows: a, windowSize: s } = n(t),
                            l = e.ZERO,
                            u = e.BASE,
                            c = BigInt(2 ** t - 1),
                            d = 2 ** t,
                            f = BigInt(t);
                          for (let e = 0; e < a; e++) {
                            let t = e * s,
                              n = Number(o & c);
                            (o >>= f), n > s && ((n -= d), (o += sL));
                            let a = t + Math.abs(n) - 1,
                              h = e % 2 != 0,
                              p = n < 0;
                            0 === n
                              ? (u = u.add(r(h, i[t])))
                              : (l = l.add(r(p, i[a])));
                          }
                          return { p: l, f: u };
                        },
                        wNAFCached(e, t, r, n) {
                          let i = e._WINDOW_SIZE || 1,
                            o = t.get(e);
                          return (
                            o ||
                              ((o = this.precomputeWindow(e, i)),
                              1 !== i && t.set(e, n(o))),
                            this.wNAF(i, o, r)
                          );
                        },
                      };
                    })(d, t.endo ? Math.ceil(f / 2) : f);
                  return {
                    CURVE: t,
                    ProjectivePoint: d,
                    normPrivateKeyToScalar: l,
                    weierstrassEquation: o,
                    isWithinCurveOrder: a,
                  };
                })({
                  ...t,
                  toBytes(e, t, n) {
                    let i = t.toAffine(),
                      o = r.toBytes(i.x),
                      a = sg;
                    return n
                      ? a(Uint8Array.from([t.hasEvenY() ? 2 : 3]), o)
                      : a(Uint8Array.from([4]), o, r.toBytes(i.y));
                  },
                  fromBytes(e) {
                    let t = e.length,
                      n = e[0],
                      a = e.subarray(1);
                    if (t === i && (2 === n || 3 === n)) {
                      let e;
                      let t = sd(a);
                      if (!(sz < t && t < r.ORDER))
                        throw Error("Point is not on curve");
                      let i = u(t);
                      try {
                        e = r.sqrt(i);
                      } catch (e) {
                        throw Error(
                          "Point is not on curve" +
                            (e instanceof Error ? ": " + e.message : "")
                        );
                      }
                      return (
                        ((1 & n) == 1) != ((e & sG) === sG) && (e = r.neg(e)),
                        { x: t, y: e }
                      );
                    }
                    if (t === o && 4 === n)
                      return {
                        x: r.fromBytes(a.subarray(0, r.BYTES)),
                        y: r.fromBytes(a.subarray(r.BYTES, 2 * r.BYTES)),
                      };
                    throw Error(
                      `Point of length ${t} was invalid. Expected ${i} compressed bytes or ${o} uncompressed bytes`
                    );
                  },
                }),
                d = (e) => sa(sh(e, t.nByteLength)),
                f = (e, t, r) => sd(e.slice(t, r));
              class h {
                constructor(e, t, r) {
                  (this.r = e),
                    (this.s = t),
                    (this.recovery = r),
                    this.assertValidity();
                }
                static fromCompact(e) {
                  let r = t.nByteLength;
                  return new h(
                    f((e = sm("compactSignature", e, 2 * r)), 0, r),
                    f(e, r, 2 * r)
                  );
                }
                static fromDER(e) {
                  let { r: t, s: r } = s$.toSig(sm("DER", e));
                  return new h(t, r);
                }
                assertValidity() {
                  if (!c(this.r)) throw Error("r must be 0 < r < CURVE.n");
                  if (!c(this.s)) throw Error("s must be 0 < s < CURVE.n");
                }
                addRecoveryBit(e) {
                  return new h(this.r, this.s, e);
                }
                recoverPublicKey(e) {
                  let { r: i, s: o, recovery: l } = this,
                    u = g(sm("msgHash", e));
                  if (null == l || ![0, 1, 2, 3].includes(l))
                    throw Error("recovery id invalid");
                  let c = 2 === l || 3 === l ? i + t.n : i;
                  if (c >= r.ORDER) throw Error("recovery id 2 or 3 invalid");
                  let f = (1 & l) == 0 ? "02" : "03",
                    h = s.fromHex(f + d(c)),
                    p = sB(c, n),
                    m = a(-u * p),
                    y = a(o * p),
                    b = s.BASE.multiplyAndAddUnsafe(h, m, y);
                  if (!b) throw Error("point at infinify");
                  return b.assertValidity(), b;
                }
                hasHighS() {
                  return this.s > n >> sG;
                }
                normalizeS() {
                  return this.hasHighS()
                    ? new h(this.r, a(-this.s), this.recovery)
                    : this;
                }
                toDERRawBytes() {
                  return sc(this.toDERHex());
                }
                toDERHex() {
                  return s$.hexFromSig({ r: this.r, s: this.s });
                }
                toCompactRawBytes() {
                  return sc(this.toCompactHex());
                }
                toCompactHex() {
                  return d(this.r) + d(this.s);
                }
              }
              function p(e) {
                let t = sn(e),
                  r = "string" == typeof e,
                  n = (t || r) && e.length;
                return t
                  ? n === i || n === o
                  : r
                  ? n === 2 * i || n === 2 * o
                  : e instanceof s;
              }
              let m =
                  t.bits2int ||
                  function (e) {
                    let r = sd(e),
                      n = 8 * e.length - t.nBitLength;
                    return n > 0 ? r >> BigInt(n) : r;
                  },
                g =
                  t.bits2int_modN ||
                  function (e) {
                    return a(m(e));
                  },
                y = sy(t.nBitLength);
              function b(e) {
                if ("bigint" != typeof e) throw Error("bigint expected");
                if (!(sz <= e && e < y))
                  throw Error(`bigint expected < 2^${t.nBitLength}`);
                return sh(e, t.nByteLength);
              }
              let v = { lowS: t.lowS, prehash: !1 },
                w = { lowS: t.lowS, prehash: !1 };
              return (
                s.BASE._setWindowSize(8),
                {
                  CURVE: t,
                  getPublicKey: function (e, t = !0) {
                    return s.fromPrivateKey(e).toRawBytes(t);
                  },
                  getSharedSecret: function (e, t, r = !0) {
                    if (p(e)) throw Error("first arg must be private key");
                    if (!p(t)) throw Error("second arg must be public key");
                    return s.fromHex(t).multiply(l(e)).toRawBytes(r);
                  },
                  sign: function (e, i, o = v) {
                    let { seed: u, k2sig: d } = (function (e, i, o = v) {
                      if (["recovered", "canonical"].some((e) => e in o))
                        throw Error("sign() legacy options not supported");
                      let { hash: u, randomBytes: d } = t,
                        { lowS: f, prehash: p, extraEntropy: y } = o;
                      null == f && (f = !0),
                        (e = sm("msgHash", e)),
                        p && (e = sm("prehashed msgHash", u(e)));
                      let w = g(e),
                        x = l(i),
                        A = [b(x), b(w)];
                      if (null != y && !1 !== y) {
                        let e = !0 === y ? d(r.BYTES) : y;
                        A.push(sm("extraEntropy", e));
                      }
                      return {
                        seed: sg(...A),
                        k2sig: function (e) {
                          let t = m(e);
                          if (!c(t)) return;
                          let r = sB(t, n),
                            i = s.BASE.multiply(t).toAffine(),
                            o = a(i.x);
                          if (o === sz) return;
                          let l = a(r * a(w + o * x));
                          if (l === sz) return;
                          let u = (i.x === o ? 0 : 2) | Number(i.y & sG),
                            d = l;
                          if (f && l > n >> sG)
                            (d = l > n >> sG ? a(-l) : l), (u ^= 1);
                          return new h(o, d, u);
                        },
                      };
                    })(e, i, o);
                    return sw(t.hash.outputLen, t.nByteLength, t.hmac)(u, d);
                  },
                  verify: function (e, r, i, o = w) {
                    let l, u;
                    if (
                      ((r = sm("msgHash", r)),
                      (i = sm("publicKey", i)),
                      "strict" in o)
                    )
                      throw Error("options.strict was renamed to lowS");
                    let { lowS: c, prehash: d } = o;
                    try {
                      if ("string" == typeof e || sn(e))
                        try {
                          u = h.fromDER(e);
                        } catch (t) {
                          if (!(t instanceof s$.Err)) throw t;
                          u = h.fromCompact(e);
                        }
                      else if (
                        "object" == typeof e &&
                        "bigint" == typeof e.r &&
                        "bigint" == typeof e.s
                      ) {
                        let { r: t, s: r } = e;
                        u = new h(t, r);
                      } else throw Error("PARSE");
                      l = s.fromHex(i);
                    } catch (e) {
                      if ("PARSE" === e.message)
                        throw Error(
                          "signature must be Signature instance, Uint8Array or hex string"
                        );
                      return !1;
                    }
                    if (c && u.hasHighS()) return !1;
                    d && (r = t.hash(r));
                    let { r: f, s: p } = u,
                      m = g(r),
                      y = sB(p, n),
                      b = a(m * y),
                      v = a(f * y),
                      x = s.BASE.multiplyAndAddUnsafe(l, b, v)?.toAffine();
                    return !!x && a(x.x) === f;
                  },
                  ProjectivePoint: s,
                  Signature: h,
                  utils: {
                    isValidPrivateKey(e) {
                      try {
                        return l(e), !0;
                      } catch (e) {
                        return !1;
                      }
                    },
                    normPrivateKeyToScalar: l,
                    randomPrivateKey: () => {
                      let e = sj(t.n);
                      return (function (e, t, r = !1) {
                        let n = e.length,
                          i = sM(t),
                          o = sj(t);
                        if (n < 16 || n < o || n > 1024)
                          throw Error(
                            `expected ${o}-1024 bytes of input, got ${n}`
                          );
                        let a = sO(r ? sd(e) : sf(e), t - sk) + sk;
                        return r ? sp(a, i) : sh(a, i);
                      })(t.randomBytes(e), t.n);
                    },
                    precompute: (e = 8, t = s.BASE) => (
                      t._setWindowSize(e), t.multiply(BigInt(3)), t
                    ),
                  },
                }
              );
            })({
              ...e,
              hash: t,
              hmac: (e, ...r) => aG(t, e, (0, oW.Id)(...r)),
              randomBytes: oW.po,
            });
          return Object.freeze({ ...r(t), create: r });
        })(
          {
            a: BigInt(0),
            b: BigInt(7),
            Fp: sJ,
            n: sV,
            Gx: BigInt(
              "55066263022277343669578718895168534326250603453777594175500187360389116729240"
            ),
            Gy: BigInt(
              "32670510020758816978083085130507043184471273380659243275938904335757337482424"
            ),
            h: BigInt(1),
            lowS: !0,
            endo: {
              beta: BigInt(
                "0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"
              ),
              splitScalar: (e) => {
                let t = BigInt("0x3086d221a7d46bcde86c90e49284eb15"),
                  r = -sZ * BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),
                  n = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),
                  i = BigInt("0x100000000000000000000000000000000"),
                  o = sQ(t * e, sV),
                  a = sQ(-r * e, sV),
                  s = sO(e - o * t - a * n, sV),
                  l = sO(-o * r - a * t, sV),
                  u = s > i,
                  c = l > i;
                if ((u && (s = sV - s), c && (l = sV - l), s > i || l > i))
                  throw Error("splitScalar: Endomorphism failed, k=" + e);
                return { k1neg: u, k1: s, k2neg: c, k2: l };
              },
            },
          },
          aX
        ),
        sX = (BigInt(0), sY.ProjectivePoint, null != sY ? sY : Z),
        s0 = BigInt("0xffffffffffffffff"),
        s1 = BigInt(
          "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
        ),
        s2 = sX.CURVE.n / BigInt(2),
        s6 = {
          type: "object",
          required: ["crypto", "id", "version", "address"],
          properties: {
            crypto: {
              type: "object",
              required: [
                "cipher",
                "ciphertext",
                "cipherparams",
                "kdf",
                "kdfparams",
                "mac",
              ],
              properties: {
                cipher: { type: "string" },
                ciphertext: { type: "string" },
                cipherparams: { type: "object" },
                kdf: { type: "string" },
                kdfparams: { type: "object" },
                salt: { type: "string" },
                mac: { type: "string" },
              },
            },
            id: { type: "string" },
            version: { type: "number" },
            address: { type: "string" },
          },
        };
      !(function (e) {
        (e[(e.Mainnet = 1)] = "Mainnet"),
          (e[(e.Goerli = 5)] = "Goerli"),
          (e[(e.Sepolia = 0xaa36a7)] = "Sepolia");
      })(B || (B = {})),
        (function (e) {
          (e.Chainstart = "chainstart"),
            (e.Homestead = "homestead"),
            (e.Dao = "dao"),
            (e.TangerineWhistle = "tangerineWhistle"),
            (e.SpuriousDragon = "spuriousDragon"),
            (e.Byzantium = "byzantium"),
            (e.Constantinople = "constantinople"),
            (e.Petersburg = "petersburg"),
            (e.Istanbul = "istanbul"),
            (e.MuirGlacier = "muirGlacier"),
            (e.Berlin = "berlin"),
            (e.London = "london"),
            (e.ArrowGlacier = "arrowGlacier"),
            (e.GrayGlacier = "grayGlacier"),
            (e.MergeForkIdTransition = "mergeForkIdTransition"),
            (e.Merge = "merge"),
            (e.Shanghai = "shanghai"),
            (e.ShardingForkDev = "shardingFork");
        })(R || (R = {})),
        (function (e) {
          (e.ProofOfStake = "pos"),
            (e.ProofOfWork = "pow"),
            (e.ProofOfAuthority = "poa");
        })(N || (N = {})),
        (function (e) {
          (e.Ethash = "ethash"), (e.Clique = "clique"), (e.Casper = "casper");
        })(M || (M = {})),
        (function (e) {
          (e.PolygonMainnet = "polygon-mainnet"),
            (e.PolygonMumbai = "polygon-mumbai"),
            (e.ArbitrumRinkebyTestnet = "arbitrum-rinkeby-testnet"),
            (e.ArbitrumOne = "arbitrum-one"),
            (e.xDaiChain = "x-dai-chain"),
            (e.OptimisticKovan = "optimistic-kovan"),
            (e.OptimisticEthereum = "optimistic-ethereum");
        })(j || (j = {})),
        (function (e) {
          (e[(e.Number = 0)] = "Number"),
            (e[(e.BigInt = 1)] = "BigInt"),
            (e[(e.Uint8Array = 2)] = "Uint8Array"),
            (e[(e.PrefixedHexString = 3)] = "PrefixedHexString");
        })(F || (F = {}));
      let s5 = (e) => {
          if ("string" != typeof e)
            throw Error(
              `[stripHexPrefix] input must be type 'string', received ${typeof e}`
            );
          return n1(e) ? e.slice(2) : e;
        },
        s3 = function (e) {
          if (!Number.isSafeInteger(e) || e < 0)
            throw Error(`Received an invalid integer type: ${e}`);
          return `0x${e.toString(16)}`;
        };
      function s8(e) {
        let t = e;
        if ("string" != typeof t)
          throw Error(
            `[padToEven] value must be type 'string', received ${typeof t}`
          );
        return t.length % 2 && (t = `0${t}`), t;
      }
      let s4 = function (e) {
          let t = s3(e);
          return i$(`0x${s8(t.slice(2))}`);
        },
        s9 = function (e) {
          var t;
          if (null == e) return new Uint8Array();
          if (e instanceof Uint8Array) return e;
          if (
            (null === (t = null == e ? void 0 : e.constructor) || void 0 === t
              ? void 0
              : t.name) === "Uint8Array" ||
            Array.isArray(e)
          )
            return Uint8Array.from(e);
          if ("string" == typeof e) {
            if (!nX(e))
              throw Error(
                `Cannot convert string to Uint8Array. only supports 0x-prefixed hex strings and this string was given: ${e}`
              );
            return i$(s8(s5(e)));
          }
          if ("number" == typeof e) return s9(iq(e));
          if ("bigint" == typeof e) {
            if (e < BigInt(0))
              throw Error(
                `Cannot convert negative bigint to Uint8Array. Given: ${e}`
              );
            let t = e.toString(16);
            return t.length % 2 && (t = `0${t}`), s9(`0x${t}`);
          }
          if (e.toArray) return Uint8Array.from(e.toArray());
          throw Error("invalid type");
        };
      function s7(e) {
        let t = iH(e);
        return "0x" === t ? BigInt(0) : BigInt(t);
      }
      let le = function (e) {
          return new Uint8Array(e).fill(0);
        },
        lt = function (e, t, r) {
          let n = le(t);
          return r
            ? e.length < t
              ? (n.set(e), n)
              : e.subarray(0, t)
            : e.length < t
            ? (n.set(e, t - e.length), n)
            : e.subarray(-t);
        };
      function lr(e) {
        if (!iN(e))
          throw Error(
            `This method only supports Uint8Array but input was: ${e}`
          );
      }
      let ln = function (e, t) {
          return lr(e), lt(e, t, !1);
        },
        li = function (e) {
          return (
            lr(e),
            (function (e) {
              let t = e[0];
              for (; e.length > 0 && "0" === t.toString(); )
                t = (e = e.slice(1))[0];
              return e;
            })(e)
          );
        },
        lo = (e) => `0x${e.toString(16)}`;
      function la(e) {
        return li(s9(`0x${e.toString(16)}`));
      }
      let ls = function (e, t, r, n, i) {
        let o =
          t === BigInt(0) || t === BigInt(1)
            ? t
            : void 0 === i
            ? t - BigInt(27)
            : t - (i * BigInt(2) + BigInt(35));
        if (!(o === BigInt(0) || o === BigInt(1)))
          throw Error("Invalid signature v value");
        return new sX.Signature(s7(r), s7(n))
          .addRecoveryBit(Number(o))
          .recoverPublicKey(e)
          .toRawBytes(!1)
          .slice(1);
      };
      function ll(e, t) {
        if (null === e) return null;
        if (void 0 === e) return;
        if ("string" != typeof e || nX(e)) {
          if ("number" == typeof e && !Number.isSafeInteger(e))
            throw Error(
              "The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)"
            );
        } else
          throw Error(
            `A string must be provided with a 0x-prefix, given: ${e}`
          );
        let r = s9(e);
        switch (t) {
          case F.Uint8Array:
            return r;
          case F.BigInt:
            return s7(r);
          case F.Number: {
            let e = s7(r);
            if (e > BigInt(Number.MAX_SAFE_INTEGER))
              throw Error(
                "The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)"
              );
            return Number(e);
          }
          case F.PrefixedHexString:
            return iH(r);
          default:
            throw Error("unknown outputType");
        }
      }
      var lu = r(1145),
        lc = r(46798);
      let ld = {
          name: "goerli",
          chainId: 5,
          networkId: 5,
          defaultHardfork: "merge",
          consensus: {
            type: "poa",
            algorithm: "clique",
            clique: { period: 15, epoch: 3e4 },
          },
          comment: "Cross-client PoA test network",
          url: "https://github.com/goerli/testnet",
          genesis: {
            timestamp: "0x5c51a607",
            gasLimit: 0xa00000,
            difficulty: 1,
            nonce: "0x0000000000000000",
            extraData:
              "0x22466c6578692069732061207468696e6722202d204166726900000000000000e0a2bd4258d2768837baa26a28fe71dc079f84c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
          },
          hardforks: [
            { name: "chainstart", block: 0, forkHash: "0xa3f5ab08" },
            { name: "homestead", block: 0, forkHash: "0xa3f5ab08" },
            { name: "tangerineWhistle", block: 0, forkHash: "0xa3f5ab08" },
            { name: "spuriousDragon", block: 0, forkHash: "0xa3f5ab08" },
            { name: "byzantium", block: 0, forkHash: "0xa3f5ab08" },
            { name: "constantinople", block: 0, forkHash: "0xa3f5ab08" },
            { name: "petersburg", block: 0, forkHash: "0xa3f5ab08" },
            { name: "istanbul", block: 1561651, forkHash: "0xc25efa5c" },
            { name: "berlin", block: 4460644, forkHash: "0x757a1c47" },
            { name: "london", block: 5062605, forkHash: "0xb8c6299d" },
            {
              "//_comment":
                "The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://goerli.etherscan.io/block/7382818",
              name: "merge",
              ttd: "10790000",
              block: 7382819,
              forkHash: "0xb8c6299d",
            },
            { name: "mergeForkIdTransition", block: null, forkHash: null },
            { name: "shanghai", block: null, forkHash: null },
          ],
          bootstrapNodes: [],
          dnsNetworks: [
            "enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.goerli.ethdisco.net",
          ],
        },
        lf = {
          name: "mainnet",
          chainId: 1,
          networkId: 1,
          defaultHardfork: "merge",
          consensus: { type: "pow", algorithm: "ethash", ethash: {} },
          comment: "The Ethereum main chain",
          url: "https://ethstats.net/",
          genesis: {
            gasLimit: 5e3,
            difficulty: 0x400000000,
            nonce: "0x0000000000000042",
            extraData:
              "0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa",
          },
          hardforks: [
            { name: "chainstart", block: 0, forkHash: "0xfc64ec04" },
            { name: "homestead", block: 115e4, forkHash: "0x97c2c34c" },
            { name: "dao", block: 192e4, forkHash: "0x91d1f948" },
            { name: "tangerineWhistle", block: 2463e3, forkHash: "0x7a64da13" },
            { name: "spuriousDragon", block: 2675e3, forkHash: "0x3edd5b10" },
            { name: "byzantium", block: 437e4, forkHash: "0xa00bc324" },
            { name: "constantinople", block: 728e4, forkHash: "0x668db0af" },
            { name: "petersburg", block: 728e4, forkHash: "0x668db0af" },
            { name: "istanbul", block: 9069e3, forkHash: "0x879d6e30" },
            { name: "muirGlacier", block: 92e5, forkHash: "0xe029e991" },
            { name: "berlin", block: 12244e3, forkHash: "0x0eb440f6" },
            { name: "london", block: 12965e3, forkHash: "0xb715077d" },
            { name: "arrowGlacier", block: 13773e3, forkHash: "0x20c327fc" },
            { name: "grayGlacier", block: 1505e4, forkHash: "0xf0afd0e3" },
            {
              "//_comment":
                "The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://etherscan.io/block/15537393",
              name: "merge",
              ttd: "58750000000000000000000",
              block: 0xed14f2,
              forkHash: "0xf0afd0e3",
            },
            { name: "mergeForkIdTransition", block: null, forkHash: null },
            { name: "shanghai", block: null, forkHash: null },
          ],
          bootstrapNodes: [],
          dnsNetworks: [
            "enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.mainnet.ethdisco.net",
          ],
        },
        lh = {
          name: "sepolia",
          chainId: 0xaa36a7,
          networkId: 0xaa36a7,
          defaultHardfork: "merge",
          consensus: { type: "pow", algorithm: "ethash", ethash: {} },
          comment: "PoW test network to replace Ropsten",
          url: "https://github.com/ethereum/go-ethereum/pull/23730",
          genesis: {
            timestamp: "0x6159af19",
            gasLimit: 3e7,
            difficulty: 131072,
            nonce: "0x0000000000000000",
            extraData:
              "0x5365706f6c69612c20417468656e732c204174746963612c2047726565636521",
          },
          hardforks: [
            { name: "chainstart", block: 0, forkHash: "0xfe3366e7" },
            { name: "homestead", block: 0, forkHash: "0xfe3366e7" },
            { name: "tangerineWhistle", block: 0, forkHash: "0xfe3366e7" },
            { name: "spuriousDragon", block: 0, forkHash: "0xfe3366e7" },
            { name: "byzantium", block: 0, forkHash: "0xfe3366e7" },
            { name: "constantinople", block: 0, forkHash: "0xfe3366e7" },
            { name: "petersburg", block: 0, forkHash: "0xfe3366e7" },
            { name: "istanbul", block: 0, forkHash: "0xfe3366e7" },
            { name: "muirGlacier", block: 0, forkHash: "0xfe3366e7" },
            { name: "berlin", block: 0, forkHash: "0xfe3366e7" },
            { name: "london", block: 0, forkHash: "0xfe3366e7" },
            {
              "//_comment":
                "The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://sepolia.etherscan.io/block/1450408",
              name: "merge",
              ttd: "17000000000000000",
              block: 1450409,
              forkHash: "0xfe3366e7",
            },
            {
              name: "mergeForkIdTransition",
              block: 1735371,
              forkHash: "0xb96cbd13",
            },
            {
              name: "shanghai",
              block: null,
              timestamp: "1677557088",
              forkHash: "0xf7f9bc08",
            },
          ],
          bootstrapNodes: [],
          dnsNetworks: [
            "enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.sepolia.ethdisco.net",
          ],
        },
        lp = {
          1153: {
            name: "EIP-1153",
            number: 1153,
            comment: "Transient Storage",
            url: "https://eips.ethereum.org/EIPS/eip-1153",
            status: "Review",
            minimumHardfork: "chainstart",
            requiredEIPs: [],
            gasConfig: {},
            gasPrices: {
              tstore: { v: 100, d: "Base fee of the TSTORE opcode" },
              tload: { v: 100, d: "Base fee of the TLOAD opcode" },
            },
            vm: {},
            pow: {},
          },
          1559: {
            name: "EIP-1559",
            number: 1559,
            comment: "Fee market change for ETH 1.0 chain",
            url: "https://eips.ethereum.org/EIPS/eip-1559",
            status: "Final",
            minimumHardfork: "berlin",
            requiredEIPs: [2930],
            gasConfig: {
              baseFeeMaxChangeDenominator: {
                v: 8,
                d: "Maximum base fee change denominator",
              },
              elasticityMultiplier: {
                v: 2,
                d: "Maximum block gas target elasticity",
              },
              initialBaseFee: {
                v: 1e9,
                d: "Initial base fee on first EIP1559 block",
              },
            },
            gasPrices: {},
            vm: {},
            pow: {},
          },
          2315: {
            name: "EIP-2315",
            number: 2315,
            comment: "Simple subroutines for the EVM",
            url: "https://eips.ethereum.org/EIPS/eip-2315",
            status: "Draft",
            minimumHardfork: "istanbul",
            gasConfig: {},
            gasPrices: {
              beginsub: { v: 2, d: "Base fee of the BEGINSUB opcode" },
              returnsub: { v: 5, d: "Base fee of the RETURNSUB opcode" },
              jumpsub: { v: 10, d: "Base fee of the JUMPSUB opcode" },
            },
            vm: {},
            pow: {},
          },
          2537: {
            name: "EIP-2537",
            number: 2537,
            comment: "BLS12-381 precompiles",
            url: "https://eips.ethereum.org/EIPS/eip-2537",
            status: "Draft",
            minimumHardfork: "chainstart",
            gasConfig: {},
            gasPrices: {
              Bls12381G1AddGas: {
                v: 600,
                d: "Gas cost of a single BLS12-381 G1 addition precompile-call",
              },
              Bls12381G1MulGas: {
                v: 12e3,
                d: "Gas cost of a single BLS12-381 G1 multiplication precompile-call",
              },
              Bls12381G2AddGas: {
                v: 4500,
                d: "Gas cost of a single BLS12-381 G2 addition precompile-call",
              },
              Bls12381G2MulGas: {
                v: 55e3,
                d: "Gas cost of a single BLS12-381 G2 multiplication precompile-call",
              },
              Bls12381PairingBaseGas: {
                v: 115e3,
                d: "Base gas cost of BLS12-381 pairing check",
              },
              Bls12381PairingPerPairGas: {
                v: 23e3,
                d: "Per-pair gas cost of BLS12-381 pairing check",
              },
              Bls12381MapG1Gas: {
                v: 5500,
                d: "Gas cost of BLS12-381 map field element to G1",
              },
              Bls12381MapG2Gas: {
                v: 11e4,
                d: "Gas cost of BLS12-381 map field element to G2",
              },
              Bls12381MultiExpGasDiscount: {
                v: [
                  [1, 1200],
                  [2, 888],
                  [3, 764],
                  [4, 641],
                  [5, 594],
                  [6, 547],
                  [7, 500],
                  [8, 453],
                  [9, 438],
                  [10, 423],
                  [11, 408],
                  [12, 394],
                  [13, 379],
                  [14, 364],
                  [15, 349],
                  [16, 334],
                  [17, 330],
                  [18, 326],
                  [19, 322],
                  [20, 318],
                  [21, 314],
                  [22, 310],
                  [23, 306],
                  [24, 302],
                  [25, 298],
                  [26, 294],
                  [27, 289],
                  [28, 285],
                  [29, 281],
                  [30, 277],
                  [31, 273],
                  [32, 269],
                  [33, 268],
                  [34, 266],
                  [35, 265],
                  [36, 263],
                  [37, 262],
                  [38, 260],
                  [39, 259],
                  [40, 257],
                  [41, 256],
                  [42, 254],
                  [43, 253],
                  [44, 251],
                  [45, 250],
                  [46, 248],
                  [47, 247],
                  [48, 245],
                  [49, 244],
                  [50, 242],
                  [51, 241],
                  [52, 239],
                  [53, 238],
                  [54, 236],
                  [55, 235],
                  [56, 233],
                  [57, 232],
                  [58, 231],
                  [59, 229],
                  [60, 228],
                  [61, 226],
                  [62, 225],
                  [63, 223],
                  [64, 222],
                  [65, 221],
                  [66, 220],
                  [67, 219],
                  [68, 219],
                  [69, 218],
                  [70, 217],
                  [71, 216],
                  [72, 216],
                  [73, 215],
                  [74, 214],
                  [75, 213],
                  [76, 213],
                  [77, 212],
                  [78, 211],
                  [79, 211],
                  [80, 210],
                  [81, 209],
                  [82, 208],
                  [83, 208],
                  [84, 207],
                  [85, 206],
                  [86, 205],
                  [87, 205],
                  [88, 204],
                  [89, 203],
                  [90, 202],
                  [91, 202],
                  [92, 201],
                  [93, 200],
                  [94, 199],
                  [95, 199],
                  [96, 198],
                  [97, 197],
                  [98, 196],
                  [99, 196],
                  [100, 195],
                  [101, 194],
                  [102, 193],
                  [103, 193],
                  [104, 192],
                  [105, 191],
                  [106, 191],
                  [107, 190],
                  [108, 189],
                  [109, 188],
                  [110, 188],
                  [111, 187],
                  [112, 186],
                  [113, 185],
                  [114, 185],
                  [115, 184],
                  [116, 183],
                  [117, 182],
                  [118, 182],
                  [119, 181],
                  [120, 180],
                  [121, 179],
                  [122, 179],
                  [123, 178],
                  [124, 177],
                  [125, 176],
                  [126, 176],
                  [127, 175],
                  [128, 174],
                ],
                d: "Discount gas costs of calls to the MultiExp precompiles with `k` (point, scalar) pair",
              },
            },
            vm: {},
            pow: {},
          },
          2565: {
            name: "EIP-2565",
            number: 2565,
            comment: "ModExp gas cost",
            url: "https://eips.ethereum.org/EIPS/eip-2565",
            status: "Final",
            minimumHardfork: "byzantium",
            gasConfig: {},
            gasPrices: {
              modexpGquaddivisor: {
                v: 3,
                d: "Gquaddivisor from modexp precompile for gas calculation",
              },
            },
            vm: {},
            pow: {},
          },
          2718: {
            name: "EIP-2718",
            comment: "Typed Transaction Envelope",
            url: "https://eips.ethereum.org/EIPS/eip-2718",
            status: "Final",
            minimumHardfork: "chainstart",
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {},
          },
          2929: {
            name: "EIP-2929",
            comment: "Gas cost increases for state access opcodes",
            url: "https://eips.ethereum.org/EIPS/eip-2929",
            status: "Final",
            minimumHardfork: "chainstart",
            gasConfig: {},
            gasPrices: {
              coldsload: {
                v: 2100,
                d: "Gas cost of the first read of storage from a given location (per transaction)",
              },
              coldaccountaccess: {
                v: 2600,
                d: "Gas cost of the first read of a given address (per transaction)",
              },
              warmstorageread: {
                v: 100,
                d: "Gas cost of reading storage locations which have already loaded 'cold'",
              },
              sstoreCleanGasEIP2200: {
                v: 2900,
                d: "Once per SSTORE operation from clean non-zero to something else",
              },
              sstoreNoopGasEIP2200: {
                v: 100,
                d: "Once per SSTORE operation if the value doesn't change",
              },
              sstoreDirtyGasEIP2200: {
                v: 100,
                d: "Once per SSTORE operation if a dirty value is changed",
              },
              sstoreInitRefundEIP2200: {
                v: 19900,
                d: "Once per SSTORE operation for resetting to the original zero value",
              },
              sstoreCleanRefundEIP2200: {
                v: 4900,
                d: "Once per SSTORE operation for resetting to the original non-zero value",
              },
              call: { v: 0, d: "Base fee of the CALL opcode" },
              callcode: { v: 0, d: "Base fee of the CALLCODE opcode" },
              delegatecall: { v: 0, d: "Base fee of the DELEGATECALL opcode" },
              staticcall: { v: 0, d: "Base fee of the STATICCALL opcode" },
              balance: { v: 0, d: "Base fee of the BALANCE opcode" },
              extcodesize: { v: 0, d: "Base fee of the EXTCODESIZE opcode" },
              extcodecopy: { v: 0, d: "Base fee of the EXTCODECOPY opcode" },
              extcodehash: { v: 0, d: "Base fee of the EXTCODEHASH opcode" },
              sload: { v: 0, d: "Base fee of the SLOAD opcode" },
              sstore: { v: 0, d: "Base fee of the SSTORE opcode" },
            },
            vm: {},
            pow: {},
          },
          2930: {
            name: "EIP-2930",
            comment: "Optional access lists",
            url: "https://eips.ethereum.org/EIPS/eip-2930",
            status: "Final",
            minimumHardfork: "istanbul",
            requiredEIPs: [2718, 2929],
            gasConfig: {},
            gasPrices: {
              accessListStorageKeyCost: {
                v: 1900,
                d: "Gas cost per storage key in an Access List transaction",
              },
              accessListAddressCost: {
                v: 2400,
                d: "Gas cost per storage key in an Access List transaction",
              },
            },
            vm: {},
            pow: {},
          },
          3198: {
            name: "EIP-3198",
            number: 3198,
            comment: "BASEFEE opcode",
            url: "https://eips.ethereum.org/EIPS/eip-3198",
            status: "Final",
            minimumHardfork: "london",
            gasConfig: {},
            gasPrices: {
              basefee: { v: 2, d: "Gas cost of the BASEFEE opcode" },
            },
            vm: {},
            pow: {},
          },
          3529: {
            name: "EIP-3529",
            comment: "Reduction in refunds",
            url: "https://eips.ethereum.org/EIPS/eip-3529",
            status: "Final",
            minimumHardfork: "berlin",
            requiredEIPs: [2929],
            gasConfig: {
              maxRefundQuotient: {
                v: 5,
                d: "Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)",
              },
            },
            gasPrices: {
              selfdestructRefund: {
                v: 0,
                d: "Refunded following a selfdestruct operation",
              },
              sstoreClearRefundEIP2200: {
                v: 4800,
                d: "Once per SSTORE operation for clearing an originally existing storage slot",
              },
            },
            vm: {},
            pow: {},
          },
          3540: {
            name: "EIP-3540",
            number: 3540,
            comment: "EVM Object Format (EOF) v1",
            url: "https://eips.ethereum.org/EIPS/eip-3540",
            status: "Review",
            minimumHardfork: "london",
            requiredEIPs: [3541],
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {},
          },
          3541: {
            name: "EIP-3541",
            comment: "Reject new contracts starting with the 0xEF byte",
            url: "https://eips.ethereum.org/EIPS/eip-3541",
            status: "Final",
            minimumHardfork: "berlin",
            requiredEIPs: [],
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {},
          },
          3554: {
            name: "EIP-3554",
            comment: "Reduction in refunds",
            url: "Difficulty Bomb Delay to December 1st 2021",
            status: "Final",
            minimumHardfork: "muirGlacier",
            requiredEIPs: [],
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {
              difficultyBombDelay: {
                v: 95e5,
                d: "the amount of blocks to delay the difficulty bomb with",
              },
            },
          },
          3607: {
            name: "EIP-3607",
            number: 3607,
            comment: "Reject transactions from senders with deployed code",
            url: "https://eips.ethereum.org/EIPS/eip-3607",
            status: "Final",
            minimumHardfork: "chainstart",
            requiredEIPs: [],
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {},
          },
          3651: {
            name: "EIP-3651",
            number: 3198,
            comment: "Warm COINBASE",
            url: "https://eips.ethereum.org/EIPS/eip-3651",
            status: "Review",
            minimumHardfork: "london",
            requiredEIPs: [2929],
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {},
          },
          3670: {
            name: "EIP-3670",
            number: 3670,
            comment: "EOF - Code Validation",
            url: "https://eips.ethereum.org/EIPS/eip-3670",
            status: "Review",
            minimumHardfork: "london",
            requiredEIPs: [3540],
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {},
          },
          3675: {
            name: "EIP-3675",
            number: 3675,
            comment: "Upgrade consensus to Proof-of-Stake",
            url: "https://eips.ethereum.org/EIPS/eip-3675",
            status: "Final",
            minimumHardfork: "london",
            requiredEIPs: [],
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {},
          },
          3855: {
            name: "EIP-3855",
            number: 3855,
            comment: "PUSH0 instruction",
            url: "https://eips.ethereum.org/EIPS/eip-3855",
            status: "Review",
            minimumHardfork: "chainstart",
            requiredEIPs: [],
            gasConfig: {},
            gasPrices: { push0: { v: 2, d: "Base fee of the PUSH0 opcode" } },
            vm: {},
            pow: {},
          },
          3860: {
            name: "EIP-3860",
            number: 3860,
            comment: "Limit and meter initcode",
            url: "https://eips.ethereum.org/EIPS/eip-3860",
            status: "Review",
            minimumHardfork: "spuriousDragon",
            requiredEIPs: [],
            gasConfig: {},
            gasPrices: {
              initCodeWordCost: {
                v: 2,
                d: "Gas to pay for each word (32 bytes) of initcode when creating a contract",
              },
            },
            vm: {
              maxInitCodeSize: {
                v: 49152,
                d: "Maximum length of initialization code when creating a contract",
              },
            },
            pow: {},
          },
          4345: {
            name: "EIP-4345",
            number: 4345,
            comment: "Difficulty Bomb Delay to June 2022",
            url: "https://eips.ethereum.org/EIPS/eip-4345",
            status: "Final",
            minimumHardfork: "london",
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {
              difficultyBombDelay: {
                v: 107e5,
                d: "the amount of blocks to delay the difficulty bomb with",
              },
            },
          },
          4399: {
            name: "EIP-4399",
            number: 4399,
            comment: "Supplant DIFFICULTY opcode with PREVRANDAO",
            url: "https://eips.ethereum.org/EIPS/eip-4399",
            status: "Review",
            minimumHardfork: "london",
            requiredEIPs: [],
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {},
          },
          5133: {
            name: "EIP-5133",
            number: 5133,
            comment: "Delaying Difficulty Bomb to mid-September 2022",
            url: "https://eips.ethereum.org/EIPS/eip-5133",
            status: "Draft",
            minimumHardfork: "grayGlacier",
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {
              difficultyBombDelay: {
                v: 114e5,
                d: "the amount of blocks to delay the difficulty bomb with",
              },
            },
          },
        },
        lm = {
          chainstart: {
            name: "chainstart",
            comment: "Start of the Ethereum main chain",
            url: "",
            status: "",
            gasConfig: {
              minGasLimit: { v: 5e3, d: "Minimum the gas limit may ever be" },
              gasLimitBoundDivisor: {
                v: 1024,
                d: "The bound divisor of the gas limit, used in update calculations",
              },
              maxRefundQuotient: {
                v: 2,
                d: "Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)",
              },
            },
            gasPrices: {
              base: {
                v: 2,
                d: "Gas base cost, used e.g. for ChainID opcode (Istanbul)",
              },
              tierStep: {
                v: [0, 2, 3, 5, 8, 10, 20],
                d: "Once per operation, for a selection of them",
              },
              exp: { v: 10, d: "Base fee of the EXP opcode" },
              expByte: {
                v: 10,
                d: "Times ceil(log256(exponent)) for the EXP instruction",
              },
              sha3: { v: 30, d: "Base fee of the SHA3 opcode" },
              sha3Word: {
                v: 6,
                d: "Once per word of the SHA3 operation's data",
              },
              sload: { v: 50, d: "Base fee of the SLOAD opcode" },
              sstoreSet: {
                v: 2e4,
                d: "Once per SSTORE operation if the zeroness changes from zero",
              },
              sstoreReset: {
                v: 5e3,
                d: "Once per SSTORE operation if the zeroness does not change from zero",
              },
              sstoreRefund: {
                v: 15e3,
                d: "Once per SSTORE operation if the zeroness changes to zero",
              },
              jumpdest: { v: 1, d: "Base fee of the JUMPDEST opcode" },
              log: { v: 375, d: "Base fee of the LOG opcode" },
              logData: { v: 8, d: "Per byte in a LOG* operation's data" },
              logTopic: {
                v: 375,
                d: "Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas",
              },
              create: { v: 32e3, d: "Base fee of the CREATE opcode" },
              call: { v: 40, d: "Base fee of the CALL opcode" },
              callStipend: {
                v: 2300,
                d: "Free gas given at beginning of call",
              },
              callValueTransfer: {
                v: 9e3,
                d: "Paid for CALL when the value transfor is non-zero",
              },
              callNewAccount: {
                v: 25e3,
                d: "Paid for CALL when the destination address didn't exist prior",
              },
              selfdestructRefund: {
                v: 24e3,
                d: "Refunded following a selfdestruct operation",
              },
              memory: {
                v: 3,
                d: "Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL",
              },
              quadCoeffDiv: {
                v: 512,
                d: "Divisor for the quadratic particle of the memory cost equation",
              },
              createData: { v: 200, d: "" },
              tx: {
                v: 21e3,
                d: "Per transaction. NOTE: Not payable on data of calls between transactions",
              },
              txCreation: {
                v: 32e3,
                d: "The cost of creating a contract via tx",
              },
              txDataZero: {
                v: 4,
                d: "Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions",
              },
              txDataNonZero: {
                v: 68,
                d: "Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions",
              },
              copy: {
                v: 3,
                d: "Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added",
              },
              ecRecover: { v: 3e3, d: "" },
              sha256: { v: 60, d: "" },
              sha256Word: { v: 12, d: "" },
              ripemd160: { v: 600, d: "" },
              ripemd160Word: { v: 120, d: "" },
              identity: { v: 15, d: "" },
              identityWord: { v: 3, d: "" },
              stop: { v: 0, d: "Base fee of the STOP opcode" },
              add: { v: 3, d: "Base fee of the ADD opcode" },
              mul: { v: 5, d: "Base fee of the MUL opcode" },
              sub: { v: 3, d: "Base fee of the SUB opcode" },
              div: { v: 5, d: "Base fee of the DIV opcode" },
              sdiv: { v: 5, d: "Base fee of the SDIV opcode" },
              mod: { v: 5, d: "Base fee of the MOD opcode" },
              smod: { v: 5, d: "Base fee of the SMOD opcode" },
              addmod: { v: 8, d: "Base fee of the ADDMOD opcode" },
              mulmod: { v: 8, d: "Base fee of the MULMOD opcode" },
              signextend: { v: 5, d: "Base fee of the SIGNEXTEND opcode" },
              lt: { v: 3, d: "Base fee of the LT opcode" },
              gt: { v: 3, d: "Base fee of the GT opcode" },
              slt: { v: 3, d: "Base fee of the SLT opcode" },
              sgt: { v: 3, d: "Base fee of the SGT opcode" },
              eq: { v: 3, d: "Base fee of the EQ opcode" },
              iszero: { v: 3, d: "Base fee of the ISZERO opcode" },
              and: { v: 3, d: "Base fee of the AND opcode" },
              or: { v: 3, d: "Base fee of the OR opcode" },
              xor: { v: 3, d: "Base fee of the XOR opcode" },
              not: { v: 3, d: "Base fee of the NOT opcode" },
              byte: { v: 3, d: "Base fee of the BYTE opcode" },
              address: { v: 2, d: "Base fee of the ADDRESS opcode" },
              balance: { v: 20, d: "Base fee of the BALANCE opcode" },
              origin: { v: 2, d: "Base fee of the ORIGIN opcode" },
              caller: { v: 2, d: "Base fee of the CALLER opcode" },
              callvalue: { v: 2, d: "Base fee of the CALLVALUE opcode" },
              calldataload: { v: 3, d: "Base fee of the CALLDATALOAD opcode" },
              calldatasize: { v: 2, d: "Base fee of the CALLDATASIZE opcode" },
              calldatacopy: { v: 3, d: "Base fee of the CALLDATACOPY opcode" },
              codesize: { v: 2, d: "Base fee of the CODESIZE opcode" },
              codecopy: { v: 3, d: "Base fee of the CODECOPY opcode" },
              gasprice: { v: 2, d: "Base fee of the GASPRICE opcode" },
              extcodesize: { v: 20, d: "Base fee of the EXTCODESIZE opcode" },
              extcodecopy: { v: 20, d: "Base fee of the EXTCODECOPY opcode" },
              blockhash: { v: 20, d: "Base fee of the BLOCKHASH opcode" },
              coinbase: { v: 2, d: "Base fee of the COINBASE opcode" },
              timestamp: { v: 2, d: "Base fee of the TIMESTAMP opcode" },
              number: { v: 2, d: "Base fee of the NUMBER opcode" },
              difficulty: { v: 2, d: "Base fee of the DIFFICULTY opcode" },
              gaslimit: { v: 2, d: "Base fee of the GASLIMIT opcode" },
              pop: { v: 2, d: "Base fee of the POP opcode" },
              mload: { v: 3, d: "Base fee of the MLOAD opcode" },
              mstore: { v: 3, d: "Base fee of the MSTORE opcode" },
              mstore8: { v: 3, d: "Base fee of the MSTORE8 opcode" },
              sstore: { v: 0, d: "Base fee of the SSTORE opcode" },
              jump: { v: 8, d: "Base fee of the JUMP opcode" },
              jumpi: { v: 10, d: "Base fee of the JUMPI opcode" },
              pc: { v: 2, d: "Base fee of the PC opcode" },
              msize: { v: 2, d: "Base fee of the MSIZE opcode" },
              gas: { v: 2, d: "Base fee of the GAS opcode" },
              push: { v: 3, d: "Base fee of the PUSH opcode" },
              dup: { v: 3, d: "Base fee of the DUP opcode" },
              swap: { v: 3, d: "Base fee of the SWAP opcode" },
              callcode: { v: 40, d: "Base fee of the CALLCODE opcode" },
              return: { v: 0, d: "Base fee of the RETURN opcode" },
              invalid: { v: 0, d: "Base fee of the INVALID opcode" },
              selfdestruct: { v: 0, d: "Base fee of the SELFDESTRUCT opcode" },
            },
            vm: {
              stackLimit: { v: 1024, d: "Maximum size of VM stack allowed" },
              callCreateDepth: {
                v: 1024,
                d: "Maximum depth of call/create stack",
              },
              maxExtraDataSize: {
                v: 32,
                d: "Maximum size extra data may be after Genesis",
              },
            },
            pow: {
              minimumDifficulty: {
                v: 131072,
                d: "The minimum that the difficulty may ever be",
              },
              difficultyBoundDivisor: {
                v: 2048,
                d: "The bound divisor of the difficulty, used in the update calculations",
              },
              durationLimit: {
                v: 13,
                d: "The decision boundary on the blocktime duration used to determine whether difficulty should go up or not",
              },
              epochDuration: {
                v: 3e4,
                d: "Duration between proof-of-work epochs",
              },
              timebombPeriod: {
                v: 1e5,
                d: "Exponential difficulty timebomb period",
              },
              minerReward: {
                v: "5000000000000000000",
                d: "the amount a miner get rewarded for mining a block",
              },
              difficultyBombDelay: {
                v: 0,
                d: "the amount of blocks to delay the difficulty bomb with",
              },
            },
          },
          homestead: {
            name: "homestead",
            comment: "Homestead hardfork with protocol and network changes",
            url: "https://eips.ethereum.org/EIPS/eip-606",
            status: "Final",
            gasConfig: {},
            gasPrices: {
              delegatecall: { v: 40, d: "Base fee of the DELEGATECALL opcode" },
            },
            vm: {},
            pow: {},
          },
          dao: {
            name: "dao",
            comment: "DAO rescue hardfork",
            url: "https://eips.ethereum.org/EIPS/eip-779",
            status: "Final",
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {},
          },
          tangerineWhistle: {
            name: "tangerineWhistle",
            comment: "Hardfork with gas cost changes for IO-heavy operations",
            url: "https://eips.ethereum.org/EIPS/eip-608",
            status: "Final",
            gasConfig: {},
            gasPrices: {
              sload: { v: 200, d: "Once per SLOAD operation" },
              call: {
                v: 700,
                d: "Once per CALL operation & message call transaction",
              },
              extcodesize: { v: 700, d: "Base fee of the EXTCODESIZE opcode" },
              extcodecopy: { v: 700, d: "Base fee of the EXTCODECOPY opcode" },
              balance: { v: 400, d: "Base fee of the BALANCE opcode" },
              delegatecall: {
                v: 700,
                d: "Base fee of the DELEGATECALL opcode",
              },
              callcode: { v: 700, d: "Base fee of the CALLCODE opcode" },
              selfdestruct: {
                v: 5e3,
                d: "Base fee of the SELFDESTRUCT opcode",
              },
            },
            vm: {},
            pow: {},
          },
          spuriousDragon: {
            name: "spuriousDragon",
            comment:
              "HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit",
            url: "https://eips.ethereum.org/EIPS/eip-607",
            status: "Final",
            gasConfig: {},
            gasPrices: {
              expByte: {
                v: 50,
                d: "Times ceil(log256(exponent)) for the EXP instruction",
              },
            },
            vm: {
              maxCodeSize: { v: 24576, d: "Maximum length of contract code" },
            },
            pow: {},
          },
          byzantium: {
            name: "byzantium",
            comment:
              "Hardfork with new precompiles, instructions and other protocol changes",
            url: "https://eips.ethereum.org/EIPS/eip-609",
            status: "Final",
            gasConfig: {},
            gasPrices: {
              modexpGquaddivisor: {
                v: 20,
                d: "Gquaddivisor from modexp precompile for gas calculation",
              },
              ecAdd: { v: 500, d: "Gas costs for curve addition precompile" },
              ecMul: {
                v: 4e4,
                d: "Gas costs for curve multiplication precompile",
              },
              ecPairing: {
                v: 1e5,
                d: "Base gas costs for curve pairing precompile",
              },
              ecPairingWord: {
                v: 8e4,
                d: "Gas costs regarding curve pairing precompile input length",
              },
              revert: { v: 0, d: "Base fee of the REVERT opcode" },
              staticcall: { v: 700, d: "Base fee of the STATICCALL opcode" },
              returndatasize: {
                v: 2,
                d: "Base fee of the RETURNDATASIZE opcode",
              },
              returndatacopy: {
                v: 3,
                d: "Base fee of the RETURNDATACOPY opcode",
              },
            },
            vm: {},
            pow: {
              minerReward: {
                v: "3000000000000000000",
                d: "the amount a miner get rewarded for mining a block",
              },
              difficultyBombDelay: {
                v: 3e6,
                d: "the amount of blocks to delay the difficulty bomb with",
              },
            },
          },
          constantinople: {
            name: "constantinople",
            comment:
              "Postponed hardfork including EIP-1283 (SSTORE gas metering changes)",
            url: "https://eips.ethereum.org/EIPS/eip-1013",
            status: "Final",
            gasConfig: {},
            gasPrices: {
              netSstoreNoopGas: {
                v: 200,
                d: "Once per SSTORE operation if the value doesn't change",
              },
              netSstoreInitGas: {
                v: 2e4,
                d: "Once per SSTORE operation from clean zero",
              },
              netSstoreCleanGas: {
                v: 5e3,
                d: "Once per SSTORE operation from clean non-zero",
              },
              netSstoreDirtyGas: {
                v: 200,
                d: "Once per SSTORE operation from dirty",
              },
              netSstoreClearRefund: {
                v: 15e3,
                d: "Once per SSTORE operation for clearing an originally existing storage slot",
              },
              netSstoreResetRefund: {
                v: 4800,
                d: "Once per SSTORE operation for resetting to the original non-zero value",
              },
              netSstoreResetClearRefund: {
                v: 19800,
                d: "Once per SSTORE operation for resetting to the original zero value",
              },
              shl: { v: 3, d: "Base fee of the SHL opcode" },
              shr: { v: 3, d: "Base fee of the SHR opcode" },
              sar: { v: 3, d: "Base fee of the SAR opcode" },
              extcodehash: { v: 400, d: "Base fee of the EXTCODEHASH opcode" },
              create2: { v: 32e3, d: "Base fee of the CREATE2 opcode" },
            },
            vm: {},
            pow: {
              minerReward: {
                v: "2000000000000000000",
                d: "The amount a miner gets rewarded for mining a block",
              },
              difficultyBombDelay: {
                v: 5e6,
                d: "the amount of blocks to delay the difficulty bomb with",
              },
            },
          },
          petersburg: {
            name: "petersburg",
            comment:
              "Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople",
            url: "https://eips.ethereum.org/EIPS/eip-1716",
            status: "Final",
            gasConfig: {},
            gasPrices: {
              netSstoreNoopGas: { v: null, d: "Removed along EIP-1283" },
              netSstoreInitGas: { v: null, d: "Removed along EIP-1283" },
              netSstoreCleanGas: { v: null, d: "Removed along EIP-1283" },
              netSstoreDirtyGas: { v: null, d: "Removed along EIP-1283" },
              netSstoreClearRefund: { v: null, d: "Removed along EIP-1283" },
              netSstoreResetRefund: { v: null, d: "Removed along EIP-1283" },
              netSstoreResetClearRefund: {
                v: null,
                d: "Removed along EIP-1283",
              },
            },
            vm: {},
            pow: {},
          },
          istanbul: {
            name: "istanbul",
            comment:
              "HF targeted for December 2019 following the Constantinople/Petersburg HF",
            url: "https://eips.ethereum.org/EIPS/eip-1679",
            status: "Final",
            gasConfig: {},
            gasPrices: {
              blake2Round: {
                v: 1,
                d: "Gas cost per round for the Blake2 F precompile",
              },
              ecAdd: { v: 150, d: "Gas costs for curve addition precompile" },
              ecMul: {
                v: 6e3,
                d: "Gas costs for curve multiplication precompile",
              },
              ecPairing: {
                v: 45e3,
                d: "Base gas costs for curve pairing precompile",
              },
              ecPairingWord: {
                v: 34e3,
                d: "Gas costs regarding curve pairing precompile input length",
              },
              txDataNonZero: {
                v: 16,
                d: "Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions",
              },
              sstoreSentryGasEIP2200: {
                v: 2300,
                d: "Minimum gas required to be present for an SSTORE call, not consumed",
              },
              sstoreNoopGasEIP2200: {
                v: 800,
                d: "Once per SSTORE operation if the value doesn't change",
              },
              sstoreDirtyGasEIP2200: {
                v: 800,
                d: "Once per SSTORE operation if a dirty value is changed",
              },
              sstoreInitGasEIP2200: {
                v: 2e4,
                d: "Once per SSTORE operation from clean zero to non-zero",
              },
              sstoreInitRefundEIP2200: {
                v: 19200,
                d: "Once per SSTORE operation for resetting to the original zero value",
              },
              sstoreCleanGasEIP2200: {
                v: 5e3,
                d: "Once per SSTORE operation from clean non-zero to something else",
              },
              sstoreCleanRefundEIP2200: {
                v: 4200,
                d: "Once per SSTORE operation for resetting to the original non-zero value",
              },
              sstoreClearRefundEIP2200: {
                v: 15e3,
                d: "Once per SSTORE operation for clearing an originally existing storage slot",
              },
              balance: { v: 700, d: "Base fee of the BALANCE opcode" },
              extcodehash: { v: 700, d: "Base fee of the EXTCODEHASH opcode" },
              chainid: { v: 2, d: "Base fee of the CHAINID opcode" },
              selfbalance: { v: 5, d: "Base fee of the SELFBALANCE opcode" },
              sload: { v: 800, d: "Base fee of the SLOAD opcode" },
            },
            vm: {},
            pow: {},
          },
          muirGlacier: {
            name: "muirGlacier",
            comment: "HF to delay the difficulty bomb",
            url: "https://eips.ethereum.org/EIPS/eip-2384",
            status: "Final",
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {
              difficultyBombDelay: {
                v: 9e6,
                d: "the amount of blocks to delay the difficulty bomb with",
              },
            },
          },
          berlin: {
            name: "berlin",
            comment: "HF targeted for July 2020 following the Muir Glacier HF",
            url: "https://eips.ethereum.org/EIPS/eip-2070",
            status: "Final",
            eips: [2565, 2929, 2718, 2930],
          },
          london: {
            name: "london",
            comment: "HF targeted for July 2021 following the Berlin fork",
            url: "https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/london.md",
            status: "Final",
            eips: [1559, 3198, 3529, 3541],
          },
          shanghai: {
            name: "shanghai",
            comment:
              "Next feature hardfork after the merge hardfork having withdrawals, warm coinbase, push0, limit/meter initcode",
            url: "https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/shanghai.md",
            status: "Final",
            eips: [3651, 3855, 3860, 4895],
          },
          arrowGlacier: {
            name: "arrowGlacier",
            comment: "HF to delay the difficulty bomb",
            url: "https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/arrow-glacier.md",
            status: "Final",
            eips: [4345],
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {},
          },
          grayGlacier: {
            name: "grayGlacier",
            comment: "Delaying the difficulty bomb to Mid September 2022",
            url: "https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/gray-glacier.md",
            status: "Draft",
            eips: [5133],
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {},
          },
          mergeForkIdTransition: {
            name: "mergeForkIdTransition",
            comment: "Pre-merge hardfork to fork off non-upgraded clients",
            url: "https://eips.ethereum.org/EIPS/eip-3675",
            status: "Draft",
            eips: [],
          },
          merge: {
            name: "merge",
            comment:
              "Hardfork to upgrade the consensus mechanism to Proof-of-Stake",
            url: "https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/merge.md",
            status: "Final",
            consensus: { type: "pos", algorithm: "casper", casper: {} },
            eips: [3675, 4399],
          },
        },
        { buf: lg } = lc;
      class ly extends on {
        static custom(e, t = {}) {
          var r;
          let n = null !== (r = t.baseChain) && void 0 !== r ? r : "mainnet",
            i = Object.assign({}, ly._getChainParams(n));
          if (((i.name = "custom-chain"), "string" != typeof e))
            return new ly(
              Object.assign(
                { chain: Object.assign(Object.assign({}, i), e) },
                t
              )
            );
          if (e === j.PolygonMainnet)
            return ly.custom(
              { name: j.PolygonMainnet, chainId: 137, networkId: 137 },
              t
            );
          if (e === j.PolygonMumbai)
            return ly.custom(
              { name: j.PolygonMumbai, chainId: 80001, networkId: 80001 },
              t
            );
          if (e === j.ArbitrumRinkebyTestnet)
            return ly.custom(
              {
                name: j.ArbitrumRinkebyTestnet,
                chainId: 421611,
                networkId: 421611,
              },
              t
            );
          if (e === j.ArbitrumOne)
            return ly.custom(
              { name: j.ArbitrumOne, chainId: 42161, networkId: 42161 },
              t
            );
          if (e === j.xDaiChain)
            return ly.custom(
              { name: j.xDaiChain, chainId: 100, networkId: 100 },
              t
            );
          if (e === j.OptimisticKovan)
            return ly.custom(
              { name: j.OptimisticKovan, chainId: 69, networkId: 69 },
              Object.assign({ hardfork: R.Berlin }, t)
            );
          if (e === j.OptimisticEthereum)
            return ly.custom(
              { name: j.OptimisticEthereum, chainId: 10, networkId: 10 },
              Object.assign({ hardfork: R.Berlin }, t)
            );
          throw Error(`Custom chain ${e} not supported`);
        }
        static fromGethGenesis(
          e,
          {
            chain: t,
            eips: r,
            genesisHash: n,
            hardfork: i,
            mergeForkIdPostMerge: o,
          }
        ) {
          var a;
          let s = (function (e, t, r) {
              try {
                if (
                  ["config", "difficulty", "gasLimit", "alloc"].some(
                    (t) => !(t in e)
                  )
                )
                  throw Error(
                    "Invalid format, expected geth genesis fields missing"
                  );
                return (
                  void 0 !== t && (e.name = t),
                  (function (e, t = !0) {
                    var r, n, i;
                    let {
                        name: o,
                        config: a,
                        difficulty: s,
                        mixHash: l,
                        gasLimit: u,
                        coinbase: c,
                        baseFeePerGas: d,
                      } = e,
                      { extraData: f, timestamp: h, nonce: p } = e,
                      m = Number(h),
                      { chainId: g } = a;
                    if (
                      ("" === f && (f = "0x"),
                      n1(h) || (h = s3(parseInt(h))),
                      18 !== p.length &&
                        (p =
                          (i = p) && "0x0" !== i
                            ? n1(i)
                              ? `0x${s5(i).padStart(16, "0")}`
                              : `0x${i.padStart(16, "0")}`
                            : "0x0000000000000000"),
                      a.eip155Block !== a.eip158Block)
                    )
                      throw Error(
                        "EIP155 block number must equal EIP 158 block number since both are part of SpuriousDragon hardfork and the client only supports activating the full hardfork"
                      );
                    let y = {
                        name: o,
                        chainId: g,
                        networkId: g,
                        genesis: {
                          timestamp: h,
                          gasLimit: parseInt(u),
                          difficulty: parseInt(s),
                          nonce: p,
                          extraData: f,
                          mixHash: l,
                          coinbase: c,
                          baseFeePerGas: d,
                        },
                        hardfork: void 0,
                        hardforks: [],
                        bootstrapNodes: [],
                        consensus:
                          void 0 !== a.clique
                            ? {
                                type: "poa",
                                algorithm: "clique",
                                clique: {
                                  period:
                                    null !== (r = a.clique.period) &&
                                    void 0 !== r
                                      ? r
                                      : a.clique.blockperiodseconds,
                                  epoch:
                                    null !== (n = a.clique.epoch) &&
                                    void 0 !== n
                                      ? n
                                      : a.clique.epochlength,
                                },
                              }
                            : { type: "pow", algorithm: "ethash", ethash: {} },
                      },
                      b = {
                        [R.Homestead]: { name: "homesteadBlock" },
                        [R.Dao]: { name: "daoForkBlock" },
                        [R.TangerineWhistle]: { name: "eip150Block" },
                        [R.SpuriousDragon]: { name: "eip155Block" },
                        [R.Byzantium]: { name: "byzantiumBlock" },
                        [R.Constantinople]: { name: "constantinopleBlock" },
                        [R.Petersburg]: { name: "petersburgBlock" },
                        [R.Istanbul]: { name: "istanbulBlock" },
                        [R.MuirGlacier]: { name: "muirGlacierBlock" },
                        [R.Berlin]: { name: "berlinBlock" },
                        [R.London]: { name: "londonBlock" },
                        [R.MergeForkIdTransition]: {
                          name: "mergeForkBlock",
                          postMerge: t,
                        },
                        [R.Shanghai]: {
                          name: "shanghaiTime",
                          postMerge: !0,
                          isTimestamp: !0,
                        },
                        [R.ShardingForkDev]: {
                          name: "shardingForkTime",
                          postMerge: !0,
                          isTimestamp: !0,
                        },
                      },
                      v = Object.keys(b).reduce(
                        (e, t) => ((e[b[t].name] = t), e),
                        {}
                      ),
                      w = Object.keys(a).filter(
                        (e) =>
                          void 0 !== v[e] && void 0 !== a[e] && null !== a[e]
                      );
                    if (
                      ((y.hardforks = w
                        .map((e) => ({
                          name: v[e],
                          block:
                            !0 === b[v[e]].isTimestamp ||
                            "number" != typeof a[e]
                              ? null
                              : a[e],
                          timestamp:
                            !0 === b[v[e]].isTimestamp &&
                            "number" == typeof a[e]
                              ? a[e]
                              : void 0,
                        }))
                        .filter(
                          (e) => null !== e.block || void 0 !== e.timestamp
                        )),
                      y.hardforks.sort((e, t) => {
                        var r, n;
                        return (
                          (null !== (r = e.block) && void 0 !== r ? r : 1 / 0) -
                          (null !== (n = t.block) && void 0 !== n ? n : 1 / 0)
                        );
                      }),
                      y.hardforks.sort((e, t) => {
                        var r, n;
                        return (
                          (null !== (r = e.timestamp) && void 0 !== r ? r : m) -
                          (null !== (n = t.timestamp) && void 0 !== n ? n : m)
                        );
                      }),
                      void 0 !== a.terminalTotalDifficulty)
                    ) {
                      let e = {
                          name: R.Merge,
                          ttd: a.terminalTotalDifficulty,
                          block: null,
                        },
                        t = y.hardforks.findIndex((e) => {
                          var t;
                          return (
                            (null === (t = b[e.name]) || void 0 === t
                              ? void 0
                              : t.postMerge) === !0
                          );
                        });
                      -1 !== t
                        ? y.hardforks.splice(t, 0, e)
                        : y.hardforks.push(e);
                    }
                    let x =
                      y.hardforks.length > 0
                        ? y.hardforks.slice(-1)[0]
                        : void 0;
                    return (
                      (y.hardfork = null == x ? void 0 : x.name),
                      y.hardforks.unshift({ name: R.Chainstart, block: 0 }),
                      y
                    );
                  })(e, r)
                );
              } catch (e) {
                throw Error(`Error parsing parameters file: ${e.message}`);
              }
            })(e, t, o),
            l = new ly({
              chain: null !== (a = s.name) && void 0 !== a ? a : "custom",
              customChains: [s],
              eips: r,
              hardfork: null != i ? i : s.hardfork,
            });
          return void 0 !== n && l.setForkHashes(n), l;
        }
        static isSupportedChainId(e) {
          return !!this._getInitializedChains().names[e.toString()];
        }
        static _getChainParams(e, t) {
          let r = e,
            n = this._getInitializedChains(t);
          if ("number" == typeof r || "bigint" == typeof r) {
            if (((r = r.toString()), n.names[r])) {
              let e = n.names[r];
              return n[e];
            }
            throw Error(`Chain with ID ${r} not supported`);
          }
          if (void 0 !== n[r]) return n[r];
          throw Error(`Chain with name ${r} not supported`);
        }
        constructor(e) {
          var t, r;
          super(),
            (this._eips = []),
            (this._customChains =
              null !== (t = e.customChains) && void 0 !== t ? t : []),
            (this._chainParams = this.setChain(e.chain)),
            (this.DEFAULT_HARDFORK =
              null !== (r = this._chainParams.defaultHardfork) && void 0 !== r
                ? r
                : R.Merge),
            (this.HARDFORK_CHANGES = this.hardforks().map((e) => [
              e.name,
              lm[e.name],
            ])),
            (this._hardfork = this.DEFAULT_HARDFORK),
            void 0 !== e.hardfork && this.setHardfork(e.hardfork),
            e.eips && this.setEIPs(e.eips);
        }
        setChain(e) {
          if (
            "number" == typeof e ||
            "bigint" == typeof e ||
            "string" == typeof e
          )
            this._chainParams = ly._getChainParams(e, this._customChains);
          else if ("object" == typeof e) {
            if (this._customChains.length > 0)
              throw Error(
                "Chain must be a string, number, or bigint when initialized with customChains passed in"
              );
            for (let t of [
              "networkId",
              "genesis",
              "hardforks",
              "bootstrapNodes",
            ])
              if (!(t in e))
                throw Error(`Missing required chain parameter: ${t}`);
            this._chainParams = e;
          } else throw Error("Wrong input format");
          for (let e of this.hardforks())
            if (void 0 === e.block)
              throw Error("Hardfork cannot have undefined block number");
          return this._chainParams;
        }
        setHardfork(e) {
          let t = !1;
          for (let r of this.HARDFORK_CHANGES)
            r[0] === e &&
              (this._hardfork !== e &&
                ((this._hardfork = e), this.emit("hardforkChanged", e)),
              (t = !0));
          if (!t) throw Error(`Hardfork with name ${e} not supported`);
        }
        getHardforkByBlockNumber(e, t, r) {
          let n = ll(e, F.BigInt),
            i = ll(t, F.BigInt),
            o = ll(r, F.Number),
            a = this.hardforks().filter(
              (e) =>
                null !== e.block ||
                (null !== e.ttd && void 0 !== e.ttd) ||
                void 0 !== e.timestamp
            ),
            s = a.findIndex((e) => null !== e.ttd && void 0 !== e.ttd);
          if (
            a
              .slice(s + 1)
              .findIndex((e) => null !== e.ttd && void 0 !== e.ttd) >= 0
          )
            throw Error(
              "More than one merge hardforks found with ttd specified"
            );
          let l = a.findIndex(
            (e) =>
              (null !== e.block && e.block > n) ||
              (void 0 !== o && Number(e.timestamp) > o)
          );
          if (-1 === l) l = a.length;
          else if (0 === l)
            throw Error("Must have at least one hardfork at block 0");
          if (void 0 === o) {
            let e = a
              .slice(0, l)
              .reverse()
              .findIndex((e) => null !== e.block || void 0 !== e.ttd);
            l -= e;
          }
          if (null === a[(l -= 1)].block && void 0 === a[l].timestamp)
            (null == i || BigInt(a[l].ttd) > i) && (l -= 1);
          else if (s >= 0 && null != i) {
            if (l >= s && BigInt(a[s].ttd) > i)
              throw Error(
                "Maximum HF determined by total difficulty is lower than the block number HF"
              );
            if (l < s && BigInt(a[s].ttd) <= i)
              throw Error(
                "HF determined by block number is lower than the minimum total difficulty HF"
              );
          }
          let u = l;
          for (
            ;
            l < a.length - 1 &&
            a[l].block === a[l + 1].block &&
            a[l].timestamp === a[l + 1].timestamp;
            l += 1
          );
          if (o) {
            if (
              a.slice(0, u).reduce((e, t) => {
                var r;
                return Math.max(
                  Number(null !== (r = t.timestamp) && void 0 !== r ? r : "0"),
                  e
                );
              }, 0) > o
            )
              throw Error(
                "Maximum HF determined by timestamp is lower than the block number/ttd HF"
              );
            if (
              a.slice(l + 1).reduce((e, t) => {
                var r;
                return Math.min(
                  Number(null !== (r = t.timestamp) && void 0 !== r ? r : o),
                  e
                );
              }, o) < o
            )
              throw Error(
                "Maximum HF determined by block number/ttd is lower than timestamp HF"
              );
          }
          return a[l].name;
        }
        setHardforkByBlockNumber(e, t, r) {
          let n = this.getHardforkByBlockNumber(e, t, r);
          return this.setHardfork(n), n;
        }
        _getHardfork(e) {
          for (let t of this.hardforks()) if (t.name === e) return t;
          return null;
        }
        setEIPs(e = []) {
          for (let t of e) {
            if (!(t in lp)) throw Error(`${t} not supported`);
            let r = this.gteHardfork(lp[t].minimumHardfork);
            if (!r)
              throw Error(
                `${t} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${r}`
              );
            if (void 0 !== lp[t].requiredEIPs) {
              for (let r of lp[t].requiredEIPs)
                if (!(e.includes(r) || this.isActivatedEIP(r)))
                  throw Error(
                    `${t} requires EIP ${r}, but is not included in the EIP list`
                  );
            }
          }
          this._eips = e;
        }
        param(e, t) {
          let r;
          for (let n of this._eips)
            if (void 0 !== (r = this.paramByEIP(e, t, n))) return r;
          return this.paramByHardfork(e, t, this._hardfork);
        }
        paramByHardfork(e, t, r) {
          let n = null;
          for (let i of this.HARDFORK_CHANGES) {
            if ("eips" in i[1])
              for (let r of i[1].eips) {
                let i = this.paramByEIP(e, t, r);
                n = "bigint" == typeof i ? i : n;
              }
            else {
              if (void 0 === i[1][e]) throw Error(`Topic ${e} not defined`);
              void 0 !== i[1][e][t] && (n = i[1][e][t].v);
            }
            if (i[0] === r) break;
          }
          return BigInt(null != n ? n : 0);
        }
        paramByEIP(e, t, r) {
          if (!(r in lp)) throw Error(`${r} not supported`);
          let n = lp[r];
          if (!(e in n)) throw Error(`Topic ${e} not defined`);
          if (void 0 !== n[e][t]) return BigInt(n[e][t].v);
        }
        paramByBlock(e, t, r, n, i) {
          let o = this.getHardforkByBlockNumber(r, n, i);
          return this.paramByHardfork(e, t, o);
        }
        isActivatedEIP(e) {
          if (this.eips().includes(e)) return !0;
          for (let t of this.HARDFORK_CHANGES) {
            let r = t[1];
            if (this.gteHardfork(r.name) && "eips" in r && r.eips.includes(e))
              return !0;
          }
          return !1;
        }
        hardforkIsActiveOnBlock(e, t) {
          let r = ll(t, F.BigInt),
            n = null != e ? e : this._hardfork,
            i = this.hardforkBlock(n);
          return "bigint" == typeof i && i !== BigInt(0) && r >= i;
        }
        activeOnBlock(e) {
          return this.hardforkIsActiveOnBlock(null, e);
        }
        hardforkGteHardfork(e, t) {
          let r = null != e ? e : this._hardfork,
            n = this.hardforks(),
            i = -1,
            o = -1,
            a = 0;
          for (let e of n)
            e.name === r && (i = a), e.name === t && (o = a), (a += 1);
          return i >= o && -1 !== o;
        }
        gteHardfork(e) {
          return this.hardforkGteHardfork(null, e);
        }
        hardforkBlock(e) {
          var t;
          let r = null != e ? e : this._hardfork,
            n =
              null === (t = this._getHardfork(r)) || void 0 === t
                ? void 0
                : t.block;
          return null == n ? null : BigInt(n);
        }
        hardforkTimestamp(e) {
          var t;
          let r = null != e ? e : this._hardfork,
            n =
              null === (t = this._getHardfork(r)) || void 0 === t
                ? void 0
                : t.timestamp;
          return null == n ? null : BigInt(n);
        }
        eipBlock(e) {
          for (let t of this.HARDFORK_CHANGES) {
            let r = t[1];
            if ("eips" in r && r.eips.includes(e))
              return this.hardforkBlock(
                "number" == typeof t[0] ? String(t[0]) : t[0]
              );
          }
          return null;
        }
        hardforkTTD(e) {
          var t;
          let r = null != e ? e : this._hardfork,
            n =
              null === (t = this._getHardfork(r)) || void 0 === t
                ? void 0
                : t.ttd;
          return null == n ? null : BigInt(n);
        }
        isHardforkBlock(e, t) {
          let r = ll(e, F.BigInt),
            n = null != t ? t : this._hardfork,
            i = this.hardforkBlock(n);
          return "bigint" == typeof i && i !== BigInt(0) && i === r;
        }
        nextHardforkBlockOrTimestamp(e) {
          var t, r;
          let n = null != e ? e : this._hardfork,
            i = this.hardforks(),
            o = i.findIndex((e) => e.name === n);
          if ((n === R.Merge && (o -= 1), o < 0)) return null;
          let a =
            null !== (t = i[o].timestamp) && void 0 !== t ? t : i[o].block;
          a = null != a ? Number(a) : null;
          let s = i.slice(o + 1).find((e) => {
            var t;
            let r = null !== (t = e.timestamp) && void 0 !== t ? t : e.block;
            return (
              (r = null != r ? Number(r) : null),
              e.name !== R.Merge && null != r && r !== a
            );
          });
          if (void 0 === s) return null;
          let l = null !== (r = s.timestamp) && void 0 !== r ? r : s.block;
          return null == l ? null : BigInt(l);
        }
        nextHardforkBlock(e) {
          let t = null != e ? e : this._hardfork,
            r = this.hardforkBlock(t);
          if (null === r && t === R.Merge) {
            let e = this.hardforks(),
              t = e.findIndex((e) => null !== e.ttd && void 0 !== e.ttd);
            if (t < 0) throw Error("Merge hardfork should have been found");
            r = this.hardforkBlock(e[t - 1].name);
          }
          return null === r
            ? null
            : this.hardforks().reduce((e, t) => {
                let n = BigInt(
                  null === t.block || (void 0 !== t.ttd && null !== t.ttd)
                    ? 0
                    : t.block
                );
                return n > r && null === e ? n : e;
              }, null);
        }
        isNextHardforkBlock(e, t) {
          let r = ll(e, F.BigInt),
            n = null != t ? t : this._hardfork,
            i = this.nextHardforkBlock(n);
          return null !== i && i === r;
        }
        _calcForkHash(e, t) {
          let r = new Uint8Array(),
            n = 0;
          for (let t of this.hardforks()) {
            let { block: i, timestamp: o, name: a } = t,
              s = null != o ? o : i;
            if (
              ("number" == typeof (s = null !== s ? Number(s) : null) &&
                0 !== s &&
                s !== n &&
                a !== R.Merge &&
                ((r = iM(r, i$(s.toString(16).padStart(16, "0")))), (n = s)),
              t.name === e)
            )
              break;
          }
          return iH(s4(lg(iM(t, r)) >>> 0));
        }
        forkHash(e, t) {
          let r = null != e ? e : this._hardfork,
            n = this._getHardfork(r);
          if (
            null === n ||
            ((null == n ? void 0 : n.block) === null &&
              (null == n ? void 0 : n.timestamp) === void 0 &&
              (null == n ? void 0 : n.ttd) === void 0)
          )
            throw Error(
              "No fork hash calculation possible for future hardfork"
            );
          if (
            (null == n ? void 0 : n.forkHash) !== null &&
            (null == n ? void 0 : n.forkHash) !== void 0
          )
            return n.forkHash;
          if (!t) throw Error("genesisHash required for forkHash calculation");
          return this._calcForkHash(r, t);
        }
        hardforkForForkHash(e) {
          let t = this.hardforks().filter((t) => t.forkHash === e);
          return t.length >= 1 ? t[t.length - 1] : null;
        }
        setForkHashes(e) {
          var t;
          for (let r of this.hardforks()) {
            let n = null !== (t = r.timestamp) && void 0 !== t ? t : r.block;
            (null === r.forkHash || void 0 === r.forkHash) &&
              (null != n || void 0 !== r.ttd) &&
              (r.forkHash = this.forkHash(r.name, e));
          }
        }
        genesis() {
          return this._chainParams.genesis;
        }
        hardforks() {
          return this._chainParams.hardforks;
        }
        bootstrapNodes() {
          return this._chainParams.bootstrapNodes;
        }
        dnsNetworks() {
          return this._chainParams.dnsNetworks;
        }
        hardfork() {
          return this._hardfork;
        }
        chainId() {
          return BigInt(this._chainParams.chainId);
        }
        chainName() {
          return this._chainParams.name;
        }
        networkId() {
          return BigInt(this._chainParams.networkId);
        }
        eips() {
          return this._eips;
        }
        consensusType() {
          let e;
          let t = this.hardfork();
          for (let r of this.HARDFORK_CHANGES)
            if (("consensus" in r[1] && (e = r[1].consensus.type), r[0] === t))
              break;
          return null != e ? e : this._chainParams.consensus.type;
        }
        consensusAlgorithm() {
          let e;
          let t = this.hardfork();
          for (let r of this.HARDFORK_CHANGES)
            if (
              ("consensus" in r[1] && (e = r[1].consensus.algorithm),
              r[0] === t)
            )
              break;
          return null != e ? e : this._chainParams.consensus.algorithm;
        }
        consensusConfig() {
          var e;
          let t;
          let r = this.hardfork();
          for (let e of this.HARDFORK_CHANGES)
            if (
              ("consensus" in e[1] &&
                (t = e[1].consensus[e[1].consensus.algorithm]),
              e[0] === r)
            )
              break;
          return null !==
            (e =
              null != t
                ? t
                : this._chainParams.consensus[this.consensusAlgorithm()]) &&
            void 0 !== e
            ? e
            : {};
        }
        copy() {
          let e = Object.assign(
            Object.create(Object.getPrototypeOf(this)),
            this
          );
          return e.removeAllListeners(), e;
        }
        static _getInitializedChains(e) {
          let t = {};
          for (let [e, r] of Object.entries(B)) t[r] = e.toLowerCase();
          let r = { mainnet: lf, goerli: ld, sepolia: lh };
          if (e)
            for (let n of e) {
              let { name: e } = n;
              (t[n.chainId.toString()] = e), (r[e] = n);
            }
          return (r.names = t), r;
        }
      }
      !(function (e) {
        (e[(e.EIP155ReplayProtection = 155)] = "EIP155ReplayProtection"),
          (e[(e.EIP1559FeeMarket = 1559)] = "EIP1559FeeMarket"),
          (e[(e.EIP2718TypedTransaction = 2718)] = "EIP2718TypedTransaction"),
          (e[(e.EIP2930AccessLists = 2930)] = "EIP2930AccessLists");
      })(L || (L = {}));
      class lb {
        constructor(e) {
          if (20 !== e.length) throw Error("Invalid address length");
          this.buf = e;
        }
        static zero() {
          return new lb(le(20));
        }
        equals(e) {
          return ij(this.buf, e.buf);
        }
        isZero() {
          return this.equals(lb.zero());
        }
        toString() {
          return iH(this.buf);
        }
        toArray() {
          return this.buf;
        }
        static publicToAddress(e, t = !1) {
          let r = e;
          if (
            (lr(r),
            t &&
              64 !== r.length &&
              (r = sX.ProjectivePoint.fromHex(r).toRawBytes(!1).slice(1)),
            64 !== r.length)
          )
            throw Error("Expected pubKey to be of length 64");
          return (0, tK.So)(r).slice(-20);
        }
      }
      let lv = (e, t) => {
          let r = e.param("vm", "maxInitCodeSize");
          if (r && BigInt(t) > r)
            throw Error(
              `the initcode size of this transaction is too large: it is ${t} while the max is ${e.param(
                "vm",
                "maxInitCodeSize"
              )}`
            );
        },
        lw = (e) => {
          let t, r;
          if (
            (function (e) {
              return !(0 === e.length || Array.isArray(e[0]));
            })(e)
          ) {
            t = e;
            let n = [];
            for (let t = 0; t < e.length; t += 1) {
              let r = e[t],
                i = s9(r.address),
                o = [];
              for (let e = 0; e < r.storageKeys.length; e += 1)
                o.push(s9(r.storageKeys[e]));
              n.push([i, o]);
            }
            r = n;
          } else {
            r = null != e ? e : [];
            let n = [];
            for (let e = 0; e < r.length; e += 1) {
              let t = r[e],
                i = iH(t[0]),
                o = [];
              for (let e = 0; e < t[1].length; e += 1) o.push(iH(t[1][e]));
              let a = { address: i, storageKeys: o };
              n.push(a);
            }
            t = n;
          }
          return { AccessListJSON: t, accessList: r };
        },
        lx = (e) => {
          for (let t = 0; t < e.length; t += 1) {
            let r = e[t],
              n = r[0],
              i = r[1];
            if (void 0 !== r[2])
              throw Error(
                "Access list item cannot have 3 elements. It can only have an address, and an array of storage slots."
              );
            if (20 !== n.length)
              throw Error(
                "Invalid EIP-2930 transaction: address length should be 20 bytes"
              );
            for (let e = 0; e < i.length; e += 1)
              if (32 !== i[e].length)
                throw Error(
                  "Invalid EIP-2930 transaction: storage slot length should be 32 bytes"
                );
          }
        },
        lA = (e) => {
          let t = [];
          for (let r = 0; r < e.length; r += 1) {
            let n = e[r],
              i = { address: iH(ln(n[0], 20)), storageKeys: [] },
              o = n && n[1];
            for (let e = 0; e < o.length; e += 1) {
              let t = o[e];
              i.storageKeys.push(iH(ln(t, 32)));
            }
            t.push(i);
          }
          return t;
        },
        lE = (e, t) => {
          let r = t.param("gasPrices", "accessListStorageKeyCost"),
            n = t.param("gasPrices", "accessListAddressCost"),
            i = 0;
          for (let t = 0; t < e.length; t += 1) i += e[t][1].length;
          return e.length * Number(n) + i * Number(r);
        };
      class lk {
        constructor(e, t) {
          var r, n;
          (this.cache = { hash: void 0, dataFee: void 0 }),
            (this.activeCapabilities = []),
            (this.DEFAULT_CHAIN = B.Mainnet),
            (this.DEFAULT_HARDFORK = R.Merge);
          let {
            nonce: i,
            gasLimit: o,
            to: a,
            value: s,
            data: l,
            v: u,
            r: c,
            s: d,
            type: f,
          } = e;
          (this._type = Number(s7(s9(f)))), (this.txOptions = t);
          let h = s9("" === a ? "0x" : a),
            p = s9("" === u ? "0x" : u),
            m = s9("" === c ? "0x" : c),
            g = s9("" === d ? "0x" : d);
          (this.nonce = s7(s9("" === i ? "0x" : i))),
            (this.gasLimit = s7(s9("" === o ? "0x" : o))),
            (this.to = h.length > 0 ? new lb(h) : void 0),
            (this.value = s7(s9("" === s ? "0x" : s))),
            (this.data = s9("" === l ? "0x" : l)),
            (this.v = p.length > 0 ? s7(p) : void 0),
            (this.r = m.length > 0 ? s7(m) : void 0),
            (this.s = g.length > 0 ? s7(g) : void 0),
            this._validateCannotExceedMaxInteger({
              value: this.value,
              r: this.r,
              s: this.s,
            }),
            this._validateCannotExceedMaxInteger(
              { gasLimit: this.gasLimit },
              64
            ),
            this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, !0);
          let y = void 0 === this.to || null === this.to,
            b =
              null !== (r = t.allowUnlimitedInitCodeSize) && void 0 !== r && r,
            v = null !== (n = t.common) && void 0 !== n ? n : this._getCommon();
          y && v.isActivatedEIP(3860) && !b && lv(v, this.data.length);
        }
        get type() {
          return this._type;
        }
        supports(e) {
          return this.activeCapabilities.includes(e);
        }
        validate(e = !1) {
          let t = [];
          return (
            this.getBaseFee() > this.gasLimit &&
              t.push(
                `gasLimit is too low. given ${
                  this.gasLimit
                }, need at least ${this.getBaseFee()}`
              ),
            this.isSigned() &&
              !this.verifySignature() &&
              t.push("Invalid Signature"),
            e ? t : 0 === t.length
          );
        }
        _validateYParity() {
          let { v: e } = this;
          if (void 0 !== e && e !== BigInt(0) && e !== BigInt(1))
            throw Error(
              this._errorMsg(
                "The y-parity of the transaction should either be 0 or 1"
              )
            );
        }
        _validateHighS() {
          let { s: e } = this;
          if (this.common.gteHardfork("homestead") && void 0 !== e && e > s2)
            throw Error(
              this._errorMsg(
                "Invalid Signature: s-values greater than secp256k1n/2 are considered invalid"
              )
            );
        }
        getBaseFee() {
          let e = this.common.param("gasPrices", "tx"),
            t = this.getDataFee();
          if (
            (e && (t += e),
            this.common.gteHardfork("homestead") && this.toCreationAddress())
          ) {
            let e = this.common.param("gasPrices", "txCreation");
            e && (t += e);
          }
          return t;
        }
        getDataFee() {
          let e = this.common.param("gasPrices", "txDataZero"),
            t = this.common.param("gasPrices", "txDataNonZero"),
            r = BigInt(0);
          for (let n = 0; n < this.data.length; n += 1)
            0 === this.data[n] ? (r += e) : (r += t);
          if (
            (void 0 === this.to || null === this.to) &&
            this.common.isActivatedEIP(3860)
          ) {
            let e = BigInt(Math.ceil(this.data.length / 32));
            r += this.common.param("gasPrices", "initCodeWordCost") * e;
          }
          return r;
        }
        toCreationAddress() {
          return void 0 === this.to || 0 === this.to.buf.length;
        }
        isSigned() {
          let { v: e, r: t, s: r } = this;
          return void 0 !== e && void 0 !== t && void 0 !== r;
        }
        verifySignature() {
          try {
            let e = this.getSenderPublicKey();
            return 0 !== li(e).length;
          } catch (e) {
            return !1;
          }
        }
        getSenderAddress() {
          return new lb(lb.publicToAddress(this.getSenderPublicKey()));
        }
        sign(e) {
          if (32 !== e.length)
            throw Error(
              this._errorMsg("Private key must be 32 bytes in length.")
            );
          let t = !1;
          0 === this.type &&
            this.common.gteHardfork("spuriousDragon") &&
            !this.supports(L.EIP155ReplayProtection) &&
            (this.activeCapabilities.push(L.EIP155ReplayProtection), (t = !0));
          let r = this.getMessageToSign(!0),
            { v: n, r: i, s: o } = this._ecsign(r, e),
            a = this._processSignature(n, i, o);
          if (t) {
            let e = this.activeCapabilities.indexOf(L.EIP155ReplayProtection);
            e > -1 && this.activeCapabilities.splice(e, 1);
          }
          return a;
        }
        _getCommon(e, t) {
          var r, n, i, o;
          if (void 0 !== t) {
            let r = s7(s9(t));
            if (e) {
              if (e.chainId() !== r)
                throw Error(
                  this._errorMsg(
                    "The chain ID does not match the chain ID of Common"
                  )
                );
              return e.copy();
            }
            return ly.isSupportedChainId(r)
              ? new ly({ chain: r, hardfork: this.DEFAULT_HARDFORK })
              : ly.custom(
                  { name: "custom-chain", networkId: r, chainId: r },
                  {
                    baseChain: this.DEFAULT_CHAIN,
                    hardfork: this.DEFAULT_HARDFORK,
                  }
                );
          }
          if (
            (null == e ? void 0 : e.copy) &&
            "function" == typeof (null == e ? void 0 : e.copy)
          )
            return e.copy();
          if (e) {
            let t = "function" == typeof e.hardfork ? e.hardfork() : e.hardfork;
            return ly.custom(
              {
                name: "custom-chain",
                networkId: e.networkId
                  ? e.networkId()
                  : null !==
                      (n = BigInt(
                        null === (r = e.customChain) || void 0 === r
                          ? void 0
                          : r.networkId
                      )) && void 0 !== n
                  ? n
                  : void 0,
                chainId: e.chainId
                  ? e.chainId()
                  : null !==
                      (o = BigInt(
                        null === (i = e.customChain) || void 0 === i
                          ? void 0
                          : i.chainId
                      )) && void 0 !== o
                  ? o
                  : void 0,
              },
              {
                baseChain: this.DEFAULT_CHAIN,
                hardfork: t || this.DEFAULT_HARDFORK,
              }
            );
          }
          return new ly({
            chain: this.DEFAULT_CHAIN,
            hardfork: this.DEFAULT_HARDFORK,
          });
        }
        _validateCannotExceedMaxInteger(e, t = 256, r = !1) {
          for (let [n, i] of Object.entries(e))
            switch (t) {
              case 64:
                if (r) {
                  if (void 0 !== i && i >= s0)
                    throw Error(
                      this._errorMsg(
                        `${n} cannot equal or exceed MAX_UINT64 (2^64-1), given ${i}`
                      )
                    );
                } else if (void 0 !== i && i > s0)
                  throw Error(
                    this._errorMsg(
                      `${n} cannot exceed MAX_UINT64 (2^64-1), given ${i}`
                    )
                  );
                break;
              case 256:
                if (r) {
                  if (void 0 !== i && i >= s1)
                    throw Error(
                      this._errorMsg(
                        `${n} cannot equal or exceed MAX_INTEGER (2^256-1), given ${i}`
                      )
                    );
                } else if (void 0 !== i && i > s1)
                  throw Error(
                    this._errorMsg(
                      `${n} cannot exceed MAX_INTEGER (2^256-1), given ${i}`
                    )
                  );
                break;
              default:
                throw Error(this._errorMsg("unimplemented bits value"));
            }
        }
        static _validateNotArray(e) {
          let t = [
            "nonce",
            "gasPrice",
            "gasLimit",
            "to",
            "value",
            "data",
            "v",
            "r",
            "s",
            "type",
            "baseFee",
            "maxFeePerGas",
            "chainId",
          ];
          for (let [r, n] of Object.entries(e))
            if (t.includes(r) && Array.isArray(n))
              throw Error(`${r} cannot be an array`);
        }
        _getSharedErrorPostfix() {
          let e = "";
          try {
            e = this.isSigned() ? iH(this.hash()) : "not available (unsigned)";
          } catch (t) {
            e = "error";
          }
          let t = "";
          try {
            t = this.isSigned().toString();
          } catch (t) {
            e = "error";
          }
          let r = "";
          try {
            r = this.common.hardfork();
          } catch (e) {
            r = "error";
          }
          return `tx type=${this.type} hash=${e} nonce=${this.nonce} value=${this.value} signed=${t} hf=${r}`;
        }
        _ecsign(e, t, r) {
          let n = sX.sign(e, t),
            i = n.toCompactRawBytes();
          return {
            r: i.subarray(0, 32),
            s: i.subarray(32, 64),
            v:
              void 0 === r
                ? BigInt(n.recovery + 27)
                : BigInt(n.recovery + 35) + BigInt(r) * BigInt(2),
          };
        }
        static fromSerializedTx(e, t = {}) {}
        static fromTxData(e, t = {}) {}
      }
      let lI = i$("2".padStart(2, "0"));
      class lS extends lk {
        static fromTxData(e, t = {}) {
          return new lS(e, t);
        }
        static fromSerializedTx(e, t = {}) {
          if (!ij(e.subarray(0, 1), lI))
            throw Error(
              `Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: 2, received: ${iH(
                e.subarray(0, 1)
              )}`
            );
          let r = lu.RLP.decode(e.subarray(1));
          if (!Array.isArray(r))
            throw Error("Invalid serialized tx input: must be array");
          return lS.fromValuesArray(r, t);
        }
        static fromValuesArray(e, t = {}) {
          if (9 !== e.length && 12 !== e.length)
            throw Error(
              "Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx)."
            );
          let [r, n, i, o, a, s, l, u, c, d, f, h] = e;
          return (
            this._validateNotArray({ chainId: r, v: d }),
            n2({
              nonce: n,
              maxPriorityFeePerGas: i,
              maxFeePerGas: o,
              gasLimit: a,
              value: l,
              v: d,
              r: f,
              s: h,
            }),
            new lS(
              {
                chainId: s7(r),
                nonce: n,
                maxPriorityFeePerGas: i,
                maxFeePerGas: o,
                gasLimit: a,
                to: s,
                value: l,
                data: u,
                accessList: null != c ? c : [],
                v: void 0 !== d ? s7(d) : void 0,
                r: f,
                s: h,
              },
              t
            )
          );
        }
        constructor(e, t = {}) {
          var r;
          super(Object.assign(Object.assign({}, e), { type: 2 }), t),
            (this.DEFAULT_HARDFORK = "london");
          let {
            chainId: n,
            accessList: i,
            maxFeePerGas: o,
            maxPriorityFeePerGas: a,
          } = e;
          if (
            ((this.common = this._getCommon(t.common, n)),
            (this.chainId = this.common.chainId()),
            !this.common.isActivatedEIP(1559))
          )
            throw Error("EIP-1559 not enabled on Common");
          this.activeCapabilities = this.activeCapabilities.concat([
            1559, 2718, 2930,
          ]);
          let s = lw(null != i ? i : []);
          if (
            ((this.accessList = s.accessList),
            (this.AccessListJSON = s.AccessListJSON),
            lx(this.accessList),
            (this.maxFeePerGas = s7(s9("" === o ? "0x" : o))),
            (this.maxPriorityFeePerGas = s7(s9("" === a ? "0x" : a))),
            this._validateCannotExceedMaxInteger({
              maxFeePerGas: this.maxFeePerGas,
              maxPriorityFeePerGas: this.maxPriorityFeePerGas,
            }),
            lk._validateNotArray(e),
            this.gasLimit * this.maxFeePerGas > s1)
          )
            throw Error(
              this._errorMsg(
                "gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)"
              )
            );
          if (this.maxFeePerGas < this.maxPriorityFeePerGas)
            throw Error(
              this._errorMsg(
                "maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)"
              )
            );
          this._validateYParity(),
            this._validateHighS(),
            (null === (r = null == t ? void 0 : t.freeze) ||
              void 0 === r ||
              r) &&
              Object.freeze(this);
        }
        getDataFee() {
          if (
            this.cache.dataFee &&
            this.cache.dataFee.hardfork === this.common.hardfork()
          )
            return this.cache.dataFee.value;
          let e = super.getDataFee();
          return (
            (e += BigInt(lE(this.accessList, this.common))),
            Object.isFrozen(this) &&
              (this.cache.dataFee = {
                value: e,
                hardfork: this.common.hardfork(),
              }),
            e
          );
        }
        getUpfrontCost(e = BigInt(0)) {
          let t = this.maxPriorityFeePerGas,
            r = this.maxFeePerGas - e;
          return this.gasLimit * ((t < r ? t : r) + e) + this.value;
        }
        raw() {
          return [
            la(this.chainId),
            la(this.nonce),
            la(this.maxPriorityFeePerGas),
            la(this.maxFeePerGas),
            la(this.gasLimit),
            void 0 !== this.to ? this.to.buf : Uint8Array.from([]),
            la(this.value),
            this.data,
            this.accessList,
            void 0 !== this.v ? la(this.v) : Uint8Array.from([]),
            void 0 !== this.r ? la(this.r) : Uint8Array.from([]),
            void 0 !== this.s ? la(this.s) : Uint8Array.from([]),
          ];
        }
        serialize() {
          let e = this.raw();
          return iM(lI, lu.RLP.encode(e));
        }
        getMessageToSign(e = !0) {
          let t = this.raw().slice(0, 9),
            r = iM(lI, lu.RLP.encode(t));
          return e ? (0, tK.So)(r) : r;
        }
        hash() {
          if (!this.isSigned())
            throw Error(
              this._errorMsg(
                "Cannot call hash method if transaction is not signed"
              )
            );
          return Object.isFrozen(this)
            ? (this.cache.hash ||
                (this.cache.hash = (0, tK.So)(this.serialize())),
              this.cache.hash)
            : (0, tK.So)(this.serialize());
        }
        getMessageToVerifySignature() {
          return this.getMessageToSign();
        }
        getSenderPublicKey() {
          if (!this.isSigned())
            throw Error(
              this._errorMsg(
                "Cannot call this method if transaction is not signed"
              )
            );
          let e = this.getMessageToVerifySignature(),
            { v: t, r, s: n } = this;
          this._validateHighS();
          try {
            return ls(e, t + BigInt(27), la(r), la(n));
          } catch (e) {
            throw Error(this._errorMsg("Invalid Signature"));
          }
        }
        _processSignature(e, t, r) {
          let n = Object.assign(Object.assign({}, this.txOptions), {
            common: this.common,
          });
          return lS.fromTxData(
            {
              chainId: this.chainId,
              nonce: this.nonce,
              maxPriorityFeePerGas: this.maxPriorityFeePerGas,
              maxFeePerGas: this.maxFeePerGas,
              gasLimit: this.gasLimit,
              to: this.to,
              value: this.value,
              data: this.data,
              accessList: this.accessList,
              v: e - BigInt(27),
              r: s7(t),
              s: s7(r),
            },
            n
          );
        }
        toJSON() {
          let e = lA(this.accessList);
          return {
            chainId: lo(this.chainId),
            nonce: lo(this.nonce),
            maxPriorityFeePerGas: lo(this.maxPriorityFeePerGas),
            maxFeePerGas: lo(this.maxFeePerGas),
            gasLimit: lo(this.gasLimit),
            to: void 0 !== this.to ? this.to.toString() : void 0,
            value: lo(this.value),
            data: iH(this.data),
            accessList: e,
            v: void 0 !== this.v ? lo(this.v) : void 0,
            r: void 0 !== this.r ? lo(this.r) : void 0,
            s: void 0 !== this.s ? lo(this.s) : void 0,
          };
        }
        errorStr() {
          return (
            this._getSharedErrorPostfix() +
            ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`
          );
        }
        _errorMsg(e) {
          return `${e} (${this.errorStr()})`;
        }
      }
      let lP = i$("1".padStart(2, "0"));
      class lT extends lk {
        static fromTxData(e, t = {}) {
          return new lT(e, t);
        }
        static fromSerializedTx(e, t = {}) {
          if (!ij(e.subarray(0, 1), lP))
            throw Error(
              `Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: 1, received: ${iH(
                e.subarray(0, 1)
              )}`
            );
          let r = lu.RLP.decode(Uint8Array.from(e.subarray(1)));
          if (!Array.isArray(r))
            throw Error("Invalid serialized tx input: must be array");
          return lT.fromValuesArray(r, t);
        }
        static fromValuesArray(e, t = {}) {
          if (8 !== e.length && 11 !== e.length)
            throw Error(
              "Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx)."
            );
          let [r, n, i, o, a, s, l, u, c, d, f] = e;
          return (
            this._validateNotArray({ chainId: r, v: c }),
            n2({
              nonce: n,
              gasPrice: i,
              gasLimit: o,
              value: s,
              v: c,
              r: d,
              s: f,
            }),
            new lT(
              {
                chainId: s7(r),
                nonce: n,
                gasPrice: i,
                gasLimit: o,
                to: a,
                value: s,
                data: l,
                accessList: null != u ? u : [],
                v: void 0 !== c ? s7(c) : void 0,
                r: d,
                s: f,
              },
              t
            )
          );
        }
        constructor(e, t = {}) {
          var r;
          super(Object.assign(Object.assign({}, e), { type: 1 }), t),
            (this.DEFAULT_HARDFORK = "berlin");
          let { chainId: n, accessList: i, gasPrice: o } = e;
          if (
            ((this.common = this._getCommon(t.common, n)),
            (this.chainId = this.common.chainId()),
            !this.common.isActivatedEIP(2930))
          )
            throw Error("EIP-2930 not enabled on Common");
          this.activeCapabilities = this.activeCapabilities.concat([
            2718, 2930,
          ]);
          let a = lw(null != i ? i : []);
          if (
            ((this.accessList = a.accessList),
            (this.AccessListJSON = a.AccessListJSON),
            lx(this.accessList),
            (this.gasPrice = s7(s9("" === o ? "0x" : o))),
            this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice }),
            lk._validateNotArray(e),
            this.gasPrice * this.gasLimit > s1)
          )
            throw Error(
              this._errorMsg("gasLimit * gasPrice cannot exceed MAX_INTEGER")
            );
          this._validateYParity(),
            this._validateHighS(),
            (null === (r = null == t ? void 0 : t.freeze) ||
              void 0 === r ||
              r) &&
              Object.freeze(this);
        }
        getDataFee() {
          if (
            this.cache.dataFee &&
            this.cache.dataFee.hardfork === this.common.hardfork()
          )
            return this.cache.dataFee.value;
          let e = super.getDataFee();
          return (
            (e += BigInt(lE(this.accessList, this.common))),
            Object.isFrozen(this) &&
              (this.cache.dataFee = {
                value: e,
                hardfork: this.common.hardfork(),
              }),
            e
          );
        }
        getUpfrontCost() {
          return this.gasLimit * this.gasPrice + this.value;
        }
        raw() {
          return [
            la(this.chainId),
            la(this.nonce),
            la(this.gasPrice),
            la(this.gasLimit),
            void 0 !== this.to ? this.to.buf : Uint8Array.from([]),
            la(this.value),
            this.data,
            this.accessList,
            void 0 !== this.v ? la(this.v) : Uint8Array.from([]),
            void 0 !== this.r ? la(this.r) : Uint8Array.from([]),
            void 0 !== this.s ? la(this.s) : Uint8Array.from([]),
          ];
        }
        serialize() {
          let e = this.raw();
          return iM(lP, lu.RLP.encode(e));
        }
        getMessageToSign(e = !0) {
          let t = this.raw().slice(0, 8),
            r = iM(lP, lu.RLP.encode(t));
          return e ? (0, tK.So)(r) : r;
        }
        hash() {
          if (!this.isSigned())
            throw Error(
              this._errorMsg(
                "Cannot call hash method if transaction is not signed"
              )
            );
          return Object.isFrozen(this)
            ? (this.cache.hash ||
                (this.cache.hash = (0, tK.So)(this.serialize())),
              this.cache.hash)
            : (0, tK.So)(this.serialize());
        }
        getMessageToVerifySignature() {
          return this.getMessageToSign();
        }
        getSenderPublicKey() {
          if (!this.isSigned())
            throw Error(
              this._errorMsg(
                "Cannot call this method if transaction is not signed"
              )
            );
          let e = this.getMessageToVerifySignature(),
            { v: t, r, s: n } = this;
          this._validateHighS();
          try {
            return ls(e, t + BigInt(27), la(r), la(n));
          } catch (e) {
            throw Error(this._errorMsg("Invalid Signature"));
          }
        }
        _processSignature(e, t, r) {
          let n = Object.assign(Object.assign({}, this.txOptions), {
            common: this.common,
          });
          return lT.fromTxData(
            {
              chainId: this.chainId,
              nonce: this.nonce,
              gasPrice: this.gasPrice,
              gasLimit: this.gasLimit,
              to: this.to,
              value: this.value,
              data: this.data,
              accessList: this.accessList,
              v: e - BigInt(27),
              r: s7(t),
              s: s7(r),
            },
            n
          );
        }
        toJSON() {
          let e = lA(this.accessList);
          return {
            chainId: lo(this.chainId),
            nonce: lo(this.nonce),
            gasPrice: lo(this.gasPrice),
            gasLimit: lo(this.gasLimit),
            to: void 0 !== this.to ? this.to.toString() : void 0,
            value: lo(this.value),
            data: iH(this.data),
            accessList: e,
            v: void 0 !== this.v ? lo(this.v) : void 0,
            r: void 0 !== this.r ? lo(this.r) : void 0,
            s: void 0 !== this.s ? lo(this.s) : void 0,
          };
        }
        errorStr() {
          var e, t;
          return (
            this._getSharedErrorPostfix() +
            ` gasPrice=${this.gasPrice} accessListCount=${
              null !==
                (t =
                  null === (e = this.accessList) || void 0 === e
                    ? void 0
                    : e.length) && void 0 !== t
                ? t
                : 0
            }`
          );
        }
        _errorMsg(e) {
          return `${e} (${this.errorStr()})`;
        }
      }
      function lC(e, t) {
        let r = Number(e),
          n = 2 * Number(t);
        return r === n + 35 || r === n + 36;
      }
      class lO extends lk {
        static fromTxData(e, t = {}) {
          return new lO(e, t);
        }
        static fromSerializedTx(e, t = {}) {
          let r = lu.RLP.decode(e);
          if (!Array.isArray(r))
            throw Error("Invalid serialized tx input. Must be array");
          return this.fromValuesArray(r, t);
        }
        static fromValuesArray(e, t = {}) {
          if (6 !== e.length && 9 !== e.length)
            throw Error(
              "Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx)."
            );
          let [r, n, i, o, a, s, l, u, c] = e;
          return (
            n2({
              nonce: r,
              gasPrice: n,
              gasLimit: i,
              value: a,
              v: l,
              r: u,
              s: c,
            }),
            new lO(
              {
                nonce: r,
                gasPrice: n,
                gasLimit: i,
                to: o,
                value: a,
                data: s,
                v: l,
                r: u,
                s: c,
              },
              t
            )
          );
        }
        constructor(e, t = {}) {
          var r;
          if (
            (super(Object.assign(Object.assign({}, e), { type: 0 }), t),
            (this.common = this._validateTxV(this.v, t.common)),
            (this.gasPrice = s7(s9("" === e.gasPrice ? "0x" : e.gasPrice))),
            this.gasPrice * this.gasLimit > s1)
          )
            throw Error(
              this._errorMsg(
                "gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)"
              )
            );
          this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice }),
            lk._validateNotArray(e),
            this.common.gteHardfork("spuriousDragon") &&
              (this.isSigned()
                ? lC(this.v, this.common.chainId()) &&
                  this.activeCapabilities.push(L.EIP155ReplayProtection)
                : this.activeCapabilities.push(L.EIP155ReplayProtection)),
            (null === (r = null == t ? void 0 : t.freeze) ||
              void 0 === r ||
              r) &&
              Object.freeze(this);
        }
        raw() {
          return [
            la(this.nonce),
            la(this.gasPrice),
            la(this.gasLimit),
            void 0 !== this.to ? this.to.buf : Uint8Array.from([]),
            la(this.value),
            this.data,
            void 0 !== this.v ? la(this.v) : Uint8Array.from([]),
            void 0 !== this.r ? la(this.r) : Uint8Array.from([]),
            void 0 !== this.s ? la(this.s) : Uint8Array.from([]),
          ];
        }
        serialize() {
          return lu.RLP.encode(this.raw());
        }
        _getMessageToSign() {
          let e = [
            la(this.nonce),
            la(this.gasPrice),
            la(this.gasLimit),
            void 0 !== this.to ? this.to.buf : Uint8Array.from([]),
            la(this.value),
            this.data,
          ];
          return (
            this.supports(L.EIP155ReplayProtection) &&
              (e.push(s9(this.common.chainId())),
              e.push(li(s9(0))),
              e.push(li(s9(0)))),
            e
          );
        }
        getMessageToSign(e = !0) {
          let t = this._getMessageToSign();
          return e ? (0, tK.So)(lu.RLP.encode(t)) : t;
        }
        getDataFee() {
          return this.cache.dataFee &&
            this.cache.dataFee.hardfork === this.common.hardfork()
            ? this.cache.dataFee.value
            : (Object.isFrozen(this) &&
                (this.cache.dataFee = {
                  value: super.getDataFee(),
                  hardfork: this.common.hardfork(),
                }),
              super.getDataFee());
        }
        getUpfrontCost() {
          return this.gasLimit * this.gasPrice + this.value;
        }
        hash() {
          if (!this.isSigned())
            throw Error(
              this._errorMsg(
                "Cannot call hash method if transaction is not signed"
              )
            );
          return Object.isFrozen(this)
            ? (this.cache.hash ||
                (this.cache.hash = (0, tK.So)(lu.RLP.encode(this.raw()))),
              this.cache.hash)
            : (0, tK.So)(lu.RLP.encode(this.raw()));
        }
        getMessageToVerifySignature() {
          if (!this.isSigned())
            throw Error(this._errorMsg("This transaction is not signed"));
          let e = this._getMessageToSign();
          return (0, tK.So)(lu.RLP.encode(e));
        }
        getSenderPublicKey() {
          let e = this.getMessageToVerifySignature(),
            { v: t, r, s: n } = this;
          this._validateHighS();
          try {
            return ls(
              e,
              t,
              la(r),
              la(n),
              this.supports(L.EIP155ReplayProtection)
                ? this.common.chainId()
                : void 0
            );
          } catch (e) {
            throw Error(this._errorMsg("Invalid Signature"));
          }
        }
        _processSignature(e, t, r) {
          let n = e;
          this.supports(L.EIP155ReplayProtection) &&
            (n += this.common.chainId() * BigInt(2) + BigInt(8));
          let i = Object.assign(Object.assign({}, this.txOptions), {
            common: this.common,
          });
          return lO.fromTxData(
            {
              nonce: this.nonce,
              gasPrice: this.gasPrice,
              gasLimit: this.gasLimit,
              to: this.to,
              value: this.value,
              data: this.data,
              v: n,
              r: s7(t),
              s: s7(r),
            },
            i
          );
        }
        toJSON() {
          return {
            nonce: lo(this.nonce),
            gasPrice: lo(this.gasPrice),
            gasLimit: lo(this.gasLimit),
            to: void 0 !== this.to ? this.to.toString() : void 0,
            value: lo(this.value),
            data: iH(this.data),
            v: void 0 !== this.v ? lo(this.v) : void 0,
            r: void 0 !== this.r ? lo(this.r) : void 0,
            s: void 0 !== this.s ? lo(this.s) : void 0,
          };
        }
        _validateTxV(e, t) {
          let r;
          let n = void 0 !== e ? Number(e) : void 0;
          if (void 0 !== n && n < 37 && 27 !== n && 28 !== n)
            throw Error(
              `Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${n}`
            );
          if (
            void 0 !== n &&
            0 !== n &&
            (!t || t.gteHardfork("spuriousDragon")) &&
            27 !== n &&
            28 !== n
          ) {
            if (t) {
              if (!lC(BigInt(n), t.chainId()))
                throw Error(
                  `Incompatible EIP155-based V ${n} and chain id ${t.chainId()}. See the Common parameter of the Transaction constructor to set the chain id.`
                );
            } else {
              let e;
              (e = (n - 35) % 2 == 0 ? 35 : 36),
                (r = BigInt(n - e) / BigInt(2));
            }
          }
          return this._getCommon(t, r);
        }
        errorStr() {
          return this._getSharedErrorPostfix() + ` gasPrice=${this.gasPrice}`;
        }
        _errorMsg(e) {
          return `${e} (${this.errorStr()})`;
        }
      }
      let l_ = new Map();
      class lB {
        constructor() {}
        static typeToInt(e) {
          return Number(s7(s9(e)));
        }
        static registerTransactionType(e, t) {
          let r = lB.typeToInt(e);
          l_.set(r, t);
        }
        static fromTxData(e, t = {}) {
          if (!("type" in e) || void 0 === e.type) return lO.fromTxData(e, t);
          let r = lB.typeToInt(e.type);
          if (0 === r) return lO.fromTxData(e, t);
          if (1 === r) return lT.fromTxData(e, t);
          if (2 === r) return lS.fromTxData(e, t);
          let n = l_.get(r);
          if (null == n ? void 0 : n.fromTxData) return n.fromTxData(e, t);
          throw Error(`Tx instantiation with type ${r} not supported`);
        }
        static fromSerializedData(e, t = {}) {
          if (!(e[0] <= 127)) return lO.fromSerializedTx(e, t);
          switch (e[0]) {
            case 1:
              return lT.fromSerializedTx(e, t);
            case 2:
              return lS.fromSerializedTx(e, t);
            default: {
              let r = l_.get(Number(e[0]));
              if (null == r ? void 0 : r.fromSerializedTx)
                return r.fromSerializedTx(e, t);
              throw Error(`TypedTransaction with ID ${e[0]} unknown`);
            }
          }
        }
        static fromBlockBodyData(e, t = {}) {
          if (iN(e)) return this.fromSerializedData(e, t);
          if (Array.isArray(e)) return lO.fromValuesArray(e, t);
          throw Error("Cannot decode transaction: unknown type input");
        }
      }
      var lR = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      let lN = (e, t) => {
          let r;
          if (!t && "string" == typeof e && nY(e) && 66 !== e.length)
            throw new eo();
          try {
            r = iN(e) ? e : iD(e);
          } catch (e) {
            throw new ea();
          }
          if (!t && 32 !== r.byteLength) throw new eo();
          return r;
        },
        lM = (e, t = !1) => {
          let r = i$(nY(e) ? e : iZ(e)),
            n = i$(
              iK(`\x19Ethereum Signed Message:
${r.byteLength}`)
            );
          return oM(t ? r : iM(n, r));
        },
        lj = (e, t) => {
          let r = lN(t),
            n = sX.sign(e.substring(2), r),
            i = n.toCompactRawBytes(),
            o = n.r.toString(16).padStart(64, "0"),
            a = n.s.toString(16).padStart(64, "0"),
            s = n.recovery + 27;
          return {
            messageHash: e,
            v: iq(s),
            r: `0x${o}`,
            s: `0x${a}`,
            signature: `${iH(i)}${s.toString(16)}`,
          };
        },
        lF = (e, t) => {
          let { messageHash: r, v: n, r: i, s: o, signature: a } = lj(lM(e), t);
          return { message: e, messageHash: r, v: n, r: i, s: o, signature: a };
        },
        lL = (e, t) =>
          lR(void 0, void 0, void 0, function* () {
            let r = e.sign(i$(t));
            if (iI(r.v) || iI(r.r) || iI(r.s)) throw new tu("Signer Error");
            let n = r.validate(!0);
            if (n.length > 0) {
              let e = "Signer Error ";
              for (let t of n) e += `${e} ${t}.`;
              throw new tu(e);
            }
            let i = iH(r.serialize()),
              o = oM(i);
            return {
              messageHash: iH(r.getMessageToSign(!0)),
              v: `0x${r.v.toString(16)}`,
              r: `0x${r.r.toString(16).padStart(64, "0")}`,
              s: `0x${r.s.toString(16).padStart(64, "0")}`,
              rawTransaction: i,
              transactionHash: iH(o),
            };
          }),
        lD = (e) => {
          if (iI(e)) throw new e$();
          return oe(lB.fromSerializedData(i$(e)).getSenderAddress().toString());
        },
        lU = (e, t, r, n, i) => {
          if ("object" == typeof e) {
            let t = `${e.r}${e.s.slice(2)}${e.v.slice(2)}`;
            return lU(e.messageHash, t, r);
          }
          if ("string" == typeof t && "string" == typeof r && !iI(n))
            return lU(e, `${r}${n.slice(2)}${t.slice(2)}`, i);
          if (iI(t)) throw new es("signature string undefined");
          let o = r ? e : lM(e),
            a = parseInt(t.substring(130), 16);
          a > 26 && (a -= 27);
          let s = oM(
            sX.Signature.fromCompact(t.slice(2, 130))
              .addRecoveryBit(a)
              .recoverPublicKey(o.replace("0x", ""))
              .toRawBytes(!1)
              .subarray(1)
          );
          return oe(`0x${s.slice(-40)}`);
        },
        lH = (e) => {
          let t = lN(e),
            r = oM(sX.getPublicKey(t, !1).slice(1)).slice(-40);
          return oe(`0x${r}`);
        },
        l$ = (e, t) => {
          let r = lN(e);
          return `0x${iH(sX.getPublicKey(r, t)).slice(4)}`;
        },
        lz = (e, t, r) =>
          lR(void 0, void 0, void 0, function* () {
            var n, i, o, a, s, l, u;
            let c, d, f, h;
            let p = lN(e);
            if (
              ((c = (null == r ? void 0 : r.salt)
                ? "string" == typeof r.salt
                  ? i$(r.salt)
                  : r.salt
                : oV(32)),
              !(nJ(t) || iN(t)))
            )
              throw new ed();
            let m = "string" == typeof t ? i$(iZ(t)) : t;
            if (null == r ? void 0 : r.iv) {
              if (16 !== (d = "string" == typeof r.iv ? i$(r.iv) : r.iv).length)
                throw new ef();
            } else d = oV(16);
            let g =
              null !== (n = null == r ? void 0 : r.kdf) && void 0 !== n
                ? n
                : "scrypt";
            if ("pbkdf2" === g) {
              if (
                (h = {
                  dklen:
                    null !== (i = null == r ? void 0 : r.dklen) && void 0 !== i
                      ? i
                      : 32,
                  salt: iH(c).replace("0x", ""),
                  c:
                    null !== (o = null == r ? void 0 : r.c) && void 0 !== o
                      ? o
                      : 262144,
                  prf: "hmac-sha256",
                }).c < 1e3
              )
                throw new eh();
              f = a4(m, c, h.c, h.dklen, "sha256");
            } else if ("scrypt" === g)
              (h = {
                n:
                  null !== (a = null == r ? void 0 : r.n) && void 0 !== a
                    ? a
                    : 8192,
                r:
                  null !== (s = null == r ? void 0 : r.r) && void 0 !== s
                    ? s
                    : 8,
                p:
                  null !== (l = null == r ? void 0 : r.p) && void 0 !== l
                    ? l
                    : 1,
                dklen:
                  null !== (u = null == r ? void 0 : r.dklen) && void 0 !== u
                    ? u
                    : 32,
                salt: iH(c).replace("0x", ""),
              }),
                (f = se(m, c, h.n, h.p, h.r, h.dklen));
            else throw new el();
            let y = yield aD(p, f.slice(0, 16), d, "aes-128-ctr"),
              b = iH(y).slice(2),
              v = oM(iM(f.slice(16, 32), y)).replace("0x", "");
            return {
              version: 3,
              id: o2(),
              address: lH(p).toLowerCase().replace("0x", ""),
              crypto: {
                ciphertext: b,
                cipherparams: { iv: iH(d).replace("0x", "") },
                cipher: "aes-128-ctr",
                kdf: g,
                kdfparams: h,
                mac: v,
              },
            };
          }),
        lG = (e, t) => {
          let r = lN(e, t);
          return {
            address: lH(r),
            privateKey: iH(r),
            signTransaction: (e) => {
              throw new tu(
                "Do not have network access to sign the transaction"
              );
            },
            sign: (e) => lF("string" == typeof e ? e : JSON.stringify(e), r),
            encrypt: (e, t) =>
              lR(void 0, void 0, void 0, function* () {
                return lz(r, e, t);
              }),
          };
        },
        lq = () => {
          let e = sX.utils.randomPrivateKey();
          return lG(`${iH(e)}`);
        },
        lW = (e, t, r) =>
          lR(void 0, void 0, void 0, function* () {
            let n;
            let i =
              "object" == typeof e ? e : JSON.parse(r ? e.toLowerCase() : e);
            if ((iR.validateJSONSchema(s6, i), 3 !== i.version)) throw new ec();
            let o = "string" == typeof t ? i$(iZ(t)) : t;
            if ((iR.validate(["bytes"], [o]), "scrypt" === i.crypto.kdf)) {
              let e = i.crypto.kdfparams;
              n = se(
                o,
                "string" == typeof e.salt ? i$(e.salt) : e.salt,
                e.n,
                e.p,
                e.r,
                e.dklen
              );
            } else if ("pbkdf2" === i.crypto.kdf) {
              let e = i.crypto.kdfparams;
              n = a4(
                o,
                "string" == typeof e.salt ? i$(e.salt) : e.salt,
                e.c,
                e.dklen,
                "sha256"
              );
            } else throw new el();
            let a = i$(i.crypto.ciphertext);
            if (oM(iM(n.slice(16, 32), a)).replace("0x", "") !== i.crypto.mac)
              throw new eu();
            return lG(
              yield aH(
                i$(i.crypto.ciphertext),
                n.slice(0, 16),
                i$(i.crypto.cipherparams.iv)
              )
            );
          });
      var lV = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      class lZ {
        constructor(e) {
          (this._requestManager = e), (this._requests = new Map());
        }
        get requests() {
          return [...this._requests.values()].map((e) => e.payload);
        }
        add(e) {
          let t = ar(e),
            r = new aa();
          return this._requests.set(t.id, { payload: t, promise: r }), r;
        }
        execute(e) {
          return lV(this, void 0, void 0, function* () {
            var t;
            if (0 === this.requests.length) return Promise.resolve([]);
            let r = new aa({
              timeout:
                null !== (t = null == e ? void 0 : e.timeout) && void 0 !== t
                  ? t
                  : 1e3,
              eagerStart: !0,
              timeoutMessage: "Batch request timeout",
            });
            return (
              this._processBatchRequest(r).catch((e) => r.reject(e)),
              r.catch((e) => {
                e instanceof eC &&
                  this._abortAllRequests("Batch request timeout"),
                  r.reject(e);
              }),
              r
            );
          });
        }
        _processBatchRequest(e) {
          return lV(this, void 0, void 0, function* () {
            var t, r;
            let n = yield this._requestManager.sendBatch(
              [...this._requests.values()].map((e) => e.payload)
            );
            if (n.length !== this._requests.size)
              throw (
                (this._abortAllRequests("Invalid batch response"),
                new tP(
                  n,
                  `Batch request size mismatch the results size. Requests: ${this._requests.size}, Responses: ${n.length}`
                ))
              );
            let i = this.requests
                .map((e) => e.id)
                .map(Number)
                .sort((e, t) => e - t),
              o = n
                .map((e) => e.id)
                .map(Number)
                .sort((e, t) => e - t);
            if (JSON.stringify(i) !== JSON.stringify(o))
              throw (
                (this._abortAllRequests("Invalid batch response"),
                new tP(
                  n,
                  `Batch request mismatch the results. Requests: [${i.join()}], Responses: [${o.join()}]`
                ))
              );
            for (let e of n)
              o5(e)
                ? null === (t = this._requests.get(e.id)) ||
                  void 0 === t ||
                  t.promise.resolve(e.result)
                : o3(e) &&
                  (null === (r = this._requests.get(e.id)) ||
                    void 0 === r ||
                    r.promise.reject(e.error));
            e.resolve(n);
          });
        }
        _abortAllRequests(e) {
          for (let { promise: t } of this._requests.values())
            t.reject(new eO(e));
        }
      }
      class lK extends ap {
        constructor(e) {
          var t;
          if (
            (super(),
            (this.providers = aC.providers),
            og(e) || ("string" == typeof e && "" !== e.trim()) || aI(e))
          ) {
            (this._requestManager = new aC(e)),
              (this._subscriptionManager = new a_(this._requestManager, {}));
            return;
          }
          let {
            config: r,
            provider: n,
            requestManager: i,
            subscriptionManager: o,
            registeredSubscriptions: a,
            accountProvider: s,
            wallet: l,
            requestManagerMiddleware: u,
          } = e;
          this.setConfig(null != r ? r : {}),
            (this._requestManager =
              null != i
                ? i
                : new aC(
                    n,
                    null ===
                      (t = null == r ? void 0 : r.enableExperimentalFeatures) ||
                    void 0 === t
                      ? void 0
                      : t.useSubscriptionWhenCheckingBlockTimeout,
                    u
                  )),
            o
              ? (this._subscriptionManager = o)
              : (this._subscriptionManager = new a_(
                  this.requestManager,
                  null != a ? a : {}
                )),
            s && (this._accountProvider = s),
            l && (this._wallet = l);
        }
        get requestManager() {
          return this._requestManager;
        }
        get subscriptionManager() {
          return this._subscriptionManager;
        }
        get wallet() {
          return this._wallet;
        }
        get accountProvider() {
          return this._accountProvider;
        }
        static fromContextObject(...e) {
          return new this(...e.reverse());
        }
        getContextObject() {
          var e;
          return {
            config: this.config,
            provider: this.provider,
            requestManager: this.requestManager,
            subscriptionManager: this.subscriptionManager,
            registeredSubscriptions:
              null === (e = this.subscriptionManager) || void 0 === e
                ? void 0
                : e.registeredSubscriptions,
            providers: this.providers,
            wallet: this.wallet,
            accountProvider: this.accountProvider,
          };
        }
        use(e, ...t) {
          let r = new e(...[...t, this.getContextObject()]);
          return (
            this.on(O.CONFIG_CHANGE, (e) => {
              r.setConfig({ [e.name]: e.newValue });
            }),
            (this[e.name] = r),
            r
          );
        }
        link(e) {
          this.setConfig(e.config),
            (this._requestManager = e.requestManager),
            (this.provider = e.provider),
            (this._subscriptionManager = e.subscriptionManager),
            (this._wallet = e.wallet),
            (this._accountProvider = e._accountProvider),
            e.on(O.CONFIG_CHANGE, (e) => {
              this.setConfig({ [e.name]: e.newValue });
            });
        }
        registerPlugin(e) {
          if (void 0 !== this[e.pluginNamespace])
            throw new eB(e.pluginNamespace);
          let t = { [e.pluginNamespace]: e };
          t[e.pluginNamespace].link(this), Object.assign(this, t);
        }
        get provider() {
          return this.currentProvider;
        }
        set provider(e) {
          this.requestManager.setProvider(e);
        }
        get currentProvider() {
          return this.requestManager.provider;
        }
        set currentProvider(e) {
          this.requestManager.setProvider(e);
        }
        get givenProvider() {
          return lK.givenProvider;
        }
        setProvider(e) {
          return (this.provider = e), !0;
        }
        setRequestManagerMiddleware(e) {
          this.requestManager.setMiddleware(e);
        }
        get BatchRequest() {
          return lZ.bind(void 0, this._requestManager);
        }
        extend(e) {
          var t;
          return (
            e.property && !this[e.property] && (this[e.property] = {}),
            null === (t = e.methods) ||
              void 0 === t ||
              t.forEach((t) => {
                let r = (...e) => {
                  var r, n, i, o;
                  return (
                    (r = this),
                    (n = void 0),
                    (i = void 0),
                    (o = function* () {
                      return this.requestManager.send({
                        method: t.call,
                        params: e,
                      });
                    }),
                    new (i || (i = Promise))(function (e, t) {
                      function a(e) {
                        try {
                          l(o.next(e));
                        } catch (e) {
                          t(e);
                        }
                      }
                      function s(e) {
                        try {
                          l(o.throw(e));
                        } catch (e) {
                          t(e);
                        }
                      }
                      function l(t) {
                        var r;
                        t.done
                          ? e(t.value)
                          : ((r = t.value) instanceof i
                              ? r
                              : new i(function (e) {
                                  e(r);
                                })
                            ).then(a, s);
                      }
                      l((o = o.apply(r, n || [])).next());
                    })
                  );
                };
                e.property
                  ? (this[e.property][t.name] = r)
                  : (this[t.name] = r);
              }),
            this
          );
        }
      }
      lK.providers = aC.providers;
      class lQ {
        constructor(e) {
          if (
            ((this.toAddress = () => {
              if (this.isDirect()) {
                let e = this._iban.slice(4);
                return oe(oA(lQ._parseInt(e, 36), 40));
              }
              throw Error(
                "Iban is indirect and cannot be converted. Must be length of 34 or 35"
              );
            }),
            lQ.isIndirect(e) || lQ.isDirect(e))
          )
            this._iban = e;
          else throw Error("Invalid IBAN was provided");
        }
        static isDirect(e) {
          return 34 === e.length || 35 === e.length;
        }
        isDirect() {
          return lQ.isDirect(this._iban);
        }
        static isIndirect(e) {
          return 20 === e.length;
        }
        isIndirect() {
          return lQ.isIndirect(this._iban);
        }
        static isValid(e) {
          return (
            /^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(e) &&
            1 === lQ._mod9710(lQ._iso13616Prepare(e))
          );
        }
        isValid() {
          return lQ.isValid(this._iban);
        }
        static fromBban(e) {
          let t = this._mod9710(this._iso13616Prepare(`XE00${e}`)),
            r = `0${(98 - t).toString()}`.slice(-2);
          return new lQ(`XE${r}${e}`);
        }
        static createIndirect(e) {
          return lQ.fromBban(`ETH${e.institution}${e.identifier}`);
        }
        static fromAddress(e) {
          if (!ip(e)) throw new tp(e);
          let t = oA(BigInt(iz(e)).toString(36), 15);
          return lQ.fromBban(t.toUpperCase());
        }
        static toIban(e) {
          return lQ.fromAddress(e).toString();
        }
        client() {
          return this.isIndirect() ? this._iban.slice(11) : "";
        }
        checksum() {
          return this._iban.slice(2, 4);
        }
        institution() {
          return this.isIndirect() ? this._iban.slice(7, 11) : "";
        }
        toString() {
          return this._iban;
        }
      }
      (lQ._iso13616Prepare = (e) => {
        let t = e.toUpperCase();
        return `${t.slice(4)}${t.slice(0, 4)}`
          .split("")
          .map((e) => {
            let t = e.charCodeAt(0);
            return t >= 65 && t <= 90 ? t - 65 + 10 : e;
          })
          .join("");
      }),
        (lQ._parseInt = (e, t) =>
          [...e].reduce(
            (e, r) => BigInt(parseInt(r, t)) + BigInt(t) * e,
            BigInt(0)
          )),
        (lQ._mod9710 = (e) => {
          let t,
            r = e;
          for (; r.length > 2; )
            (t = r.slice(0, 9)),
              (r = `${(parseInt(t, 10) % 97).toString()}${r.slice(t.length)}`);
          return parseInt(r, 10) % 97;
        }),
        (lQ.toAddress = (e) => new lQ(e).toAddress());
      var lJ = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      class lY extends ah {
        constructor(e) {
          super(), (this[D] = "Promise"), (this._promise = new Promise(e));
        }
        then(e, t) {
          return lJ(this, void 0, void 0, function* () {
            return this._promise.then(e, t);
          });
        }
        catch(e) {
          return lJ(this, void 0, void 0, function* () {
            return this._promise.catch(e);
          });
        }
        finally(e) {
          return lJ(this, void 0, void 0, function* () {
            return this._promise.finally(e);
          });
        }
        on(e, t) {
          return super.on(e, t), this;
        }
        once(e, t) {
          return super.once(e, t), this;
        }
      }
      (D = Symbol.toStringTag), r(80522);
      var lX = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      function l0(e) {
        return lX(this, void 0, void 0, function* () {
          return e.send({ method: "eth_syncing", params: [] });
        });
      }
      function l1(e, t) {
        return lX(this, void 0, void 0, function* () {
          return (
            iR.validate(["hex"], [t]),
            e.send({ method: "eth_sendRawTransaction", params: [t] })
          );
        });
      }
      function l2(e, t, r) {
        return lX(this, void 0, void 0, function* () {
          return (
            iR.validate(["blockNumberOrTag", "bool"], [t, r]),
            e.send({ method: "eth_getBlockByNumber", params: [t, r] })
          );
        });
      }
      var l6 = function (e, t, r, n) {
          return new (r || (r = Promise))(function (i, o) {
            function a(e) {
              try {
                l(n.next(e));
              } catch (e) {
                o(e);
              }
            }
            function s(e) {
              try {
                l(n.throw(e));
              } catch (e) {
                o(e);
              }
            }
            function l(e) {
              var t;
              e.done
                ? i(e.value)
                : ((t = e.value) instanceof r
                    ? t
                    : new r(function (e) {
                        e(t);
                      })
                  ).then(a, s);
            }
            l((n = n.apply(e, t || [])).next());
          });
        },
        l5 = function (e, t, r, n) {
          return new (r || (r = Promise))(function (i, o) {
            function a(e) {
              try {
                l(n.next(e));
              } catch (e) {
                o(e);
              }
            }
            function s(e) {
              try {
                l(n.throw(e));
              } catch (e) {
                o(e);
              }
            }
            function l(e) {
              var t;
              e.done
                ? i(e.value)
                : ((t = e.value) instanceof r
                    ? t
                    : new r(function (e) {
                        e(t);
                      })
                  ).then(a, s);
            }
            l((n = n.apply(e, t || [])).next());
          });
        };
      let l3 = (e) =>
          l5(void 0, void 0, void 0, function* () {
            return e.send({ method: "personal_listAccounts", params: [] });
          }),
        l8 = (e, t) =>
          l5(void 0, void 0, void 0, function* () {
            return e.send({ method: "personal_newAccount", params: [t] });
          }),
        l4 = (e, t, r, n) =>
          l5(void 0, void 0, void 0, function* () {
            return e.send({
              method: "personal_unlockAccount",
              params: [t, r, n],
            });
          }),
        l9 = (e, t) =>
          l5(void 0, void 0, void 0, function* () {
            return e.send({ method: "personal_lockAccount", params: [t] });
          }),
        l7 = (e, t, r) =>
          l5(void 0, void 0, void 0, function* () {
            return e.send({ method: "personal_importRawKey", params: [t, r] });
          }),
        ue = (e, t, r) =>
          l5(void 0, void 0, void 0, function* () {
            return e.send({
              method: "personal_sendTransaction",
              params: [t, r],
            });
          }),
        ut = (e, t, r) =>
          l5(void 0, void 0, void 0, function* () {
            return e.send({
              method: "personal_signTransaction",
              params: [t, r],
            });
          }),
        ur = (e, t, r, n) =>
          l5(void 0, void 0, void 0, function* () {
            return e.send({ method: "personal_sign", params: [t, r, n] });
          }),
        un = (e, t, r) =>
          l5(void 0, void 0, void 0, function* () {
            return e.send({ method: "personal_ecRecover", params: [t, r] });
          }),
        ui = {
          type: "object",
          properties: {
            accessList: { type: "null" },
            maxFeePerGas: { type: "null" },
            maxPriorityFeePerGas: { type: "null" },
          },
        },
        uo = {
          type: "object",
          properties: {
            maxFeePerGas: { type: "null" },
            maxPriorityFeePerGas: { type: "null" },
          },
        },
        ua = { type: "object", properties: { gasPrice: { type: "null" } } },
        us = (e, t, r) => {
          try {
            iR.validateJSONSchema(e, t);
          } catch (e) {
            if (e instanceof nZ) throw new td(e.errors, r);
            throw e;
          }
        },
        ul = (e) => {
          var t, r;
          if (!iI(e.type)) {
            let t;
            switch (e.type) {
              case "0x0":
                t = ui;
                break;
              case "0x1":
                t = uo;
                break;
              case "0x2":
                t = ua;
                break;
              default:
                return o_({ format: "uint" }, e.type, Q);
            }
            return us(t, e, e.type), o_({ format: "uint" }, e.type, Q);
          }
          if (!iI(e.maxFeePerGas) || !iI(e.maxPriorityFeePerGas))
            return us(ua, e, "0x2"), "0x2";
          if (!iI(e.accessList)) return us(uo, e, "0x1"), "0x1";
          let n =
            null !== (t = e.hardfork) && void 0 !== t
              ? t
              : null === (r = e.common) || void 0 === r
              ? void 0
              : r.hardfork;
          if (!iI(n)) {
            let t = Object.keys(k).indexOf(n);
            if (t >= Object.keys(k).indexOf("london"))
              return iI(e.gasPrice) ? "0x2" : "0x0";
            if (t === Object.keys(k).indexOf("berlin")) return "0x0";
          }
          if (!iI(e.gasPrice)) return us(ui, e, "0x0"), "0x0";
        },
        uu = (e, t) => {
          var r;
          return (
            null !== (r = null == t ? void 0 : t.transactionTypeParser) &&
              void 0 !== r
              ? r
              : ul
          )(e);
        },
        uc = (e) => (e[0] > 127 ? "0x0" : i3(e[0])),
        ud = {
          type: "array",
          items: Object.assign(
            {},
            {
              type: "object",
              properties: {
                address: { format: "address" },
                storageKeys: { type: "array", items: { format: "bytes32" } },
              },
            }
          ),
        },
        uf = {
          type: "object",
          properties: {
            accessList: Object.assign({}, ud),
            gasUsed: { type: "string" },
          },
        },
        uh = {
          type: "string",
          enum: ["goerli", "kovan", "mainnet", "rinkeby", "ropsten", "sepolia"],
        },
        up = {
          type: "string",
          enum: [
            "arrowGlacier",
            "berlin",
            "byzantium",
            "chainstart",
            "constantinople",
            "dao",
            "homestead",
            "istanbul",
            "london",
            "merge",
            "muirGlacier",
            "petersburg",
            "shanghai",
            "spuriousDragon",
            "tangerineWhistle",
          ],
        },
        um = {
          type: "object",
          properties: {
            from: { format: "address" },
            to: { oneOf: [{ format: "address" }, { type: "null" }] },
            value: { format: "uint" },
            gas: { format: "uint" },
            gasPrice: { format: "uint" },
            effectiveGasPrice: { format: "uint" },
            type: { format: "uint" },
            maxFeePerGas: { format: "uint" },
            maxPriorityFeePerGas: { format: "uint" },
            accessList: Object.assign({}, ud),
            data: { format: "bytes" },
            input: { format: "bytes" },
            nonce: { format: "uint" },
            chain: Object.assign({}, uh),
            hardfork: Object.assign({}, up),
            chainId: { format: "uint" },
            networkId: { format: "uint" },
            common: {
              type: "object",
              properties: {
                customChain: Object.assign(
                  {},
                  {
                    type: "object",
                    properties: {
                      name: { format: "string" },
                      networkId: { format: "uint" },
                      chainId: { format: "uint" },
                    },
                  }
                ),
                baseChain: Object.assign({}, uh),
                hardfork: Object.assign({}, up),
              },
            },
            gasLimit: { format: "uint" },
            v: { format: "uint" },
            r: { format: "bytes32" },
            s: { format: "bytes32" },
          },
        },
        ug = {
          type: "object",
          properties: Object.assign(Object.assign({}, um.properties), {
            blockHash: { format: "bytes32" },
            blockNumber: { format: "uint" },
            hash: { format: "bytes32" },
            transactionIndex: { format: "uint" },
            from: { format: "address" },
            to: { oneOf: [{ format: "address" }, { type: "null" }] },
            value: { format: "uint" },
            gas: { format: "uint" },
            gasPrice: { format: "uint" },
            effectiveGasPrice: { format: "uint" },
            type: { format: "uint" },
            maxFeePerGas: { format: "uint" },
            maxPriorityFeePerGas: { format: "uint" },
            accessList: Object.assign({}, ud),
            data: { format: "bytes" },
            input: { format: "bytes" },
            nonce: { format: "uint" },
            gasLimit: { format: "uint" },
            v: { format: "uint" },
            r: { format: "bytes32" },
            s: { format: "bytes32" },
          }),
        },
        uy = {
          type: "object",
          properties: {
            index: { format: "uint" },
            validatorIndex: { format: "uint" },
            address: { format: "address" },
            amount: { format: "uint" },
          },
        },
        ub = {
          type: "object",
          properties: {
            baseFeePerGas: { format: "uint" },
            blobGasUsed: { format: "uint" },
            difficulty: { format: "uint" },
            excessBlobGas: { format: "uint" },
            extraData: { format: "bytes" },
            gasLimit: { format: "uint" },
            gasUsed: { format: "uint" },
            hash: { format: "bytes32" },
            logsBloom: { format: "bytes256" },
            miner: { format: "bytes" },
            mixHash: { format: "bytes32" },
            nonce: { format: "uint" },
            number: { format: "uint" },
            parentBeaconBlockRoot: { format: "bytes32" },
            parentHash: { format: "bytes32" },
            receiptsRoot: { format: "bytes32" },
            sha3Uncles: { format: "bytes32" },
            size: { format: "uint" },
            stateRoot: { format: "bytes32" },
            timestamp: { format: "uint" },
            totalDifficulty: { format: "uint" },
            transactions: {
              oneOf: [
                { type: "array", items: Object.assign({}, ug) },
                { type: "array", items: { format: "bytes32" } },
              ],
            },
            transactionsRoot: { format: "bytes32" },
            uncles: { type: "array", items: { format: "bytes32" } },
            withdrawals: { type: "array", items: Object.assign({}, uy) },
            withdrawalsRoot: { format: "bytes32" },
          },
        },
        uv = {
          type: "object",
          properties: {
            author: { format: "bytes32" },
            excessDataGas: { format: "uint" },
            baseFeePerGas: { format: "uint" },
            blobGasUsed: { format: "uint" },
            difficulty: { format: "uint" },
            excessBlobGas: { format: "uint" },
            extraData: { format: "bytes" },
            gasLimit: { format: "uint" },
            gasUsed: { format: "uint" },
            hash: { format: "bytes32" },
            logsBloom: { format: "bytes256" },
            miner: { format: "bytes" },
            mixHash: { format: "bytes32" },
            nonce: { format: "uint" },
            number: { format: "uint" },
            parentBeaconBlockRoot: { format: "bytes32" },
            parentHash: { format: "bytes32" },
            receiptsRoot: { format: "bytes32" },
            sha3Uncles: { format: "bytes32" },
            size: { format: "uint" },
            stateRoot: { format: "bytes32" },
            timestamp: { format: "uint" },
            totalDifficulty: { format: "uint" },
            transactions: { type: "array", items: { format: "bytes32" } },
            transactionsRoot: { format: "bytes32" },
            uncles: { type: "array", items: { format: "bytes32" } },
            withdrawals: { type: "array", items: Object.assign({}, uy) },
            withdrawalsRoot: { format: "bytes32" },
          },
        },
        uw = {
          type: "object",
          properties: {
            removed: { format: "bool" },
            logIndex: { format: "uint" },
            transactionIndex: { format: "uint" },
            transactionHash: { format: "bytes32" },
            blockHash: { format: "bytes32" },
            blockNumber: { format: "uint" },
            address: { format: "address" },
            data: { format: "bytes" },
            topics: { type: "array", items: { format: "bytes32" } },
          },
        },
        ux = {
          type: "object",
          properties: {
            startingBlock: { format: "string" },
            currentBlock: { format: "string" },
            highestBlock: { format: "string" },
            knownStates: { format: "string" },
            pulledStates: { format: "string" },
          },
        },
        uA = {
          type: "object",
          properties: {
            transactionHash: { format: "bytes32" },
            transactionIndex: { format: "uint" },
            blockHash: { format: "bytes32" },
            blockNumber: { format: "uint" },
            from: { format: "address" },
            to: { format: "address" },
            cumulativeGasUsed: { format: "uint" },
            gasUsed: { format: "uint" },
            effectiveGasPrice: { format: "uint" },
            contractAddress: { format: "address" },
            logs: { type: "array", items: Object.assign({}, uw) },
            logsBloom: { format: "bytes" },
            root: { format: "bytes" },
            status: { format: "uint" },
            type: { format: "uint" },
          },
        },
        uE = {
          type: "object",
          properties: {
            messageHash: { format: "bytes" },
            r: { format: "bytes32" },
            s: { format: "bytes32" },
            v: { format: "bytes" },
            message: { format: "bytes" },
            signature: { format: "bytes" },
          },
        },
        uk = {
          type: "object",
          properties: {
            oldestBlock: { format: "uint" },
            baseFeePerGas: { type: "array", items: { format: "uint" } },
            reward: {
              type: "array",
              items: { type: "array", items: { format: "uint" } },
            },
            gasUsedRatio: { type: "array", items: { type: "number" } },
          },
        },
        uI = {
          type: "object",
          properties: {
            balance: { format: "uint" },
            codeHash: { format: "bytes32" },
            nonce: { format: "uint" },
            storageHash: { format: "bytes32" },
            accountProof: { type: "array", items: { format: "bytes32" } },
            storageProof: {
              type: "array",
              items: Object.assign(
                {},
                {
                  type: "object",
                  properties: {
                    key: { format: "bytes32" },
                    value: { format: "uint" },
                    proof: { type: "array", items: { format: "bytes32" } },
                  },
                }
              ),
            },
          },
        };
      function uS(
        e,
        t = K,
        r = { transactionSchema: ug, fillInputAndData: !1 }
      ) {
        var n, i;
        let o = ob({}, e);
        if (
          (iI(null == e ? void 0 : e.common) ||
            ((o.common = Object.assign({}, e.common)),
            iI(
              null === (n = e.common) || void 0 === n ? void 0 : n.customChain
            ) ||
              (o.common.customChain = Object.assign({}, e.common.customChain))),
          !iI(
            (o = o_(
              null !== (i = r.transactionSchema) && void 0 !== i ? i : ug,
              o,
              t
            )).data
          ) &&
            !iI(o.input) &&
            i3(o.data) !== i3(o.input))
        )
          throw new tr({ data: iH(o.data), input: iH(o.input) });
        return (
          r.fillInputAndData &&
            (iI(o.data)
              ? iI(o.input) || (o.data = o.input)
              : (o.input = o.data)),
          iI(o.gasLimit) || ((o.gas = o.gasLimit), delete o.gasLimit),
          o
        );
      }
      var uP = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      function uT(e, t) {
        return uP(this, void 0, void 0, function* () {
          return o_(
            { format: "uint" },
            yield (function (e) {
              return l6(this, void 0, void 0, function* () {
                return e.send({ method: "net_version", params: [] });
              });
            })(e.requestManager),
            t
          );
        });
      }
      let uC = (e) =>
        uP(void 0, void 0, void 0, function* () {
          return (function (e) {
            return l6(this, void 0, void 0, function* () {
              return e.send({ method: "net_listening", params: [] });
            });
          })(e.requestManager);
        });
      var uO = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      class u_ extends lK {
        getId(e = this.defaultReturnFormat) {
          return uO(this, void 0, void 0, function* () {
            return uT(this, e);
          });
        }
        getPeerCount(e = this.defaultReturnFormat) {
          return uO(this, void 0, void 0, function* () {
            return (function (e, t) {
              return uP(this, void 0, void 0, function* () {
                return o_(
                  { format: "uint" },
                  yield (function (e) {
                    return l6(this, void 0, void 0, function* () {
                      return e.send({ method: "net_peerCount", params: [] });
                    });
                  })(e.requestManager),
                  t
                );
              });
            })(this, e);
          });
        }
        isListening() {
          return uO(this, void 0, void 0, function* () {
            return uC(this);
          });
        }
      }
      let uB = "ALLEVENTS",
        uR = { name: uB, signature: "", type: "event", inputs: [] },
        uN = { bytes: A.HEX, number: x.NUMBER };
      var uM = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      function uj(e, t, r) {
        return uM(this, void 0, void 0, function* () {
          let n = uU(e, t);
          if (!iI(n)) {
            if (n.startsWith("-") || 0 > Number(n) || Number(n) > 127)
              throw new tt(n);
            if (iI(e.gasPrice) && ("0x0" === n || "0x1" === n))
              return {
                gasPrice: yield c9(t, r),
                maxPriorityFeePerGas: void 0,
                maxFeePerGas: void 0,
              };
            if ("0x2" === n)
              return Object.assign(
                { gasPrice: void 0 },
                yield (function (e, t, r) {
                  return uM(this, void 0, void 0, function* () {
                    var n, i, o, a;
                    let s;
                    let l = yield de(t, t.defaultBlock, !1, Q);
                    if (iI(l.baseFeePerGas)) throw new te();
                    if (
                      (iI(e.gasPrice) &&
                        BigInt(l.baseFeePerGas) === BigInt(0) &&
                        (s = yield c9(t, r)),
                      !iI(e.gasPrice) || !iI(s))
                    ) {
                      let t = o_(
                        { format: "uint" },
                        null !== (n = e.gasPrice) && void 0 !== n ? n : s,
                        r
                      );
                      return { maxPriorityFeePerGas: t, maxFeePerGas: t };
                    }
                    return {
                      maxPriorityFeePerGas: o_(
                        { format: "uint" },
                        null !== (i = e.maxPriorityFeePerGas) && void 0 !== i
                          ? i
                          : t.defaultMaxPriorityFeePerGas,
                        r
                      ),
                      maxFeePerGas: o_(
                        { format: "uint" },
                        null !== (o = e.maxFeePerGas) && void 0 !== o
                          ? o
                          : BigInt(l.baseFeePerGas) * BigInt(2) +
                              BigInt(
                                null !== (a = e.maxPriorityFeePerGas) &&
                                  void 0 !== a
                                  ? a
                                  : t.defaultMaxPriorityFeePerGas
                              ),
                        r
                      ),
                    };
                  });
                })(e, t, r)
              );
          }
        });
      }
      var uF = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      let uL = (e, t, r, n) => {
          if (void 0 !== r && e in r && void 0 !== r[e]) {
            if ("string" == typeof r[e] && ip(r[e])) return r[e];
            if (!nY(r[e]) && ib(r[e])) {
              if (t.wallet) {
                let n = t.wallet.get(o_({ format: "uint" }, r[e], uN));
                if (!iI(n)) return n.address;
              }
              throw new tc();
            }
            throw "from" === e ? new eG(r.from) : new eq(r.to);
          }
          if ("from" === e) {
            if (!iI(n)) return lH(n);
            if (!iI(t.defaultAccount)) return t.defaultAccount;
          }
        },
        uD = (e, t, ...r) =>
          uF(
            void 0,
            [e, t, ...r],
            void 0,
            function* (e, t, r = e.defaultReturnFormat) {
              if (iI(t)) throw new e7();
              return dr(e, t, e.defaultBlock, r);
            }
          ),
        uU = (e, t) => {
          let r = uu(e, t);
          return iI(r)
            ? iI(t.defaultTransactionType)
              ? void 0
              : o_({ format: "uint" }, t.defaultTransactionType, Q)
            : r;
        },
        uH = (e) =>
          uF(void 0, void 0, void 0, function* () {
            var t;
            return (
              null !== (t = e.web3Context.transactionBuilder) && void 0 !== t
                ? t
                : function (e) {
                    return uF(this, void 0, void 0, function* () {
                      var t, r;
                      let n = o_(
                        um,
                        e.transaction,
                        e.web3Context.defaultReturnFormat
                      );
                      if (
                        (iI(n.from) &&
                          (n.from = uL(
                            "from",
                            e.web3Context,
                            void 0,
                            e.privateKey
                          )),
                        iI(n.nonce) &&
                          (n.nonce = yield uD(e.web3Context, n.from, Q)),
                        iI(n.value) && (n.value = "0x0"),
                        iI(n.data))
                      )
                        iI(n.input)
                          ? (n.input = "0x")
                          : n.input.startsWith("0x") ||
                            (n.input = `0x${n.input}`);
                      else {
                        if (!iI(n.input) && n.data !== n.input)
                          throw new tr({
                            data: iH(n.data),
                            input: iH(n.input),
                          });
                        n.data.startsWith("0x") || (n.data = `0x${n.data}`);
                      }
                      if (iI(n.common)) {
                        if (e.web3Context.defaultCommon) {
                          let t = e.web3Context.defaultCommon,
                            r = t.customChain.chainId,
                            i = t.customChain.networkId,
                            o = t.customChain.name;
                          n.common = Object.assign(Object.assign({}, t), {
                            customChain: { chainId: r, networkId: i, name: o },
                          });
                        }
                        iI(n.chain) && (n.chain = e.web3Context.defaultChain),
                          iI(n.hardfork) &&
                            (n.hardfork = e.web3Context.defaultHardfork);
                      }
                      if (
                        (iI(n.chainId) &&
                          iI(
                            null === (t = n.common) || void 0 === t
                              ? void 0
                              : t.customChain.chainId
                          ) &&
                          (n.chainId = yield dl(e.web3Context, Q)),
                        iI(n.networkId) &&
                          (n.networkId =
                            null !== (r = e.web3Context.defaultNetworkId) &&
                            void 0 !== r
                              ? r
                              : yield uT(e.web3Context, Q)),
                        iI(n.gasLimit) && !iI(n.gas) && (n.gasLimit = n.gas),
                        (n.type = uU(n, e.web3Context)),
                        iI(n.accessList) &&
                          ("0x1" === n.type || "0x2" === n.type) &&
                          (n.accessList = []),
                        e.fillGasPrice &&
                          (n = Object.assign(
                            Object.assign({}, n),
                            yield uj(n, e.web3Context, Q)
                          )),
                        iI(n.gas) && iI(n.gasLimit) && e.fillGasLimit)
                      ) {
                        let t = yield da(e.web3Context, n, "latest", Q);
                        n = Object.assign(Object.assign({}, n), {
                          gas: o_({ format: "uint" }, t, Q),
                        });
                      }
                      return n;
                    });
                  }
            )(
              Object.assign(Object.assign({}, e), {
                transaction: e.transaction,
              })
            );
          });
      var u$ = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      function uz(e, t, r) {
        let [n, i] = o1(
          () =>
            u$(this, void 0, void 0, function* () {
              let n;
              try {
                n = yield c7(e, uN);
              } catch (e) {
                console.warn(
                  "An error happen while trying to get the block number",
                  e
                );
                return;
              }
              let i = n - t;
              if (i >= e.transactionBlockTimeout)
                return new ta({
                  starterBlockNumber: t,
                  numberOfBlocks: i,
                  transactionHash: r,
                });
            }),
          e.transactionPollingInterval
        );
        return [
          i,
          {
            clean: () => {
              clearInterval(n);
            },
          },
        ];
      }
      function uG(e, t) {
        return u$(this, void 0, void 0, function* () {
          var r;
          let { provider: n } = e.requestManager,
            i = yield c7(e, uN);
          return (null === (r = n.supportsSubscriptions) || void 0 === r
            ? void 0
            : r.call(n)) &&
            e.enableExperimentalFeatures.useSubscriptionWhenCheckingBlockTimeout
            ? yield (function (e, t, r) {
                return u$(this, void 0, void 0, function* () {
                  var n;
                  let i, o;
                  let a = !0;
                  function s(n, i) {
                    i &&
                      console.warn(
                        "error happened at subscription. So revert to polling...",
                        i
                      ),
                      o.clean(),
                      (a = !1);
                    let [s, l] = uz(e, t, r);
                    (o.clean = l.clean), s.catch((e) => n(e));
                  }
                  try {
                    (i = yield null === (n = e.subscriptionManager) ||
                    void 0 === n
                      ? void 0
                      : n.subscribe("newHeads")),
                      (o = {
                        clean: () => {
                          var t;
                          i.id &&
                            (null === (t = e.subscriptionManager) ||
                              void 0 === t ||
                              t
                                .removeSubscription(i)
                                .then(() => {})
                                .catch(() => {}));
                        },
                      });
                  } catch (n) {
                    return uz(e, t, r);
                  }
                  return [
                    new Promise((n, o) => {
                      try {
                        i.on("data", (n) => {
                          if (((a = !1), !(null == n ? void 0 : n.number)))
                            return;
                          let i = Number(BigInt(n.number) - BigInt(t));
                          i >= e.transactionBlockTimeout &&
                            o(
                              new ta({
                                starterBlockNumber: t,
                                numberOfBlocks: i,
                                transactionHash: r,
                              })
                            );
                        }),
                          i.on("error", (e) => {
                            s(o, e);
                          });
                      } catch (e) {
                        s(o, e);
                      }
                      setTimeout(() => {
                        a && s(o);
                      }, 1e3 * e.blockHeaderTimeout);
                    }),
                    o,
                  ];
                });
              })(e, i, t)
            : uz(e, i, t);
        });
      }
      function uq(e, t, r) {
        var n, i, o, a;
        return (
          (n = this),
          (i = void 0),
          (o = void 0),
          (a = function* () {
            let [n, i] = o0(
                e.transactionSendTimeout,
                new tn({
                  numberOfSeconds: e.transactionSendTimeout / 1e3,
                  transactionHash: r,
                })
              ),
              [o, a] = yield uG(e, r);
            try {
              return yield Promise.race([t(), i, o]);
            } finally {
              clearTimeout(n), a.clean();
            }
          }),
          new (o || (o = Promise))(function (e, t) {
            function r(e) {
              try {
                l(a.next(e));
              } catch (e) {
                t(e);
              }
            }
            function s(e) {
              try {
                l(a.throw(e));
              } catch (e) {
                t(e);
              }
            }
            function l(t) {
              var n;
              t.done
                ? e(t.value)
                : ((n = t.value) instanceof o
                    ? n
                    : new o(function (e) {
                        e(n);
                      })
                  ).then(r, s);
            }
            l((a = a.apply(n, i || [])).next());
          })
        );
      }
      var uW = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      function uV(e, t, r, n) {
        return uW(this, void 0, void 0, function* () {
          var i;
          let [o, a] = oY(
              () =>
                uW(this, void 0, void 0, function* () {
                  try {
                    return (null != n ? n : dt)(e, t, r);
                  } catch (e) {
                    console.warn(
                      "An error happen while trying to get the transaction receipt",
                      e
                    );
                    return;
                  }
                }),
              null !== (i = e.transactionReceiptPollingInterval) && void 0 !== i
                ? i
                : e.transactionPollingInterval
            ),
            [s, l] = o0(
              e.transactionPollingTimeout,
              new to({
                numberOfSeconds: e.transactionPollingTimeout / 1e3,
                transactionHash: t,
              })
            ),
            [u, c] = yield uG(e, t);
          try {
            return yield Promise.race([o, l, u]);
          } finally {
            s && clearTimeout(s), a && clearInterval(a), c.clean();
          }
        });
      }
      let uZ = ({
        web3Context: e,
        transactionReceipt: t,
        transactionPromiEvent: r,
        customTransactionReceiptSchema: n,
        returnFormat: i,
      }) => {
        var o;
        let a = 1,
          s = setInterval(
            () => {
              !(function (e, t, r, n) {
                new (r || (r = Promise))(function (i, o) {
                  function a(e) {
                    try {
                      l(n.next(e));
                    } catch (e) {
                      o(e);
                    }
                  }
                  function s(e) {
                    try {
                      l(n.throw(e));
                    } catch (e) {
                      o(e);
                    }
                  }
                  function l(e) {
                    var t;
                    e.done
                      ? i(e.value)
                      : ((t = e.value) instanceof r
                          ? t
                          : new r(function (e) {
                              e(t);
                            })
                        ).then(a, s);
                  }
                  l((n = n.apply(e, t || [])).next());
                });
              })(void 0, void 0, void 0, function* () {
                if (a >= e.transactionConfirmationBlocks) {
                  clearInterval(s);
                  return;
                }
                let o = yield l2(
                  e.requestManager,
                  iq(BigInt(t.blockNumber) + BigInt(a)),
                  !1
                );
                (null == o ? void 0 : o.hash) &&
                  ((a += 1),
                  r.emit("confirmation", {
                    confirmations: o_({ format: "uint" }, a, i),
                    receipt: o_(null != n ? n : uA, t, i),
                    latestBlockHash: o_({ format: "bytes32" }, o.hash, i),
                  }));
              });
            },
            null !== (o = e.transactionReceiptPollingInterval) && void 0 !== o
              ? o
              : e.transactionPollingInterval
          );
      };
      var uK = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      let uQ = ({
          web3Context: e,
          transactionReceipt: t,
          transactionPromiEvent: r,
          customTransactionReceiptSchema: n,
          returnFormat: i,
        }) => {
          let o,
            a = !0;
          setImmediate(() => {
            var s;
            null === (s = e.subscriptionManager) ||
              void 0 === s ||
              s
                .subscribe("newHeads")
                .then((s) => {
                  s.on("data", (l) =>
                    uK(void 0, void 0, void 0, function* () {
                      var u;
                      if (
                        ((a = !1),
                        !(null == l ? void 0 : l.number) ||
                          o === (null == l ? void 0 : l.parentHash))
                      )
                        return;
                      o = null == l ? void 0 : l.parentHash;
                      let c =
                        BigInt(l.number) - BigInt(t.blockNumber) + BigInt(1);
                      r.emit("confirmation", {
                        confirmations: o_({ format: "uint" }, c, i),
                        receipt: o_(null != n ? n : uA, t, i),
                        latestBlockHash: o_(
                          { format: "bytes32" },
                          l.parentHash,
                          i
                        ),
                      }),
                        c >= e.transactionConfirmationBlocks &&
                          (yield null === (u = e.subscriptionManager) ||
                          void 0 === u
                            ? void 0
                            : u.removeSubscription(s));
                    })
                  ),
                    s.on("error", () =>
                      uK(void 0, void 0, void 0, function* () {
                        var o;
                        yield null === (o = e.subscriptionManager) ||
                        void 0 === o
                          ? void 0
                          : o.removeSubscription(s),
                          (a = !1),
                          uZ({
                            web3Context: e,
                            transactionReceipt: t,
                            transactionPromiEvent: r,
                            customTransactionReceiptSchema: n,
                            returnFormat: i,
                          });
                      })
                    );
                })
                .catch(() => {
                  (a = !1),
                    uZ({
                      web3Context: e,
                      transactionReceipt: t,
                      customTransactionReceiptSchema: n,
                      transactionPromiEvent: r,
                      returnFormat: i,
                    });
                });
          }),
            setTimeout(() => {
              a &&
                uZ({
                  web3Context: e,
                  transactionReceipt: t,
                  transactionPromiEvent: r,
                  returnFormat: i,
                });
            }, 1e3 * e.blockHeaderTimeout);
        },
        uJ = (e) =>
          !og(e) && "object" == typeof e && !og(e.type) && "error" === e.type,
        uY = (e) =>
          !og(e) && "object" == typeof e && !og(e.type) && "event" === e.type,
        uX = (e) =>
          !og(e) &&
          "object" == typeof e &&
          !og(e.type) &&
          "function" === e.type,
        u0 = (e) =>
          !og(e) &&
          "object" == typeof e &&
          !og(e.type) &&
          "constructor" === e.type,
        u1 = (e) =>
          "object" == typeof e && void 0 === e.components && void 0 === e.name,
        u2 = (e) =>
          e.includes("[]")
            ? { type: "tuple[]", name: e.slice(0, -2) }
            : { type: "tuple", name: e },
        u6 = (e) => {
          let t = [];
          for (let r of Object.keys(e)) {
            let n = e[r];
            "object" == typeof n
              ? t.push(
                  Object.assign(Object.assign({}, u2(r)), { components: u6(n) })
                )
              : t.push({ name: r, type: e[r] });
          }
          return t;
        },
        u5 = (e, t) => {
          let r = [];
          return (
            t.forEach((t) => {
              if ("object" == typeof t.components) {
                if (!t.type.startsWith("tuple"))
                  throw new e_(
                    `Invalid value given "${t.type}". Error: components found but type is not tuple.`
                  );
                let n = t.type.indexOf("["),
                  i = n >= 0 ? t.type.substring(n) : "",
                  o = u5(e, t.components);
                Array.isArray(o) && e
                  ? r.push(`tuple(${o.join(",")})${i}`)
                  : e
                  ? r.push(`(${o.join()})`)
                  : r.push(`(${o.join(",")})${i}`);
              } else r.push(t.type);
            }),
            r
          );
        },
        u3 = (e) => {
          var t, r, n, i;
          return uJ(e) || uY(e) || uX(e)
            ? (null === (t = e.name) || void 0 === t ? void 0 : t.includes("("))
              ? e.name
              : `${null !== (r = e.name) && void 0 !== r ? r : ""}(${u5(
                  !1,
                  null !== (n = e.inputs) && void 0 !== n ? n : []
                ).join(",")})`
            : `(${u5(!1, null !== (i = e.inputs) && void 0 !== i ? i : []).join(
                ","
              )})`;
        },
        u8 = (e) => {
          if ("string" != typeof e && !uJ(e))
            throw new e_("Invalid parameter value in encodeErrorSignature");
          return oM(
            e && ("function" == typeof e || "object" == typeof e) ? u3(e) : e
          );
        },
        u4 = (e) => {
          if ("string" != typeof e && !uY(e))
            throw new e_("Invalid parameter value in encodeEventSignature");
          return oM(
            e && ("function" == typeof e || "object" == typeof e) ? u3(e) : e
          );
        };
      function u9(e, t) {
        let r = e.exec(t);
        return r?.groups;
      }
      var u7 = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/,
        ce =
          /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/,
        ct = /^\(.+?\).*?$/,
        cr = Object.defineProperty,
        cn = (e, t, r) =>
          t in e
            ? cr(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r,
              })
            : (e[t] = r),
        ci = (e, t, r) => (cn(e, "symbol" != typeof t ? t + "" : t, r), r),
        co = class extends Error {
          constructor(e, t = {}) {
            let r =
                t.cause instanceof co
                  ? t.cause.details
                  : t.cause?.message
                  ? t.cause.message
                  : t.details,
              n = (t.cause instanceof co && t.cause.docsPath) || t.docsPath;
            super(
              [
                e || "An error occurred.",
                "",
                ...(t.metaMessages ? [...t.metaMessages, ""] : []),
                ...(n ? [`Docs: https://abitype.dev${n}`] : []),
                ...(r ? [`Details: ${r}`] : []),
                "Version: abitype@0.7.1",
              ].join("\n")
            ),
              ci(this, "details"),
              ci(this, "docsPath"),
              ci(this, "metaMessages"),
              ci(this, "shortMessage"),
              ci(this, "name", "AbiTypeError"),
              t.cause && (this.cause = t.cause),
              (this.details = r),
              (this.docsPath = n),
              (this.metaMessages = t.metaMessages),
              (this.shortMessage = e);
          }
        },
        ca = /^struct (?<name>[a-zA-Z0-9_]+) \{(?<properties>.*?)\}$/,
        cs = new Set(["memory", "indexed", "storage", "calldata"]),
        cl = new Set(["calldata", "memory", "storage"]),
        cu = new Map([
          ["address", { type: "address" }],
          ["bool", { type: "bool" }],
          ["bytes", { type: "bytes" }],
          ["bytes32", { type: "bytes32" }],
          ["int", { type: "int256" }],
          ["int256", { type: "int256" }],
          ["string", { type: "string" }],
          ["uint", { type: "uint256" }],
          ["uint8", { type: "uint8" }],
          ["uint16", { type: "uint16" }],
          ["uint24", { type: "uint24" }],
          ["uint32", { type: "uint32" }],
          ["uint64", { type: "uint64" }],
          ["uint96", { type: "uint96" }],
          ["uint112", { type: "uint112" }],
          ["uint160", { type: "uint160" }],
          ["uint192", { type: "uint192" }],
          ["uint256", { type: "uint256" }],
          ["address owner", { type: "address", name: "owner" }],
          ["address to", { type: "address", name: "to" }],
          ["bool approved", { type: "bool", name: "approved" }],
          ["bytes _data", { type: "bytes", name: "_data" }],
          ["bytes data", { type: "bytes", name: "data" }],
          ["bytes signature", { type: "bytes", name: "signature" }],
          ["bytes32 hash", { type: "bytes32", name: "hash" }],
          ["bytes32 r", { type: "bytes32", name: "r" }],
          ["bytes32 root", { type: "bytes32", name: "root" }],
          ["bytes32 s", { type: "bytes32", name: "s" }],
          ["string name", { type: "string", name: "name" }],
          ["string symbol", { type: "string", name: "symbol" }],
          ["string tokenURI", { type: "string", name: "tokenURI" }],
          ["uint tokenId", { type: "uint256", name: "tokenId" }],
          ["uint8 v", { type: "uint8", name: "v" }],
          ["uint256 balance", { type: "uint256", name: "balance" }],
          ["uint256 tokenId", { type: "uint256", name: "tokenId" }],
          ["uint256 value", { type: "uint256", name: "value" }],
          [
            "event:address indexed from",
            { type: "address", name: "from", indexed: !0 },
          ],
          [
            "event:address indexed to",
            { type: "address", name: "to", indexed: !0 },
          ],
          [
            "event:uint indexed tokenId",
            { type: "uint256", name: "tokenId", indexed: !0 },
          ],
          [
            "event:uint256 indexed tokenId",
            { type: "uint256", name: "tokenId", indexed: !0 },
          ],
        ]),
        cc =
          /^(?<type>[a-zA-Z0-9_]+?)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z0-9_]+))?$/,
        cd =
          /^\((?<type>.+?)\)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z0-9_]+))?$/,
        cf = /^u?int$/;
      function ch(e, t) {
        var r, n, i;
        let o;
        let a = (r = t?.type) ? `${r}:${e}` : e;
        if (cu.has(a)) return cu.get(a);
        let s = ct.test(e),
          l = u9(s ? cd : cc, e);
        if (!l) throw new co("Invalid ABI parameter.", { details: e });
        if (
          l.name &&
          ("address" === (n = l.name) ||
            "bool" === n ||
            "function" === n ||
            "string" === n ||
            "tuple" === n ||
            u7.test(n) ||
            ce.test(n) ||
            cm.test(n))
        )
          throw new co("Invalid ABI parameter.", {
            details: e,
            metaMessages: [
              `"${l.name}" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`,
            ],
          });
        let u = l.name ? { name: l.name } : {},
          c = "indexed" === l.modifier ? { indexed: !0 } : {},
          d = t?.structs ?? {},
          f = {};
        if (s) {
          o = "tuple";
          let e = (function e(t, r = [], n = "", i = 0) {
              if ("" === t) {
                if ("" === n) return r;
                if (0 !== i)
                  throw new co("Unbalanced parentheses.", {
                    metaMessages: [
                      `"${n.trim()}" has too many ${
                        i > 0 ? "opening" : "closing"
                      } parentheses.`,
                    ],
                    details: `Depth "${i}"`,
                  });
                return [...r, n.trim()];
              }
              let o = t.length;
              for (let a = 0; a < o; a++) {
                let o = t[a],
                  s = t.slice(a + 1);
                switch (o) {
                  case ",":
                    return 0 === i
                      ? e(s, [...r, n.trim()])
                      : e(s, r, `${n}${o}`, i);
                  case "(":
                    return e(s, r, `${n}${o}`, i + 1);
                  case ")":
                    return e(s, r, `${n}${o}`, i - 1);
                  default:
                    return e(s, r, `${n}${o}`, i);
                }
              }
              return [];
            })(l.type),
            t = [],
            r = e.length;
          for (let n = 0; n < r; n++) t.push(ch(e[n], { structs: d }));
          f = { components: t };
        } else if (l.type in d) (o = "tuple"), (f = { components: d[l.type] });
        else if (cf.test(l.type)) o = `${l.type}256`;
        else if (((o = l.type), t?.type !== "struct" && !cp(o)))
          throw new co("Unknown type.", {
            metaMessages: [`Type "${o}" is not a valid ABI type.`],
          });
        if (l.modifier) {
          if (!t?.modifiers?.has?.(l.modifier))
            throw new co("Invalid ABI parameter.", {
              details: e,
              metaMessages: [
                `Modifier "${l.modifier}" not allowed${
                  t?.type ? ` in "${t.type}" type` : ""
                }.`,
              ],
            });
          if (
            cl.has(l.modifier) &&
            ((i = o),
            !l.array && "bytes" !== i && "string" !== i && "tuple" !== i)
          )
            throw new co("Invalid ABI parameter.", {
              details: e,
              metaMessages: [
                `Modifier "${l.modifier}" not allowed${
                  t?.type ? ` in "${t.type}" type` : ""
                }.`,
                `Data location can only be specified for array, struct, or mapping types, but "${l.modifier}" was given.`,
              ],
            });
        }
        let h = { type: `${o}${l.array ?? ""}`, ...u, ...c, ...f };
        return cu.set(a, h), h;
      }
      function cp(e) {
        return (
          "address" === e ||
          "bool" === e ||
          "function" === e ||
          "string" === e ||
          u7.test(e) ||
          ce.test(e)
        );
      }
      var cm =
          /^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/,
        cg = /^(?<type>[a-zA-Z0-9_]+?)(?<array>(?:\[\d*?\])+?)?$/;
      function cy(e = 0) {
        var t;
        if (
          (null === (t = globalThis.Buffer) || void 0 === t
            ? void 0
            : t.alloc) !== void 0
        ) {
          let t = globalThis.Buffer.alloc(e);
          return new Uint8Array(t.buffer, t.byteOffset, t.byteLength);
        }
        return new Uint8Array(e);
      }
      function cb(e) {
        return e.map((e) => {
          var t;
          if (
            !og(e) &&
            "object" == typeof e &&
            !og(e.type) &&
            "string" == typeof e.type
          )
            return e;
          if ("string" == typeof e)
            return (function e(t) {
              var r, n;
              return Object.assign(Object.assign({}, t), {
                name: null !== (r = t.name) && void 0 !== r ? r : "",
                components:
                  null === (n = t.components) || void 0 === n
                    ? void 0
                    : n.map((t) => e(t)),
              });
            })(
              (function (e) {
                let t;
                if ("string" == typeof e) t = ch(e, { modifiers: cs });
                else {
                  let r = (function (e) {
                      let t = {},
                        r = e.length;
                      for (let n = 0; n < r; n++) {
                        let r = e[n];
                        if (!ca.test(r)) continue;
                        let i = u9(ca, r);
                        if (!i)
                          throw new co("Invalid struct signature.", {
                            details: r,
                          });
                        let o = i.properties.split(";"),
                          a = [],
                          s = o.length;
                        for (let e = 0; e < s; e++) {
                          let t = o[e].trim();
                          if (!t) continue;
                          let r = ch(t, { type: "struct" });
                          a.push(r);
                        }
                        if (!a.length)
                          throw new co("Invalid struct signature.", {
                            details: r,
                            metaMessages: ["No properties exist."],
                          });
                        t[i.name] = a;
                      }
                      let n = {},
                        i = Object.entries(t),
                        o = i.length;
                      for (let e = 0; e < o; e++) {
                        let [r, o] = i[e];
                        n[r] = (function e(t, r, n = new Set()) {
                          let i = [],
                            o = t.length;
                          for (let a = 0; a < o; a++) {
                            let o = t[a];
                            if (ct.test(o.type)) i.push(o);
                            else {
                              let t = u9(cg, o.type);
                              if (!t?.type)
                                throw new co("Invalid ABI parameter.", {
                                  details: JSON.stringify(o, null, 2),
                                  metaMessages: [
                                    "ABI parameter type is invalid.",
                                  ],
                                });
                              let { array: a, type: s } = t;
                              if (s in r) {
                                if (n.has(s))
                                  throw new co("Circular reference detected.", {
                                    metaMessages: [
                                      `Struct "${s}" is a circular reference.`,
                                    ],
                                  });
                                i.push({
                                  ...o,
                                  type: `tuple${a ?? ""}`,
                                  components: e(
                                    r[s] ?? [],
                                    r,
                                    new Set([...n, s])
                                  ),
                                });
                              } else if (cp(s)) i.push(o);
                              else
                                throw new co("Unknown type.", {
                                  metaMessages: [
                                    `Type "${s}" is not a valid ABI type. Perhaps you forgot to include a struct signature?`,
                                  ],
                                });
                            }
                          }
                          return i;
                        })(o, t);
                      }
                      return n;
                    })(e),
                    n = e.length;
                  for (let i = 0; i < n; i++) {
                    let n = e[i];
                    if (!ca.test(n)) {
                      t = ch(n, { modifiers: cs, structs: r });
                      break;
                    }
                  }
                }
                if (!t)
                  throw new co("Failed to parse ABI parameter.", {
                    details: `parseAbiParameter(${JSON.stringify(e, null, 2)})`,
                    docsPath: "/api/human.html#parseabiparameter-1",
                  });
                return t;
              })(e.replace(/tuple/, ""))
            );
          if (u1(e)) {
            let r = Object.keys(e)[0],
              n = u2(r);
            return (
              (n.name = null !== (t = n.name) && void 0 !== t ? t : ""),
              Object.assign(Object.assign({}, n), { components: u6(e[r]) })
            );
          }
          throw new e_("Invalid abi");
        });
      }
      function cv(e) {
        let t = e.type.lastIndexOf("["),
          r = e.type.substring(0, t),
          n = e.type.substring(t),
          i = -1;
        if ("[]" !== n && isNaN((i = Number(n.slice(1, -1)))))
          throw new e_("Invalid fixed array size", { size: n });
        return {
          param: { type: r, name: "", components: e.components },
          size: i,
        };
      }
      function cw(e) {
        var t, r;
        return (
          !!(
            "string" === e.type ||
            "bytes" === e.type ||
            e.type.endsWith("[]")
          ) ||
          ("tuple" === e.type
            ? null !==
                (r =
                  null === (t = e.components) || void 0 === t
                    ? void 0
                    : t.some(cw)) &&
              void 0 !== r &&
              r
            : !!e.type.endsWith("]") && cw(cv(e).param))
        );
      }
      let cx = new Map(),
        cA = BigInt(256);
      for (let e = 8; e <= 256; e += 8)
        cx.set(`uint${e}`, { min: BigInt(0), max: cA - BigInt(1) }),
          cx.set(`int${e}`, {
            min: -cA / BigInt(2),
            max: cA / BigInt(2) - BigInt(1),
          }),
          (cA *= BigInt(256));
      cx.set("int", cx.get("int256")), cx.set("uint", cx.get("uint256"));
      let cE = BigInt(1) << BigInt(256);
      function ck(e, t) {
        let r;
        try {
          r = i4(t);
        } catch (r) {
          throw new e_("provided input is not number value", {
            type: e.type,
            value: t,
            name: e.name,
          });
        }
        let n = cx.get(e.type);
        if (!n)
          throw new e_("provided abi contains invalid number datatype", {
            type: e.type,
          });
        if (r < n.min)
          throw new e_("provided input is less then minimum for given type", {
            type: e.type,
            value: t,
            name: e.name,
            minimum: n.min.toString(),
          });
        if (r > n.max)
          throw new e_(
            "provided input is greater then maximum for given type",
            { type: e.type, value: t, name: e.name, maximum: n.max.toString() }
          );
        return {
          dynamic: !1,
          encoded: (function (e, t = 32) {
            return il(
              ov(e < 0 ? (cE + e).toString(16) : e.toString(16), 2 * t)
            );
          })(r),
        };
      }
      function cI(e, t) {
        if (t.length < 32)
          throw new e_("Not enough bytes left to decode", {
            param: e,
            bytesLeft: t.length,
          });
        let r = t.subarray(0, 32),
          n = cx.get(e.type);
        if (!n)
          throw new e_("provided abi contains invalid number datatype", {
            type: e.type,
          });
        let i = (function (e, t) {
          let r = BigInt(io(e));
          return r <= t ? r : r - cE;
        })(r, n.max);
        if (i < n.min)
          throw new e_("decoded value is less then minimum for given type", {
            type: e.type,
            value: i,
            name: e.name,
            minimum: n.min.toString(),
          });
        if (i > n.max)
          throw new e_("decoded value is greater then maximum for given type", {
            type: e.type,
            value: i,
            name: e.name,
            maximum: n.max.toString(),
          });
        return { result: i, encoded: t.subarray(32), consumed: 32 };
      }
      function cS(e, t) {
        if (("string" == typeof t && t.length % 2 != 0 && (t += "0"), !id(t)))
          throw new e_("provided input is not valid bytes value", {
            type: e.type,
            value: t,
            name: e.name,
          });
        let r = iD(t),
          [, n] = e.type.split("bytes");
        if (n) {
          if (Number(n) > 32 || 1 > Number(n))
            throw new e_(
              "invalid bytes type. Static byte type can have between 1 and 32 bytes",
              { type: e.type }
            );
          if (Number(n) < r.length)
            throw new e_("provided input size is different than type size", {
              type: e.type,
              value: t,
              name: e.name,
            });
          let i = cy(32);
          return i.set(r), { dynamic: !1, encoded: i };
        }
        let i = cy(32 + 32 * Math.ceil(r.length / 32));
        return (
          i.set(ck({ type: "uint32", name: "" }, r.length).encoded),
          i.set(r, 32),
          { dynamic: !0, encoded: i }
        );
      }
      function cP(e, t) {
        let [, r] = e.type.split("bytes"),
          n = Number(r),
          i = t,
          o = 1,
          a = 0;
        if (!n) {
          let e = cI({ type: "uint32", name: "" }, i);
          (n = Number(e.result)),
            (a += e.consumed),
            (i = e.encoded),
            (o = Math.ceil(n / 32));
        }
        if (n > t.length)
          throw new e_("there is not enough data to decode", {
            type: e.type,
            encoded: t,
            size: n,
          });
        return {
          result: iH(i.subarray(0, n)),
          encoded: i.subarray(32 * o),
          consumed: a + 32 * o,
        };
      }
      function cT(e) {
        let t = 0,
          r = 0,
          n = [],
          i = [];
        for (let r of e) r.dynamic ? (t += 32) : (t += r.encoded.length);
        for (let o of e)
          o.dynamic
            ? (n.push(ck({ type: "uint256", name: "" }, t + r)),
              i.push(o),
              (r += o.encoded.length))
            : n.push(o);
        return iM(...n.map((e) => e.encoded), ...i.map((e) => e.encoded));
      }
      function cC(e, t) {
        if ("string" === e.type)
          return (function (e, t) {
            if ("string" != typeof t)
              throw new e_("invalid input, should be string", { input: t });
            return cS({ type: "bytes", name: "" }, iX(t));
          })(0, t);
        if ("bool" === e.type)
          return (function (e, t) {
            let r;
            try {
              r = ot(t);
            } catch (r) {
              if (r instanceof tw)
                throw new e_("provided input is not valid boolean value", {
                  type: e.type,
                  value: t,
                  name: e.name,
                });
            }
            return ck({ type: "uint8", name: "" }, Number(r));
          })(e, t);
        if ("address" === e.type)
          return (function (e, t) {
            if ("string" != typeof t)
              throw new e_("address type expects string as input type", {
                value: t,
                name: e.name,
                type: e.type,
              });
            let r = t.toLowerCase();
            if ((r.startsWith("0x") || (r = `0x${r}`), !ip(r)))
              throw new e_("provided input is not valid address", {
                value: t,
                name: e.name,
                type: e.type,
              });
            let n = il(r),
              i = cy(32);
            return i.set(n, 12), { dynamic: !1, encoded: i };
          })(e, t);
        if ("tuple" === e.type) return c_(e, t);
        if (e.type.endsWith("]"))
          return (function (e, t) {
            if (!Array.isArray(t))
              throw new e_("Expected value to be array", { abi: e, values: t });
            let { size: r, param: n } = cv(e),
              i = t.map((e) => cC(n, e)),
              o = -1 === r,
              a = i.length > 0 && i[0].dynamic;
            if (!o && t.length !== r)
              throw new e_("Given arguments count doesn't match array length", {
                arrayLength: r,
                argumentsLength: t.length,
              });
            if (o || a) {
              let e = cT(i);
              if (o) {
                let t = ck({ type: "uint256", name: "" }, i.length).encoded;
                return { dynamic: !0, encoded: i.length > 0 ? iM(t, e) : t };
              }
              return { dynamic: !0, encoded: e };
            }
            return { dynamic: !1, encoded: iM(...i.map((e) => e.encoded)) };
          })(e, t);
        if (e.type.startsWith("bytes")) return cS(e, t);
        if (e.type.startsWith("uint") || e.type.startsWith("int"))
          return ck(e, t);
        throw new e_("Unsupported", { param: e, value: t });
      }
      function cO(e, t) {
        if ("string" === e.type)
          return (function (e, t) {
            let r = cP({ type: "bytes", name: "" }, t);
            return {
              result: iJ(r.result),
              encoded: r.encoded,
              consumed: r.consumed,
            };
          })(0, t);
        if ("bool" === e.type)
          return (function (e, t) {
            let r = cI({ type: "uint8", name: "" }, t);
            if (r.result > 1 || r.result < 0)
              throw new e_("Invalid boolean value encoded", {
                boolBytes: t.subarray(0, 32),
                numberResult: r,
              });
            return {
              result: r.result === BigInt(1),
              encoded: r.encoded,
              consumed: 32,
            };
          })(0, t);
        if ("address" === e.type)
          return (function (e, t) {
            let r = t.subarray(12, 32);
            if (20 !== r.length)
              throw new e_(
                "Invalid decoding input, not enough bytes to decode address",
                { bytes: t }
              );
            return { result: oe(io(r)), encoded: t.subarray(32), consumed: 32 };
          })(0, t);
        if ("tuple" === e.type) return cB(e, t);
        if (e.type.endsWith("]"))
          return (function (e, t) {
            let { size: r, param: n } = cv(e),
              i = 0,
              o = [],
              a = t;
            if (-1 === r) {
              let e = cI({ type: "uint32", name: "" }, t);
              (r = Number(e.result)), (i = e.consumed), (a = e.encoded);
            }
            if (cw(n)) {
              for (let e = 0; e < r; e += 1) {
                let t = cI({ type: "uint32", name: "" }, a.subarray(32 * e));
                i += t.consumed;
                let r = cO(n, a.subarray(Number(t.result)));
                (i += r.consumed), o.push(r.result);
              }
              return { result: o, encoded: a.subarray(i), consumed: i };
            }
            for (let e = 0; e < r; e += 1) {
              let e = cO(n, t.subarray(i));
              (i += e.consumed), o.push(e.result);
            }
            return { result: o, encoded: t.subarray(i), consumed: i };
          })(e, t);
        if (e.type.startsWith("bytes")) return cP(e, t);
        if (e.type.startsWith("uint") || e.type.startsWith("int"))
          return cI(e, t);
        throw new e_("Unsupported", { param: e, bytes: t });
      }
      function c_(e, t) {
        var r, n, i;
        let o = !1;
        if (!Array.isArray(t) && "object" != typeof t)
          throw new e_("param must be either Array or Object", {
            param: e,
            input: t,
          });
        let a = [];
        for (
          let s = 0;
          s <
          (null !==
            (n =
              null === (r = e.components) || void 0 === r
                ? void 0
                : r.length) && void 0 !== n
            ? n
            : 0);
          s += 1
        ) {
          let r;
          let n = e.components[s];
          if (Array.isArray(t)) {
            if (s >= t.length)
              throw new e_("input param length missmatch", {
                param: e,
                input: t,
              });
            r = cC(n, t[s]);
          } else {
            let o = t[null !== (i = n.name) && void 0 !== i ? i : ""];
            if (null == o)
              throw new e_("missing input defined in abi", {
                param: e,
                input: t,
                paramName: n.name,
              });
            r = cC(n, o);
          }
          r.dynamic && (o = !0), a.push(r);
        }
        return o
          ? { dynamic: !0, encoded: cT(a) }
          : { dynamic: !1, encoded: iM(...a.map((e) => e.encoded)) };
      }
      function cB(e, t) {
        let r = { __length__: 0 },
          n = 0;
        if (!e.components) return { result: r, encoded: t, consumed: n };
        let i = 0;
        for (let [o, a] of e.components.entries()) {
          let e;
          if (cw(a)) {
            let r = cI({ type: "uint32", name: "" }, t.subarray(n));
            (e = cO(a, t.subarray(Number(r.result)))),
              (n += r.consumed),
              (i += e.consumed);
          } else (e = cO(a, t.subarray(n))), (n += e.consumed);
          (r.__length__ += 1),
            (r[o] = e.result),
            a.name && "" !== a.name && (r[a.name] = e.result);
        }
        return { encoded: t.subarray(n + i), result: r, consumed: n + i };
      }
      function cR(e, t) {
        if ((null == e ? void 0 : e.length) !== t.length)
          throw new e_("Invalid number of values received for given ABI", {
            expected: null == e ? void 0 : e.length,
            received: t.length,
          });
        return io(
          c_({ type: "tuple", name: "", components: cb(e) }, t).encoded
        );
      }
      let cN = (e, t) => cR([e], [t]),
        cM = (e, t, r) => {
          try {
            if (e.length > 0 && (!t || "0x" === t || "0X" === t))
              throw new e_(
                "Returned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node which is not fully synced."
              );
            return (function (e, t, r) {
              let n = cb(e);
              return cB({ type: "tuple", name: "", components: n }, il(t))
                .result;
            })(e, `0x${t.replace(/0x/i, "")}`, 0);
          } catch (e) {
            throw new e_(`Parameter decoding error: ${e.message}`, {
              internalErr: e,
            });
          }
        },
        cj = (e, t) => cM(e, t, !1),
        cF = (e, t) => cj([e], t)["0"],
        cL = (e) => {
          if ("string" != typeof e && !uX(e))
            throw new e_("Invalid parameter value in encodeFunctionSignature");
          return oM(
            e && ("function" == typeof e || "object" == typeof e) ? u3(e) : e
          ).slice(0, 10);
        },
        cD = (e, t, r = !0) => {
          let n =
            r && t && t.length >= 10 && t.startsWith("0x") ? t.slice(10) : t;
          if (!e.inputs) throw new ev("No inputs found in the ABI");
          return Object.assign(Object.assign({}, cj([...e.inputs], n)), {
            __method__: u3(e),
          });
        },
        cU = (e, t) => {
          if ("constructor" === e.type) return t;
          if (!t) return null;
          let r = t.length >= 2 ? t.slice(2) : t;
          if (!e.outputs) return null;
          let n = cj([...e.outputs], r);
          return 1 === n.__length__ ? n[0] : n;
        },
        cH = ["bool", "string", "int", "uint", "address", "fixed", "ufixed"],
        c$ = (e, t) => ("string" === e ? t : cF(e, t)),
        cz = (e, t, r) => {
          let n = Array.isArray(r) ? r : [r],
            i = {},
            o = {};
          for (let [t, r] of e.entries()) r.indexed ? (i[t] = r) : (o[t] = r);
          let a = t ? cM(Object.values(o), t, !0) : { __length__: 0 },
            s = n.length - Object.keys(i).length,
            l = Object.values(i).map((e, t) =>
              cH.some((t) => e.type.startsWith(t))
                ? c$(e.type, n[t + s])
                : n[t + s]
            ),
            u = { __length__: 0 },
            c = 0,
            d = 0;
          for (let [t, r] of e.entries())
            (u[t] = "string" === r.type ? "" : void 0),
              i[t] && ((u[t] = l[c]), (c += 1)),
              o[t] && ((u[t] = a[String(d)]), (d += 1)),
              r.name && (u[r.name] = u[t]),
              (u.__length__ += 1);
          return u;
        },
        cG = (e, t) => {
          if (null == t ? void 0 : t.data) {
            let r, n, i;
            try {
              let o = t.data.slice(0, 10),
                a = e.find((e) => u8(e).startsWith(o));
              (null == a ? void 0 : a.inputs)
                ? ((r = a.name),
                  (n = u3(a)),
                  (i = cj([...a.inputs], t.data.substring(10))))
                : t.data.startsWith("0x08c379a0")
                ? ((r = "Error"),
                  (n = "Error(string)"),
                  (i = cj(
                    [{ name: "message", type: "string" }],
                    t.data.substring(10)
                  )))
                : t.data.startsWith("0x4e487b71")
                ? ((r = "Panic"),
                  (n = "Panic(uint256)"),
                  (i = cj(
                    [{ name: "code", type: "uint256" }],
                    t.data.substring(10)
                  )))
                : console.error(
                    "No matching error abi found for error data",
                    t.data
                  );
            } catch (e) {
              console.error(e);
            }
            r && t.setDecodedProperties(r, n, i);
          }
        },
        cq = /^\w+/,
        cW = /^(.*)\[([0-9]*?)]$/,
        cV = (e, t, r = []) => {
          let n = t.match(cq)[0];
          return r.includes(n) || !e.types[n]
            ? r
            : [
                n,
                ...e.types[n].reduce(
                  (t, r) => [
                    ...t,
                    ...cV(e, r.type, t).filter((e) => !t.includes(e)),
                  ],
                  []
                ),
              ];
        },
        cZ = (e, t) => {
          let [r, ...n] = cV(e, t);
          return [r, ...n.sort()]
            .map((t) => `${t}(${e.types[t].map((e) => `${e.type} ${e.name}`)})`)
            .join("");
        },
        cK = (e, t) => keccak256(cZ(e, t)),
        cQ = (e, t, r) => keccak256(cY(e, t, r)),
        cJ = (e, t, r) => {
          let n = t.match(cW);
          if (n) {
            let t = n[1],
              i = Number(n[2]) || void 0;
            if (!Array.isArray(r))
              throw new AbiError(
                "Cannot encode data: value is not of array type",
                { data: r }
              );
            if (i && r.length !== i)
              throw new AbiError(
                `Cannot encode data: expected length of ${i}, but got ${r.length}`,
                { data: r }
              );
            let o = r.map((r) => cJ(e, t, r));
            return [
              "bytes32",
              keccak256(
                encodeParameters(
                  o.map((e) => e[0]),
                  o.map((e) => e[1])
                )
              ),
            ];
          }
          return e.types[t]
            ? ["bytes32", cQ(e, t, r)]
            : "string" === t || "bytes" === t
            ? ["bytes32", keccak256(r)]
            : [t, r];
        },
        cY = (e, t, r) => {
          let [n, i] = e.types[t].reduce(
            ([t, n], i) => {
              if (isNullish(r[i.name]) || isNullish(i.type))
                throw new AbiError(
                  `Cannot encode data: missing data for '${i.name}'`,
                  { data: r, field: i }
                );
              let o = r[i.name],
                [a, s] = cJ(e, i.type, o);
              return [
                [...t, a],
                [...n, s],
              ];
            },
            [["bytes32"], [cK(e, t)]]
          );
          return encodeParameters(n, i);
        },
        cX = (e, t) => {
          var r, n, i, o, a;
          if (e instanceof eA && e.cause instanceof ex)
            return void 0 !== t
              ? (cG(
                  t.filter((e) => uJ(e)),
                  e.cause
                ),
                {
                  reason: e.cause.message,
                  signature:
                    null === (r = e.cause.data) || void 0 === r
                      ? void 0
                      : r.slice(0, 10),
                  data:
                    null === (n = e.cause.data) || void 0 === n
                      ? void 0
                      : n.substring(10),
                  customErrorName: e.cause.errorName,
                  customErrorDecodedSignature: e.cause.errorSignature,
                  customErrorArguments: e.cause.errorArgs,
                })
              : {
                  reason: e.cause.message,
                  signature:
                    null === (i = e.cause.data) || void 0 === i
                      ? void 0
                      : i.slice(0, 10),
                  data:
                    null === (o = e.cause.data) || void 0 === o
                      ? void 0
                      : o.substring(10),
                };
          if (
            e instanceof tT &&
            !Array.isArray(
              null === (a = e.cause) || void 0 === a ? void 0 : a.errors
            ) &&
            void 0 !== e.cause
          )
            return e.cause.message;
          throw e;
        };
      function c0(e, t, r) {
        var n, i, o, a;
        return (
          (n = this),
          (i = arguments),
          (o = void 0),
          (a = function* (e, t, r, n = e.defaultReturnFormat) {
            try {
              yield di(e, t, e.defaultBlock, n);
              return;
            } catch (e) {
              return cX(e, r);
            }
          }),
          new (o || (o = Promise))(function (e, t) {
            function r(e) {
              try {
                l(a.next(e));
              } catch (e) {
                t(e);
              }
            }
            function s(e) {
              try {
                l(a.throw(e));
              } catch (e) {
                t(e);
              }
            }
            function l(t) {
              var n;
              t.done
                ? e(t.value)
                : ((n = t.value) instanceof o
                    ? n
                    : new o(function (e) {
                        e(n);
                      })
                  ).then(r, s);
            }
            l((a = a.apply(n, i || [])).next());
          })
        );
      }
      function c1(e, t, r, n, i, o) {
        var a, s, l, u;
        return (
          (a = this),
          (s = void 0),
          (l = void 0),
          (u = function* () {
            let a,
              s = o;
            if (
              (void 0 === s &&
                (void 0 !== n
                  ? (s = cX(n))
                  : e.handleRevert && void 0 !== t && (s = yield c0(e, t, i))),
              void 0 === s)
            )
              a = new eH(r);
            else if ("string" == typeof s) a = new eD(s, void 0, r);
            else if (
              void 0 !== s.customErrorName &&
              void 0 !== s.customErrorDecodedSignature &&
              void 0 !== s.customErrorArguments
            ) {
              let e = s;
              a = new eU(
                e.reason,
                e.customErrorName,
                e.customErrorDecodedSignature,
                e.customErrorArguments,
                e.signature,
                r,
                e.data
              );
            } else a = new eD(s.reason, s.signature, r, s.data);
            return a;
          }),
          new (l || (l = Promise))(function (e, t) {
            function r(e) {
              try {
                i(u.next(e));
              } catch (e) {
                t(e);
              }
            }
            function n(e) {
              try {
                i(u.throw(e));
              } catch (e) {
                t(e);
              }
            }
            function i(t) {
              var i;
              t.done
                ? e(t.value)
                : ((i = t.value) instanceof l
                    ? i
                    : new l(function (e) {
                        e(i);
                      })
                  ).then(r, n);
            }
            i((u = u.apply(a, s || [])).next());
          })
        );
      }
      let c2 = (e, t, r, n = K) => {
        var i, o, a, s, l, u;
        let c = Object.assign({}, e),
          d = o_(uw, t, n);
        if (
          ([uB, "allEvents"].includes(c.name) &&
            (c = r.find((e) => e.signature === t.topics[0]) || {
              anonymous: !0,
            }),
          (c.inputs =
            null !==
              (o = null !== (i = c.inputs) && void 0 !== i ? i : e.inputs) &&
            void 0 !== o
              ? o
              : []),
          !c.anonymous)
        ) {
          let e = 0;
          (null !== (a = c.inputs) && void 0 !== a ? a : []).forEach((t) => {
            t.indexed && (e += 1);
          }),
            e > 0 &&
              (null == t ? void 0 : t.topics) &&
              (null == t ? void 0 : t.topics.length) !== e + 1 &&
              (c = Object.assign(Object.assign({}, c), {
                anonymous: !0,
                inputs: [],
              }));
        }
        let f = c.anonymous
          ? t.topics
          : (null !== (s = t.topics) && void 0 !== s ? s : []).slice(1);
        return Object.assign(Object.assign({}, d), {
          returnValues: cz(
            [...(null !== (l = c.inputs) && void 0 !== l ? l : [])],
            t.data,
            f
          ),
          event: c.name,
          signature:
            !c.anonymous &&
            (null === (u = t.topics) || void 0 === u ? void 0 : u.length) > 0 &&
            t.topics[0]
              ? t.topics[0]
              : void 0,
          raw: { data: t.data, topics: t.topics },
        });
      };
      var c6 = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      class c5 {
        constructor({
          options: e,
          web3Context: t,
          promiEvent: r,
          returnFormat: n,
        }) {
          (this.options = { checkRevertBeforeSending: !0 }),
            (this.options = e),
            (this.web3Context = t),
            (this.promiEvent = r),
            (this.returnFormat = n);
        }
        getReceiptWithEvents(e) {
          var t, r;
          let n = Object.assign({}, null != e ? e : {});
          if (
            (null === (t = this.options) || void 0 === t
              ? void 0
              : t.contractAbi) &&
            n.logs &&
            n.logs.length > 0
          )
            for (let e of ((n.events = {}), n.logs)) {
              let t = c2(
                uR,
                e,
                null === (r = this.options) || void 0 === r
                  ? void 0
                  : r.contractAbi,
                this.returnFormat
              );
              t.event && (n.events[t.event] = t);
            }
          return n;
        }
        checkRevertBeforeSending(e) {
          return c6(this, void 0, void 0, function* () {
            if (!1 !== this.options.checkRevertBeforeSending) {
              let t = e;
              iI(e.data) &&
                iI(e.input) &&
                iI(e.gas) &&
                (t = Object.assign(Object.assign({}, e), { gas: 21e3 }));
              let r = yield c0(this.web3Context, t, this.options.contractAbi);
              if (void 0 !== r)
                throw yield c1(
                  this.web3Context,
                  e,
                  void 0,
                  void 0,
                  this.options.contractAbi,
                  r
                );
            }
          });
        }
        emitSending(e) {
          this.promiEvent.listenerCount("sending") > 0 &&
            this.promiEvent.emit("sending", e);
        }
        populateGasPrice(e) {
          return c6(
            this,
            arguments,
            void 0,
            function* ({ transactionFormatted: e, transaction: t }) {
              var r;
              let n = e;
              return (
                !this.web3Context.config.ignoreGasPricing &&
                  !(null === (r = this.options) || void 0 === r
                    ? void 0
                    : r.ignoreGasPricing) &&
                  iI(e.gasPrice) &&
                  (iI(t.maxPriorityFeePerGas) || iI(t.maxFeePerGas)) &&
                  (n = Object.assign(
                    Object.assign({}, e),
                    yield uj(e, this.web3Context, Q)
                  )),
                n
              );
            }
          );
        }
        signAndSend(e) {
          return c6(this, arguments, void 0, function* ({ wallet: e, tx: t }) {
            if (e) {
              let r = yield e.signTransaction(t);
              return uq(
                this.web3Context,
                () =>
                  c6(this, void 0, void 0, function* () {
                    return l1(
                      this.web3Context.requestManager,
                      r.rawTransaction
                    );
                  }),
                r.transactionHash
              );
            }
            return uq(this.web3Context, () =>
              c6(this, void 0, void 0, function* () {
                return (function (e, t) {
                  return lX(this, void 0, void 0, function* () {
                    return e.send({
                      method: "eth_sendTransaction",
                      params: [t],
                    });
                  });
                })(this.web3Context.requestManager, t);
              })
            );
          });
        }
        emitSent(e) {
          this.promiEvent.listenerCount("sent") > 0 &&
            this.promiEvent.emit("sent", e);
        }
        emitTransactionHash(e) {
          this.promiEvent.listenerCount("transactionHash") > 0 &&
            this.promiEvent.emit("transactionHash", e);
        }
        emitReceipt(e) {
          this.promiEvent.listenerCount("receipt") > 0 &&
            this.promiEvent.emit("receipt", e);
        }
        handleError(e) {
          return c6(this, arguments, void 0, function* ({ error: e, tx: t }) {
            var r;
            let n = e;
            return (
              n instanceof eA &&
                this.web3Context.handleRevert &&
                (n = yield c1(
                  this.web3Context,
                  t,
                  void 0,
                  void 0,
                  null === (r = this.options) || void 0 === r
                    ? void 0
                    : r.contractAbi
                )),
              (n instanceof tT ||
                n instanceof eA ||
                n instanceof eU ||
                n instanceof eH ||
                n instanceof eD ||
                n instanceof to) &&
                this.promiEvent.listenerCount("error") > 0 &&
                this.promiEvent.emit("error", n),
              n
            );
          });
        }
        emitConfirmation({
          receipt: e,
          transactionHash: t,
          customTransactionReceiptSchema: r,
        }) {
          this.promiEvent.listenerCount("confirmation") > 0 &&
            (function (e, t, r, n, i, o) {
              if (iI(r) || iI(r.blockHash))
                throw new ts({
                  receipt: r,
                  blockHash: o_(
                    { format: "bytes32" },
                    null == r ? void 0 : r.blockHash,
                    i
                  ),
                  transactionHash: o_({ format: "bytes32" }, n, i),
                });
              if (!r.blockNumber) throw new tl({ receipt: r });
              t.emit("confirmation", {
                confirmations: o_({ format: "uint" }, 1, i),
                receipt: o_(null != o ? o : uA, r, i),
                latestBlockHash: o_({ format: "bytes32" }, r.blockHash, i),
              });
              let a = e.requestManager.provider;
              a && "supportsSubscriptions" in a && a.supportsSubscriptions()
                ? uQ({
                    web3Context: e,
                    transactionReceipt: r,
                    transactionPromiEvent: t,
                    customTransactionReceiptSchema: o,
                    returnFormat: i,
                  })
                : uZ({
                    web3Context: e,
                    transactionReceipt: r,
                    transactionPromiEvent: t,
                    customTransactionReceiptSchema: o,
                    returnFormat: i,
                  });
            })(this.web3Context, this.promiEvent, e, t, this.returnFormat, r);
        }
        handleResolve(e) {
          return c6(this, arguments, void 0, function* ({ receipt: e, tx: t }) {
            var r, n, i;
            if (
              null === (r = this.options) || void 0 === r
                ? void 0
                : r.transactionResolver
            )
              return null === (n = this.options) || void 0 === n
                ? void 0
                : n.transactionResolver(e);
            if (e.status !== BigInt(0)) return e;
            {
              let r = yield c1(
                this.web3Context,
                t,
                e,
                void 0,
                null === (i = this.options) || void 0 === i
                  ? void 0
                  : i.contractAbi
              );
              throw (
                (this.promiEvent.listenerCount("error") > 0 &&
                  this.promiEvent.emit("error", r),
                r)
              );
            }
          });
        }
      }
      var c3 = function (e, t, r, n) {
          return new (r || (r = Promise))(function (i, o) {
            function a(e) {
              try {
                l(n.next(e));
              } catch (e) {
                o(e);
              }
            }
            function s(e) {
              try {
                l(n.throw(e));
              } catch (e) {
                o(e);
              }
            }
            function l(e) {
              var t;
              e.done
                ? i(e.value)
                : ((t = e.value) instanceof r
                    ? t
                    : new r(function (e) {
                        e(t);
                      })
                  ).then(a, s);
            }
            l((n = n.apply(e, t || [])).next());
          });
        },
        c8 = function (e, t) {
          var r = {};
          for (var n in e)
            Object.prototype.hasOwnProperty.call(e, n) &&
              0 > t.indexOf(n) &&
              (r[n] = e[n]);
          if (null != e && "function" == typeof Object.getOwnPropertySymbols)
            for (
              var i = 0, n = Object.getOwnPropertySymbols(e);
              i < n.length;
              i++
            )
              0 > t.indexOf(n[i]) &&
                Object.prototype.propertyIsEnumerable.call(e, n[i]) &&
                (r[n[i]] = e[n[i]]);
          return r;
        };
      let c4 = (e) =>
        c3(void 0, void 0, void 0, function* () {
          return l0(e.requestManager);
        });
      function c9(e, t) {
        return c3(this, void 0, void 0, function* () {
          return o_(
            { format: "uint" },
            yield (function (e) {
              return lX(this, void 0, void 0, function* () {
                return e.send({ method: "eth_gasPrice", params: [] });
              });
            })(e.requestManager),
            null != t ? t : e.defaultReturnFormat
          );
        });
      }
      function c7(e, t) {
        return c3(this, void 0, void 0, function* () {
          return o_(
            { format: "uint" },
            yield (function (e) {
              return lX(this, void 0, void 0, function* () {
                return e.send({ method: "eth_blockNumber", params: [] });
              });
            })(e.requestManager),
            null != t ? t : e.defaultReturnFormat
          );
        });
      }
      function de(e) {
        return c3(
          this,
          arguments,
          void 0,
          function* (e, t = e.defaultBlock, r = !1, n) {
            var i;
            let o;
            if (id(t)) {
              let n = o_({ format: "bytes32" }, t, Q);
              o = yield (function (e, t, r) {
                return lX(this, void 0, void 0, function* () {
                  return (
                    iR.validate(["bytes32", "bool"], [t, r]),
                    e.send({ method: "eth_getBlockByHash", params: [t, r] })
                  );
                });
              })(e.requestManager, n, r);
            } else {
              let n = iw(t) ? t : o_({ format: "uint" }, t, Q);
              o = yield l2(e.requestManager, n, r);
            }
            let a = o_(ub, o, null != n ? n : e.defaultReturnFormat);
            return iI(a)
              ? a
              : Object.assign(Object.assign({}, a), {
                  transactions:
                    null !== (i = a.transactions) && void 0 !== i ? i : [],
                });
          }
        );
      }
      function dt(e, t, r) {
        return c3(this, void 0, void 0, function* () {
          let n;
          let i = o_({ format: "bytes32" }, t, K);
          try {
            n = yield (function (e, t) {
              return lX(this, void 0, void 0, function* () {
                return (
                  iR.validate(["bytes32"], [t]),
                  e.send({ method: "eth_getTransactionReceipt", params: [t] })
                );
              });
            })(e.requestManager, i);
          } catch (e) {
            if (
              "object" == typeof e &&
              !iI(e) &&
              "message" in e &&
              "transaction indexing is in progress" === e.message
            )
              console.warn("Transaction indexing is in progress.");
            else throw e;
          }
          return iI(n) ? n : o_(uA, n, null != r ? r : e.defaultReturnFormat);
        });
      }
      function dr(e, t) {
        return c3(
          this,
          arguments,
          void 0,
          function* (e, t, r = e.defaultBlock, n) {
            let i = iw(r) ? r : o_({ format: "uint" }, r, Q);
            return o_(
              { format: "uint" },
              yield (function (e, t, r) {
                return lX(this, void 0, void 0, function* () {
                  return (
                    iR.validate(["address", "blockNumberOrTag"], [t, r]),
                    e.send({
                      method: "eth_getTransactionCount",
                      params: [t, r],
                    })
                  );
                });
              })(e.requestManager, t, i),
              null != n ? n : e.defaultReturnFormat
            );
          }
        );
      }
      function dn(e, t, r, n = { checkRevertBeforeSending: !0 }, i) {
        let o = new lY((a, s) => {
          setImmediate(() => {
            c3(this, void 0, void 0, function* () {
              let l = new c5({
                  web3Context: e,
                  promiEvent: o,
                  options: n,
                  returnFormat: r,
                }),
                u = Object.assign({}, t);
              iI(i) || (u = yield i.processTransaction(u));
              let c = uS(
                Object.assign(Object.assign({}, u), {
                  from: uL("from", e, u),
                  to: uL("to", e, u),
                }),
                Q,
                { transactionSchema: e.config.customTransactionSchema }
              );
              try {
                let t;
                (c = yield l.populateGasPrice({
                  transaction: u,
                  transactionFormatted: c,
                })),
                  yield l.checkRevertBeforeSending(c),
                  l.emitSending(c),
                  e.wallet && !iI(c.from) && (t = e.wallet.get(c.from));
                let n = yield l.signAndSend({ wallet: t, tx: c }),
                  i = o_(
                    { format: "bytes32" },
                    n,
                    null != r ? r : e.defaultReturnFormat
                  );
                l.emitSent(c), l.emitTransactionHash(i);
                let o = yield uV(e, n, null != r ? r : e.defaultReturnFormat),
                  s = l.getReceiptWithEvents(
                    o_(uA, o, null != r ? r : e.defaultReturnFormat)
                  );
                l.emitReceipt(s),
                  a(yield l.handleResolve({ receipt: s, tx: c })),
                  l.emitConfirmation({ receipt: s, transactionHash: n });
              } catch (e) {
                s(yield l.handleError({ error: e, tx: c }));
              }
            });
          });
        });
        return o;
      }
      function di(e, t) {
        return c3(
          this,
          arguments,
          void 0,
          function* (e, t, r = e.defaultBlock, n = e.defaultReturnFormat) {
            let i = iw(r) ? r : o_({ format: "uint" }, r, Q);
            return o_(
              { format: "bytes" },
              yield (function (e, t, r) {
                return lX(this, void 0, void 0, function* () {
                  return (
                    iR.validate(["blockNumberOrTag"], [r]),
                    e.send({ method: "eth_call", params: [t, r] })
                  );
                });
              })(
                e.requestManager,
                uS(t, Q, {
                  transactionSchema: e.config.customTransactionSchema,
                }),
                i
              ),
              n
            );
          }
        );
      }
      function da(e, t) {
        return c3(
          this,
          arguments,
          void 0,
          function* (e, t, r = e.defaultBlock, n) {
            let i = uS(t, Q, {
                transactionSchema: e.config.customTransactionSchema,
              }),
              o = iw(r) ? r : o_({ format: "uint" }, r, Q);
            return o_(
              { format: "uint" },
              yield (function (e, t, r) {
                return lX(this, void 0, void 0, function* () {
                  return (
                    iR.validate(["blockNumberOrTag"], [r]),
                    e.send({ method: "eth_estimateGas", params: [t, r] })
                  );
                });
              })(e.requestManager, i, o),
              null != n ? n : e.defaultReturnFormat
            );
          }
        );
      }
      function ds(e, t, r) {
        return c3(this, void 0, void 0, function* () {
          let { toBlock: n, fromBlock: i } = t;
          iI(n) ||
            ("number" != typeof n && "bigint" != typeof n) ||
            (n = iq(n)),
            iI(i) ||
              ("number" != typeof i && "bigint" != typeof i) ||
              (i = iq(i));
          let o = Object.assign(Object.assign({}, t), {
            fromBlock: i,
            toBlock: n,
          });
          return (yield (function (e, t) {
            return lX(this, void 0, void 0, function* () {
              return (
                iR.validate(["filter"], [t]),
                e.send({ method: "eth_getLogs", params: [t] })
              );
            });
          })(e.requestManager, o)).map((t) =>
            "string" == typeof t
              ? t
              : o_(uw, t, null != r ? r : e.defaultReturnFormat)
          );
        });
      }
      function dl(e, t) {
        return c3(this, void 0, void 0, function* () {
          return o_(
            { format: "uint" },
            yield (function (e) {
              return lX(this, void 0, void 0, function* () {
                return e.send({ method: "eth_chainId", params: [] });
              });
            })(e.requestManager),
            null != t ? t : e.defaultReturnFormat
          );
        });
      }
      function du(e, t) {
        return c3(
          this,
          arguments,
          void 0,
          function* (e, t, r = e.defaultBlock, n) {
            let i = iw(r) ? r : o_({ format: "uint" }, r, Q);
            return o_(
              uf,
              yield (function (e, t, r) {
                return lX(this, void 0, void 0, function* () {
                  return (
                    iR.validate(["blockNumberOrTag"], [r]),
                    e.send({ method: "eth_createAccessList", params: [t, r] })
                  );
                });
              })(
                e.requestManager,
                uS(t, Q, {
                  transactionSchema: e.config.customTransactionSchema,
                }),
                i
              ),
              null != n ? n : e.defaultReturnFormat
            );
          }
        );
      }
      var dc = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      class dd extends aR {
        _buildSubscriptionParams() {
          return ["logs", this.args];
        }
        formatSubscriptionResult(e) {
          return o_(uw, e, super.returnFormat);
        }
      }
      class df extends aR {
        _buildSubscriptionParams() {
          return ["newPendingTransactions"];
        }
        formatSubscriptionResult(e) {
          return o_({ format: "string" }, e, super.returnFormat);
        }
      }
      class dh extends aR {
        _buildSubscriptionParams() {
          return ["newHeads"];
        }
        formatSubscriptionResult(e) {
          return o_(uv, e, super.returnFormat);
        }
      }
      class dp extends aR {
        _buildSubscriptionParams() {
          return ["syncing"];
        }
        _processSubscriptionResult(e) {
          if ("boolean" == typeof e) this.emit("changed", e);
          else {
            let t = Object.fromEntries(
              Object.entries((null == e ? void 0 : e.status) || e).map(
                ([e, t]) => [e.charAt(0).toLowerCase() + e.substring(1), t]
              )
            );
            this.emit("changed", e.syncing),
              this.emit("data", o_(ux, t, super.returnFormat));
          }
        }
      }
      var dm = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      let dg = {
        logs: dd,
        newPendingTransactions: df,
        newHeads: dh,
        syncing: dp,
        pendingTransactions: df,
        newBlockHeaders: dh,
      };
      class dy extends lK {
        constructor(e) {
          if ("string" == typeof e || aI(e)) {
            super({ provider: e, registeredSubscriptions: dg });
            return;
          }
          if (e.registeredSubscriptions) {
            super(e);
            return;
          }
          super(
            Object.assign(Object.assign({}, e), { registeredSubscriptions: dg })
          ),
            (this.getFeeData = this.calculateFeeData);
        }
        setTransactionMiddleware(e) {
          this.transactionMiddleware = e;
        }
        getTransactionMiddleware() {
          return this.transactionMiddleware;
        }
        getProtocolVersion() {
          return dm(this, void 0, void 0, function* () {
            return (function (e) {
              return lX(this, void 0, void 0, function* () {
                return e.send({ method: "eth_protocolVersion", params: [] });
              });
            })(this.requestManager);
          });
        }
        isSyncing() {
          return dm(this, void 0, void 0, function* () {
            return l0(this.requestManager);
          });
        }
        getCoinbase() {
          return dm(this, void 0, void 0, function* () {
            return (function (e) {
              return lX(this, void 0, void 0, function* () {
                return e.send({ method: "eth_coinbase", params: [] });
              });
            })(this.requestManager);
          });
        }
        isMining() {
          return dm(this, void 0, void 0, function* () {
            return (function (e) {
              return lX(this, void 0, void 0, function* () {
                return e.send({ method: "eth_mining", params: [] });
              });
            })(this.requestManager);
          });
        }
        getHashrate(e) {
          return dm(this, void 0, void 0, function* () {
            var t;
            return (
              void 0 === e &&
                (e =
                  null !== (t = this.defaultReturnFormat) && void 0 !== t
                    ? t
                    : K),
              this.getHashRate(e)
            );
          });
        }
        getHashRate() {
          return dm(
            this,
            arguments,
            void 0,
            function* (e = this.defaultReturnFormat) {
              return (function (e, t) {
                return c3(this, void 0, void 0, function* () {
                  return o_(
                    { format: "uint" },
                    yield (function (e) {
                      return lX(this, void 0, void 0, function* () {
                        return e.send({ method: "eth_hashrate", params: [] });
                      });
                    })(e.requestManager),
                    null != t ? t : e.defaultReturnFormat
                  );
                });
              })(this, e);
            }
          );
        }
        getGasPrice() {
          return dm(
            this,
            arguments,
            void 0,
            function* (e = this.defaultReturnFormat) {
              return c9(this, e);
            }
          );
        }
        getMaxPriorityFeePerGas() {
          return dm(
            this,
            arguments,
            void 0,
            function* (e = this.defaultReturnFormat) {
              return (function (e, t) {
                return c3(this, void 0, void 0, function* () {
                  return o_(
                    { format: "uint" },
                    yield (function (e) {
                      return lX(this, void 0, void 0, function* () {
                        return e.send({
                          method: "eth_maxPriorityFeePerGas",
                          params: [],
                        });
                      });
                    })(e.requestManager),
                    null != t ? t : e.defaultReturnFormat
                  );
                });
              })(this, e);
            }
          );
        }
        calculateFeeData() {
          return dm(
            this,
            arguments,
            void 0,
            function* (e = BigInt(2), t = iF.Gwei) {
              var r;
              let n, i, o;
              let a = yield this.getBlock(void 0, !1),
                s =
                  null !== (r = null == a ? void 0 : a.baseFeePerGas) &&
                  void 0 !== r
                    ? r
                    : void 0;
              try {
                n = yield this.getGasPrice();
              } catch (e) {}
              try {
                i = yield this.getMaxPriorityFeePerGas();
              } catch (e) {}
              return (
                s &&
                  ((i = null != i ? i : t),
                  (o =
                    s *
                      ("number" == typeof e
                        ? BigInt(Math.floor(1e3 * e)) / BigInt(1e3)
                        : e) +
                    i)),
                {
                  gasPrice: n,
                  maxFeePerGas: o,
                  maxPriorityFeePerGas: i,
                  baseFeePerGas: s,
                }
              );
            }
          );
        }
        getAccounts() {
          return dm(this, void 0, void 0, function* () {
            var e;
            return (
              null !==
                (e = yield (function (e) {
                  return lX(this, void 0, void 0, function* () {
                    return e.send({ method: "eth_accounts", params: [] });
                  });
                })(this.requestManager)) && void 0 !== e
                ? e
                : []
            ).map((e) => oe(e));
          });
        }
        getBlockNumber() {
          return dm(
            this,
            arguments,
            void 0,
            function* (e = this.defaultReturnFormat) {
              return c7(this, e);
            }
          );
        }
        getBalance(e) {
          return dm(
            this,
            arguments,
            void 0,
            function* (e, t = this.defaultBlock, r = this.defaultReturnFormat) {
              return (function (e, t) {
                return c3(
                  this,
                  arguments,
                  void 0,
                  function* (e, t, r = e.defaultBlock, n) {
                    let i = iw(r) ? r : o_({ format: "uint" }, r, Q);
                    return o_(
                      { format: "uint" },
                      yield (function (e, t, r) {
                        return lX(this, void 0, void 0, function* () {
                          return (
                            iR.validate(
                              ["address", "blockNumberOrTag"],
                              [t, r]
                            ),
                            e.send({ method: "eth_getBalance", params: [t, r] })
                          );
                        });
                      })(e.requestManager, t, i),
                      null != n ? n : e.defaultReturnFormat
                    );
                  }
                );
              })(this, e, t, r);
            }
          );
        }
        getStorageAt(e, t) {
          return dm(
            this,
            arguments,
            void 0,
            function* (
              e,
              t,
              r = this.defaultBlock,
              n = this.defaultReturnFormat
            ) {
              return (function (e, t, r) {
                return c3(
                  this,
                  arguments,
                  void 0,
                  function* (e, t, r, n = e.defaultBlock, i) {
                    let o = o_({ format: "uint" }, r, Q),
                      a = iw(n) ? n : o_({ format: "uint" }, n, Q);
                    return o_(
                      { format: "bytes" },
                      yield (function (e, t, r, n) {
                        return lX(this, void 0, void 0, function* () {
                          return (
                            iR.validate(
                              ["address", "hex", "blockNumberOrTag"],
                              [t, r, n]
                            ),
                            e.send({
                              method: "eth_getStorageAt",
                              params: [t, r, n],
                            })
                          );
                        });
                      })(e.requestManager, t, o, a),
                      null != i ? i : e.defaultReturnFormat
                    );
                  }
                );
              })(this, e, t, r, n);
            }
          );
        }
        getCode(e) {
          return dm(
            this,
            arguments,
            void 0,
            function* (e, t = this.defaultBlock, r = this.defaultReturnFormat) {
              return (function (e, t) {
                return c3(
                  this,
                  arguments,
                  void 0,
                  function* (e, t, r = e.defaultBlock, n) {
                    let i = iw(r) ? r : o_({ format: "uint" }, r, Q);
                    return o_(
                      { format: "bytes" },
                      yield (function (e, t, r) {
                        return lX(this, void 0, void 0, function* () {
                          return (
                            iR.validate(
                              ["address", "blockNumberOrTag"],
                              [t, r]
                            ),
                            e.send({ method: "eth_getCode", params: [t, r] })
                          );
                        });
                      })(e.requestManager, t, i),
                      null != n ? n : e.defaultReturnFormat
                    );
                  }
                );
              })(this, e, t, r);
            }
          );
        }
        getBlock() {
          return dm(
            this,
            arguments,
            void 0,
            function* (
              e = this.defaultBlock,
              t = !1,
              r = this.defaultReturnFormat
            ) {
              return de(this, e, t, r);
            }
          );
        }
        getBlockTransactionCount() {
          return dm(
            this,
            arguments,
            void 0,
            function* (e = this.defaultBlock, t = this.defaultReturnFormat) {
              return (function (e) {
                return c3(
                  this,
                  arguments,
                  void 0,
                  function* (e, t = e.defaultBlock, r) {
                    let n;
                    if (id(t)) {
                      let r = o_({ format: "bytes32" }, t, Q);
                      n = yield (function (e, t) {
                        return lX(this, void 0, void 0, function* () {
                          return (
                            iR.validate(["bytes32"], [t]),
                            e.send({
                              method: "eth_getBlockTransactionCountByHash",
                              params: [t],
                            })
                          );
                        });
                      })(e.requestManager, r);
                    } else {
                      let r = iw(t) ? t : o_({ format: "uint" }, t, Q);
                      n = yield (function (e, t) {
                        return lX(this, void 0, void 0, function* () {
                          return (
                            iR.validate(["blockNumberOrTag"], [t]),
                            e.send({
                              method: "eth_getBlockTransactionCountByNumber",
                              params: [t],
                            })
                          );
                        });
                      })(e.requestManager, r);
                    }
                    return o_(
                      { format: "uint" },
                      n,
                      null != r ? r : e.defaultReturnFormat
                    );
                  }
                );
              })(this, e, t);
            }
          );
        }
        getBlockUncleCount() {
          return dm(
            this,
            arguments,
            void 0,
            function* (e = this.defaultBlock, t = this.defaultReturnFormat) {
              return (function (e) {
                return c3(
                  this,
                  arguments,
                  void 0,
                  function* (e, t = e.defaultBlock, r) {
                    let n;
                    if (id(t)) {
                      let r = o_({ format: "bytes32" }, t, Q);
                      n = yield (function (e, t) {
                        return lX(this, void 0, void 0, function* () {
                          return (
                            iR.validate(["bytes32"], [t]),
                            e.send({
                              method: "eth_getUncleCountByBlockHash",
                              params: [t],
                            })
                          );
                        });
                      })(e.requestManager, r);
                    } else {
                      let r = iw(t) ? t : o_({ format: "uint" }, t, Q);
                      n = yield (function (e, t) {
                        return lX(this, void 0, void 0, function* () {
                          return (
                            iR.validate(["blockNumberOrTag"], [t]),
                            e.send({
                              method: "eth_getUncleCountByBlockNumber",
                              params: [t],
                            })
                          );
                        });
                      })(e.requestManager, r);
                    }
                    return o_(
                      { format: "uint" },
                      n,
                      null != r ? r : e.defaultReturnFormat
                    );
                  }
                );
              })(this, e, t);
            }
          );
        }
        getUncle() {
          return dm(
            this,
            arguments,
            void 0,
            function* (e = this.defaultBlock, t, r = this.defaultReturnFormat) {
              return (function (e) {
                return c3(
                  this,
                  arguments,
                  void 0,
                  function* (e, t = e.defaultBlock, r, n) {
                    let i;
                    let o = o_({ format: "uint" }, r, Q);
                    if (id(t)) {
                      let r = o_({ format: "bytes32" }, t, Q);
                      i = yield (function (e, t, r) {
                        return lX(this, void 0, void 0, function* () {
                          return (
                            iR.validate(["bytes32", "hex"], [t, r]),
                            e.send({
                              method: "eth_getUncleByBlockHashAndIndex",
                              params: [t, r],
                            })
                          );
                        });
                      })(e.requestManager, r, o);
                    } else {
                      let r = iw(t) ? t : o_({ format: "uint" }, t, Q);
                      i = yield (function (e, t, r) {
                        return lX(this, void 0, void 0, function* () {
                          return (
                            iR.validate(["blockNumberOrTag", "hex"], [t, r]),
                            e.send({
                              method: "eth_getUncleByBlockNumberAndIndex",
                              params: [t, r],
                            })
                          );
                        });
                      })(e.requestManager, r, o);
                    }
                    return o_(ub, i, null != n ? n : e.defaultReturnFormat);
                  }
                );
              })(this, e, t, r);
            }
          );
        }
        getTransaction(e) {
          return dm(
            this,
            arguments,
            void 0,
            function* (e, t = this.defaultReturnFormat) {
              let r = yield (function (e, t) {
                return c3(
                  this,
                  arguments,
                  void 0,
                  function* (e, t, r = e.defaultReturnFormat) {
                    let n = o_({ format: "bytes32" }, t, K),
                      i = yield (function (e, t) {
                        return lX(this, void 0, void 0, function* () {
                          return (
                            iR.validate(["bytes32"], [t]),
                            e.send({
                              method: "eth_getTransactionByHash",
                              params: [t],
                            })
                          );
                        });
                      })(e.requestManager, n);
                    return iI(i)
                      ? i
                      : uS(i, r, {
                          transactionSchema: e.config.customTransactionSchema,
                          fillInputAndData: !0,
                        });
                  }
                );
              })(this, e, t);
              if (!r) throw new ez();
              return r;
            }
          );
        }
        getPendingTransactions() {
          return dm(
            this,
            arguments,
            void 0,
            function* (e = this.defaultReturnFormat) {
              return (function (e, t) {
                return c3(this, void 0, void 0, function* () {
                  return (yield (function (e) {
                    return lX(this, void 0, void 0, function* () {
                      return e.send({
                        method: "eth_pendingTransactions",
                        params: [],
                      });
                    });
                  })(e.requestManager)).map((r) =>
                    uS(r, null != t ? t : e.defaultReturnFormat, {
                      transactionSchema: e.config.customTransactionSchema,
                      fillInputAndData: !0,
                    })
                  );
                });
              })(this, e);
            }
          );
        }
        getTransactionFromBlock() {
          return dm(
            this,
            arguments,
            void 0,
            function* (e = this.defaultBlock, t, r = this.defaultReturnFormat) {
              return (function (e) {
                return c3(
                  this,
                  arguments,
                  void 0,
                  function* (e, t = e.defaultBlock, r, n) {
                    let i;
                    let o = o_({ format: "uint" }, r, Q);
                    if (id(t)) {
                      let r = o_({ format: "bytes32" }, t, Q);
                      i = yield (function (e, t, r) {
                        return lX(this, void 0, void 0, function* () {
                          return (
                            iR.validate(["bytes32", "hex"], [t, r]),
                            e.send({
                              method: "eth_getTransactionByBlockHashAndIndex",
                              params: [t, r],
                            })
                          );
                        });
                      })(e.requestManager, r, o);
                    } else {
                      let r = iw(t) ? t : o_({ format: "uint" }, t, Q);
                      i = yield (function (e, t, r) {
                        return lX(this, void 0, void 0, function* () {
                          return (
                            iR.validate(["blockNumberOrTag", "hex"], [t, r]),
                            e.send({
                              method: "eth_getTransactionByBlockNumberAndIndex",
                              params: [t, r],
                            })
                          );
                        });
                      })(e.requestManager, r, o);
                    }
                    return iI(i)
                      ? i
                      : uS(i, null != n ? n : e.defaultReturnFormat, {
                          transactionSchema: e.config.customTransactionSchema,
                          fillInputAndData: !0,
                        });
                  }
                );
              })(this, e, t, r);
            }
          );
        }
        getTransactionReceipt(e) {
          return dm(
            this,
            arguments,
            void 0,
            function* (e, t = this.defaultReturnFormat) {
              let r = yield dt(this, e, t);
              if (!r) throw new ez();
              return r;
            }
          );
        }
        getTransactionCount(e) {
          return dm(
            this,
            arguments,
            void 0,
            function* (e, t = this.defaultBlock, r = this.defaultReturnFormat) {
              return dr(this, e, t, r);
            }
          );
        }
        sendTransaction(e, t = this.defaultReturnFormat, r) {
          return dn(this, e, t, r, this.transactionMiddleware);
        }
        sendSignedTransaction(e, t = this.defaultReturnFormat, r) {
          return (function (e, t, r, n = { checkRevertBeforeSending: !0 }) {
            let i = new lY((o, a) => {
              setImmediate(() => {
                c3(this, void 0, void 0, function* () {
                  let s = new c5({
                      web3Context: e,
                      promiEvent: i,
                      options: n,
                      returnFormat: r,
                    }),
                    l = o_({ format: "bytes" }, t, Q),
                    u = lB.fromSerializedData(iD(i$(l))),
                    c = Object.assign(Object.assign({}, u.toJSON()), {
                      from: u.getSenderAddress().toString(),
                    });
                  try {
                    let { v: t, r: n, s: i } = c,
                      a = c8(c, ["v", "r", "s"]);
                    yield s.checkRevertBeforeSending(a), s.emitSending(l);
                    let u = yield uq(e, () =>
                      c3(this, void 0, void 0, function* () {
                        return l1(e.requestManager, l);
                      })
                    );
                    s.emitSent(l);
                    let d = o_(
                      { format: "bytes32" },
                      u,
                      null != r ? r : e.defaultReturnFormat
                    );
                    s.emitTransactionHash(d);
                    let f = yield uV(
                        e,
                        u,
                        null != r ? r : e.defaultReturnFormat
                      ),
                      h = s.getReceiptWithEvents(
                        o_(uA, f, null != r ? r : e.defaultReturnFormat)
                      );
                    s.emitReceipt(h),
                      o(yield s.handleResolve({ receipt: h, tx: c })),
                      s.emitConfirmation({ receipt: h, transactionHash: u });
                  } catch (e) {
                    a(yield s.handleError({ error: e, tx: c }));
                  }
                });
              });
            });
            return i;
          })(this, e, t, r);
        }
        sign(e, t) {
          return dm(
            this,
            arguments,
            void 0,
            function* (e, t, r = this.defaultReturnFormat) {
              return (function (e, t, r) {
                return c3(
                  this,
                  arguments,
                  void 0,
                  function* (e, t, r, n = e.defaultReturnFormat) {
                    var i;
                    let o = o_({ format: "bytes" }, t, K);
                    if (
                      null === (i = e.wallet) || void 0 === i
                        ? void 0
                        : i.get(r)
                    )
                      return o_(uE, e.wallet.get(r).sign(o), n);
                    if ("number" == typeof r)
                      throw new eF(
                        t,
                        'RPC method "eth_sign" does not support index signatures'
                      );
                    return o_(
                      { format: "bytes" },
                      yield (function (e, t, r) {
                        return lX(this, void 0, void 0, function* () {
                          return (
                            iR.validate(["address", "hex"], [t, r]),
                            e.send({ method: "eth_sign", params: [t, r] })
                          );
                        });
                      })(e.requestManager, r, o),
                      n
                    );
                  }
                );
              })(this, e, t, r);
            }
          );
        }
        signTransaction(e) {
          return dm(
            this,
            arguments,
            void 0,
            function* (e, t = this.defaultReturnFormat) {
              return (function (e, t) {
                return c3(
                  this,
                  arguments,
                  void 0,
                  function* (e, t, r = e.defaultReturnFormat) {
                    let n = yield (function (e, t) {
                      return lX(this, void 0, void 0, function* () {
                        return e.send({
                          method: "eth_signTransaction",
                          params: [t],
                        });
                      });
                    })(
                      e.requestManager,
                      uS(t, Q, {
                        transactionSchema: e.config.customTransactionSchema,
                      })
                    );
                    return nJ(n)
                      ? (function (e, t, r = { fillInputAndData: !1 }) {
                          return {
                            raw: o_({ format: "bytes" }, e, t),
                            tx: uS(
                              Object.assign(
                                Object.assign(
                                  {},
                                  lB.fromSerializedData(i$(e)).toJSON()
                                ),
                                { hash: iH(oR(i$(e))), type: uc(i$(e)) }
                              ),
                              t,
                              {
                                fillInputAndData: r.fillInputAndData,
                                transactionSchema: r.transactionSchema,
                              }
                            ),
                          };
                        })(n, r, { fillInputAndData: !0 })
                      : {
                          raw: o_({ format: "bytes" }, n.raw, r),
                          tx: uS(n.tx, r, {
                            transactionSchema: e.config.customTransactionSchema,
                            fillInputAndData: !0,
                          }),
                        };
                  }
                );
              })(this, e, t);
            }
          );
        }
        call(e) {
          return dm(
            this,
            arguments,
            void 0,
            function* (e, t = this.defaultBlock, r = this.defaultReturnFormat) {
              return di(this, e, t, r);
            }
          );
        }
        estimateGas(e) {
          return dm(
            this,
            arguments,
            void 0,
            function* (e, t = this.defaultBlock, r = this.defaultReturnFormat) {
              return da(this, e, t, r);
            }
          );
        }
        getPastLogs(e) {
          return dm(
            this,
            arguments,
            void 0,
            function* (e, t = this.defaultReturnFormat) {
              return ds(this, e, t);
            }
          );
        }
        getWork() {
          return dm(this, void 0, void 0, function* () {
            return (function (e) {
              return lX(this, void 0, void 0, function* () {
                return e.send({ method: "eth_getWork", params: [] });
              });
            })(this.requestManager);
          });
        }
        submitWork(e, t, r) {
          return dm(this, void 0, void 0, function* () {
            return (function (e, t, r, n) {
              return lX(this, void 0, void 0, function* () {
                return (
                  iR.validate(["bytes8", "bytes32", "bytes32"], [t, r, n]),
                  e.send({ method: "eth_submitWork", params: [t, r, n] })
                );
              });
            })(this.requestManager, e, t, r);
          });
        }
        requestAccounts() {
          return dm(this, void 0, void 0, function* () {
            return (function (e) {
              return lX(this, void 0, void 0, function* () {
                return e.send({ method: "eth_requestAccounts", params: [] });
              });
            })(this.requestManager);
          });
        }
        getChainId() {
          return dm(
            this,
            arguments,
            void 0,
            function* (e = this.defaultReturnFormat) {
              return dl(this, e);
            }
          );
        }
        getNodeInfo() {
          return dm(this, void 0, void 0, function* () {
            return (function (e) {
              return lX(this, void 0, void 0, function* () {
                return e.send({ method: "web3_clientVersion", params: [] });
              });
            })(this.requestManager);
          });
        }
        getProof(e, t) {
          return dm(
            this,
            arguments,
            void 0,
            function* (
              e,
              t,
              r = this.defaultBlock,
              n = this.defaultReturnFormat
            ) {
              return (function (e, t, r) {
                return c3(
                  this,
                  arguments,
                  void 0,
                  function* (e, t, r, n = e.defaultBlock, i) {
                    let o = r.map((e) => o_({ format: "bytes" }, e, Q)),
                      a = iw(n) ? n : o_({ format: "uint" }, n, Q);
                    return o_(
                      uI,
                      yield (function (e, t, r, n) {
                        return lX(this, void 0, void 0, function* () {
                          return (
                            iR.validate(
                              ["address", "bytes32[]", "blockNumberOrTag"],
                              [t, r, n]
                            ),
                            e.send({
                              method: "eth_getProof",
                              params: [t, r, n],
                            })
                          );
                        });
                      })(e.requestManager, t, o, a),
                      null != i ? i : e.defaultReturnFormat
                    );
                  }
                );
              })(this, e, t, r, n);
            }
          );
        }
        getFeeHistory(e) {
          return dm(
            this,
            arguments,
            void 0,
            function* (
              e,
              t = this.defaultBlock,
              r,
              n = this.defaultReturnFormat
            ) {
              return (function (e, t) {
                return c3(
                  this,
                  arguments,
                  void 0,
                  function* (e, t, r = e.defaultBlock, n, i) {
                    let o = o_({ format: "uint" }, t, Q),
                      a = iw(r) ? r : o_({ format: "uint" }, r, Q),
                      s = o_(
                        { type: "array", items: { format: "uint" } },
                        n,
                        uN
                      );
                    return o_(
                      uk,
                      yield (function (e, t, r, n) {
                        return lX(this, void 0, void 0, function* () {
                          for (let e of (iR.validate(
                            ["hex", "blockNumberOrTag"],
                            [t, r]
                          ),
                          n))
                            iR.validate(["number"], [e]);
                          return e.send({
                            method: "eth_feeHistory",
                            params: [t, r, n],
                          });
                        });
                      })(e.requestManager, o, a, s),
                      null != i ? i : e.defaultReturnFormat
                    );
                  }
                );
              })(this, e, t, r, n);
            }
          );
        }
        createAccessList(e) {
          return dm(
            this,
            arguments,
            void 0,
            function* (e, t = this.defaultBlock, r = this.defaultReturnFormat) {
              return du(this, e, t, r);
            }
          );
        }
        signTypedData(e, t, r, n) {
          return dm(this, void 0, void 0, function* () {
            var i;
            return (
              void 0 === r && (r = !1),
              void 0 === n &&
                (n =
                  null !== (i = this.defaultReturnFormat) && void 0 !== i
                    ? i
                    : K),
              (function (e, t, r, n, i) {
                return c3(this, void 0, void 0, function* () {
                  return o_(
                    { format: "bytes" },
                    yield (function (e, t, r, n = !1) {
                      return lX(this, void 0, void 0, function* () {
                        return (
                          iR.validate(["address"], [t]),
                          e.send({
                            method: `eth_signTypedData${n ? "" : "_v4"}`,
                            params: [t, r],
                          })
                        );
                      });
                    })(e.requestManager, t, r, n),
                    null != i ? i : e.defaultReturnFormat
                  );
                });
              })(this, e, t, r, n)
            );
          });
        }
        subscribe(e, t, r) {
          return dm(this, void 0, void 0, function* () {
            var n, i;
            void 0 === r &&
              (r =
                null !== (n = this.defaultReturnFormat) && void 0 !== n
                  ? n
                  : K);
            let o = yield null === (i = this.subscriptionManager) ||
            void 0 === i
              ? void 0
              : i.subscribe(e, t, r);
            return (
              o instanceof dd &&
                "logs" === e &&
                "object" == typeof t &&
                !og(t.fromBlock) &&
                Number.isFinite(Number(t.fromBlock)) &&
                setImmediate(() => {
                  this.getPastLogs(t)
                    .then((e) => {
                      for (let t of e) o._processSubscriptionResult(t);
                    })
                    .catch((e) => {
                      o._processSubscriptionError(e);
                    });
                }),
              o
            );
          });
        }
        static shouldClearSubscription({ sub: e }) {
          return !(e instanceof dp);
        }
        clearSubscriptions(e = !1) {
          var t;
          return null === (t = this.subscriptionManager) || void 0 === t
            ? void 0
            : t.unsubscribe(e ? dy.shouldClearSubscription : void 0);
        }
        createNewPendingTransactionFilter() {
          return dm(
            this,
            arguments,
            void 0,
            function* (e = this.defaultReturnFormat) {
              return (function (e, t) {
                return dc(this, void 0, void 0, function* () {
                  return o_(
                    { format: "uint" },
                    yield (function (e) {
                      return lX(this, void 0, void 0, function* () {
                        return e.send({
                          method: "eth_newPendingTransactionFilter",
                          params: [],
                        });
                      });
                    })(e.requestManager),
                    null != t ? t : e.defaultReturnFormat
                  );
                });
              })(this, e);
            }
          );
        }
        createNewFilter(e) {
          return dm(
            this,
            arguments,
            void 0,
            function* (e, t = this.defaultReturnFormat) {
              return (function (e, t, r) {
                return dc(this, void 0, void 0, function* () {
                  let { toBlock: n, fromBlock: i } = t;
                  iI(n) ||
                    ("number" != typeof n && "bigint" != typeof n) ||
                    (n = iq(n)),
                    iI(i) ||
                      ("number" != typeof i && "bigint" != typeof i) ||
                      (i = iq(i));
                  let o = Object.assign(Object.assign({}, t), {
                    fromBlock: i,
                    toBlock: n,
                  });
                  return o_(
                    { format: "uint" },
                    yield (function (e, t) {
                      return lX(this, void 0, void 0, function* () {
                        return (
                          iR.validate(["filter"], [t]),
                          e.send({ method: "eth_newFilter", params: [t] })
                        );
                      });
                    })(e.requestManager, o),
                    null != r ? r : e.defaultReturnFormat
                  );
                });
              })(this, e, t);
            }
          );
        }
        createNewBlockFilter() {
          return dm(
            this,
            arguments,
            void 0,
            function* (e = this.defaultReturnFormat) {
              return (function (e, t) {
                return dc(this, void 0, void 0, function* () {
                  return o_(
                    { format: "uint" },
                    yield (function (e) {
                      return lX(this, void 0, void 0, function* () {
                        return e.send({
                          method: "eth_newBlockFilter",
                          params: [],
                        });
                      });
                    })(e.requestManager),
                    null != t ? t : e.defaultReturnFormat
                  );
                });
              })(this, e);
            }
          );
        }
        uninstallFilter(e) {
          return dm(this, void 0, void 0, function* () {
            return (function (e, t) {
              return dc(this, void 0, void 0, function* () {
                return yield (function (e, t) {
                  return lX(this, void 0, void 0, function* () {
                    return (
                      iR.validate(["hex"], [t]),
                      e.send({ method: "eth_uninstallFilter", params: [t] })
                    );
                  });
                })(e.requestManager, iq(t));
              });
            })(this, e);
          });
        }
        getFilterChanges(e) {
          return dm(
            this,
            arguments,
            void 0,
            function* (e, t = this.defaultReturnFormat) {
              return (function (e, t, r) {
                return dc(this, void 0, void 0, function* () {
                  return (yield (function (e, t) {
                    return lX(this, void 0, void 0, function* () {
                      return (
                        iR.validate(["hex"], [t]),
                        e.send({ method: "eth_getFilterChanges", params: [t] })
                      );
                    });
                  })(e.requestManager, iq(t))).map((t) =>
                    "string" == typeof t
                      ? t
                      : o_(uw, t, null != r ? r : e.defaultReturnFormat)
                  );
                });
              })(this, e, t);
            }
          );
        }
        getFilterLogs(e) {
          return dm(
            this,
            arguments,
            void 0,
            function* (e, t = this.defaultReturnFormat) {
              return (function (e, t, r) {
                return dc(this, void 0, void 0, function* () {
                  return (yield (function (e, t) {
                    return lX(this, void 0, void 0, function* () {
                      return (
                        iR.validate(["hex"], [t]),
                        e.send({ method: "eth_getFilterLogs", params: [t] })
                      );
                    });
                  })(e.requestManager, iq(t))).map((t) =>
                    "string" == typeof t
                      ? t
                      : o_(uw, t, null != r ? r : e.defaultReturnFormat)
                  );
                });
              })(this, e, t);
            }
          );
        }
      }
      let db = (e) => {
          if (!iI(e.common)) {
            if (iI(e.common.customChain)) throw new eW();
            if (iI(e.common.customChain.chainId)) throw new eV();
            if (!iI(e.chainId) && e.chainId !== e.common.customChain.chainId)
              throw new eZ({
                txChainId: e.chainId,
                customChainId: e.common.customChain.chainId,
              });
          }
        },
        dv = (e) => {
          if (!iI(e.common) && !iI(e.chain) && !iI(e.hardfork)) throw new eJ();
          if (
            (!iI(e.chain) && iI(e.hardfork)) ||
            (!iI(e.hardfork) && iI(e.chain))
          )
            throw new eY({ chain: e.chain, hardfork: e.hardfork });
        },
        dw = (e) => {
          if (
            !iI(e.common) &&
            !iI(e.common.baseChain) &&
            !iI(e.chain) &&
            e.chain !== e.common.baseChain
          )
            throw new eK({ txChain: e.chain, baseChain: e.common.baseChain });
        },
        dx = (e) => {
          if (
            !iI(e.common) &&
            !iI(e.common.hardfork) &&
            !iI(e.hardfork) &&
            e.hardfork !== e.common.hardfork
          )
            throw new eQ({
              txHardfork: e.hardfork,
              commonHardfork: e.common.hardfork,
            });
        },
        dA = (e) => {
          if (iI(e.gas) || !ig(e.gas) || iI(e.gasPrice) || !ig(e.gasPrice))
            throw new e6({ gas: e.gas, gasPrice: e.gasPrice });
          if (!iI(e.maxFeePerGas) || !iI(e.maxPriorityFeePerGas))
            throw new e8({
              maxFeePerGas: e.maxFeePerGas,
              maxPriorityFeePerGas: e.maxPriorityFeePerGas,
            });
        },
        dE = (e) => {
          if (!iI(e.gasPrice) && "0x2" === e.type) throw new e3(e.gasPrice);
          if ("0x0" === e.type || "0x1" === e.type)
            throw new e8({
              maxFeePerGas: e.maxFeePerGas,
              maxPriorityFeePerGas: e.maxPriorityFeePerGas,
            });
          if (
            iI(e.maxFeePerGas) ||
            !ig(e.maxFeePerGas) ||
            iI(e.maxPriorityFeePerGas) ||
            !ig(e.maxPriorityFeePerGas)
          )
            throw new e5({
              maxPriorityFeePerGas: e.maxPriorityFeePerGas,
              maxFeePerGas: e.maxFeePerGas,
            });
        },
        dk = (e) => {
          let t = !iI(e.gas) || !iI(e.gasLimit),
            r = t && !iI(e.gasPrice),
            n = t && !iI(e.maxPriorityFeePerGas) && !iI(e.maxFeePerGas);
          if (!r && !n)
            throw new e0({
              gas: e.gas,
              gasPrice: e.gasPrice,
              maxPriorityFeePerGas: e.maxPriorityFeePerGas,
              maxFeePerGas: e.maxFeePerGas,
            });
          if (r && n)
            throw new e2({
              gas: e.gas,
              gasPrice: e.gasPrice,
              maxPriorityFeePerGas: e.maxPriorityFeePerGas,
              maxFeePerGas: e.maxFeePerGas,
            });
          (r ? dA : dE)(e), (!iI(e.type) && e.type > "0x1" ? dE : dA)(e);
        },
        dI = (e, t, r = { transactionSchema: void 0 }) => {
          if (!iI(t)) {
            t(e);
            return;
          }
          if ("object" != typeof e || iI(e)) throw new e4(e);
          db(e), dv(e), dw(e), dx(e);
          let n = uS(e, Q, { transactionSchema: r.transactionSchema });
          if (
            (dk(n),
            iI(n.nonce) ||
              iI(n.chainId) ||
              n.nonce.startsWith("-") ||
              n.chainId.startsWith("-"))
          )
            throw new e9({ nonce: e.nonce, chainId: e.chainId });
        },
        dS = (e) => {
          var t, r;
          return Object.assign(Object.assign({}, e), {
            nonce: e.nonce,
            gasPrice: e.gasPrice,
            gasLimit: null !== (t = e.gasLimit) && void 0 !== t ? t : e.gas,
            to: e.to,
            value: e.value,
            data: null !== (r = e.data) && void 0 !== r ? r : e.input,
            type: e.type,
            chainId: e.chainId,
            accessList: e.accessList,
            maxPriorityFeePerGas: e.maxPriorityFeePerGas,
            maxFeePerGas: e.maxFeePerGas,
          });
        },
        dP = (e, t) => {
          var r, n, i, o, a, s, l, u, c, d, f, h, p, m, g, y, b, v;
          let w;
          if ((iI(e.chain) || iI(e.hardfork)) && iI(e.common))
            t.defaultCommon
              ? (iI((w = Object.assign({}, t.defaultCommon)).hardfork) &&
                  (w.hardfork =
                    null !== (r = e.hardfork) && void 0 !== r
                      ? r
                      : t.defaultHardfork),
                iI(w.baseChain) && (w.baseChain = t.defaultChain))
              : (w = ly.custom(
                  {
                    name: "custom-network",
                    chainId: i8(e.chainId),
                    networkId: iI(e.networkId) ? void 0 : i8(e.networkId),
                    defaultHardfork:
                      null !== (n = e.hardfork) && void 0 !== n
                        ? n
                        : t.defaultHardfork,
                  },
                  { baseChain: t.defaultChain }
                ));
          else {
            let r =
                null !==
                  (s =
                    null !==
                      (a =
                        null ===
                          (o =
                            null === (i = null == e ? void 0 : e.common) ||
                            void 0 === i
                              ? void 0
                              : i.customChain) || void 0 === o
                          ? void 0
                          : o.name) && void 0 !== a
                      ? a
                      : e.chain) && void 0 !== s
                  ? s
                  : "custom-network",
              n = i8(
                null !==
                  (c =
                    null ===
                      (u =
                        null === (l = null == e ? void 0 : e.common) ||
                        void 0 === l
                          ? void 0
                          : l.customChain) || void 0 === u
                      ? void 0
                      : u.chainId) && void 0 !== c
                  ? c
                  : null == e
                  ? void 0
                  : e.chainId
              ),
              x = i8(
                null !==
                  (h =
                    null ===
                      (f =
                        null === (d = null == e ? void 0 : e.common) ||
                        void 0 === d
                          ? void 0
                          : d.customChain) || void 0 === f
                      ? void 0
                      : f.networkId) && void 0 !== h
                  ? h
                  : null == e
                  ? void 0
                  : e.networkId
              ),
              A =
                null !==
                  (g =
                    null !==
                      (m =
                        null === (p = null == e ? void 0 : e.common) ||
                        void 0 === p
                          ? void 0
                          : p.hardfork) && void 0 !== m
                      ? m
                      : null == e
                      ? void 0
                      : e.hardfork) && void 0 !== g
                  ? g
                  : t.defaultHardfork,
              E =
                null !==
                  (v =
                    null !==
                      (b =
                        null === (y = e.common) || void 0 === y
                          ? void 0
                          : y.baseChain) && void 0 !== b
                      ? b
                      : e.chain) && void 0 !== v
                  ? v
                  : t.defaultChain;
            n &&
              x &&
              r &&
              (w = ly.custom(
                { name: r, chainId: n, networkId: x, defaultHardfork: A },
                { baseChain: E }
              ));
          }
          return { common: w };
        },
        dT = (e, t, r, ...n) =>
          (function (e, t, r, n) {
            return new (r || (r = Promise))(function (i, o) {
              function a(e) {
                try {
                  l(n.next(e));
                } catch (e) {
                  o(e);
                }
              }
              function s(e) {
                try {
                  l(n.throw(e));
                } catch (e) {
                  o(e);
                }
              }
              function l(e) {
                var t;
                e.done
                  ? i(e.value)
                  : ((t = e.value) instanceof r
                      ? t
                      : new r(function (e) {
                          e(t);
                        })
                    ).then(a, s);
              }
              l((n = n.apply(e, t || [])).next());
            });
          })(
            void 0,
            [e, t, r, ...n],
            void 0,
            function* (e, t, r, n = !1, i = !0) {
              let o = uS(
                yield uH({
                  transaction: e,
                  web3Context: t,
                  privateKey: r,
                  fillGasPrice: n,
                  fillGasLimit: i,
                }),
                Q,
                { transactionSchema: t.config.customTransactionSchema }
              );
              return (
                dI(o, void 0, {
                  transactionSchema: t.config.customTransactionSchema,
                }),
                lB.fromTxData(dS(o), dP(o, t))
              );
            }
          ),
        dC = ({ address: e }, t, r) => {
          var n, i;
          let o = null == r ? void 0 : r.topics,
            a =
              null !== (n = null == r ? void 0 : r.filter) && void 0 !== n
                ? n
                : {},
            s = {};
          if (
            (og(null == r ? void 0 : r.fromBlock) ||
              (s.fromBlock = o_(
                ub.properties.number,
                null == r ? void 0 : r.fromBlock,
                { number: x.HEX, bytes: A.HEX }
              )),
            og(null == r ? void 0 : r.toBlock) ||
              (s.toBlock = o_(
                ub.properties.number,
                null == r ? void 0 : r.toBlock,
                { number: x.HEX, bytes: A.HEX }
              )),
            o && Array.isArray(o))
          )
            s.topics = [...o];
          else if (
            ((s.topics = []),
            !t ||
              t.anonymous ||
              [uB, "allEvents"].includes(t.name) ||
              s.topics.push(
                null !== (i = t.signature) && void 0 !== i ? i : u4(u3(t))
              ),
            ![uB, "allEvents"].includes(t.name) && t.inputs)
          )
            for (let e of t.inputs) {
              if (!e.indexed) continue;
              let t = a[e.name];
              if (!t) {
                s.topics.push(null);
                continue;
              }
              Array.isArray(t)
                ? s.topics.push(t.map((t) => cN(e.type, t)))
                : "string" === e.type
                ? s.topics.push(oR(t))
                : s.topics.push(cN(e.type, t));
            }
          return (
            s.topics.length || delete s.topics,
            e && (s.address = e.toLowerCase()),
            s
          );
        },
        dO = (e, t, r) => {
          let n;
          let i = Array.isArray(e.inputs) ? e.inputs.length : 0;
          if (e.inputs && i !== t.length)
            throw new ev(
              `The number of arguments is not matching the methods required number. You need to pass ${i} arguments.`
            );
          if (
            ((n = e.inputs
              ? cR(Array.isArray(e.inputs) ? e.inputs : [], t).replace("0x", "")
              : (function (e) {
                  try {
                    let t = (function e(t) {
                      let r = [];
                      return (
                        t.forEach((t) => {
                          if (Array.isArray(t)) {
                            let n = e(t);
                            r.push({ type: "tuple", components: n, name: "" });
                          } else r.push({ type: i3(t, !0) });
                        }),
                        r
                      );
                    })(e);
                    return io(
                      c_({ type: "tuple", name: "", components: t }, e).encoded
                    );
                  } catch (t) {
                    throw new e_("Could not infer types from given params", {
                      params: e,
                    });
                  }
                })(t).replace("0x", "")),
            u0(e))
          ) {
            if (!r)
              throw new ev(
                "The contract has no contract data option set. This is necessary to append the constructor parameters."
              );
            return r.startsWith("0x") ? `${r}${n}` : `0x${r}${n}`;
          }
          return `${cL(e)}${n}`;
        };
      class d_ extends aR {
        constructor(e, t) {
          super(e, t),
            (this.address = e.address),
            (this.topics = e.topics),
            (this.abi = e.abi),
            (this.jsonInterface = e.jsonInterface);
        }
        _buildSubscriptionParams() {
          return ["logs", { address: this.address, topics: this.topics }];
        }
        formatSubscriptionResult(e) {
          return c2(this.abi, e, this.jsonInterface, super.returnFormat);
        }
      }
      Array.from({ length: 256 }, (e, t) => t.toString(16).padStart(2, "0"));
      let dB = (e, t, r, n) => {
          var i, o;
          let a = {};
          return (
            (og(e.data) && "both" !== n) ||
              (a.data = dO(
                t,
                r,
                null !== (i = e.data) && void 0 !== i ? i : e.input
              )),
            (og(e.input) && "both" !== n) ||
              (a.input = dO(
                t,
                r,
                null !== (o = e.input) && void 0 !== o ? o : e.data
              )),
            og(a.input) && og(a.data) && (a[n] = dO(t, r)),
            { data: a.data, input: a.input }
          );
        },
        dR = ({ abi: e, params: t, options: r, contractOptions: n }) => {
          var i, o, a;
          if (
            !(null !==
              (a =
                null !==
                  (o =
                    null !== (i = null == r ? void 0 : r.input) && void 0 !== i
                      ? i
                      : null == r
                      ? void 0
                      : r.data) && void 0 !== o
                  ? o
                  : n.input) && void 0 !== a
              ? a
              : n.data) &&
            !(null == r ? void 0 : r.to) &&
            !n.address
          )
            throw new ev("Contract address not specified");
          if (!(null == r ? void 0 : r.from) && !n.from)
            throw new ev('Contract "from" address not specified');
          let s = ob(
              {
                to: n.address,
                gas: n.gas,
                gasPrice: n.gasPrice,
                from: n.from,
                input: n.input,
                maxPriorityFeePerGas: n.maxPriorityFeePerGas,
                maxFeePerGas: n.maxFeePerGas,
                data: n.data,
              },
              r
            ),
            l = dB(s, e, t, null == r ? void 0 : r.dataInputFill);
          return Object.assign(Object.assign({}, s), {
            data: l.data,
            input: l.input,
          });
        },
        dN = ({ abi: e, params: t, options: r, contractOptions: n }) => {
          if (!(null == r ? void 0 : r.to) && !n.address)
            throw new ev("Contract address not specified");
          let i = ob(
              {
                to: n.address,
                gas: n.gas,
                gasPrice: n.gasPrice,
                from: n.from,
                input: n.input,
                maxPriorityFeePerGas: n.maxPriorityFeePerGas,
                maxFeePerGas: n.maxFeePerGas,
                data: n.data,
              },
              r
            ),
            o = dB(i, e, t, null == r ? void 0 : r.dataInputFill);
          return Object.assign(Object.assign({}, i), {
            data: o.data,
            input: o.input,
          });
        },
        dM = ({ abi: e, params: t, options: r, contractOptions: n }) => {
          let i = ob(
              {
                to: n.address,
                gas: n.gas,
                gasPrice: n.gasPrice,
                from: n.from,
                input: n.input,
                data: n.data,
              },
              r
            ),
            o = dB(i, e, t, null == r ? void 0 : r.dataInputFill);
          return Object.assign(Object.assign({}, i), {
            data: o.data,
            input: o.input,
          });
        },
        dj = (e) =>
          "object" == typeof e &&
          !og(e) &&
          0 !== Object.keys(e).length &&
          !om(e),
        dF = ({ abi: e, params: t, options: r, contractOptions: n }) => {
          if (!(null == r ? void 0 : r.to) && !n.address)
            throw new ev("Contract address not specified");
          if (!(null == r ? void 0 : r.from) && !n.from)
            throw new ev('Contract "from" address not specified');
          let i = ob(
              {
                to: n.address,
                gas: n.gas,
                gasPrice: n.gasPrice,
                from: n.from,
                input: n.input,
                maxPriorityFeePerGas: n.maxPriorityFeePerGas,
                maxFeePerGas: n.maxFeePerGas,
                data: n.data,
              },
              r
            ),
            o = dB(i, e, t, null == r ? void 0 : r.dataInputFill);
          return Object.assign(Object.assign({}, i), {
            data: o.data,
            input: o.input,
          });
        };
      class dL {
        _contractMethodDeploySend(e) {
          let t = {
            transactionResolver: (e) => {
              if (e.status === BigInt(0))
                throw new ev("code couldn't be stored", e);
              let t = this.parent.clone();
              return (t.options.address = e.contractAddress), t;
            },
            contractAbi: this.parent.options.jsonInterface,
            checkRevertBeforeSending: !1,
          };
          return iI(this.parent.getTransactionMiddleware())
            ? dn(this.parent, e, this.parent.defaultReturnFormat, t)
            : dn(
                this.parent,
                e,
                this.parent.defaultReturnFormat,
                t,
                this.parent.getTransactionMiddleware()
              );
        }
        constructor(e, t) {
          (this.parent = e), (this.deployOptions = t);
          let {
            args: r,
            abi: n,
            contractOptions: i,
            deployData: o,
          } = this.calculateDeployParams();
          (this.args = r),
            (this.constructorAbi = n),
            (this.contractOptions = i),
            (this.deployData = o);
        }
        send(e) {
          let t = Object.assign({}, e),
            r = this.populateTransaction(t);
          return this._contractMethodDeploySend(r);
        }
        populateTransaction(e) {
          var t, r;
          let n = Object.assign(Object.assign({}, this.contractOptions), {
              from:
                null !==
                  (r =
                    null !== (t = this.contractOptions.from) && void 0 !== t
                      ? t
                      : this.parent.defaultAccount) && void 0 !== r
                  ? r
                  : void 0,
            }),
            i = dR({
              abi: this.constructorAbi,
              params: this.args,
              options: Object.assign(Object.assign({}, e), {
                dataInputFill: this.parent.contractDataInputFill,
              }),
              contractOptions: n,
            });
          return i.dataInputFill && delete i.dataInputFill, i;
        }
        calculateDeployParams() {
          var e, t, r, n, i, o;
          let a = this.parent.options.jsonInterface.find(
            (e) => "constructor" === e.type
          );
          a || (a = { type: "constructor", stateMutability: "" });
          let s = o_(
              { format: "bytes" },
              null !==
                (t =
                  null === (e = this.deployOptions) || void 0 === e
                    ? void 0
                    : e.input) && void 0 !== t
                ? t
                : this.parent.options.input,
              K
            ),
            l = o_(
              { format: "bytes" },
              null !==
                (n =
                  null === (r = this.deployOptions) || void 0 === r
                    ? void 0
                    : r.data) && void 0 !== n
                ? n
                : this.parent.options.data,
              K
            );
          if ((!s || "0x" === s.trim()) && (!l || "0x" === l.trim()))
            throw new ev("contract creation without any data provided.");
          return {
            args:
              null !==
                (o =
                  null === (i = this.deployOptions) || void 0 === i
                    ? void 0
                    : i.arguments) && void 0 !== o
                ? o
                : [],
            abi: a,
            contractOptions: Object.assign(
              Object.assign({}, this.parent.options),
              { input: s, data: l }
            ),
            deployData: null != s ? s : l,
          };
        }
        estimateGas(e) {
          var t, r, n, i;
          return (
            (t = this),
            (r = arguments),
            (n = void 0),
            (i = function* (e, t = this.parent.defaultReturnFormat) {
              let r = Object.assign({}, e);
              return this.parent.contractMethodEstimateGas({
                abi: this.constructorAbi,
                params: this.args,
                returnFormat: t,
                options: r,
                contractOptions: this.contractOptions,
              });
            }),
            new (n || (n = Promise))(function (e, o) {
              function a(e) {
                try {
                  l(i.next(e));
                } catch (e) {
                  o(e);
                }
              }
              function s(e) {
                try {
                  l(i.throw(e));
                } catch (e) {
                  o(e);
                }
              }
              function l(t) {
                var r;
                t.done
                  ? e(t.value)
                  : ((r = t.value) instanceof n
                      ? r
                      : new n(function (e) {
                          e(r);
                        })
                    ).then(a, s);
              }
              l((i = i.apply(t, r || [])).next());
            })
          );
        }
        encodeABI() {
          return dO(
            this.constructorAbi,
            this.args,
            o_(
              { format: "bytes" },
              this.deployData,
              this.parent.defaultReturnFormat
            )
          );
        }
        decodeData(e) {
          return Object.assign(
            Object.assign(
              {},
              cD(this.constructorAbi, e.replace(this.deployData, ""), !1)
            ),
            { __method__: this.constructorAbi.type }
          );
        }
      }
      class dD extends a_ {
        constructor(e, t) {
          super(e.requestManager, e.registeredSubscriptions),
            (this.parentContract = t);
        }
        subscribe(e, t) {
          var r, n, i, o;
          let a = Object.create(null, {
            subscribe: { get: () => super.subscribe },
          });
          return (
            (r = this),
            (n = arguments),
            (i = void 0),
            (o = function* (e, t, r = K) {
              return a.subscribe.call(
                this,
                e,
                null != t ? t : this.parentContract.options,
                r
              );
            }),
            new (i || (i = Promise))(function (e, t) {
              function a(e) {
                try {
                  l(o.next(e));
                } catch (e) {
                  t(e);
                }
              }
              function s(e) {
                try {
                  l(o.throw(e));
                } catch (e) {
                  t(e);
                }
              }
              function l(t) {
                var r;
                t.done
                  ? e(t.value)
                  : ((r = t.value) instanceof i
                      ? r
                      : new i(function (e) {
                          e(r);
                        })
                    ).then(a, s);
              }
              l((o = o.apply(r, n || [])).next());
            })
          );
        }
      }
      var dU = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      let dH = { logs: d_, newHeads: dh, newBlockHeaders: dh };
      class d$ extends lK {
        get subscriptionManager() {
          return this._subscriptionManager;
        }
        constructor(e, t, r, n, i) {
          var o, a, s;
          let l;
          let u = om(t) ? t : om(r) ? r : void 0;
          if (
            (super(
              Object.assign(
                Object.assign({}, (l = dj(t) ? t : dj(r) ? r : n)),
                {
                  provider:
                    "object" == typeof t && "provider" in t
                      ? t.provider
                      : "object" == typeof r && "provider" in r
                      ? r.provider
                      : "object" == typeof n && "provider" in n
                      ? n.provider
                      : d$.givenProvider,
                  registeredSubscriptions: dH,
                }
              )
            ),
            (this.syncWithContext = !1),
            (this._functions = {}),
            (this._subscriptionManager = new dD(
              super.subscriptionManager,
              this
            )),
            (null == l ? void 0 : l.wallet) && (this._wallet = l.wallet),
            (null == l ? void 0 : l.accountProvider) &&
              (this._accountProvider = l.accountProvider),
            !iI(u) &&
              !iI(u.data) &&
              !iI(u.input) &&
              "both" !== this.config.contractDataInputFill)
          )
            throw new eE({ data: u.data, input: u.input });
          this._overloadedMethodAbis = new Map();
          let c = oS(n)
              ? n
              : oS(r)
              ? r
              : null != i
              ? i
              : this.defaultReturnFormat,
            d = "string" == typeof t ? t : void 0;
          (this.config.contractDataInputFill =
            null !== (o = null == u ? void 0 : u.dataInputFill) && void 0 !== o
              ? o
              : this.config.contractDataInputFill),
            this._parseAndSetJsonInterface(e, c),
            this.defaultReturnFormat !== c && (this.defaultReturnFormat = c),
            iI(d) || this._parseAndSetAddress(d, c),
            (this.options = {
              address: d,
              jsonInterface: this._jsonInterface,
              gas:
                null !== (a = null == u ? void 0 : u.gas) && void 0 !== a
                  ? a
                  : null == u
                  ? void 0
                  : u.gasLimit,
              gasPrice: null == u ? void 0 : u.gasPrice,
              from: null == u ? void 0 : u.from,
              input: null == u ? void 0 : u.input,
              data: null == u ? void 0 : u.data,
            }),
            (this.syncWithContext =
              null !== (s = null == u ? void 0 : u.syncWithContext) &&
              void 0 !== s &&
              s),
            l instanceof lK && this.subscribeToContextEvents(l),
            Object.defineProperty(this.options, "address", {
              set: (e) => this._parseAndSetAddress(e, c),
              get: () => this._address,
            }),
            Object.defineProperty(this.options, "jsonInterface", {
              set: (e) => this._parseAndSetJsonInterface(e, c),
              get: () => this._jsonInterface,
            }),
            l instanceof lK &&
              l.on(O.CONFIG_CHANGE, (e) => {
                this.setConfig({ [e.name]: e.newValue });
              });
        }
        setTransactionMiddleware(e) {
          this.transactionMiddleware = e;
        }
        getTransactionMiddleware() {
          return this.transactionMiddleware;
        }
        get events() {
          return this._events;
        }
        get methods() {
          return this._methods;
        }
        clone() {
          let e;
          return (
            (e = this.options.address
              ? new d$(
                  [...this._jsonInterface, ...this._errorsInterface],
                  this.options.address,
                  {
                    gas: this.options.gas,
                    gasPrice: this.options.gasPrice,
                    from: this.options.from,
                    input: this.options.input,
                    data: this.options.data,
                    provider: this.currentProvider,
                    syncWithContext: this.syncWithContext,
                    dataInputFill: this.config.contractDataInputFill,
                  },
                  this.getContextObject()
                )
              : new d$(
                  [...this._jsonInterface, ...this._errorsInterface],
                  {
                    gas: this.options.gas,
                    gasPrice: this.options.gasPrice,
                    from: this.options.from,
                    input: this.options.input,
                    data: this.options.data,
                    provider: this.currentProvider,
                    syncWithContext: this.syncWithContext,
                    dataInputFill: this.config.contractDataInputFill,
                  },
                  this.getContextObject()
                )),
            this.context && e.subscribeToContextEvents(this.context),
            e
          );
        }
        deploy(e) {
          return new dL(this, e);
        }
        getPastEvents(e, t, r) {
          return dU(this, void 0, void 0, function* () {
            var n;
            let i = "string" == typeof e ? e : uB,
              o = "string" == typeof e || oS(e) ? (oS(t) ? {} : t) : e,
              a = oS(e)
                ? e
                : oS(t)
                ? t
                : null != r
                ? r
                : this.defaultReturnFormat,
              s =
                "allEvents" === i || i === uB
                  ? uR
                  : this._jsonInterface.find(
                      (e) => "name" in e && e.name === i
                    );
            if (!s) throw new ev(`Event ${String(i)} not found.`);
            let {
                fromBlock: l,
                toBlock: u,
                topics: c,
                address: d,
              } = dC(this.options, s, null != o ? o : {}),
              f = yield ds(
                this,
                { fromBlock: l, toBlock: u, topics: c, address: d },
                a
              ),
              h = f
                ? f.map((e) =>
                    "string" == typeof e ? e : c2(s, e, this._jsonInterface, a)
                  )
                : [],
              p =
                null !== (n = null == o ? void 0 : o.filter) && void 0 !== n
                  ? n
                  : {},
              m = Object.keys(p);
            return m.length > 0
              ? h.filter(
                  (e) =>
                    "string" == typeof e ||
                    m.every((t) => {
                      var r;
                      if (Array.isArray(p[t]))
                        return p[t].some(
                          (r) =>
                            String(e.returnValues[t]).toUpperCase() ===
                            String(r).toUpperCase()
                        );
                      let n =
                        null === (r = s.inputs) || void 0 === r
                          ? void 0
                          : r.filter((e) => e.name === t)[0];
                      return (
                        (null != n &&
                          !!n.indexed &&
                          "string" === n.type &&
                          oR(p[t]) === String(e.returnValues[t])) ||
                        String(e.returnValues[t]).toUpperCase() ===
                          String(p[t]).toUpperCase()
                      );
                    })
                )
              : h;
          });
        }
        _parseAndSetAddress(e, t = this.defaultReturnFormat) {
          this._address = e ? oe(o_({ format: "address" }, e, t)) : e;
        }
        decodeMethodData(e) {
          let t = e.slice(0, 10),
            r = this._jsonInterface
              .filter((e) => "error" !== e.type)
              .find((e) => t === cL(u3(e)));
          if (!r)
            throw new ev(
              `The ABI for the provided method signature ${t} was not found.`
            );
          return cD(r, e);
        }
        _parseAndSetJsonInterface(e, t = this.defaultReturnFormat) {
          var r, n;
          (this._functions = {}), (this._methods = {}), (this._events = {});
          let i = [],
            o = e.filter((e) => "error" !== e.type),
            a = e.filter((e) => uJ(e));
          for (let e of o) {
            let o = Object.assign(Object.assign({}, e), { signature: "" });
            if (uX(o)) {
              let e = u3(o),
                t = cL(e);
              (o.methodNameWithInputs = e),
                (o.signature = t),
                (o.constant =
                  "view" === o.stateMutability ||
                  "pure" === o.stateMutability ||
                  o.constant),
                (o.payable = "payable" === o.stateMutability || o.payable),
                this._overloadedMethodAbis.set(o.name, [
                  ...(null !== (r = this._overloadedMethodAbis.get(o.name)) &&
                  void 0 !== r
                    ? r
                    : []),
                  o,
                ]);
              let i =
                  null !== (n = this._overloadedMethodAbis.get(o.name)) &&
                  void 0 !== n
                    ? n
                    : [],
                s = this._createContractMethod(i, a),
                l = this._createContractMethod(i, a, !0);
              (this._functions[e] = { signature: t, method: l }),
                (this._methods[o.name] = s),
                (this._methods[e] = l),
                (this._methods[t] = l);
            } else if (uY(o)) {
              let e = u3(o),
                r = u4(e),
                n = this._createContractEvent(o, t);
              (o.signature = r),
                (e in this._events && "bound" !== o.name) ||
                  (this._events[e] = n),
                (this._events[o.name] = n),
                (this._events[r] = n);
            }
            i = [...i, o];
          }
          (this._events.allEvents = this._createContractEvent(uR, t)),
            (this._jsonInterface = [...i]),
            (this._errorsInterface = a);
        }
        _getAbiParams(e, t) {
          var r;
          try {
            return n7(null !== (r = e.inputs) && void 0 !== r ? r : [], t);
          } catch (t) {
            throw new ev(
              `Invalid parameters for method ${e.name}: ${t.message}`
            );
          }
        }
        _createContractMethod(e, t, r = !1) {
          let n = e[e.length - 1];
          return (...e) => {
            var i, o, a;
            let s;
            let l =
                null !==
                  (o = r
                    ? null === (i = this._overloadedMethodAbis.get(n.name)) ||
                      void 0 === i
                      ? void 0
                      : i.filter((e) => e.signature === n.signature)
                    : this._overloadedMethodAbis.get(n.name)) && void 0 !== o
                  ? o
                  : [],
              u = l[0],
              c = l.filter((t) => {
                var r;
                return (
                  (null !== (r = t.inputs) && void 0 !== r ? r : []).length ===
                  e.length
                );
              });
            if (1 === l.length || 0 === c.length)
              (s = this._getAbiParams(u, e)),
                iR.validate(
                  null !== (a = n.inputs) && void 0 !== a ? a : [],
                  s
                );
            else {
              let t = [],
                r = [];
              for (let n of c)
                try {
                  (s = this._getAbiParams(n, e)),
                    iR.validate(n.inputs, s),
                    r.push(n);
                } catch (e) {
                  t.push(e);
                }
              if (
                (1 === r.length
                  ? ([u] = r)
                  : r.length > 1 &&
                    (([u] = r),
                    console.warn(`Multiple methods found that is compatible with the given inputs.
	Found ${r.length} compatible methods: ${JSON.stringify(
                      r.map(
                        (e) =>
                          `${e.methodNameWithInputs} (signature: ${e.signature})`
                      )
                    )} 
	The first one will be used: ${u.methodNameWithInputs}`)),
                t.length === c.length)
              )
                throw new nZ(t);
            }
            let d = {
              arguments: s,
              call: (e, r) =>
                dU(this, void 0, void 0, function* () {
                  return this._contractMethodCall(u, s, t, e, r);
                }),
              send: (e) => this._contractMethodSend(u, s, t, e),
              populateTransaction: (t, r) => {
                var i, o;
                let a = null != r ? r : this.options;
                a = Object.assign(Object.assign({}, a), {
                  input: void 0,
                  from:
                    null !==
                      (o =
                        null !== (i = null == a ? void 0 : a.from) &&
                        void 0 !== i
                          ? i
                          : this.defaultAccount) && void 0 !== o
                      ? o
                      : void 0,
                });
                let s = dR({
                  abi: n,
                  params: e,
                  options: Object.assign(Object.assign({}, t), {
                    dataInputFill: this.config.contractDataInputFill,
                  }),
                  contractOptions: a,
                });
                return s.dataInputFill && delete s.dataInputFill, s;
              },
              estimateGas: (e, ...t) =>
                dU(
                  this,
                  [e, ...t],
                  void 0,
                  function* (e, t = this.defaultReturnFormat) {
                    return this.contractMethodEstimateGas({
                      abi: u,
                      params: s,
                      returnFormat: t,
                      options: e,
                    });
                  }
                ),
              encodeABI: () => dO(u, s),
              decodeData: (e) => cD(u, e),
              createAccessList: (e, r) =>
                dU(this, void 0, void 0, function* () {
                  return this._contractMethodCreateAccessList(u, s, t, e, r);
                }),
            };
            return u.stateMutability, d;
          };
        }
        _contractMethodCall(e, t, r, n, i) {
          return dU(this, void 0, void 0, function* () {
            var o;
            let a = dN({
              abi: e,
              params: t,
              options: Object.assign(Object.assign({}, n), {
                dataInputFill: this.config.contractDataInputFill,
              }),
              contractOptions: Object.assign(Object.assign({}, this.options), {
                from:
                  null !== (o = this.options.from) && void 0 !== o
                    ? o
                    : this.config.defaultAccount,
              }),
            });
            try {
              let t = yield di(this, a, i, this.defaultReturnFormat);
              return cU(e, t);
            } catch (e) {
              throw (e instanceof eA && cG(r, e.cause), e);
            }
          });
        }
        _contractMethodCreateAccessList(e, t, r, n, i) {
          return dU(this, void 0, void 0, function* () {
            var o;
            let a = dF({
              abi: e,
              params: t,
              options: Object.assign(Object.assign({}, n), {
                dataInputFill: this.config.contractDataInputFill,
              }),
              contractOptions: Object.assign(Object.assign({}, this.options), {
                from:
                  null !== (o = this.options.from) && void 0 !== o
                    ? o
                    : this.config.defaultAccount,
              }),
            });
            try {
              return du(this, a, i, this.defaultReturnFormat);
            } catch (e) {
              throw (e instanceof eA && cG(r, e.cause), e);
            }
          });
        }
        _contractMethodSend(e, t, r, n, i) {
          var o, a;
          let s = null != i ? i : this.options;
          s = Object.assign(Object.assign({}, s), {
            input: void 0,
            from:
              null !==
                (a =
                  null !== (o = s.from) && void 0 !== o
                    ? o
                    : this.defaultAccount) && void 0 !== a
                ? a
                : void 0,
          });
          let l = dR({
              abi: e,
              params: t,
              options: Object.assign(Object.assign({}, n), {
                dataInputFill: this.config.contractDataInputFill,
              }),
              contractOptions: s,
            }),
            u = iI(this.transactionMiddleware)
              ? dn(this, l, this.defaultReturnFormat, {
                  checkRevertBeforeSending: !1,
                  contractAbi: this._jsonInterface,
                })
              : dn(
                  this,
                  l,
                  this.defaultReturnFormat,
                  {
                    checkRevertBeforeSending: !1,
                    contractAbi: this._jsonInterface,
                  },
                  this.transactionMiddleware
                );
          return (
            u.on("error", (e) => {
              e instanceof eA && cG(r, e.cause);
            }),
            u
          );
        }
        contractMethodEstimateGas(e) {
          return dU(
            this,
            arguments,
            void 0,
            function* ({
              abi: e,
              params: t,
              returnFormat: r,
              options: n,
              contractOptions: i,
            }) {
              return da(
                this,
                dM({
                  abi: e,
                  params: t,
                  options: Object.assign(Object.assign({}, n), {
                    dataInputFill: this.config.contractDataInputFill,
                  }),
                  contractOptions: null != i ? i : this.options,
                }),
                E.LATEST,
                null != r ? r : this.defaultReturnFormat
              );
            }
          );
        }
        _createContractEvent(e, t = this.defaultReturnFormat) {
          return (...r) => {
            var n;
            let { topics: i, fromBlock: o } = dC(this.options, e, r[0]),
              a = new d_(
                {
                  address: this.options.address,
                  topics: i,
                  abi: e,
                  jsonInterface: this._jsonInterface,
                },
                {
                  subscriptionManager: this.subscriptionManager,
                  returnFormat: t,
                }
              );
            return (
              iI(o) ||
                this.getPastEvents(e.name, { fromBlock: o, topics: i }, t)
                  .then((e) => {
                    e && e.forEach((e) => a.emit("data", e));
                  })
                  .catch((e) => {
                    a.emit("error", new eM("Failed to get past events.", e));
                  }),
              null === (n = this.subscriptionManager) ||
                void 0 === n ||
                n.addSubscription(a).catch((e) => {
                  a.emit("error", new eM("Failed to subscribe.", e));
                }),
              a
            );
          };
        }
        subscribeToContextEvents(e) {
          let t = this;
          (this.context = e),
            t.syncWithContext &&
              e.on(O.CONFIG_CHANGE, (e) => {
                t.setConfig({ [e.name]: e.newValue });
              });
        }
      }
      let dz = d$,
        dG = {
          addr: "0x3b3b57de",
          name: "0x691f3431",
          abi: "0x2203ab56",
          pubkey: "0xc8690233",
          text: "0x59d1d43c",
          contenthash: "0xbc1c58d1",
        },
        dq = {
          setAddr: "addr",
          addr: "addr",
          pubkey: "pubkey",
          contenthash: "contenthash",
          text: "text",
          name: "name",
        },
        dW = {
          main: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
          goerli: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
        },
        dV = { "0x1": "main", "0x5": "goerli" },
        dZ = [
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32",
              },
              {
                indexed: !0,
                internalType: "bytes32",
                name: "label",
                type: "bytes32",
              },
              {
                indexed: !1,
                internalType: "address",
                name: "owner",
                type: "address",
              },
            ],
            name: "NewOwner",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32",
              },
              {
                indexed: !1,
                internalType: "address",
                name: "resolver",
                type: "address",
              },
            ],
            name: "NewResolver",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32",
              },
              {
                indexed: !1,
                internalType: "address",
                name: "owner",
                type: "address",
              },
            ],
            name: "Transfer",
            type: "event",
          },
          {
            inputs: [
              { internalType: "address", name: "owner", type: "address" },
              { internalType: "address", name: "operator", type: "address" },
            ],
            name: "isApprovedForAll",
            outputs: [{ internalType: "bool", name: "", type: "bool" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "bytes32", name: "node", type: "bytes32" },
            ],
            name: "owner",
            outputs: [{ internalType: "address", name: "", type: "address" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "bytes32", name: "node", type: "bytes32" },
            ],
            name: "recordExists",
            outputs: [{ internalType: "bool", name: "", type: "bool" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "bytes32", name: "node", type: "bytes32" },
            ],
            name: "resolver",
            outputs: [{ internalType: "address", name: "", type: "address" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "bytes32", name: "node", type: "bytes32" },
            ],
            name: "ttl",
            outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
            stateMutability: "view",
            type: "function",
          },
        ],
        dK = [
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32",
              },
              {
                indexed: !1,
                internalType: "address",
                name: "a",
                type: "address",
              },
            ],
            name: "AddrChanged",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32",
              },
              {
                indexed: !1,
                internalType: "uint256",
                name: "coinType",
                type: "uint256",
              },
              {
                indexed: !1,
                internalType: "bytes",
                name: "newAddress",
                type: "bytes",
              },
            ],
            name: "AddressChanged",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                indexed: !0,
                internalType: "address",
                name: "operator",
                type: "address",
              },
              {
                indexed: !1,
                internalType: "bool",
                name: "approved",
                type: "bool",
              },
            ],
            name: "ApprovalForAll",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32",
              },
              {
                indexed: !1,
                internalType: "bytes",
                name: "hash",
                type: "bytes",
              },
            ],
            name: "ContenthashChanged",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32",
              },
              {
                indexed: !1,
                internalType: "bytes",
                name: "name",
                type: "bytes",
              },
              {
                indexed: !1,
                internalType: "uint16",
                name: "resource",
                type: "uint16",
              },
              {
                indexed: !1,
                internalType: "bytes",
                name: "record",
                type: "bytes",
              },
            ],
            name: "DNSRecordChanged",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32",
              },
              {
                indexed: !1,
                internalType: "bytes",
                name: "name",
                type: "bytes",
              },
              {
                indexed: !1,
                internalType: "uint16",
                name: "resource",
                type: "uint16",
              },
            ],
            name: "DNSRecordDeleted",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32",
              },
            ],
            name: "DNSZoneCleared",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32",
              },
              {
                indexed: !1,
                internalType: "bytes",
                name: "lastzonehash",
                type: "bytes",
              },
              {
                indexed: !1,
                internalType: "bytes",
                name: "zonehash",
                type: "bytes",
              },
            ],
            name: "DNSZonehashChanged",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32",
              },
              {
                indexed: !0,
                internalType: "bytes4",
                name: "interfaceID",
                type: "bytes4",
              },
              {
                indexed: !1,
                internalType: "address",
                name: "implementer",
                type: "address",
              },
            ],
            name: "InterfaceChanged",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32",
              },
              {
                indexed: !1,
                internalType: "string",
                name: "name",
                type: "string",
              },
            ],
            name: "NameChanged",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32",
              },
              {
                indexed: !1,
                internalType: "bytes32",
                name: "x",
                type: "bytes32",
              },
              {
                indexed: !1,
                internalType: "bytes32",
                name: "y",
                type: "bytes32",
              },
            ],
            name: "PubkeyChanged",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32",
              },
              {
                indexed: !0,
                internalType: "string",
                name: "indexedKey",
                type: "string",
              },
              {
                indexed: !1,
                internalType: "string",
                name: "key",
                type: "string",
              },
            ],
            name: "TextChanged",
            type: "event",
          },
          {
            inputs: [
              { internalType: "bytes32", name: "node", type: "bytes32" },
              {
                internalType: "uint256",
                name: "contentTypes",
                type: "uint256",
              },
            ],
            name: "ABI",
            outputs: [
              { internalType: "uint256", name: "", type: "uint256" },
              { internalType: "bytes", name: "", type: "bytes" },
            ],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "bytes32", name: "node", type: "bytes32" },
            ],
            name: "addr",
            outputs: [
              { internalType: "address payable", name: "", type: "address" },
            ],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "bytes32", name: "node", type: "bytes32" },
              { internalType: "uint256", name: "coinType", type: "uint256" },
            ],
            name: "addr",
            outputs: [{ internalType: "bytes", name: "", type: "bytes" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "bytes32", name: "node", type: "bytes32" },
            ],
            name: "contenthash",
            outputs: [{ internalType: "bytes", name: "", type: "bytes" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "bytes32", name: "node", type: "bytes32" },
              { internalType: "bytes32", name: "name", type: "bytes32" },
              { internalType: "uint16", name: "resource", type: "uint16" },
            ],
            name: "dnsRecord",
            outputs: [{ internalType: "bytes", name: "", type: "bytes" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "bytes32", name: "node", type: "bytes32" },
              { internalType: "bytes32", name: "name", type: "bytes32" },
            ],
            name: "hasDNSRecords",
            outputs: [{ internalType: "bool", name: "", type: "bool" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "bytes32", name: "node", type: "bytes32" },
              { internalType: "bytes4", name: "interfaceID", type: "bytes4" },
            ],
            name: "interfaceImplementer",
            outputs: [{ internalType: "address", name: "", type: "address" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "account", type: "address" },
              { internalType: "address", name: "operator", type: "address" },
            ],
            name: "isApprovedForAll",
            outputs: [{ internalType: "bool", name: "", type: "bool" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "bytes32", name: "node", type: "bytes32" },
            ],
            name: "name",
            outputs: [{ internalType: "string", name: "", type: "string" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "bytes32", name: "node", type: "bytes32" },
            ],
            name: "pubkey",
            outputs: [
              { internalType: "bytes32", name: "x", type: "bytes32" },
              { internalType: "bytes32", name: "y", type: "bytes32" },
            ],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "bytes4", name: "interfaceID", type: "bytes4" },
            ],
            name: "supportsInterface",
            outputs: [{ internalType: "bool", name: "", type: "bool" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "bytes32", name: "node", type: "bytes32" },
              { internalType: "string", name: "key", type: "string" },
            ],
            name: "text",
            outputs: [{ internalType: "string", name: "", type: "string" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "bytes32", name: "node", type: "bytes32" },
            ],
            name: "zonehash",
            outputs: [{ internalType: "bytes", name: "", type: "bytes" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "bytes32", name: "node", type: "bytes32" },
              { internalType: "address", name: "a", type: "address" },
            ],
            name: "setAddr",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
          },
        ],
        dQ = new Map([
          [8217, "apostrophe"],
          [8260, "fraction slash"],
          [12539, "middle dot"],
        ]);
      function dJ(e) {
        var t;
        let r;
        return (
          (t = (function (e) {
            let t = 0;
            function r() {
              return (e[t++] << 8) | e[t++];
            }
            let n = r(),
              i = 1,
              o = [0, 1];
            for (let e = 1; e < n; e++) o.push((i += r()));
            let a = r(),
              s = t;
            t += a;
            let l = 0,
              u = 0;
            function c() {
              return (
                0 == l && ((u = (u << 8) | e[t++]), (l = 8)), (u >> --l) & 1
              );
            }
            let d = 0x80000000 - 1,
              f = 0;
            for (let e = 0; e < 31; e++) f = (f << 1) | c();
            let h = [],
              p = 0,
              m = 0x80000000;
            for (;;) {
              let e = Math.floor(((f - p + 1) * i - 1) / m),
                t = 0,
                r = n;
              for (; r - t > 1; ) {
                let n = (t + r) >>> 1;
                e < o[n] ? (r = n) : (t = n);
              }
              if (0 == t) break;
              h.push(t);
              let a = p + Math.floor((m * o[t]) / i),
                s = p + Math.floor((m * o[t + 1]) / i) - 1;
              for (; ((a ^ s) & 0x40000000) == 0; )
                (f = ((f << 1) & d) | c()),
                  (a = (a << 1) & d),
                  (s = ((s << 1) & d) | 1);
              for (; a & ~s & 0x20000000; )
                (f = (0x40000000 & f) | ((f << 1) & (d >>> 1)) | c()),
                  (a = (a << 1) ^ 0x40000000),
                  (s = ((0x40000000 ^ s) << 1) | 0x40000001);
              (p = a), (m = 1 + s - a);
            }
            let g = n - 4;
            return h.map((t) => {
              switch (t - g) {
                case 3:
                  return g + 65792 + ((e[s++] << 16) | (e[s++] << 8) | e[s++]);
                case 2:
                  return g + 256 + ((e[s++] << 8) | e[s++]);
                case 1:
                  return g + e[s++];
                default:
                  return t - 1;
              }
            });
          })(
            (function (e) {
              let t = [];
              [
                ..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
              ].forEach((e, r) => (t[e.charCodeAt(0)] = r));
              let r = e.length,
                n = new Uint8Array((6 * r) >> 3);
              for (let i = 0, o = 0, a = 0, s = 0; i < r; i++)
                (s = (s << 6) | t[e.charCodeAt(i)]),
                  (a += 6) >= 8 && (n[o++] = s >> (a -= 8));
              return n;
            })(e)
          )),
          (r = 0),
          () => t[r++]
        );
      }
      function dY(e, t = 0) {
        let r = [];
        for (;;) {
          let n = e(),
            i = e();
          if (!i) break;
          t += n;
          for (let e = 0; e < i; e++) r.push(t + e);
          t += i + 1;
        }
        return r;
      }
      function dX(e) {
        return d1(() => {
          let t = dY(e);
          if (t.length) return t;
        });
      }
      function d0(e) {
        let t = [];
        for (;;) {
          let r = e();
          if (0 == r) break;
          t.push(
            (function (e, t) {
              let r = 1 + t(),
                n = t(),
                i = d1(t);
              return d2(i.length, 1 + e, t).flatMap((e, t) => {
                let [o, ...a] = e;
                return Array(i[t])
                  .fill()
                  .map((e, t) => {
                    let i = t * n;
                    return [o + t * r, a.map((e) => e + i)];
                  });
              });
            })(r, e)
          );
        }
        for (;;) {
          let r = e() - 1;
          if (r < 0) break;
          t.push(d2(1 + e(), 1 + r, e).map((e) => [e[0], e.slice(1)]));
        }
        return t.flat();
      }
      function d1(e) {
        let t = [];
        for (;;) {
          let r = e(t.length);
          if (!r) break;
          t.push(r);
        }
        return t;
      }
      function d2(e, t, r) {
        let n = Array(e)
          .fill()
          .map(() => []);
        for (let i = 0; i < t; i++)
          (function (e, t) {
            let r = Array(e);
            for (let i = 0, o = 0; i < e; i++) {
              var n;
              r[i] = o += 1 & (n = t()) ? ~n >> 1 : n >> 1;
            }
            return r;
          })(e, r).forEach((e, t) => n[t].push(e));
        return n;
      }
      function d6(e) {
        return `{${e.toString(16).toUpperCase().padStart(2, "0")}}`;
      }
      function d5(e) {
        let t = e.length;
        if (t < 4096) return String.fromCodePoint(...e);
        let r = [];
        for (let n = 0; n < t; )
          r.push(String.fromCodePoint(...e.slice(n, (n += 4096))));
        return r.join("");
      }
      function d3(e, t) {
        let r = e.length,
          n = r - t.length;
        for (let i = 0; 0 == n && i < r; i++) n = e[i] - t[i];
        return n;
      }
      function d8(e) {
        return (e >> 24) & 255;
      }
      function d4(e) {
        return 0xffffff & e;
      }
      function d9(e) {
        return e >= 44032 && e < 55204;
      }
      function d7(e) {
        o ||
          (function () {
            let e = dJ(
              "AEUDVgHLCGMATwDUADIAdAAhADQAFAAtABQAIQAPACcADQASAAoAGAAJABIACQARAAUACwAFAAwABQAQAAMABwAEAAoABQAJAAIACgABAAQAFAALAAIACwABAAIAAQAHAAMAAwAEAAsADAAMAAwACwANAA0AAwAKAAkABAAdAAYAZwDTAeYDMwCxCl8B8xhZAqfoC190UGcThgBurwf7PT09Pb09AjgJum8OjDllxHYUKXAPxzq6tABAxgK8ysUvWAgMPT09PT09PSs6LT2HcgWXWwFLoSMEEEl5RFVMKvO0XQ8ExDdJMnIgPi89uj00MsvBXxEPAGPCDwBnQKoEbwRwBHEEcgRzBHQEdQR2BHcEeAR6BHsEfAR+BIAEgfndBQoBYgULAWIFDAFiBNcE2ATZBRAFEQUvBdALFAsVDPcNBw13DYcOMA4xDjMB4BllHI0B2grbAMDpHLkQ7QHVAPRNQQFnGRUEg0yEB2uaJF8AJpIBpob5AERSMAKNoAXqaQLUBMCzEiC+AZ4EWRJJFbEu7QDQLARtEbgECxDwAb/RyAk1AV4nD2cEQQKTAzsAGpobWgAahAGPCrysdy0OAKwAfFIcBAQFUmoA/PtZADkBIadVj2UMUgx5Il4ANQC9vAITAdQZWxDzALN9AhsZVwIcGSkCBAgXOhG7AqMZ4M7+1M0UAPDNAWsC+mcJDe8AAQA99zkEXLICyQozAo6lAobcP5JvjQLFzwKD9gU/OD8FEQCtEQL6bW+nAKUEvzjDHsuRyUvOFHcacUz5AqIFRSE2kzsBEQCuaQL5DQTlcgO6twSpTiUgCwIFCAUXBHQEqQV6swAVxUlmTmsCwjqsP/wKJQmXb793UgZBEBsnpRD3DDMBtQE7De1L2ATxBjsEyR99GRkPzZWcCKUt3QztJuMuoYBaI/UqgwXtS/Q83QtNUWgPWQtlCeM6Y4FOAyEBDSKLCt0NOQhtEPMKyWsN5RFFBzkD1UmaAKUHAQsRHTUVtSYQYqwLCTl3Bvsa9guPJq8TKXr8BdMaIQZNASka/wDPLueFsFoxXBxPXwYDCyUjxxSoUCANJUC3eEgaGwcVJakCkUNwSodRNh6TIfY8PQ1mLhNRfAf1PAUZTwuBPJ5Gq0UOEdI+jT1IIklMLAQ1fywvJ4sJzw+FDLl8cgFZCSEJsQxxEzERFzfFCDkHGS2XJCcVCCFGlWCaBPefA/MT0QMLBT8JQQcTA7UcLRMuFSkFDYEk1wLzNtUuswKPVoABFwXLDyUf3xBQR+AO6QibAmUDgyXrAC0VIQAXIpsIQ2MAX4/YUwUuywjHamwjdANnFOdhEXMHkQ5XB6ccMxW/HOFwyF4Lhggoo68JWwF1CZkBXwTjCAk1W4ygIEFnU4tYGJsgYUE/XfwCMQxlFZ9EvYd4AosPaxIbATUBcwc5DQECdxHtEWsQlQjrhgQ1tTP4OiUETyGDIBEKJwNPbM4LJyb5DPhpAaMSYgMMND137merYLYkF/0HGTLFQWAh8QuST80MnBrBGEJULhnkB78D8xrzJ+pBVwX/A6MDEzpNM+4EvQtpCIsJPwBJDqMXB9cYagpxjNABMYsBt5kDV5GDAm+PBjcHCwBnC4cFeeUAHQKnCKMABQDPA1cAOQKtB50AGQCFQQE9AycvASHlAo8DkwgxywGVLwHzKQQbwwwVAPc3bkoCw7ECgGpmogXdWAKOAkk1AU0lBAVOR1EDr3HhANsASwYT30cBFatKyxrjQwHfbysAxwD7AAU1BwVBAc0B820AtwFfCzEJorO1AU3pKQCDABVrAdcCiQDdADUAf/EBUwBNBVn5BdMCT0kBETEYK1dhAbsDHwEzAQ0AeQbLjaXJBx8EbQfTAhAbFeEC7y4HtQEDIt8TzULFAr3eVaFgAmSBAmJCW02vWzcgAqH3AmiYAmYJAp+EOBsLAmY7AmYmBG4EfwN/EwN+kjkGOXcXOYI6IyMCbB0CMjY4CgJtxwJtru+KM2dFKwFnAN4A4QBKBQeYDI0A/gvCAA21AncvAnaiPwJ5S0MCeLodXNtFrkbXAnw/AnrIAn0JAnzwBVkFIEgASH1jJAKBbQKAAAKABQJ/rklYSlsVF0rMAtEBAtDMSycDiE8Dh+ZExZEyAvKhXQMDA65LzkwtJQPPTUxNrwKLPwKK2MEbBx1DZwW3Ao43Ao5cQJeBAo7ZAo5ceFG0UzUKUtRUhQKT+wKTDADpABxVHlWvVdAGLBsplYYy4XhmRTs5ApefAu+yWCGoAFklApaPApZ8nACpWaxaCYFNADsClrUClk5cRFzRApnLAplkXMpdBxkCnJs5wjqdApwWAp+bAp64igAdDzEqDwKd8QKekgC1PWE0Ye8CntMCoG4BqQKenx8Cnk6lY8hkJyUrAievAiZ+AqD7AqBMAqLdAqHEAqYvAqXOAqf/AH0Cp/JofGixAANJahxq0QKs4wKsrgKtZwKtAgJXHQJV3AKx4dcDH05slwKyvQ0CsugXbOBtY21IXwMlzQK2XDs/bpADKUUCuF4CuUcVArkqd3A2cOECvRkCu9pwlgMyEQK+iHICAzNxAr4acyJzTwLDywLDBHOCdEs1RXTgAzynAzyaAz2/AsV8AsZHAsYQiQLIaVECyEQCyU8CyS4CZJ0C3dJ4eWF4rnklS9ADGKNnAgJh9BnzlSR7C16SXrsRAs9rAs9sL0tT0vMTnwDGrQLPcwEp6gNOEn5LBQLcJwLbigLSTwNSXANTXwEBA1WMgIk/AMsW7WBFghyC04LOg40C2scC2d6EEIRJpzwDhqUALwNkDoZxWfkAVQLfZQLeuHN3AuIv7RQB8zAnAfSbAfLShwLr8wLpcHkC6vkC6uQA+UcBuQLuiQLrnJaqlwMC7j8DheCYeXDgcaEC8wMAaQOOFpmTAvcTA5FuA5KHAveYAvnZAvhmmhyaq7s3mx4DnYMC/voBGwA5nxyfswMFjQOmagOm2QDRxQMGaqGIogUJAwxJAtQAPwMA4UEXUwER8wNrB5dnBQCTLSu3r73bAYmZFH8RBDkB+ykFIQ6dCZ8Akv0TtRQrxQL3LScApQC3BbmOkRc/xqdtQS4UJo0uAUMBgPwBtSYAdQMOBG0ALAIWDKEAAAoCPQJqA90DfgSRASBFBSF8CgAFAEQAEwA2EgJ3AQAF1QNr7wrFAgD3Cp8nv7G35QGRIUFCAekUfxE0wIkABAAbAFoCRQKEiwAGOlM6lI1tALg6jzrQAI04wTrcAKUA6ADLATqBOjs5/Dn5O3aJOls7nok6bzkYAVYBMwFsBS81XTWeNa01ZjV1NbY1xTWCNZE10jXhNZ41rTXuNf01sjXBNgI2ETXGNdU2FjYnNd417TYuNj02LjUtITY6Nj02PDbJNwgEkDxXNjg23TcgNw82yiA3iTcwCgSwPGc2JDcZN2w6jTchQtRDB0LgQwscDw8JmyhtKFFVBgDpfwDpsAD+mxQ91wLpNSMArQC9BbeOkRdLxptzBL8MDAMMAQgDAAkKCwsLCQoGBAVVBI/DvwDz9b29kaUCb0QtsRTNLt4eGBcSHAMZFhYZEhYEARAEBUEcQRxBHEEcQRxBHEEaQRxBHEFCSTxBPElISUhBNkM2QTYbNklISVmBVIgELgEaJZkC7aMAoQCjBcGOmxdNxrsBvwGJAaQcEZ0ePCklMAAhMvAIMAL54gC7Bm8EescjzQMpARQpKgDUHqSvAj5Gqwr7YrMUACT9AN3rlr3JG9m8w9lIAXltp/v8kfWaIaaR9OwpAES/I3ZVamDXSgB/UsOgAG6D0tq+5CIqE15FiAhV3yA2VhCQ7tj+m6xXaF53FIfGi/IAZIskMGAi2MU7MDVJNCbMzERyHZi+osdPtnFVbvq653O8rwaCy4IAf9OOok65AqJUtUriUfYsGPPVbe6jm0s9lbKlPCUKjdkHsFsEhvX4kT39ZCtAAbwQdn/h4TpO5hTByWAmr5n+Wuwhdegv6bmvX4LyOes3z2+cuHv2JFYwVMNuq2gzn8YHTjlUQd39osyWei4NKl3LAdfxlO876hh5ENp/cOvpuI9bF55guEthLLPOXjD4dktTH04P5TvZrWTM0e4+BHJxj7MLApXIFOs0sWKhNkG8iwuM5wR83my6V3wW06abhDzTXYfOr/ZpFXgXzmv4d12FFyP00/dPGbIVGV5ao8UufGzUwp/IHx6v/wDWJr9iaoCulhWwlZ7A8q/NMoD12+mBdNRgJYnThRLtMx1Bgwttn8/4Qn2CDfOSup9GVXEvA21ILgp0owHYxNOkpwLWz0G7K+WREIDjIzUzSn8I99CuJSmSpPyH0Ke6/NERYiNx+3dncSebPnOUnnWD61AhJ1n/tSLZmU5wYO5GfgzyAYJm6VL91LxZ8hL1lfximQxIDMRhIecQZBmeE5R0XlrpvwplVrJwpa8BBCdp93GPP9lyBeZ2zkRr920CR3cYbKpKHfogvm0nV7XdDz6EbjzlxADCMjSLXuXpIpyuizy39yY+I+H9rmpoIF3YwEjlH9MgGgWcCNTjHEWMqAbprn2Ox7rOHupaVE3lNyg3nt5XaZID6Y+uml5Ja+aOPu+BI+DZbiJVfaspUadakWUX6TA4dETkIqdJJHYnU4Z4yKpt5y8rVIahoMUf8A8kWtAQNCTbjp71gx3/zVdqNz1Sutkw0gFIMVm2BF4Xdv/0olw+NaDIR9Bb3DPweZA2K/cw+/b+AwyWl9ZOP67A9nexmeTNjfdzPGf9J6E6BMPKa5lJh+qNsdUz3HBUevU71eQFCqOcxiIYhacAhh/8PX0J5DdSViZ6WazDDx7cukJNpMfEkYLJ5Ao4vLoVd3d25Pg4qaVa2p2D2L3WvYPJ5Yf/A/MSxptjlgXL/KJtP2U0cRv2I09ATAiWCJYuRwiapeKFsqmi18yMMulDp3HdcIldq+7jkwsJUOHLHCzzzBw5XFvL0CAmo1ub456z7zb7shk3KPGCLZzr47oT1k/j06XNnJvG3Udv6XrP+wsqTBlZ5MaNPt9FOs/4Bt/ja/vbVhTNpBFl9Gq7MqINvGlWKOAwQzwOZy+EzSdjAqKJVV2YcskTuM94aIK+kc/AZaXiZLPREUDpkXIV947IFfj+85TrqPqLfkGcxgboMQjosf+az+odLNXdyp1mDNGsqSdK/pJ2Ca04mt/4d6s1X+lncOEYaGBBeW4pApGcjf7/XJCFbj3N3mFb+BtlIcw8ZiDKoClFX9Rf0bxCqtLpicObKJzBVVHr/6u4siH2hK75RNv7w9GfTbhJOQBYiFUZAByY4rn37tZBHT//kqKsNi3ryL9AqXJRzqiMIJMhILjoi/i8LVEsbu+Ih9bsyW16sgQqjYLO0qda6KaCPKj3DQcu6CfV5lKtjS3ZCdqLAZkOey9MR+QutJBGiz/r15GVD6rCVwJR4UUKC4GNJkfDf00OMW8aQtLSAGLXV8MIi9mbbl/qQEpxCm2L5hutFX4ekeLH4QgBWUFKs/2VVMKy46WtFE6AbwgmYm/Z0yHk5veDIrcl2HpVqb/rSE0PC9EbDzJEWqeaPhh7vF369Umq2kSiB3s5rBI6c/7N9bkRu4h2n+/h5nSwy+7n+/I+6oXQVANo2Jb5zDwtiBPf1ySCzHdT6yJShMzqSRZfnykX49CaFaxhoVF4PBhEuECJ1PrFYSpmHuyYsl14DTAV9ZxRms1XiR/kBrjhZjidOt0UNe+GSml7XNgpVw8YsUTmZXLTK+6iYnyW/wYR1W4UXwOi14xpFROHb6HcZzksgF5DbL2AFXzKNwHU2adjdAY+KCyM/cwRTBkkq/a227NI0q6DR2MkMCRu620t79bGcYUmACtqN3mk/0uNwd3JSXHqE1kzf6Yyj0W2083JNDRnIXDlgBxJ6uf58NN1f6FQiRCWB4egF8QDx74AixV8oTyw7PluIjr3/rj/WzgwPSq4xPojaF7V0xqG2u5ti2L1h6yYHv73Isrukr0kURDIEjClBsBx7kdcXUxaYMS0syT3ymLzDzslNDWQOT1Tao1YNmJHARUenhCkmV9tqCPGI5GqZaRpkiPxyjoncWjyOHYGqvbvRX+Bn1pn7EhRNXa1lqJPmoeN5VqdqIDPhEVhFsyG0d4iQEIYX0wZUbY2XbZWYlpZ/l66IrDDY0q1C1YzBDpHC4h05YqHQLqS9anyl22JQ6lEvjvdBwMHfE7z0luCXD34/rFeDa2TmSeEAykSpYO5j1G/nsgpR3qn0qaQEmLjnnLfcz+veoYqPnRqmRGwCJ6FJ3Gm/Z1/aVX5PSb03MMnjAf41ww54sD5k8FrkfBP+K0b1MrYpapWjtpZfve2HVf4ickX3LKSOhu7qI1Vd4c1kNrn2ajy1t4y93JhV4fnWCKq7OmFpcr7FjdJCXPTql0Drr14Ho3Z87+GPQ4Z/DcTiGqtvZxlRYi8cNuhXABveZIwNl/BX1huhVLaFax5OqypUrQRyb9OE3SSkPlDdy5uo5XGg2EIGEjLY1MO5cr1ibfiFWV7zspcTgkBKkwo5jPyAin04LqizZXb2tDRgwKJjGx4cVk3ngAQixwcxjYAg2Q7vmUR/hpwInMdw7OhC2qyf41vTPkudQAORS0DdLtOGQxb4fH2VYGsvJCkeWPeUwtf1/tuIhzXEThoCZzzSJqqjUtbaPI3ntHm3T5uf849hGUA0zU8ni5W+EEn3/0Y6oUhQFw9z0aGjkljBbAlFXc0y82G2wkd7VdgWa5KTgJJNjNwZMfmdnUIUn1JU5LiWX5UZEZbVlKSN76mlmjUR2ku+fucTNlO4IAAahnLjBhlvQNR9pe9swGBgq0YR7P3VCyI/seYwQ4QBzy9X+HPePgoF8WfKaJ4MBOhLCGHae6Z8xkNXwni9QAKvTNtVA56x8YJflZ/VvONRSlsSLmiSyNMnTjTaE1ko81zkzGEnVwEhjCzlwIqpxmpDAqwsEmtpdr3xpc7i/ZX3f2TzT3M0FdxIEQvO1jgmmiN+D1YpMduAzEhBtj2OBkMN/rv6p7Th4pSH6f5aH3aTvwFTl7EOSgGASI7ttyMehzpm4AVyK+bFEaFg9gnZsSUPpsbAe/0RFhrH+EXZ12Z7thf4dzN1+Sn+G8QrDA1VKaN4IFxD1rQz9Xq9Coii9S9/hPbTGjyBwFH3H1UdQuz5KsgPDEHua4/kPg2Gp/IIItsaLWBqiT9XH45MiQxSosGJ56H/0F2cjcCFd72l1665RNHURdC3lspI77esfJsl+rXXabkAy7vxDXG/XGGcKpwiKDPFfvMEgjkAHil4Za1F36RnyxxvdIAzvgfH8knukYDck07tc++DP4TdWeI7HXuq5Yl6VVFrUQtf64/dkXewlKZSHQo6YvCSpREB0GDrz+Ys2GfO8nw2SwrYwaf88AifzlPvP17bf1mI3AuccJvAjZIpBmqvharKFAebEjVKfGAwpQjWoXlm9LROsq9bCk1UeQ3CJxJqprzssS/Q04JeS1ReCCubL3J7sx86spkP4eNpp95UF+8K748icIs8vdILFklk9skQqi1So6cx3X906pvy1vz+KipTJ8fiVJxsV5MmT0XwA"
            );
            for (let [t, r] of ((o = new Map(
              dX(e).flatMap((e, t) => e.map((e) => [e, (t + 1) << 24]))
            )),
            (a = new Set(dY(e))),
            (s = new Map()),
            (l = new Map()),
            d0(e))) {
              if (!a.has(t) && 2 == r.length) {
                let [e, n] = r,
                  i = l.get(e);
                i || ((i = new Map()), l.set(e, i)), i.set(n, t);
              }
              s.set(t, r.reverse());
            }
          })();
        let t = [],
          r = [],
          n = !1;
        function i(e) {
          let r = o.get(e);
          r && ((n = !0), (e |= r)), t.push(e);
        }
        for (let n of e)
          for (;;) {
            if (n < 128) t.push(n);
            else if (d9(n)) {
              let e = n - 44032,
                t = (e / 588) | 0,
                r = ((e % 588) / 28) | 0,
                o = e % 28;
              i(4352 + t), i(4449 + r), o > 0 && i(4519 + o);
            } else {
              let e = s.get(n);
              e ? r.push(...e) : i(n);
            }
            if (!r.length) break;
            n = r.pop();
          }
        if (n && t.length > 1) {
          let e = d8(t[0]);
          for (let r = 1; r < t.length; r++) {
            let n = d8(t[r]);
            if (0 == n || e <= n) {
              e = n;
              continue;
            }
            let i = r - 1;
            for (;;) {
              let r = t[i + 1];
              if (((t[i + 1] = t[i]), (t[i] = r), !i || (e = d8(t[--i])) <= n))
                break;
            }
            e = d8(t[r]);
          }
        }
        return t;
      }
      function fe(e) {
        return (function (e) {
          let t = [],
            r = [],
            n = -1,
            i = 0;
          for (let o of e) {
            let e = d8(o),
              a = d4(o);
            if (-1 == n) 0 == e ? (n = a) : t.push(a);
            else if (i > 0 && i >= e)
              0 == e ? (t.push(n, ...r), (r.length = 0), (n = a)) : r.push(a),
                (i = e);
            else {
              let o = (function (e, t) {
                if (e >= 4352 && e < 4371 && t >= 4449 && t < 4470)
                  return 44032 + (e - 4352) * 588 + (t - 4449) * 28;
                if (d9(e) && t > 4519 && t < 4547 && (e - 44032) % 28 == 0)
                  return e + (t - 4519);
                {
                  let r = l.get(e);
                  return r && (r = r.get(t)) ? r : -1;
                }
              })(n, a);
              o >= 0
                ? (n = o)
                : 0 == i && 0 == e
                ? (t.push(n), (n = a))
                : (r.push(a), (i = e));
            }
          }
          return n >= 0 && t.push(n, ...r), t;
        })(d7(e));
      }
      let ft = (e) => Array.from(e);
      function fr(e, t) {
        return e.P.has(t) || e.Q.has(t);
      }
      class fn extends Array {
        get is_emoji() {
          return !0;
        }
      }
      function fi() {
        let e, t;
        if (u) return;
        let r = dJ(
            ""
          ),
          n = () => dY(r),
          i = () => new Set(n()),
          o = (e, t) => t.forEach((t) => e.add(t));
        (u = new Map(d0(r))),
          (c = i()),
          (d = n()),
          (f = new Set(n().map((e) => d[e]))),
          (d = new Set(d)),
          (h = i()),
          i();
        let a = dX(r),
          s = r(),
          l = () => {
            let e = new Set();
            return n().forEach((t) => o(e, a[t])), o(e, n()), e;
          };
        (m = d1((e) => {
          let t = d1(r).map((e) => e + 96);
          if (t.length) {
            let n = e >= s;
            return (
              (t[0] -= 32),
              (t = d5(t)),
              n && (t = `Restricted[${t}]`),
              { N: t, P: l(), Q: l(), M: !r(), R: n }
            );
          }
        })),
          (g = i()),
          (y = new Map());
        let p = n()
          .concat(ft(g))
          .sort((e, t) => e - t);
        for (let { V: e, M: t } of (p.forEach((e, t) => {
          let n = r(),
            i = (p[t] = n ? p[t - n] : { V: [], M: new Map() });
          i.V.push(e), g.has(e) || y.set(e, i);
        }),
        new Set(y.values()))) {
          let r = [];
          for (let t of e) {
            let e = m.filter((e) => fr(e, t)),
              n = r.find(({ G: t }) => e.some((e) => t.has(e)));
            n || ((n = { G: new Set(), V: [] }), r.push(n)),
              n.V.push(t),
              o(n.G, e);
          }
          let n = r.flatMap((e) => ft(e.G));
          for (let { G: e, V: i } of r) {
            let r = new Set(n.filter((t) => !e.has(t)));
            for (let e of i) t.set(e, r);
          }
        }
        b = new Set();
        let x = new Set(),
          A = (e) => (b.has(e) ? x.add(e) : b.add(e));
        for (let e of m) {
          for (let t of e.P) A(t);
          for (let t of e.Q) A(t);
        }
        for (let e of b) y.has(e) || x.has(e) || y.set(e, 1);
        for (let n of (o(b, d7(b).map(d4)),
        (v = ((e = []),
        (t = dY(r)),
        (function t({ S: r, B: n }, i, o) {
          if (!(4 & r) || o !== i[i.length - 1])
            for (let a of (2 & r && (o = i[i.length - 1]),
            1 & r && e.push(i),
            n))
              for (let e of a.Q) t(a, [...i, e], o);
        })(
          (function e(n) {
            return {
              S: r(),
              B: d1(() => {
                let n = dY(r).map((e) => t[e]);
                if (n.length) return e(n);
              }),
              Q: n,
            };
          })([]),
          []
        ),
        e)
          .map((e) => fn.from(e))
          .sort(d3)),
        (w = new Map()),
        v)) {
          let e = [w];
          for (let t of n) {
            let r = e.map((e) => {
              let r = e.get(t);
              return r || ((r = new Map()), e.set(t, r)), r;
            });
            65039 === t ? e.push(...r) : (e = r);
          }
          for (let t of e) t.V = n;
        }
      }
      function fo(e) {
        return (fl(e) ? "" : `${fa(fs([e]))} `) + d6(e);
      }
      function fa(e) {
        return `"${e}"\u200E`;
      }
      function fs(e, t = 1 / 0, r = d6) {
        var n;
        let i = [];
        (n = e[0]),
          fi(),
          d.has(n) && i.push("◌"),
          e.length > t &&
            ((t >>= 1), (e = [...e.slice(0, t), 8230, ...e.slice(-t)]));
        let o = 0,
          a = e.length;
        for (let t = 0; t < a; t++) {
          let n = e[t];
          fl(n) && (i.push(d5(e.slice(o, t))), i.push(r(n)), (o = t + 1));
        }
        return i.push(d5(e.slice(o, a))), i.join("");
      }
      function fl(e) {
        return fi(), h.has(e);
      }
      function fu(e) {
        return Error(`disallowed character: ${fo(e)}`);
      }
      function fc(e, t) {
        let r = fo(t),
          n = m.find((e) => e.P.has(t));
        return (
          n && (r = `${n.N} ${r}`), Error(`illegal mixture: ${e.N} + ${r}`)
        );
      }
      function fd(e) {
        return Error(`illegal placement: ${e}`);
      }
      function ff(e) {
        return e.filter((e) => 65039 != e);
      }
      let fh = (e) =>
          (function (e) {
            return e
              .map(({ input: t, error: r, output: n }) => {
                if (r) {
                  let n = r.message;
                  throw Error(
                    1 == e.length ? n : `Invalid label ${fa(fs(t, 63))}: ${n}`
                  );
                }
                return d5(n);
              })
              .join(".");
          })(
            (function (e, t, r) {
              if (!e) return [];
              fi();
              let n = 0;
              return e.split(".").map((e) => {
                let i = (function (e) {
                    let t = [];
                    for (let r = 0, n = e.length; r < n; ) {
                      let n = e.codePointAt(r);
                      (r += n < 65536 ? 1 : 2), t.push(n);
                    }
                    return t;
                  })(e),
                  o = { input: i, offset: n };
                n += i.length + 1;
                try {
                  let e,
                    n = (o.tokens = (function (e, t, r) {
                      let n = [],
                        i = [];
                      for (e = e.slice().reverse(); e.length; ) {
                        let o = (function (e, t) {
                          let r,
                            n = w,
                            i = e.length;
                          for (; i && (n = n.get(e[--i])); ) {
                            let { V: t } = n;
                            t && ((r = t), (e.length = i));
                          }
                          return r;
                        })(e);
                        if (o)
                          i.length && (n.push(t(i)), (i = [])), n.push(r(o));
                        else {
                          let t = e.pop();
                          if (b.has(t)) i.push(t);
                          else {
                            let e = u.get(t);
                            if (e) i.push(...e);
                            else if (!c.has(t)) throw fu(t);
                          }
                        }
                      }
                      return i.length && n.push(t(i)), n;
                    })(i, t, r)),
                    a = n.length;
                  if (!a) throw Error("empty label");
                  let s = (o.output = n.flat());
                  if (
                    (!(function (e) {
                      for (let t = e.lastIndexOf(95); t > 0; )
                        if (95 !== e[--t])
                          throw Error("underscore allowed only at start");
                    })(s),
                    !(o.emoji = a > 1 || n[0].is_emoji) &&
                      s.every((e) => e < 128))
                  )
                    !(function (e) {
                      if (e.length >= 4 && 45 == e[2] && 45 == e[3])
                        throw Error(
                          `invalid label extension: "${d5(e.slice(0, 4))}"`
                        );
                    })(s),
                      (e = "ASCII");
                  else {
                    let t = n.flatMap((e) => (e.is_emoji ? [] : e));
                    if (t.length) {
                      if (d.has(s[0])) throw fd("leading combining mark");
                      for (let e = 1; e < a; e++) {
                        let t = n[e];
                        if (!t.is_emoji && d.has(t[0]))
                          throw fd(
                            `emoji + combining mark: "${d5(n[e - 1])} + ${fs([
                              t[0],
                            ])}"`
                          );
                      }
                      !(function (e) {
                        let t = e[0],
                          r = dQ.get(t);
                        if (r) throw fd(`leading ${r}`);
                        let n = e.length,
                          i = -1;
                        for (let o = 1; o < n; o++) {
                          t = e[o];
                          let n = dQ.get(t);
                          if (n) {
                            if (i == o) throw fd(`${r} + ${n}`);
                            (i = o + 1), (r = n);
                          }
                        }
                        if (i == n) throw fd(`trailing ${r}`);
                      })(s);
                      let r = ft(new Set(t)),
                        [i] = (function (e) {
                          let t = m;
                          for (let r of e) {
                            let e = t.filter((e) => fr(e, r));
                            if (!e.length) {
                              if (m.some((e) => fr(e, r))) throw fc(t[0], r);
                              throw fu(r);
                            }
                            if (((t = e), 1 == e.length)) break;
                          }
                          return t;
                        })(r);
                      (function (e, t) {
                        for (let r of t) if (!fr(e, r)) throw fc(e, r);
                        if (e.M) {
                          let e = d7(t).map(d4);
                          for (let t = 1, r = e.length; t < r; t++)
                            if (f.has(e[t])) {
                              let n = t + 1;
                              for (let i; n < r && f.has((i = e[n])); n++)
                                for (let r = t; r < n; r++)
                                  if (e[r] == i)
                                    throw Error(
                                      `duplicate non-spacing marks: ${fo(i)}`
                                    );
                              if (n - t > 4)
                                throw Error(
                                  `excessive non-spacing marks: ${fa(
                                    fs(e.slice(t - 1, n))
                                  )} (${n - t}/4)`
                                );
                              t = n;
                            }
                        }
                      })(i, t),
                        (function (e, t) {
                          let r;
                          let n = [];
                          for (let e of t) {
                            let t = y.get(e);
                            if (1 === t) return;
                            if (t) {
                              let n = t.M.get(e);
                              if (
                                !(r = r ? r.filter((e) => n.has(e)) : ft(n))
                                  .length
                              )
                                return;
                            } else n.push(e);
                          }
                          if (r) {
                            for (let t of r)
                              if (n.every((e) => fr(t, e)))
                                throw Error(
                                  `whole-script confusable: ${e.N}/${t.N}`
                                );
                          }
                        })(i, r),
                        (e = i.N);
                    } else e = "Emoji";
                  }
                  o.type = e;
                } catch (e) {
                  o.error = e;
                }
                return o;
              });
            })(e, fe, ff)
          ),
        fp = (e) => {
          let t = "";
          for (let e = 0; e < 32; e += 1) t += "00";
          if (e) {
            let r = fh(e).split(".");
            for (let e = r.length - 1; e >= 0; e -= 1) {
              let n = oM(r[e]).slice(2);
              t = oM(`0x${t}${n}`).slice(2);
            }
          }
          return `0x${t}`;
        };
      var fm = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      class fg {
        constructor(e, t) {
          (this.contract = new d$(dZ, null != t ? t : dW.main, e)),
            (this.context = e);
        }
        getOwner(e) {
          return fm(this, void 0, void 0, function* () {
            try {
              return this.contract.methods.owner(fp(e)).call();
            } catch (e) {
              throw Error();
            }
          });
        }
        getTTL(e) {
          return fm(this, void 0, void 0, function* () {
            try {
              return this.contract.methods.ttl(fp(e)).call();
            } catch (e) {
              throw Error();
            }
          });
        }
        recordExists(e) {
          return fm(this, void 0, void 0, function* () {
            try {
              return this.contract.methods.recordExists(fp(e)).call();
            } catch (e) {
              throw Error();
            }
          });
        }
        getResolver(e) {
          return fm(this, void 0, void 0, function* () {
            try {
              return this.contract.methods
                .resolver(fp(e))
                .call()
                .then((e) => {
                  if ("string" == typeof e) return new d$(dK, e, this.context);
                  throw Error();
                });
            } catch (e) {
              throw Error();
            }
          });
        }
        get events() {
          return this.contract.events;
        }
      }
      var fy = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      class fb {
        constructor(e) {
          this.registry = e;
        }
        getResolverContractAdapter(e) {
          return fy(this, void 0, void 0, function* () {
            return this.registry.getResolver(e);
          });
        }
        checkInterfaceSupport(e, t) {
          var r, n;
          return fy(this, void 0, void 0, function* () {
            if (og(dG[t]))
              throw new ew(
                null !== (r = e.options.address) && void 0 !== r ? r : "",
                t
              );
            if (!(yield e.methods.supportsInterface(dG[t]).call()))
              throw new ew(
                null !== (n = e.options.address) && void 0 !== n ? n : "",
                t
              );
          });
        }
        supportsInterface(e, t) {
          var r;
          return fy(this, void 0, void 0, function* () {
            let n = yield this.getResolverContractAdapter(e),
              i = t;
            if (!nY(i)) {
              if (
                ((i = null !== (r = oN(t)) && void 0 !== r ? r : ""), "" === t)
              )
                throw Error("Invalid interface Id");
              i = i.slice(0, 10);
            }
            return n.methods.supportsInterface(i).call();
          });
        }
        getAddress(e, t = 60) {
          return fy(this, void 0, void 0, function* () {
            let r = yield this.getResolverContractAdapter(e);
            return (
              yield this.checkInterfaceSupport(r, dq.addr),
              r.methods.addr(fp(e), t).call()
            );
          });
        }
        getPubkey(e) {
          return fy(this, void 0, void 0, function* () {
            let t = yield this.getResolverContractAdapter(e);
            return (
              yield this.checkInterfaceSupport(t, dq.pubkey),
              t.methods.pubkey(fp(e)).call()
            );
          });
        }
        getContenthash(e) {
          return fy(this, void 0, void 0, function* () {
            let t = yield this.getResolverContractAdapter(e);
            return (
              yield this.checkInterfaceSupport(t, dq.contenthash),
              t.methods.contenthash(fp(e)).call()
            );
          });
        }
        setAddress(e, t, r) {
          return fy(this, void 0, void 0, function* () {
            let n = yield this.getResolverContractAdapter(e);
            return (
              yield this.checkInterfaceSupport(n, dq.setAddr),
              n.methods.setAddr(fp(e), t).send(r)
            );
          });
        }
        getText(e, t) {
          return fy(this, void 0, void 0, function* () {
            let r = yield this.getResolverContractAdapter(e);
            return (
              yield this.checkInterfaceSupport(r, dq.text),
              r.methods.text(fp(e), t).call()
            );
          });
        }
        getName(e, t = !0) {
          return fy(this, void 0, void 0, function* () {
            let r = `${e.toLowerCase().substring(2)}.addr.reverse`,
              n = yield this.getResolverContractAdapter(r);
            return (
              t && (yield this.checkInterfaceSupport(n, dq.name)),
              n.methods.name(fp(r)).call()
            );
          });
        }
      }
      var fv = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      class fw extends lK {
        constructor(e, t) {
          super(null != t ? t : ""),
            (this.registryAddress = null != e ? e : dW.main),
            (this._registry = new fg(this.getContextObject(), e)),
            (this._resolver = new fb(this._registry));
        }
        getResolver(e) {
          return fv(this, void 0, void 0, function* () {
            return this._registry.getResolver(e);
          });
        }
        recordExists(e) {
          return fv(this, void 0, void 0, function* () {
            return this._registry.recordExists(e);
          });
        }
        getTTL(e) {
          return fv(this, void 0, void 0, function* () {
            return this._registry.getTTL(e);
          });
        }
        getOwner(e) {
          return fv(this, void 0, void 0, function* () {
            return this._registry.getOwner(e);
          });
        }
        getAddress(e, t = 60) {
          return fv(this, void 0, void 0, function* () {
            return this._resolver.getAddress(e, t);
          });
        }
        getText(e, t) {
          return fv(this, void 0, void 0, function* () {
            return ip(e)
              ? this._resolver.getText(yield this._resolver.getName(e, !1), t)
              : this._resolver.getText(e, t);
          });
        }
        getName(e, t = !0) {
          return fv(this, void 0, void 0, function* () {
            return this._resolver.getName(e, t);
          });
        }
        getPubkey(e) {
          return fv(this, void 0, void 0, function* () {
            return this._resolver.getPubkey(e);
          });
        }
        getContenthash(e) {
          return fv(this, void 0, void 0, function* () {
            return this._resolver.getContenthash(e);
          });
        }
        checkNetwork() {
          return fv(this, void 0, void 0, function* () {
            let e = Date.now() / 1e3;
            if (!this._lastSyncCheck || e - this._lastSyncCheck > 3600) {
              let t = yield c4(this);
              if (!("boolean" == typeof t && !t)) throw new eI();
              this._lastSyncCheck = e;
            }
            if (this._detectedAddress) return this._detectedAddress;
            let t = yield uT(
                this,
                Object.assign(Object.assign({}, this.defaultReturnFormat), {
                  number: x.HEX,
                })
              ),
              r = dW[dV[t]];
            if (void 0 === r) throw new ek(t);
            return (this._detectedAddress = r), this._detectedAddress;
          });
        }
        supportsInterface(e, t) {
          return fv(this, void 0, void 0, function* () {
            return this._resolver.supportsInterface(e, t);
          });
        }
        get events() {
          return this._registry.events;
        }
        setAddress(e, t, r) {
          return fv(this, void 0, void 0, function* () {
            return this._resolver.setAddress(e, t, r);
          });
        }
      }
      var fx = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      let fA = (e) =>
          fx(void 0, void 0, void 0, function* () {
            return (yield l3(e)).map(oe);
          }),
        fE = (e, t) =>
          fx(void 0, void 0, void 0, function* () {
            return iR.validate(["string"], [t]), oe(yield l8(e, t));
          }),
        fk = (e, t, r, n) =>
          fx(void 0, void 0, void 0, function* () {
            return (
              iR.validate(["address", "string", "uint"], [t, r, n]),
              l4(e, t, r, n)
            );
          }),
        fI = (e, t) =>
          fx(void 0, void 0, void 0, function* () {
            return iR.validate(["address"], [t]), l9(e, t);
          }),
        fS = (e, t, r) =>
          fx(void 0, void 0, void 0, function* () {
            return iR.validate(["string", "string"], [t, r]), l7(e, t, r);
          }),
        fP = (e, t, r, n) =>
          fx(void 0, void 0, void 0, function* () {
            return ue(
              e,
              uS(t, Q, {
                transactionSchema:
                  null == n ? void 0 : n.customTransactionSchema,
              }),
              r
            );
          }),
        fT = (e, t, r, n) =>
          fx(void 0, void 0, void 0, function* () {
            return ut(
              e,
              uS(t, Q, {
                transactionSchema:
                  null == n ? void 0 : n.customTransactionSchema,
              }),
              r
            );
          }),
        fC = (e, t, r, n) =>
          fx(void 0, void 0, void 0, function* () {
            return (
              iR.validate(["string", "address", "string"], [t, r, n]),
              ur(e, nY(t) ? t : iZ(t), r, n)
            );
          }),
        fO = (e, t, r) =>
          fx(void 0, void 0, void 0, function* () {
            return (
              iR.validate(["string", "string"], [t, r]),
              un(e, nY(t) ? t : iZ(t), r)
            );
          });
      var f_ = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      class fB extends lK {
        getAccounts() {
          return f_(this, void 0, void 0, function* () {
            return fA(this.requestManager);
          });
        }
        newAccount(e) {
          return f_(this, void 0, void 0, function* () {
            return fE(this.requestManager, e);
          });
        }
        unlockAccount(e, t, r) {
          return f_(this, void 0, void 0, function* () {
            return fk(this.requestManager, e, t, r);
          });
        }
        lockAccount(e) {
          return f_(this, void 0, void 0, function* () {
            return fI(this.requestManager, e);
          });
        }
        importRawKey(e, t) {
          return f_(this, void 0, void 0, function* () {
            return fS(this.requestManager, e, t);
          });
        }
        sendTransaction(e, t) {
          return f_(this, void 0, void 0, function* () {
            return fP(this.requestManager, e, t, this.config);
          });
        }
        signTransaction(e, t) {
          return f_(this, void 0, void 0, function* () {
            return fT(this.requestManager, e, t, this.config);
          });
        }
        sign(e, t, r) {
          return f_(this, void 0, void 0, function* () {
            return fC(this.requestManager, e, t, r);
          });
        }
        ecRecover(e, t) {
          return f_(this, void 0, void 0, function* () {
            return fO(this.requestManager, e, t);
          });
        }
      }
      !(function (e) {
        (e.HTTPS = "https"), (e.WebSocket = "wss");
      })(U || (U = {})),
        (function (e) {
          (e.ETH_MAINNET = "eth_mainnet"),
            (e.ETH_SEPOLIA = "eth_sepolia"),
            (e.ETH_HOLESKY = "eth_holesky"),
            (e.POLYGON_MAINNET = "polygon_mainnet"),
            (e.POLYGON_AMOY = "polygon_amoy"),
            (e.AVALANCHE_C_MAINNET = "avalanche_c_mainnet"),
            (e.AVALANCHE_P_MAINNET = "avalanche_p_mainnet"),
            (e.AVALANCHE_X_MAINNET = "avalanche_x_mainnet"),
            (e.ARBITRUM_MAINNET = "arbitrum_mainnet"),
            (e.ARBITRUM_SEPOLIA = "arbitrum_sepolia"),
            (e.BASE_MAINNET = "base_mainnet"),
            (e.BASE_SEPOLIA = "base_sepolia"),
            (e.OPTIMISM_MAINNET = "optimism_mainnet"),
            (e.OPTIMISM_SEPOLIA = "optimism_sepolia"),
            (e.FANTOM_MAINNET = "fantom_mainnet"),
            (e.FANTOM_TESTNET = "fantom_testnet"),
            (e.DYMENSION_MAINNET = "dymension_mainnet"),
            (e.DYMENSION_TESTNET = "dymension_testnet"),
            (e.BNB_MAINNET = "bnb_mainnet"),
            (e.BNB_TESTNET = "bnb_testnet"),
            (e.BSC_MAINNET = "bsc_mainnet"),
            (e.BSC_TESTNET = "bsc_testnet"),
            (e.ARBITRUM_ONE = "arbitrum_one"),
            (e.ARBITRUM_NOVA = "arbitrum_nova"),
            (e.AVALANCHE_FUJI_C = "avalanche_fuji_c"),
            (e.AVALANCHE_FUJI_P = "avalanche_fuji_p"),
            (e.AVALANCHE_FUJI_X = "avalanche_fuji_x"),
            (e.BLAST_MAINNET = "blast_mainnet"),
            (e.OPBNB_MAINNET = "opbnb_mainnet"),
            (e.OPBNB_TESTNET = "opbnb_testnet"),
            (e.GNOSIS_MAINNET = "gnosis_mainnet"),
            (e.GNOSIS_CHIADO = "gnosis_chiado"),
            (e.PULSECHAIN_MAINNET = "pulsechain_mainnet"),
            (e.PULSECHAIN_TESTNET = "pulsechain_testnet"),
            (e.KAVA_MAINNET = "kava_mainnet"),
            (e.CRONOS_MAINNET = "cronos_mainnet"),
            (e.MANTLE_MAINNET = "mantle_mainnet"),
            (e.CHILIZ_MAINNET = "chiliz_mainnet"),
            (e.CHILIZ_SPICY = "chiliz_spicy"),
            (e.MOONBEAM_MAINNET = "moonbeam_mainnet"),
            (e.TAIKO_MAINNET = "taiko_mainnet"),
            (e.TAIKO_HEKLA = "taiko_hekla"),
            (e.LINEA_MAINNET = "linea_mainnet"),
            (e.LINEA_SEPOLIA = "linea_sepolia"),
            (e.BAHAMUT_MAINNET = "bahamut_mainnet"),
            (e.SCROLL_MAINNET = "scroll_mainnet"),
            (e.SCROLL_SEPOLIA = "scroll_sepolia"),
            (e.TRON_MAINNET = "tron_mainnet"),
            (e.SYSCOIN_MAINNET = "syscoin_mainnet"),
            (e.SYSCOIN_TANENBAUM = "syscoin_tanenbaum"),
            (e.MOONRIVER_MAINNET = "moonriver_mainnet"),
            (e.HAQQ_MAINNET = "haqq_mainnet"),
            (e.EVMOS_MAINNET = "evmos_mainnet"),
            (e.EVMOS_TESTNET = "evmos_testnet"),
            (e.BERACHAIN_TESTNET = "berachain_testnet");
        })(H || (H = {}));
      class fR extends er {
        constructor(e) {
          super(
            "You've reach the rate limit of free RPC calls from our Partner Quick Nodes. There are two options you can either create a paid Quick Nodes account and get 20% off for 2 months using WEB3JS referral code, or use Free public RPC endpoint.",
            e
          ),
            (this.code = 1300);
        }
      }
      class fN extends er {
        constructor(e) {
          super(`Invalid provider config options given for ${e}`),
            (this.code = 1301);
        }
      }
      class fM extends au {
        constructor(e, t, r, n, i) {
          if (
            (super(), void 0 === i || t !== U.HTTPS || "providerOptions" in i)
          ) {
            if (
              void 0 !== i &&
              t === U.WebSocket &&
              !("socketOptions" in i || "reconnectOptions" in i)
            )
              throw new fN("Websocket Provider");
          } else throw new fN("HTTP Provider");
          (this.transport = t),
            t === U.HTTPS
              ? (this.provider = new ag(this.getRPCURL(e, t, r, n), i))
              : t === U.WebSocket &&
                (this.provider = new av(
                  this.getRPCURL(e, t, r, n),
                  null == i ? void 0 : i.socketOptions,
                  null == i ? void 0 : i.reconnectOptions
                ));
        }
        request(e, t) {
          var r, n, i, o;
          return (
            (r = this),
            (n = void 0),
            (i = void 0),
            (o = function* () {
              return this.transport === U.HTTPS
                ? yield this.provider.request(e, t)
                : this.provider.request(e);
            }),
            new (i || (i = Promise))(function (e, t) {
              function a(e) {
                try {
                  l(o.next(e));
                } catch (e) {
                  t(e);
                }
              }
              function s(e) {
                try {
                  l(o.throw(e));
                } catch (e) {
                  t(e);
                }
              }
              function l(t) {
                var r;
                t.done
                  ? e(t.value)
                  : ((r = t.value) instanceof i
                      ? r
                      : new i(function (e) {
                          e(r);
                        })
                    ).then(a, s);
              }
              l((o = o.apply(r, n || [])).next());
            })
          );
        }
        getStatus() {
          return this.provider.getStatus();
        }
        supportsSubscriptions() {
          return this.provider.supportsSubscriptions();
        }
        once(e, t) {
          var r;
          (null === (r = this.provider) || void 0 === r ? void 0 : r.once) &&
            this.provider.once(e, t);
        }
        removeAllListeners(e) {
          var t;
          (null === (t = this.provider) || void 0 === t
            ? void 0
            : t.removeAllListeners) && this.provider.removeAllListeners(e);
        }
        connect() {
          var e;
          (null === (e = this.provider) || void 0 === e ? void 0 : e.connect) &&
            this.provider.connect();
        }
        disconnect(e, t) {
          var r;
          (null === (r = this.provider) || void 0 === r
            ? void 0
            : r.disconnect) && this.provider.disconnect(e, t);
        }
        reset() {
          var e;
          (null === (e = this.provider) || void 0 === e ? void 0 : e.reset) &&
            this.provider.reset();
        }
        on(e, t) {
          this.provider && this.provider.on(e, t);
        }
        removeListener(e, t) {
          this.provider && this.provider.removeListener(e, t);
        }
      }
      let fj = (e) => void 0 !== e && e.trim().length > 0;
      class fF extends fM {
        constructor(e = H.ETH_MAINNET, t = U.HTTPS, r = "", n = "", i) {
          super(e, t, r, n, i);
        }
        request(e, t) {
          var r, n, i, o;
          let a = Object.create(null, {
            request: { get: () => super.request },
          });
          return (
            (r = this),
            (n = void 0),
            (i = void 0),
            (o = function* () {
              try {
                return yield a.request.call(this, e, t);
              } catch (e) {
                if (e instanceof tP && 429 === e.statusCode) throw new fR(e);
                throw e;
              }
            }),
            new (i || (i = Promise))(function (e, t) {
              function a(e) {
                try {
                  l(o.next(e));
                } catch (e) {
                  t(e);
                }
              }
              function s(e) {
                try {
                  l(o.throw(e));
                } catch (e) {
                  t(e);
                }
              }
              function l(t) {
                var r;
                t.done
                  ? e(t.value)
                  : ((r = t.value) instanceof i
                      ? r
                      : new i(function (e) {
                          e(r);
                        })
                    ).then(a, s);
              }
              l((o = o.apply(r, n || [])).next());
            })
          );
        }
        getRPCURL(e, t, r, n) {
          let i = "",
            o = "";
          switch (e) {
            case H.ETH_MAINNET:
              (i = fj(n) ? n : "powerful-holy-bush.quiknode.pro"),
                (o = fj(r) ? r : "3240624a343867035925ff7561eb60dfdba2a668");
              break;
            case H.ETH_SEPOLIA:
              (i = fj(n)
                ? n
                : "dimensional-fabled-glitter.ethereum-sepolia.quiknode.pro"),
                (o = fj(r) ? r : "382a3b5a4b938f2d6e8686c19af4b22921fde2cd");
              break;
            case H.ETH_HOLESKY:
              (i = fj(n)
                ? n
                : "yolo-morning-card.ethereum-holesky.quiknode.pro"),
                (o = fj(r) ? r : "481ebe70638c4dcf176af617a16d02ab866b9af9");
              break;
            case H.ARBITRUM_MAINNET:
              (i = fj(n)
                ? n
                : "autumn-divine-dinghy.arbitrum-mainnet.quiknode.pro"),
                (o = fj(r) ? r : "a5d7bfbf60b5ae9ce3628e53d69ef50d529e9a8c");
              break;
            case H.ARBITRUM_SEPOLIA:
              (i = fj(n)
                ? n
                : "few-patient-pond.arbitrum-sepolia.quiknode.pro"),
                (o = fj(r) ? r : "3be985450970628c860b959c65cd2642dcafe53c");
              break;
            case H.BNB_MAINNET:
              (i = fj(n) ? n : "purple-empty-reel.bsc.quiknode.pro"),
                (o = fj(r) ? r : "ebf6c532961e21f092ff2facce1ec4c89c540158");
              break;
            case H.BNB_TESTNET:
              (i = fj(n) ? n : "floral-rough-scion.bsc-testnet.quiknode.pro"),
                (o = fj(r) ? r : "5b297e5acff5f81f4c37ebf6f235f7299b6f9d28");
              break;
            case H.POLYGON_MAINNET:
              (i = fj(n) ? n : "small-chaotic-moon.matic.quiknode.pro"),
                (o = fj(r) ? r : "847569f8a017e84d985e10d0f44365d965a951f1");
              break;
            case H.POLYGON_AMOY:
              (i = fj(n) ? n : "prettiest-side-shape.matic-amoy.quiknode.pro"),
                (o = fj(r) ? r : "79a9476eea661d4f82de614db1d8a895b14b881c");
              break;
            default:
              throw Error("Network info not avalible.");
          }
          return `${t}://${i}/${o}`;
        }
      }
      let fL = (e) => void 0 !== e && e.trim().length > 0,
        fD = [
          H.DYMENSION_MAINNET,
          H.DYMENSION_TESTNET,
          H.KAVA_MAINNET,
          H.CRONOS_MAINNET,
          H.POLYGON_MAINNET,
        ];
      class fU extends fM {
        constructor(e = H.ETH_MAINNET, t = U.HTTPS, r = "", n) {
          super(e, t, "", r, n);
        }
        getRPCURL(e, t, r, n) {
          if (!fU.networkHostMap[e]) throw Error("Network info not avalible.");
          let i = `${fU.networkHostMap[e]}.publicnode.com`,
            o = fL(n) ? n : i;
          return fD.includes(e) && t === U.WebSocket
            ? `${t}://${o}/websocket`
            : `${t}://${o}`;
        }
      }
      fU.networkHostMap = {
        [H.POLYGON_AMOY]: "polygon-amoy-bor-rpc",
        [H.DYMENSION_MAINNET]: "dymension-evm-rpc",
        [H.DYMENSION_TESTNET]: "dymension-testnet-evm-rpc",
        [H.BLAST_MAINNET]: "blast-rpc",
        [H.GNOSIS_MAINNET]: "gnosis-rpc",
        [H.PULSECHAIN_MAINNET]: "pulsechain-rpc",
        [H.PULSECHAIN_TESTNET]: "pulsechain-testnet-rpc",
        [H.KAVA_MAINNET]: "kava-evm-rpc",
        [H.CRONOS_MAINNET]: "cronos-evm-rpc",
        [H.MANTLE_MAINNET]: "mantle-rpc",
        [H.TAIKO_MAINNET]: "taiko-rpc",
        [H.TAIKO_HEKLA]: "taiko-hekla-rpc",
        [H.LINEA_MAINNET]: "linea-rpc",
        [H.LINEA_SEPOLIA]: "linea-sepolia-rpc",
        [H.SCROLL_MAINNET]: "scroll-rpc",
        [H.SCROLL_SEPOLIA]: "scroll-sepolia-rpc",
        [H.SYSCOIN_MAINNET]: "syscoin-evm-rpc",
        [H.SYSCOIN_TANENBAUM]: "syscoin-tanenbaum-evm-rpc",
        [H.HAQQ_MAINNET]: "haqq-evm-rpc",
        [H.EVMOS_MAINNET]: "evmos-evm-rpc",
        [H.EVMOS_TESTNET]: "evmos-testnet-evm-rpc",
        [H.BERACHAIN_TESTNET]: "berachain-testnet-evm-rpc",
        [H.ETH_MAINNET]: "ethereum-rpc",
        [H.ETH_SEPOLIA]: "ethereum-sepolia-rpc",
        [H.ETH_HOLESKY]: "ethereum-holesky-rpc",
        [H.BSC_MAINNET]: "bsc-rpc",
        [H.BSC_TESTNET]: "bsc-testnet-rpc",
        [H.POLYGON_MAINNET]: "polygon-bor-rpc",
        [H.BASE_MAINNET]: "base-rpc",
        [H.BASE_SEPOLIA]: "base-sepolia-rpc",
        [H.ARBITRUM_ONE]: "arbitrum-one-rpc",
        [H.ARBITRUM_NOVA]: "arbitrum-nova-rpc",
        [H.ARBITRUM_SEPOLIA]: "arbitrum-sepolia-rpc",
        [H.AVALANCHE_C_MAINNET]: "avalanche-c-chain-rpc",
        [H.AVALANCHE_P_MAINNET]: "avalanche-p-chain-rpc",
        [H.AVALANCHE_X_MAINNET]: "avalanche-x-chain-rpc",
        [H.AVALANCHE_FUJI_C]: "avalanche-fuji-c-chain-rpc",
        [H.AVALANCHE_FUJI_P]: "avalanche-fuji-p-chain-rpc",
        [H.AVALANCHE_FUJI_X]: "avalanche-fuji-x-chain-rpc",
        [H.OPTIMISM_MAINNET]: "optimism-rpc",
        [H.OPTIMISM_SEPOLIA]: "optimism-sepolia-rpc",
        [H.FANTOM_MAINNET]: "fantom-rpc",
        [H.FANTOM_TESTNET]: "fantom-testnet-rpc",
        [H.OPBNB_MAINNET]: "opbnb-rpc",
        [H.OPBNB_TESTNET]: "opbnb-testnet-rpc",
        [H.GNOSIS_CHIADO]: "gnosis-chiado-rpc",
        [H.CHILIZ_MAINNET]: "chiliz-rpc",
        [H.CHILIZ_SPICY]: "chiliz-spicy-rpc",
        [H.MOONBEAM_MAINNET]: "moonbeam-rpc",
        [H.BAHAMUT_MAINNET]: "bahamut-rpc",
        [H.TRON_MAINNET]: "tron-evm-rpc",
        [H.MOONRIVER_MAINNET]: "moonriver-rpc",
      };
      let fH = new fF(),
        f$ = {
          encodeEventSignature: u4,
          encodeFunctionCall: (e, t) => {
            var r;
            if (!uX(e))
              throw new e_("Invalid parameter value in encodeFunctionCall");
            return `${cL(e)}${cR(
              null !== (r = e.inputs) && void 0 !== r ? r : [],
              null != t ? t : []
            ).replace("0x", "")}`;
          },
          encodeFunctionSignature: cL,
          encodeParameter: cN,
          encodeParameters: cR,
          decodeParameter: cF,
          decodeParameters: cj,
          decodeLog: cz,
        };
      var fz = function (e, t, r, n) {
        return new (r || (r = Promise))(function (i, o) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              o(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              o(e);
            }
          }
          function l(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof r
                  ? t
                  : new r(function (e) {
                      e(t);
                    })
                ).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      };
      let fG = (e) => {
        let t = (t, r) =>
            fz(void 0, void 0, void 0, function* () {
              return lL(yield dT(t, e), o_({ format: "bytes" }, r, Q));
            }),
          r = (e) => {
            let r = lG(e);
            return Object.assign(Object.assign({}, r), {
              signTransaction: (e) =>
                fz(void 0, void 0, void 0, function* () {
                  return t(e, r.privateKey);
                }),
            });
          },
          n = (e, r, n) =>
            fz(void 0, void 0, void 0, function* () {
              var i;
              let o = yield lW(
                e,
                r,
                null === (i = null == n ? void 0 : n.nonStrict) ||
                  void 0 === i ||
                  i
              );
              return Object.assign(Object.assign({}, o), {
                signTransaction: (e) =>
                  fz(void 0, void 0, void 0, function* () {
                    return t(e, o.privateKey);
                  }),
              });
            }),
          i = () => {
            let e = lq();
            return Object.assign(Object.assign({}, e), {
              signTransaction: (r) =>
                fz(void 0, void 0, void 0, function* () {
                  return t(r, e.privateKey);
                }),
            });
          },
          o = new aM({ create: i, privateKeyToAccount: r, decrypt: n });
        return {
          signTransaction: t,
          create: i,
          privateKeyToAccount: r,
          decrypt: n,
          recoverTransaction: lD,
          hashMessage: lM,
          sign: lF,
          recover: lU,
          encrypt: lz,
          wallet: o,
          privateKeyToAddress: lH,
          parseAndValidatePrivateKey: lN,
          privateKeyToPublicKey: l$,
        };
      };
      !(function (e) {
        (e.eip6963announceProvider = "eip6963:announceProvider"),
          (e.eip6963requestProvider = "eip6963:requestProvider");
      })($ || ($ = {}));
      let fq = new Map(),
        fW = "web3:providersMapUpdated";
      class fV extends lK {
        constructor(e = fH) {
          var t;
          (!og(e) &&
            ("string" != typeof e || "" !== e.trim()) &&
            ("string" == typeof e || aI(e) || e.provider)) ||
            console.warn(
              "NOTE: web3.js is running without provider. You need to pass a provider in order to interact with the network!"
            );
          let r = {};
          "string" == typeof e || aI(e) ? (r.provider = e) : (r = e || {}),
            (r.registeredSubscriptions = Object.assign(
              Object.assign({}, dg),
              null !== (t = r.registeredSubscriptions) && void 0 !== t ? t : {}
            )),
            super(r);
          let n = fG(this);
          (this._wallet = n.wallet),
            (this._accountProvider = n),
            (this.utils = W);
          let i = this;
          class o extends dz {
            constructor(e, t, r, n, o) {
              let s, l, u;
              if (om(t) && om(r))
                throw new eS(
                  "Should not provide options at both 2nd and 3rd parameters"
                );
              let c = {};
              if (!og(t) && "object" != typeof t && "string" != typeof t)
                throw new eS();
              if (
                ("string" == typeof t && (s = t),
                (c = om(t) ? t : om(r) ? r : {}),
                (l =
                  t instanceof lK
                    ? t
                    : r instanceof lK
                    ? r
                    : n instanceof lK
                    ? n
                    : i.getContextObject()),
                o ? (u = o) : oS(r) ? (u = r) : oS(n) && (u = n),
                super(e, s, c, l, u),
                super.subscribeToContextEvents(i),
                !og(a))
              ) {
                let e = a.getTransactionMiddleware();
                og(e) || super.setTransactionMiddleware(e);
              }
            }
          }
          let a = i.use(dy);
          this.eth = Object.assign(a, {
            ens: i.use(fw, dW.main),
            Iban: lQ,
            net: i.use(u_),
            personal: i.use(fB),
            Contract: o,
            abi: f$,
            accounts: n,
          });
        }
      }
      (fV.version = "4.16.0"),
        (fV.utils = W),
        (fV.requestEIP6963Providers = () =>
          (function (e, t, r, n) {
            return new (r || (r = Promise))(function (i, o) {
              function a(e) {
                try {
                  l(n.next(e));
                } catch (e) {
                  o(e);
                }
              }
              function s(e) {
                try {
                  l(n.throw(e));
                } catch (e) {
                  o(e);
                }
              }
              function l(e) {
                var t;
                e.done
                  ? i(e.value)
                  : ((t = e.value) instanceof r
                      ? t
                      : new r(function (e) {
                          e(t);
                        })
                    ).then(a, s);
              }
              l((n = n.apply(e, t || [])).next());
            });
          })(void 0, void 0, void 0, function* () {
            return new Promise((e, t) => {
              "undefined" == typeof window &&
                t(
                  Error(
                    "window object not available, EIP-6963 is intended to be used within a browser"
                  )
                ),
                window.addEventListener($.eip6963announceProvider, (t) => {
                  fq.set(t.detail.info.uuid, t.detail);
                  let r = new CustomEvent(fW, { detail: fq });
                  window.dispatchEvent(r), e(fq);
                }),
                window.dispatchEvent(new Event($.eip6963requestProvider));
            });
          })),
        (fV.onNewProviderDiscovered = (e) => {
          if ("undefined" == typeof window)
            throw Error(
              "window object not available, EIP-6963 is intended to be used within a browser"
            );
          window.addEventListener(fW, e);
        }),
        (fV.modules = {
          Web3Eth: dy,
          Iban: lQ,
          Net: u_,
          ENS: fw,
          Personal: fB,
        });
      let fZ = fV;
    },
  },
]);
